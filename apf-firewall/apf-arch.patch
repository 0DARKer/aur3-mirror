Only in apf-9.7-2/files: conf.apf
diff -crB apf-9.7-2/files/firewall apf-9.7-2-arch/files/firewall
*** apf-9.7-2/files/firewall	2011-11-10 19:53:16.000000000 -0500
--- apf-9.7-2-arch/files/firewall	2012-01-09 05:53:31.617196010 -0500
***************
*** 87,93 ****
  # Allow all traffic on trusted interfaces
  if [ ! "$IFACE_TRUSTED" == "" ]; then
  for i in `echo $IFACE_TRUSTED | tr ',' ' '`; do
! VAL_IF=`/sbin/ip addr list | grep -w $i`
  if [ "$VAL_IF" == "" ]; then
          eout "{glob} unable to verify status of interface $i; assuming untrusted"
  else
--- 87,93 ----
  # Allow all traffic on trusted interfaces
  if [ ! "$IFACE_TRUSTED" == "" ]; then
  for i in `echo $IFACE_TRUSTED | tr ',' ' '`; do
! VAL_IF=`$ip addr list | grep -w $i`
  if [ "$VAL_IF" == "" ]; then
          eout "{glob} unable to verify status of interface $i; assuming untrusted"
  else
***************
*** 105,111 ****
  $IPT -A PROHIBIT -j REJECT --reject-with icmp-host-prohibited
  
  # Load our SYSCTL rules
! . $INSTALL_PATH/sysctl.rules >> /dev/null 2>&1
  
  # Fix MTU/MSS Problems
  $IPT -A OUTPUT -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
--- 105,111 ----
  $IPT -A PROHIBIT -j REJECT --reject-with icmp-host-prohibited
  
  # Load our SYSCTL rules
! . $INSTALL_PATH/sysctl.rules >> /dev/null # 2>&1
  
  # Fix MTU/MSS Problems
  $IPT -A OUTPUT -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
diff -crB apf-9.7-2/files/internals/functions.apf apf-9.7-2-arch/files/internals/functions.apf
*** apf-9.7-2/files/internals/functions.apf	2011-12-15 21:30:14.000000000 -0500
--- apf-9.7-2-arch/files/internals/functions.apf	2012-01-09 04:10:15.000000000 -0500
***************
*** 62,165 ****
  fi
  }
  
! ml() {
! MOD=$1
! VALMOD=$2
! if [ "$KREL" == "2.4" ]; then
! 	MEXT="o"
! elif [ "$KREL" == "2.6" ]; then
! 	MEXT="ko"
! elif [[ "$KREL" =~ "3." ]]; then
! 	MEXT="ko"
! elif [ ! "$KREL" == "2.4" ] && [ ! "$KREL" == "2.6" ] && [[ ! "$KREL" =~ "3." ]]; then
! 	if [ ! "$SET_VERBOSE" == "1" ]; then
!         	echo "kernel version not compatible or netfilter support missing, aborting."
! 	fi
!         eout "{glob} kernel version not compatible or netfilter support missing, aborting."
!         exit 1
! else
!         if [ ! "$SET_VERBOSE" == "1" ]; then
! 	        echo "kernel version not compatible or netfilter support missing, aborting."
! 	fi
!         eout "{glob} kernel version not compatible or netfilter support missing, aborting."
!         exit 1
! fi
! 
! if [ "$VALMOD" == "1" ] && [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/$1.$MEXT" ]; then
!         if [ ! "$SET_VERBOSE" == "1" ]; then
! 	        echo "Unable to load iptables module ($1), aborting."
! 	fi
!         eout "{glob} unable to load iptables module ($1), aborting."
!         exit 1
! fi
! if [ -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/$1.$MEXT" ] || [ -f "/lib/modules/$(uname -r)/kernel/net/netfilter/$1.$MEXT" ]; then
!         $MPB $1 >> /dev/null 2>&1 &
! fi
! }
  
  modinit() {
! # Remove ipchains module if loaded
! IPC_VAL=`$LSM | grep ipchains`
! if [ ! "$IPC_VAL" == "" ]; then
!         $RMM ipchains
! fi
! 
! if [ ! "$SET_MONOKERN" == "1" ]; then
! # Loading Kernel Modules
! ml ip_tables 1
! ml iptable_filter
! ml iptable_mangle
! ml ip_conntrack
! ml ip_conntrack_irc
! ml ip_conntrack_ftp
! ml ipt_state
! ml ipt_multiport
! ml ipt_limit
! ml ipt_recent
! ml ipt_LOG
! ml ipt_REJECT
! ml ipt_ecn
! ml ipt_length
! ml ipt_mac
! ml ipt_multiport
! ml ipt_owner
! ml ipt_state
! ml ipt_ttl
! ml ipt_TOS
! ml ipt_TCPMSS
! ml ipt_ULOG
! ml xt_conntrack
! ml xt_conntrack_irc
! ml xt_conntrack_ftp
! ml xt_state
! ml xt_multiport
! ml xt_limit
! ml xt_recent
! ml xt_LOG
! ml xt_REJECT
! ml xt_ecn
! ml xt_length
! ml xt_mac
! ml xt_multiport
! ml xt_owner
! ml xt_state
! ml xt_ttl
! ml xt_TOS
! ml xt_TCPMSS
! ml xt_ULOG
! ml nf_conntrack
! ml nf_conntrack_irc
! ml nf_conntrack_ftp
! fi
  }
  
  check_rab() {
! if [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/ipt_recent.$MEXT" ] && [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/xt_recent.$MEXT" ]; then
!  if [ "$RAB" == "1" ]; then
! 	RAB="0"
! 	eout "{rab} force set RAB disabled, kernel module xt/ipt_recent not found."
!  fi
! fi
  }
  
  get_state() {
--- 62,196 ----
  fi
  }
  
! #ml() {
! #MOD=$1
! #VALMOD=$2
! #if [ "$KREL" == "2.4" ]; then
! 	#MEXT="o"
! #elif [ "$KREL" == "2.6" ]; then
! 	#MEXT="ko"
! #elif [[ "$KREL" =~ "3." ]]; then
! 	#MEXT="ko"
! #elif [ ! "$KREL" == "2.4" ] && [ ! "$KREL" == "2.6" ] && [[ ! "$KREL" =~ "3." ]]; then
! 	#if [ ! "$SET_VERBOSE" == "1" ]; then
!         	#echo "kernel version not compatible or netfilter support missing, aborting."
! 	#fi
!         #eout "{glob} kernel version not compatible or netfilter support missing, aborting."
!         #exit 1
! #else
!         #if [ ! "$SET_VERBOSE" == "1" ]; then
! 	        #echo "kernel version not compatible or netfilter support missing, aborting."
! 	#fi
!         #eout "{glob} kernel version not compatible or netfilter support missing, aborting."
!         #exit 1
! #fi
! 
! #if [ "$VALMOD" == "1" ] && [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/$1.$MEXT" ]; then
!         #if [ ! "$SET_VERBOSE" == "1" ]; then
! 	        #echo "Unable to load iptables module ($1), aborting."
! 	#fi
!         #eout "{glob} unable to load iptables module ($1), aborting."
!         #exit 1
! #fi
! #if [ -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/$1.$MEXT" ] || [ -f "/lib/modules/$(uname -r)/kernel/net/netfilter/$1.$MEXT" ]; then
!         #$MPB $1 >> /dev/null 2>&1 &
! #fi
! #}
! 
! #modinit() {
! ## Remove ipchains module if loaded
! #IPC_VAL=`$LSM | grep ipchains`
! #if [ ! "$IPC_VAL" == "" ]; then
!         #$RMM ipchains
! #fi
! 
! #if [ ! "$SET_MONOKERN" == "1" ]; then
! ## Loading Kernel Modules
! #ml ip_tables 1
! #ml iptable_filter
! #ml iptable_mangle
! #ml ip_conntrack
! #ml ip_conntrack_irc
! #ml ip_conntrack_ftp
! #ml ipt_state
! #ml ipt_multiport
! #ml ipt_limit
! #ml ipt_recent
! #ml ipt_LOG
! #ml ipt_REJECT
! #ml ipt_ecn
! #ml ipt_length
! #ml ipt_mac
! #ml ipt_multiport
! #ml ipt_owner
! #ml ipt_state
! #ml ipt_ttl
! #ml ipt_TOS
! #ml ipt_TCPMSS
! #ml ipt_ULOG
! #ml xt_conntrack
! #ml xt_conntrack_irc
! #ml xt_conntrack_ftp
! #ml xt_state
! #ml xt_multiport
! #ml xt_limit
! #ml xt_recent
! #ml xt_LOG
! #ml xt_REJECT
! #ml xt_ecn
! #ml xt_length
! #ml xt_mac
! #ml xt_multiport
! #ml xt_owner
! #ml xt_state
! #ml xt_ttl
! #ml xt_TOS
! #ml xt_TCPMSS
! #ml xt_ULOG
! #ml nf_conntrack
! #ml nf_conntrack_irc
! #ml nf_conntrack_ftp
! #fi
! #}
! 
! #check_rab() {
! #if [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/ipt_recent.$MEXT" ] && [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/xt_recent.$MEXT" ]; then
!  #if [ "$RAB" == "1" ]; then
! 	#RAB="0"
! 	#eout "{rab} force set RAB disabled, kernel module xt/ipt_recent not found."
!  #fi
! #fi
! #}
  
  modinit() {
! 	[ "$SET_MONOKERN" == "1" ] && return 0
! 
! 	case "$KREL" in
! 		2.4) ;;
! 		2.6) ;;
! 		  *) eout "{glob} kernel version not equal to 2.4.x or 2.6.x, aborting."; exit 1;;
! 	esac
! 
! 	modules="ip_tables iptable_filter iptable_mangle ip_conntrack ip_conntrack_ftp ipt_state ipt_multiport ipt_limit ipt_recent
!              ipt_LOG ipt_REJECT ipt_ecn ipt_length ipt_mac ipt_multiport ipt_owner ipt_state ipt_ttl ipt_TOS ipt_TCPMSS ipt_ULOG
!              xt_conntrack xt_state xt_multiport xt_limit xt_recent xt_length xt_mac xt_multiport xt_owner xt_state nf_conntrack
!              nf_conntrack_irc nf_conntrack_ftp"
!     
! 	# failed to load: xt_conntrack_irc xt_conntrack_ftp xt_LOG xt_REJECT xt_ecn xt_ttl ip_conntrack_irc
! 	# not tested: xt_TOS xt_TCPMSS xt_ULOG
! 
! 	local m
! 	for m in $modules; do
! 		$MPB $m >/dev/null 2>&1 || { eout "{glob} unable to load iptables module ($m), aborting."; return 1; }
! 	done
! 	return 0
  }
  
  check_rab() {
! 	if [ "$RAB" = "1" ] && [ -z "$(cat /proc/net/ip_tables_matches | grep '^recent')" ]; then
! 		RAB="0"
! 		eout "{rab} force set RAB disabled, kernel module xt/ipt_recent not found."
! 	fi
  }
  
  get_state() {
***************
*** 287,293 ****
          val_rev=`cat $ALLOW_HOSTS | grep -w $HOST`
          val_rev2=`cat $GALLOW_HOSTS | grep -w $HOST`
          val_rev3=`cat $GDENY_HOSTS | grep -w $HOST`
!         val_rev4=`/sbin/ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $HOST`
          if [ ! "$val" == "" ]; then
                  echo "$HOST already exists in $DENY_HOSTS"
          elif [ ! "$val_rev" == "" ]; then
--- 318,324 ----
          val_rev=`cat $ALLOW_HOSTS | grep -w $HOST`
          val_rev2=`cat $GALLOW_HOSTS | grep -w $HOST`
          val_rev3=`cat $GDENY_HOSTS | grep -w $HOST`
!         val_rev4=`$ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $HOST`
          if [ ! "$val" == "" ]; then
                  echo "$HOST already exists in $DENY_HOSTS"
          elif [ ! "$val_rev" == "" ]; then
***************
*** 328,334 ****
          val_rev=`cat $ALLOW_HOSTS | grep -w $HOST`
  	val_rev2=`cat $GALLOW_HOSTS | grep -w $HOST`
  	val_rev3=`cat $GDENY_HOSTS | grep -w $HOST`
!         val_rev4=`/sbin/ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $HOST`
          if [ ! "$val" == "" ]; then
                 	echo "$HOST already exists in $DENY_HOSTS"
  	elif [ ! "$val_rev" == "" ]; then
--- 359,365 ----
          val_rev=`cat $ALLOW_HOSTS | grep -w $HOST`
  	val_rev2=`cat $GALLOW_HOSTS | grep -w $HOST`
  	val_rev3=`cat $GDENY_HOSTS | grep -w $HOST`
!         val_rev4=`$ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $HOST`
          if [ ! "$val" == "" ]; then
                 	echo "$HOST already exists in $DENY_HOSTS"
  	elif [ ! "$val_rev" == "" ]; then
***************
*** 396,403 ****
  	/usr/bin/pico -w $iptc
  elif [ -f "/usr/bin/nano" ]; then
  	/usr/bin/nano -w $iptc
! elif [ -f "/bin/vi" ]; then
! 	/bin/vi $iptc
  fi
  clear
  rm -f $iptc
--- 427,434 ----
  	/usr/bin/pico -w $iptc
  elif [ -f "/usr/bin/nano" ]; then
  	/usr/bin/nano -w $iptc
! elif [ -f "/usr/bin/vi" ]; then
! 	/usr/bin/vi $iptc
  fi
  clear
  rm -f $iptc
***************
*** 550,556 ****
          #
          #
          for i in `cat $ALLOW_HOSTS | grep -v "#" | grep -v ":" | grep -v "="`; do
!                 val=`/sbin/ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $i`
                  if [ ! "$val" ]; then
                   if [ ! "$i" == "" ] && [ -f "$ALLOW_HOSTS" ]; then
                          eout "{trust} allow all to/from $i"
--- 581,587 ----
          #
          #
          for i in `cat $ALLOW_HOSTS | grep -v "#" | grep -v ":" | grep -v "="`; do
!                 val=`$ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $i`
                  if [ ! "$val" ]; then
                   if [ ! "$i" == "" ] && [ -f "$ALLOW_HOSTS" ]; then
                          eout "{trust} allow all to/from $i"
***************
*** 842,848 ****
          #
          #
          for i in `cat $DENY_HOSTS | grep -v "#" | grep -v ":" | grep -v "="`; do
!                 val=`/sbin/ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $i`
                  if [ ! "$val" ]; then
                   if [ ! "$i" == "" ] && [ -f "$DENY_HOSTS" ]; then
                          eout "{trust} deny all to/from $i"
--- 873,879 ----
          #
          #
          for i in `cat $DENY_HOSTS | grep -v "#" | grep -v ":" | grep -v "="`; do
!                 val=`$ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $i`
                  if [ ! "$val" ]; then
                   if [ ! "$i" == "" ] && [ -f "$DENY_HOSTS" ]; then
                          eout "{trust} deny all to/from $i"
***************
*** 1501,1507 ****
  
  refresh() {
  	eout "{glob} refreshing trust system rules."
! 	/sbin/iptables-save | grep -E "TDENY|TGDENY" | grep -E '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | awk '{print$4}' | sort -n | uniq  | sort > /etc/apf/internals/refresh.drop.temp
  	$IPT -F TMP_DROP
          for i in `cat /etc/apf/internals/refresh.drop.temp | grep -v "#"`; do
  		if [ ! "$i" == "" ]; then
--- 1532,1538 ----
  
  refresh() {
  	eout "{glob} refreshing trust system rules."
! 	$IPTS | grep -E "TDENY|TGDENY" | grep -E '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | awk '{print$4}' | sort -n | uniq  | sort > /etc/apf/internals/refresh.drop.temp
  	$IPT -F TMP_DROP
          for i in `cat /etc/apf/internals/refresh.drop.temp | grep -v "#"`; do
  		if [ ! "$i" == "" ]; then
diff -crB apf-9.7-2/files/internals/internals.conf apf-9.7-2-arch/files/internals/internals.conf
*** apf-9.7-2/files/internals/internals.conf	2009-03-17 08:37:05.000000000 -0400
--- apf-9.7-2-arch/files/internals/internals.conf	2012-01-09 03:55:05.000000000 -0500
***************
*** 7,19 ****
  APPN="apf"
  
  ifconfig=/sbin/ifconfig
! ip=/sbin/ip
! IPT="/sbin/iptables"
  MPB="/sbin/modprobe"
! LSM="/sbin/lsmod"
  RMM="/sbin/rmmod"
! IPTS="/sbin/iptables-save"
! IPTR="/sbin/iptables-restore"
  DIFF="/usr/bin/diff"
  WGET="/usr/bin/wget"
  MD5="/usr/bin/md5sum"
--- 7,19 ----
  APPN="apf"
  
  ifconfig=/sbin/ifconfig
! ip=/usr/sbin/ip
! IPT="/usr/sbin/iptables"
  MPB="/sbin/modprobe"
! LSM="/bin/lsmod"
  RMM="/sbin/rmmod"
! IPTS="/usr/sbin/iptables-save"
! IPTR="/usr/sbin/iptables-restore"
  DIFF="/usr/bin/diff"
  WGET="/usr/bin/wget"
  MD5="/usr/bin/md5sum"
diff -crB apf-9.7-2/files/sysctl.rules apf-9.7-2-arch/files/sysctl.rules
*** apf-9.7-2/files/sysctl.rules	2011-10-19 01:45:35.000000000 -0400
--- apf-9.7-2-arch/files/sysctl.rules	2012-01-09 05:53:13.844571069 -0500
***************
*** 6,12 ****
  	SYSCTL_CONNTRACK = 28000
  fi
  
! echo $SYSCTL_CONNTRACK > /proc/sys/net/ipv4/ip_conntrack_max
  echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
  echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
  
--- 6,14 ----
  	SYSCTL_CONNTRACK = 28000
  fi
  
! #echo $SYSCTL_CONNTRACK > /proc/sys/net/ipv4/ip_conntrack_max
! echo $SYSCTL_CONNTRACK > /proc/sys/net/ipv4/netfilter/ip_conntrack_max
! 
  echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
  echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
  
diff -crB apf-9.7-2/files/vnet/vnetgen apf-9.7-2-arch/files/vnet/vnetgen
*** apf-9.7-2/files/vnet/vnetgen	2011-11-10 19:53:16.000000000 -0500
--- apf-9.7-2-arch/files/vnet/vnetgen	2012-01-09 04:11:34.000000000 -0500
***************
*** 41,47 ****
  	echo "$ip and $ifconfig not found; aborting"
          exit 1
  elif [ -f "$ip" ]; then
!  for addr in `/sbin/ip addr list | tr '/' ' ' | grep -w inet | grep -w $IF | grep -v 127.0.0.1 | grep -vw $NET | awk '{print$2}'`; do
    if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
--- 41,47 ----
  	echo "$ip and $ifconfig not found; aborting"
          exit 1
  elif [ -f "$ip" ]; then
!  for addr in `$ip addr list | tr '/' ' ' | grep -w inet | grep -w $IF | grep -v 127.0.0.1 | grep -vw $NET | awk '{print$2}'`; do
    if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
***************
*** 67,73 ****
    if [ -f "$ip" ]; then
    valtif=`echo $TIF | grep $anet`
     if [ "$valtif" == "" ]; then
!     for addr in `/sbin/ip addr list | tr '/' ' ' | grep -w inet | grep -w $anet | grep -v 127.0.0.1 | grep -vw $NET | awk '{print$2}'`; do
       if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
--- 67,73 ----
    if [ -f "$ip" ]; then
    valtif=`echo $TIF | grep $anet`
     if [ "$valtif" == "" ]; then
!     for addr in `$ip addr list | tr '/' ' ' | grep -w inet | grep -w $anet | grep -v 127.0.0.1 | grep -vw $NET | awk '{print$2}'`; do
       if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
