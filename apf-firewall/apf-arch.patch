diff -crB apf-9.7-1/apf.init apf-9.7-A/apf.init
*** apf-9.7-1/apf.init	2007-06-16 17:16:25.000000000 -0400
--- apf-9.7-A/apf.init	2011-03-02 02:21:54.000000000 -0500
***************
*** 1,37 ****
  #!/bin/bash
  ##
- # chkconfig: 345 55 25
  # description: Advanced Policy Firewall
  #
  
! # source function library
! . /etc/rc.d/init.d/functions
! # import variables
! . /etc/apf/conf.apf
! . /etc/apf/internals/internals.conf
! 
! ipt="/sbin/iptables"
! inspath="/etc/apf"
! prog="apf"
  
  case "$1" in
  start)
!         echo -n "Starting APF:"
!         /usr/local/sbin/apf --start >> /dev/null 2>&1
!         echo_success
!         echo
!         ;;
  stop)
!         echo -n "Stopping APF:"
!         /usr/local/sbin/apf --stop >> /dev/null 2>&1
!         echo_success
!         echo
!         ;;
  restart)
!         $0 stop
!         $0 start
!         ;;
  *)
!         echo "usage: $0 [start|stop|restart]"
  esac
! exit 0
--- 1,37 ----
  #!/bin/bash
  ##
  # description: Advanced Policy Firewall
  #
  
! . /etc/rc.conf
! . /etc/rc.d/functions
  
  case "$1" in
  start)
!     stat_busy "Starting APF firewall"
!     /usr/local/sbin/apf --start >> /dev/null 2>&1
!     if [ $? -gt 0 ]; then
!       stat_fail
!     else
!       add_daemon apf-firewall
!       stat_done
!     fi
!     ;;
  stop)
!     stat_busy "Stopping APF firewall"
!     /usr/local/sbin/apf --stop >> /dev/null 2>&1
!     if [ $? -gt 0 ]; then
!       stat_fail
!     else
!       rm_daemon apf-firewall
!       stat_done
!     fi
!     ;;
  restart)
!     $0 stop
!     $0 start
!     ;;
  *)
!     echo "usage: $0 [start|stop|restart]"
  esac
! exit $?
diff -crB apf-9.7-1/files/apf apf-9.7-A/files/apf
*** apf-9.7-1/files/apf	2009-03-17 08:36:16.000000000 -0400
--- apf-9.7-A/files/apf	2011-03-02 05:07:16.000000000 -0500
***************
*** 20,26 ****
  #    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  ###
  #
! VER="9.7"
  CNF="/etc/apf/conf.apf"
  
  head() {
--- 20,26 ----
  #    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  ###
  #
! VER="9.7-ARCH"
  CNF="/etc/apf/conf.apf"
  
  head() {
***************
*** 32,38 ****
  }
  
  if [ -f "$CNF" ] && [ ! "$CNF" == "" ]; then
!    source $CNF
  else
     head
     echo "\$CNF not found, aborting."
--- 32,38 ----
  }
  
  if [ -f "$CNF" ] && [ ! "$CNF" == "" ]; then
!    source $CNF 2>/dev/null
  else
     head
     echo "\$CNF not found, aborting."
***************
*** 148,170 ****
          touch $ALLOW_HOSTS
          chmod 600 $ALLOW_HOSTS
  fi
  # check devel mode
  devm
  # generate vnet rules
  $INSTALL_PATH/vnet/vnetgen
  # start main firewall script
  $INSTALL_PATH/firewall
  # check for/load bandmin
  LOAD=`cat /proc/loadavg | tr '.' ' ' | awk '{print$1}'`
   if [ ! "$LOAD" -gt "10" ]; then
  	bandmin
   fi
! eout "{glob} firewall initalized"
  if [ "$MD5_FIRSTRUN" == "1" ]; then
          $MD5 $MD5_FILES > $INSTALL_PATH/internals/.md5.cores 2> /dev/null
  fi
  
! firewall_on=`iptables -L --numeric | grep -vE "Chain|destination"`
  if [ ! "$DEVEL_ON" == "1" ] && [ ! "$firewall_on" == "" ]; then
  	$IPTS > $INSTALL_PATH/internals/.apf.restore
  	eout "{glob} fast load snapshot saved"
--- 148,172 ----
          touch $ALLOW_HOSTS
          chmod 600 $ALLOW_HOSTS
  fi
+ rc=0
  # check devel mode
  devm
  # generate vnet rules
  $INSTALL_PATH/vnet/vnetgen
  # start main firewall script
  $INSTALL_PATH/firewall
+ rc=$?
  # check for/load bandmin
  LOAD=`cat /proc/loadavg | tr '.' ' ' | awk '{print$1}'`
   if [ ! "$LOAD" -gt "10" ]; then
  	bandmin
   fi
! [ "$rc" = "0" ] && eout "{glob} firewall initalized"
  if [ "$MD5_FIRSTRUN" == "1" ]; then
          $MD5 $MD5_FILES > $INSTALL_PATH/internals/.md5.cores 2> /dev/null
  fi
  
! firewall_on=`$IPT -L --numeric | grep -vE "Chain|destination"`
  if [ ! "$DEVEL_ON" == "1" ] && [ ! "$firewall_on" == "" ]; then
  	$IPTS > $INSTALL_PATH/internals/.apf.restore
  	eout "{glob} fast load snapshot saved"
***************
*** 217,220 ****
  	help
  esac
  
! exit 0
--- 219,222 ----
  	help
  esac
  
! exit $rc
diff -crB apf-9.7-1/files/conf.apf apf-9.7-A/files/conf.apf
*** apf-9.7-1/files/conf.apf	2009-10-26 16:44:13.000000000 -0400
--- apf-9.7-A/files/conf.apf	2011-03-02 21:24:08.215925820 -0500
***************
*** 17,23 ****
  # !!! Do not leave set to (1) !!!
  # When set to enabled; 5 minute cronjob is set to stop the firewall. Set
  # this off (0) when firewall is determined to be operating as desired.
! DEVEL_MODE="1"
  
  # The installation path of APF; this can be changed but it is not recommended.
  INSTALL_PATH="/etc/apf"
--- 17,23 ----
  # !!! Do not leave set to (1) !!!
  # When set to enabled; 5 minute cronjob is set to stop the firewall. Set
  # this off (0) when firewall is determined to be operating as desired.
! DEVEL_MODE="0"
  
  # The installation path of APF; this can be changed but it is not recommended.
  INSTALL_PATH="/etc/apf"
***************
*** 74,80 ****
  # The firewall will flush & reload all static rules, redownload global rules and
  # re-resolve any dns names in the rules. This is ideal when using dynamic dns
  # names or downloadable global trust rules. [value in minutes, 0 to disable]
! SET_REFRESH="10"
  
  # This is the total amount of rules allowed inside of the deny trust system.
  # When this limit is reached, the deny rule files will begin to purge older
--- 74,80 ----
  # The firewall will flush & reload all static rules, redownload global rules and
  # re-resolve any dns names in the rules. This is ideal when using dynamic dns
  # names or downloadable global trust rules. [value in minutes, 0 to disable]
! SET_REFRESH="0"
  
  # This is the total amount of rules allowed inside of the deny trust system.
  # When this limit is reached, the deny rule files will begin to purge older
***************
*** 109,115 ****
  # of what the address has already done. The interface that allows RAB to work
  # resides inside the kernel and makes use of the iptables 'ipt_recent' module,
  # so there is no external programs causing any additional load. 
! RAB="0"
  
  # This enables RAB for sanity violations, which is when an address breaks a 
  # strict conformity standard such as trying to spoof an address or modify
--- 109,115 ----
  # of what the address has already done. The interface that allows RAB to work
  # resides inside the kernel and makes use of the iptables 'ipt_recent' module,
  # so there is no external programs causing any additional load. 
! RAB="1"
  
  # This enables RAB for sanity violations, which is when an address breaks a 
  # strict conformity standard such as trying to spoof an address or modify
***************
*** 123,129 ****
  # level defines the amount of ports that RAB will react against. The port
  # security groups can be customized in 'internals/rab.ports'.
  # 0 = disabled | 1 = low security  | 2 = medium security | 3 = high security
! RAB_PSCAN_LEVEL="2"
  
  # This controls the amount of violation hits an address must have before it
  # is blocked. It is a good idea to keep this very low to prevent evasive 
--- 123,129 ----
  # level defines the amount of ports that RAB will react against. The port
  # security groups can be customized in 'internals/rab.ports'.
  # 0 = disabled | 1 = low security  | 2 = medium security | 3 = high security
! RAB_PSCAN_LEVEL="3"
  
  # This controls the amount of violation hits an address must have before it
  # is blocked. It is a good idea to keep this very low to prevent evasive 
***************
*** 131,138 ****
  RAB_HITCOUNT="1"
  
  # This is the amount of time (in seconds) that an address gets blocked for if
! # a violation is triggered, the default is 300s (5 minutes).
! RAB_TIMER="300"
  
  # This allows RAB to 'trip' the block timer back to 0 seconds if an address
  # attempts ANY subsiquent communication while still on the inital block period.
--- 131,138 ----
  RAB_HITCOUNT="1"
  
  # This is the amount of time (in seconds) that an address gets blocked for if
! # a violation is triggered, the default is 600s (10 minutes).
! RAB_TIMER="600"
  
  # This allows RAB to 'trip' the block timer back to 0 seconds if an address
  # attempts ANY subsiquent communication while still on the inital block period.
***************
*** 246,259 ****
  # client agents for the purpose of distributing or downloading pirated media.
  # Format is comma separated for single ports and an underscore separator for
  # ranges (4660_4678).
! BLK_P2P_PORTS="1214,2323,4660_4678,6257,6699,6346,6347,6881_6889,6346,7778"
  
  # These are common Internet service ports that are understood in the wild 
  # services you would not want logged under normal circumstances. All ports
  # that are defined here will be implicitly dropped with no logging for
  # TCP/UDP traffic inbound or outbound. Format is comma separated for single
  # ports and an underscore separator for ranges (135_139).
! BLK_PORTS="135_139,111,513,520,445,1433,1434,1234,1524,3127"
  
  # You need multicasting if you intend to participate in the MBONE, a high 
  # bandwidth network on top of the Internet which carries audio and video
--- 246,259 ----
  # client agents for the purpose of distributing or downloading pirated media.
  # Format is comma separated for single ports and an underscore separator for
  # ranges (4660_4678).
! #BLK_P2P_PORTS="1214,2323,4660_4678,6257,6699,6346,6347,6881_6889,6346,7778"
  
  # These are common Internet service ports that are understood in the wild 
  # services you would not want logged under normal circumstances. All ports
  # that are defined here will be implicitly dropped with no logging for
  # TCP/UDP traffic inbound or outbound. Format is comma separated for single
  # ports and an underscore separator for ranges (135_139).
! #BLK_PORTS="135_139,111,513,520,445,1433,1434,1234,1524,3127"
  
  # You need multicasting if you intend to participate in the MBONE, a high 
  # bandwidth network on top of the Internet which carries audio and video
***************
*** 273,279 ****
  # some point become live address space. The USE_RD option further in this file
  # allows for dynamic updating of this list on every full restart of APF. Refer
  # to the 'internals/reserved.networks' file for listing of address space.
! BLK_RESNET="1"
  
  # Block all ident (tcp 113) requests in and out of the server IF the port is
  # not already opened in *_TCP_CPORTS. This uses a REJECT target to make sure
--- 273,279 ----
  # some point become live address space. The USE_RD option further in this file
  # allows for dynamic updating of this list on every full restart of APF. Refer
  # to the 'internals/reserved.networks' file for listing of address space.
! BLK_RESNET="0"
  
  # Block all ident (tcp 113) requests in and out of the server IF the port is
  # not already opened in *_TCP_CPORTS. This uses a REJECT target to make sure
***************
*** 359,365 ****
  # IG_ICMP_TYPES="3,5,11,0,30,8"
  
  # Common inbound (ingress) TCP ports
! IG_TCP_CPORTS="22"
  
  # Common inbound (ingress) UDP ports
  IG_UDP_CPORTS=""
--- 359,365 ----
  # IG_ICMP_TYPES="3,5,11,0,30,8"
  
  # Common inbound (ingress) TCP ports
! IG_TCP_CPORTS=""
  
  # Common inbound (ingress) UDP ports
  IG_UDP_CPORTS=""
***************
*** 463,469 ****
  # will update the reserved networks list in order to prevent new ip assignments 
  # on the internet from getting blocked; this option is only important when
  # BLK_RESNET is set to enabled.
! DLIST_RESERVED="1"
  
  DLIST_RESERVED_URL="rfxn.com/downloads/reserved.networks"
  DLIST_RESERVED_URL_PROT="http"			    
--- 463,469 ----
  # will update the reserved networks list in order to prevent new ip assignments 
  # on the internet from getting blocked; this option is only important when
  # BLK_RESNET is set to enabled.
! DLIST_RESERVED="0"
  
  DLIST_RESERVED_URL="rfxn.com/downloads/reserved.networks"
  DLIST_RESERVED_URL_PROT="http"			    
diff -crB apf-9.7-1/files/firewall apf-9.7-A/files/firewall
*** apf-9.7-1/files/firewall	2011-01-02 10:26:06.000000000 -0500
--- apf-9.7-A/files/firewall	2011-03-02 21:26:45.814149463 -0500
***************
*** 23,29 ****
  CNF="/etc/apf/conf.apf"
  
  if [ -f "$CNF" ] && [ ! "$CNF" == "" ]; then
!    source $CNF
  else
     head
     echo "\$CNF not found; aborting"
--- 23,29 ----
  CNF="/etc/apf/conf.apf"
  
  if [ -f "$CNF" ] && [ ! "$CNF" == "" ]; then
!    source $CNF 2>/dev/null
  else
     head
     echo "\$CNF not found; aborting"
***************
*** 43,49 ****
  
  if [ ! "$IF" == "" ]; then
   for i in `echo $IF`; do
!   VAL_IF=`/sbin/route -n | grep -w $i`
  	if [ "$VAL_IF" == "" ]; then
  		eout "{glob} could not verify that interface $IF is routed to a network, aborting."
  	        if [ ! "$SET_VERBOSE" == "1" ]; then
--- 43,49 ----
  
  if [ ! "$IF" == "" ]; then
   for i in `echo $IF`; do
!   VAL_IF=`route -n 2>/dev/null | grep -w $i`
  	if [ "$VAL_IF" == "" ]; then
  		eout "{glob} could not verify that interface $IF is routed to a network, aborting."
  	        if [ ! "$SET_VERBOSE" == "1" ]; then
***************
*** 55,61 ****
  fi
  if [ ! "$IFACE_TRUSTED" == "" ]; then
   for i in `echo $IFACE_TRUSTED`; do
!   VAL_IFACE_TRUSTED=`/sbin/route -n | grep -w $i`
          if [ "$VAL_IFACE_TRUSTED" == "" ]; then
                  eout "{glob} could not verify that interface $IFACE_TRUSTED is routed to a network, aborting."
  	        if [ ! "$SET_VERBOSE" == "1" ]; then
--- 55,61 ----
  fi
  if [ ! "$IFACE_TRUSTED" == "" ]; then
   for i in `echo $IFACE_TRUSTED`; do
!   VAL_IFACE_TRUSTED=`route -n 2>/dev/null| grep -w $i`
          if [ "$VAL_IFACE_TRUSTED" == "" ]; then
                  eout "{glob} could not verify that interface $IFACE_TRUSTED is routed to a network, aborting."
  	        if [ ! "$SET_VERBOSE" == "1" ]; then
***************
*** 87,93 ****
  # Allow all traffic on trusted interfaces
  if [ ! "$IFACE_TRUSTED" == "" ]; then
  for i in `echo $IFACE_TRUSTED | tr ',' ' '`; do
! VAL_IF=`/sbin/ip addr list | grep -w $i`
  if [ "$VAL_IF" == "" ]; then
          eout "{glob} unable to verify status of interface $i; assuming untrusted"
  else
--- 87,93 ----
  # Allow all traffic on trusted interfaces
  if [ ! "$IFACE_TRUSTED" == "" ]; then
  for i in `echo $IFACE_TRUSTED | tr ',' ' '`; do
! VAL_IF=`$ip addr list | grep -w $i`
  if [ "$VAL_IF" == "" ]; then
          eout "{glob} unable to verify status of interface $i; assuming untrusted"
  else
diff -crB apf-9.7-1/files/internals/functions.apf apf-9.7-A/files/internals/functions.apf
*** apf-9.7-1/files/internals/functions.apf	2010-07-23 20:30:29.000000000 -0400
--- apf-9.7-A/files/internals/functions.apf	2011-03-02 02:40:37.000000000 -0500
***************
*** 21,26 ****
--- 21,28 ----
  ###
  #
  
+ # TODO: modules could be compressed
+ 
  eout() {
  arg=$1
          if [ ! "$arg" == "" ]; then
***************
*** 41,60 ****
  	eout "{glob} !!DEVELOPMENT MODE ENABLED!! - firewall will flush every 5 minutes."
  	echo "!!DEVELOPMENT MODE ENABLED!! - firewall will flush every 5 minutes."
   fi
! APF_CJ=`cat $CRON | grep -w /etc/init.d/apf`
          if [ "$APF_CJ" == "" ]; then
                  cp -f $CRON $CRON.bk
                  cat > $TMP_CJ <<EOF
  
! */5 * * * * root /etc/init.d/apf stop >> /dev/null 2>&1
  EOF
                  cat $TMP_CJ >> $CRON
                  rm -f $TMP_CJ
          fi
  elif [ "$DEVEL_MODE" == "0" ]; then
! APF_CJ=`cat $CRON | grep -w /etc/init.d/apf`
          if [ ! "$APF_CJ" == "" ]; then
!                 cat $CRON | grep -vw "/etc/init.d/apf" > $CRON.tmp
                  cp -f $CRON $CRON.bk
                  mv $CRON.tmp $CRON
                  chmod 644 $CRON
--- 43,62 ----
  	eout "{glob} !!DEVELOPMENT MODE ENABLED!! - firewall will flush every 5 minutes."
  	echo "!!DEVELOPMENT MODE ENABLED!! - firewall will flush every 5 minutes."
   fi
! APF_CJ=`cat $CRON | grep -w /etc/rc.d/apf`
          if [ "$APF_CJ" == "" ]; then
                  cp -f $CRON $CRON.bk
                  cat > $TMP_CJ <<EOF
  
! */5 * * * * root /etc/rc.d/apf stop >> /dev/null 2>&1
  EOF
                  cat $TMP_CJ >> $CRON
                  rm -f $TMP_CJ
          fi
  elif [ "$DEVEL_MODE" == "0" ]; then
! APF_CJ=`cat $CRON | grep -w /etc/rc.d/apf`
          if [ ! "$APF_CJ" == "" ]; then
!                 cat $CRON | grep -vw "/etc/rc.d/apf" > $CRON.tmp
                  cp -f $CRON $CRON.bk
                  mv $CRON.tmp $CRON
                  chmod 644 $CRON
***************
*** 152,158 ****
  }
  
  check_rab() {
! if [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/ipt_recent.$MEXT" ] || [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/xt_recent.$MEXT" ]; then
   if [ "$RAB" == "1" ]; then
  	RAB="0"
  	eout "{rab} force set RAB disabled, kernel module ipt_recent not found."
--- 154,160 ----
  }
  
  check_rab() {
! if [ ! -f "/lib/modules/$(uname -r)/kernel/net/ipv4/netfilter/ipt_recent.$MEXT" ] | [ ! -f "/lib/modules/$(uname -r)/kernel/net/netfilter/xt_recent.$MEXT" ]; then
   if [ "$RAB" == "1" ]; then
  	RAB="0"
  	eout "{rab} force set RAB disabled, kernel module ipt_recent not found."
***************
*** 232,256 ****
          $IPT -D TGDENY -s $DIP -j $ALL_STOP
          $IPT -D TGDENY -d $DIP -j $ALL_STOP
  
! 	val=`cat /etc/apf/allow_hosts.rules | grep "$DIP"`
  	if [ ! "$val" == "" ]; then
! 		cat /etc/apf/allow_hosts.rules | grep -v "$DIP" > /etc/apf/allow_hosts.rules.new
! 		mv /etc/apf/allow_hosts.rules.new /etc/apf/allow_hosts.rules
  	fi
! 	val=`cat /etc/apf/deny_hosts.rules | grep "$DIP"`
          if [ ! "$val" == "" ]; then
!         	cat /etc/apf/deny_hosts.rules | grep -v "$DIP" > /etc/apf/deny_hosts.rules.new
! 	        mv /etc/apf/deny_hosts.rules.new /etc/apf/deny_hosts.rules
  	fi
! 	val=`cat /etc/apf/glob_allow_hosts.rules | grep "$DIP"`
          if [ ! "$val" == "" ]; then
!         	cat /etc/apf/glob_allow_hosts.rules | grep -v "$DIP" > /etc/apf/glob_allow_hosts.rules.new
! 	        mv /etc/apf/glob_allow_hosts.rules.new /etc/apf/glob_allow_hosts.rules
  	fi
! 	val=`cat /etc/apf/glob_deny_hosts.rules | grep "$DIP"`
          if [ ! "$val" == "" ]; then
!         	cat /etc/apf/glob_deny_hosts.rules | grep -v "$DIP" > /etc/apf/glob_deny_hosts.rules.new
! 	        mv /etc/apf/glob_deny_hosts.rules.new /etc/apf/glob_deny_hosts.rules
  	fi
  
  	dil=`$IPT --numeric --list INPUT --line-numbers | grep $DIP | awk '{print$1}'`
--- 234,258 ----
          $IPT -D TGDENY -s $DIP -j $ALL_STOP
          $IPT -D TGDENY -d $DIP -j $ALL_STOP
  
! 	val=`cat $INSTALL_PATH/allow_hosts.rules | grep "$DIP"`
  	if [ ! "$val" == "" ]; then
! 		cat $INSTALL_PATH/allow_hosts.rules | grep -v "$DIP" > $INSTALL_PATH/allow_hosts.rules.new
! 		mv $INSTALL_PATH/allow_hosts.rules.new $INSTALL_PATH/allow_hosts.rules
  	fi
! 	val=`cat $INSTALL_PATH/deny_hosts.rules | grep "$DIP"`
          if [ ! "$val" == "" ]; then
!         	cat $INSTALL_PATH/deny_hosts.rules | grep -v "$DIP" > $INSTALL_PATH/deny_hosts.rules.new
! 	        mv $INSTALL_PATH/deny_hosts.rules.new $INSTALL_PATH/deny_hosts.rules
  	fi
! 	val=`cat $INSTALL_PATH/glob_allow_hosts.rules | grep "$DIP"`
          if [ ! "$val" == "" ]; then
!         	cat $INSTALL_PATH/glob_allow_hosts.rules | grep -v "$DIP" > $INSTALL_PATH/glob_allow_hosts.rules.new
! 	        mv $INSTALL_PATH/glob_allow_hosts.rules.new $INSTALL_PATH/glob_allow_hosts.rules
  	fi
! 	val=`cat $INSTALL_PATH/glob_deny_hosts.rules | grep "$DIP"`
          if [ ! "$val" == "" ]; then
!         	cat $INSTALL_PATH/glob_deny_hosts.rules | grep -v "$DIP" > $INSTALL_PATH/glob_deny_hosts.rules.new
! 	        mv $INSTALL_PATH/glob_deny_hosts.rules.new $INSTALL_PATH/glob_deny_hosts.rules
  	fi
  
  	dil=`$IPT --numeric --list INPUT --line-numbers | grep $DIP | awk '{print$1}'`
***************
*** 285,291 ****
          val_rev=`cat $ALLOW_HOSTS | grep -w $HOST`
          val_rev2=`cat $GALLOW_HOSTS | grep -w $HOST`
          val_rev3=`cat $GDENY_HOSTS | grep -w $HOST`
!         val_rev4=`/sbin/ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $HOST`
          if [ ! "$val" == "" ]; then
                  echo "$HOST already exists in $DENY_HOSTS"
          elif [ ! "$val_rev" == "" ]; then
--- 287,293 ----
          val_rev=`cat $ALLOW_HOSTS | grep -w $HOST`
          val_rev2=`cat $GALLOW_HOSTS | grep -w $HOST`
          val_rev3=`cat $GDENY_HOSTS | grep -w $HOST`
!         val_rev4=`$ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $HOST`
          if [ ! "$val" == "" ]; then
                  echo "$HOST already exists in $DENY_HOSTS"
          elif [ ! "$val_rev" == "" ]; then
***************
*** 326,332 ****
          val_rev=`cat $ALLOW_HOSTS | grep -w $HOST`
  	val_rev2=`cat $GALLOW_HOSTS | grep -w $HOST`
  	val_rev3=`cat $GDENY_HOSTS | grep -w $HOST`
!         val_rev4=`/sbin/ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $HOST`
          if [ ! "$val" == "" ]; then
                 	echo "$HOST already exists in $DENY_HOSTS"
  	elif [ ! "$val_rev" == "" ]; then
--- 328,334 ----
          val_rev=`cat $ALLOW_HOSTS | grep -w $HOST`
  	val_rev2=`cat $GALLOW_HOSTS | grep -w $HOST`
  	val_rev3=`cat $GDENY_HOSTS | grep -w $HOST`
!         val_rev4=`$ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $HOST`
          if [ ! "$val" == "" ]; then
                 	echo "$HOST already exists in $DENY_HOSTS"
  	elif [ ! "$val_rev" == "" ]; then
***************
*** 359,365 ****
  }
  
  flush() {
! firewall_on=`iptables -L --numeric | grep -vE "Chain|destination"`
  if [ "$SET_FASTLOAD" == "1" ] && [ ! "$1" == "1" ] && [ ! "$DEVEL_ON" == "1" ] && [ ! "$firewall_on" == "" ]; then
  	$IPTS > $INSTALL_PATH/internals/.apf.restore
  	eout "{glob} fast load snapshot saved"
--- 361,367 ----
  }
  
  flush() {
! firewall_on=`$IPT -L --numeric | grep -vE "Chain|destination"`
  if [ "$SET_FASTLOAD" == "1" ] && [ ! "$1" == "1" ] && [ ! "$DEVEL_ON" == "1" ] && [ ! "$firewall_on" == "" ]; then
  	$IPTS > $INSTALL_PATH/internals/.apf.restore
  	eout "{glob} fast load snapshot saved"
***************
*** 380,395 ****
  
  list() {
  echo "Loading chain rules..."
! iptc=/etc/apf/.ipt.chains
  :> $iptc ; chmod 600 $iptc
  $IPT --verbose --numeric --line-numbers --list >> $iptc
  echo "Opening editor"
! if [ -f "/usr/bin/pico" ]; then
! 	/usr/bin/pico -w $iptc
  elif [ -f "/usr/bin/nano" ]; then
  	/usr/bin/nano -w $iptc
! elif [ -f "/bin/vi" ]; then
! 	/bin/vi $iptc
  fi
  clear
  rm -f $iptc
--- 382,397 ----
  
  list() {
  echo "Loading chain rules..."
! iptc=$INSTALL_PATH/.ipt.chains
  :> $iptc ; chmod 600 $iptc
  $IPT --verbose --numeric --line-numbers --list >> $iptc
  echo "Opening editor"
! if [ -f "/usr/bin/vim" ]; then
! 	/usr/bin/vim $iptc
  elif [ -f "/usr/bin/nano" ]; then
  	/usr/bin/nano -w $iptc
! elif [ -f "/usr/bin/vi" ]; then
! 	/usr/bin/vi $iptc
  fi
  clear
  rm -f $iptc
***************
*** 521,527 ****
  }
  
  ovars() {
! 	nice -n 16 cat /etc/apf/conf.apf /etc/apf/internals/internals.conf | grep -v "#" | grep "=" | tr '=' ' ' | awk '{print""$"$1"}'
  }
  
  allow_hosts() {
--- 523,529 ----
  }
  
  ovars() {
! 	nice -n 16 cat $INSTALL_PATH/conf.apf $INSTALL_PATH/internals/internals.conf | grep -v "#" | grep "=" | tr '=' ' ' | awk '{print""$"$1"}'
  }
  
  allow_hosts() {
***************
*** 530,536 ****
          #
          #
          for i in `cat $ALLOW_HOSTS | grep -v "#" | grep -v ":" | grep -v "="`; do
!                 val=`/sbin/ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $i`
                  if [ ! "$val" ]; then
                   if [ ! "$i" == "" ] && [ -f "$ALLOW_HOSTS" ]; then
                          eout "{trust} allow all to/from $i"
--- 532,538 ----
          #
          #
          for i in `cat $ALLOW_HOSTS | grep -v "#" | grep -v ":" | grep -v "="`; do
!                 val=`$ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $i`
                  if [ ! "$val" ]; then
                   if [ ! "$i" == "" ] && [ -f "$ALLOW_HOSTS" ]; then
                          eout "{trust} allow all to/from $i"
***************
*** 822,828 ****
          #
          #
          for i in `cat $DENY_HOSTS | grep -v "#" | grep -v ":" | grep -v "="`; do
!                 val=`/sbin/ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $i`
                  if [ ! "$val" ]; then
                   if [ ! "$i" == "" ] && [ -f "$DENY_HOSTS" ]; then
                          eout "{trust} deny all to/from $i"
--- 824,830 ----
          #
          #
          for i in `cat $DENY_HOSTS | grep -v "#" | grep -v ":" | grep -v "="`; do
!                 val=`$ip addr list $IFACE_IN | grep -w inet | grep -v inet6 | tr '/' ' ' | awk '{print$2}' | grep -w $i`
                  if [ ! "$val" ]; then
                   if [ ! "$i" == "" ] && [ -f "$DENY_HOSTS" ]; then
                          eout "{trust} deny all to/from $i"
***************
*** 1128,1134 ****
          chmod 600 $RESNET $RESNET.bk
   fi
  if [ -f "$WGET" ] && [ -f "$RESNET" ]; then
!    URL_TMP="/etc/apf/.apf-$$"
     rm -rf $URL_TMP
     URL_FILE=`echo $DLIST_RESERVED_URL | tr '/' '\n' | grep "." | tail -n 1`
     RD_CON="$DLIST_RESERVED_URL_PROT://$DLIST_RESERVED_URL"
--- 1130,1136 ----
          chmod 600 $RESNET $RESNET.bk
   fi
  if [ -f "$WGET" ] && [ -f "$RESNET" ]; then
!    URL_TMP="$INSTALL_PATH/.apf-$$"
     rm -rf $URL_TMP
     URL_FILE=`echo $DLIST_RESERVED_URL | tr '/' '\n' | grep "." | tail -n 1`
     RD_CON="$DLIST_RESERVED_URL_PROT://$DLIST_RESERVED_URL"
***************
*** 1147,1153 ****
  	 fi
     fi
     rm -rf $URL_TMP
!    cd /etc/apf
  else
   if [ -f "$RESNET" ]; then
  	cp $RESNET.bk $RESNET
--- 1149,1155 ----
  	 fi
     fi
     rm -rf $URL_TMP
!    cd $INSTALL_PATH
  else
   if [ -f "$RESNET" ]; then
  	cp $RESNET.bk $RESNET
***************
*** 1158,1165 ****
  
  dlist_php() {
  if [ ! "$DLIST_PHP_URL_PROT" == "" ] && [ ! "$DLIST_PHP_URL" == "" ] && [ "$DLIST_PHP" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="/etc/apf/.apf-$$"
!    rm -rf $URL_TMP /etc/apf/.apf-*
     URL_FILE=`echo $DLIST_PHP_URL | tr '/' '\n' | grep "." | tail -n 1`
     URL_CON="$DLIST_PHP_URL_PROT://$DLIST_PHP_URL"
     mkdir $URL_TMP
--- 1160,1167 ----
  
  dlist_php() {
  if [ ! "$DLIST_PHP_URL_PROT" == "" ] && [ ! "$DLIST_PHP_URL" == "" ] && [ "$DLIST_PHP" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="$INSTALL_PATH/.apf-$$"
!    rm -rf $URL_TMP $INSTALL_PATH/.apf-*
     URL_FILE=`echo $DLIST_PHP_URL | tr '/' '\n' | grep "." | tail -n 1`
     URL_CON="$DLIST_PHP_URL_PROT://$DLIST_PHP_URL"
     mkdir $URL_TMP
***************
*** 1180,1186 ****
          eout "{php} download of $DLIST_PHP_URL_PROT://$DLIST_PHP_URL failed"
     fi
     rm -rf $URL_TMP
!    cd /etc/apf
  else
     rm -f $PHP_HOSTS
     touch $PHP_HOSTS
--- 1182,1188 ----
          eout "{php} download of $DLIST_PHP_URL_PROT://$DLIST_PHP_URL failed"
     fi
     rm -rf $URL_TMP
!    cd $INSTALL_PATH
  else
     rm -f $PHP_HOSTS
     touch $PHP_HOSTS
***************
*** 1209,1216 ****
  
  dlist_dshield() {
  if [ ! "$DLIST_DSHIELD_URL_PROT" == "" ] && [ ! "$DLIST_DSHIELD_URL" == "" ] && [ "$DLIST_DSHIELD" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="/etc/apf/.apf-$$"
!    rm -rf $URL_TMP /etc/apf/.apf-*
     URL_FILE=`echo $DLIST_DSHIELD_URL | tr '/' '\n' | grep "." | tail -n 1`
     URL_CON="$DLIST_DSHIELD_URL_PROT://$DLIST_DSHIELD_URL"
     mkdir $URL_TMP
--- 1211,1218 ----
  
  dlist_dshield() {
  if [ ! "$DLIST_DSHIELD_URL_PROT" == "" ] && [ ! "$DLIST_DSHIELD_URL" == "" ] && [ "$DLIST_DSHIELD" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="$INSTALL_PATH/.apf-$$"
!    rm -rf $URL_TMP $INSTALL_PATH/.apf-*
     URL_FILE=`echo $DLIST_DSHIELD_URL | tr '/' '\n' | grep "." | tail -n 1`
     URL_CON="$DLIST_DSHIELD_URL_PROT://$DLIST_DSHIELD_URL"
     mkdir $URL_TMP
***************
*** 1231,1237 ****
          eout "{dshield} download of $DLIST_DSHIELD_URL_PROT://$DLIST_DSHIELD_URL failed"
     fi
     rm -rf $URL_TMP
!    cd /etc/apf
  else
     rm -f $DS_HOSTS
     touch $DS_HOSTS
--- 1233,1239 ----
          eout "{dshield} download of $DLIST_DSHIELD_URL_PROT://$DLIST_DSHIELD_URL failed"
     fi
     rm -rf $URL_TMP
!    cd $INSTALL_PATH
  else
     rm -f $DS_HOSTS
     touch $DS_HOSTS
***************
*** 1260,1267 ****
  
  dlist_spamhaus() {
  if [ ! "$DLIST_SPAMHAUS_URL_PROT" == "" ] && [ ! "$DLIST_SPAMHAUS_URL" == "" ] && [ "$DLIST_SPAMHAUS" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="/etc/apf/.apf-$$"
!    rm -rf $URL_TMP /etc/apf/.apf-*
     URL_FILE=`echo $DLIST_SPAMHAUS_URL | tr '/' '\n' | grep "." | tail -n 1`
     URL_CON="$DLIST_SPAMHAUS_URL_PROT://$DLIST_SPAMHAUS_URL"
     mkdir $URL_TMP
--- 1262,1269 ----
  
  dlist_spamhaus() {
  if [ ! "$DLIST_SPAMHAUS_URL_PROT" == "" ] && [ ! "$DLIST_SPAMHAUS_URL" == "" ] && [ "$DLIST_SPAMHAUS" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="$INSTALL_PATH/.apf-$$"
!    rm -rf $URL_TMP $INSTALL_PATH/.apf-*
     URL_FILE=`echo $DLIST_SPAMHAUS_URL | tr '/' '\n' | grep "." | tail -n 1`
     URL_CON="$DLIST_SPAMHAUS_URL_PROT://$DLIST_SPAMHAUS_URL"
     mkdir $URL_TMP
***************
*** 1282,1288 ****
          eout "{sdrop} download of $DLIST_SPAMHAUS_URL_PROT://$DLIST_SPAMHAUS_URL failed"
     fi
     rm -rf $URL_TMP
!    cd /etc/apf
  else
     rm -f $DROP_HOSTS
     touch $DROP_HOSTS
--- 1284,1290 ----
          eout "{sdrop} download of $DLIST_SPAMHAUS_URL_PROT://$DLIST_SPAMHAUS_URL failed"
     fi
     rm -rf $URL_TMP
!    cd $INSTALL_PATH
  else
     rm -f $DROP_HOSTS
     touch $DROP_HOSTS
***************
*** 1312,1319 ****
  
  dlist_ecnshame() {
  if [ ! "$DLIST_ECNSHAME_URL_PROT" == "" ] && [ ! "$DLIST_ECNSHAME_URL" == "" ] && [ "$DLIST_ECNSHAME" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="/etc/apf/.apf-$$"
!    rm -rf $URL_TMP /etc/apf/.apf-*
     URL_FILE=`echo $DLIST_ECNSHAME_URL | tr '/' '\n' | grep "." | tail -n 1`
     URL_CON="$DLIST_ECNSHAME_URL_PROT://$DLIST_ECNSHAME_URL"
     mkdir $URL_TMP
--- 1314,1321 ----
  
  dlist_ecnshame() {
  if [ ! "$DLIST_ECNSHAME_URL_PROT" == "" ] && [ ! "$DLIST_ECNSHAME_URL" == "" ] && [ "$DLIST_ECNSHAME" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="$INSTALL_PATH/.apf-$$"
!    rm -rf $URL_TMP $INSTALL_PATH/.apf-*
     URL_FILE=`echo $DLIST_ECNSHAME_URL | tr '/' '\n' | grep "." | tail -n 1`
     URL_CON="$DLIST_ECNSHAME_URL_PROT://$DLIST_ECNSHAME_URL"
     mkdir $URL_TMP
***************
*** 1334,1340 ****
          eout "{ecnshame} download of $DLIST_ECNSHAME_URL_PROT://$DLIST_ECNSHAME_URL failed"
     fi
     rm -rf $URL_TMP
!    cd /etc/apf
  else
     rm -f $ECNSHAME_HOSTS
     touch $ECNSHAME_HOSTS
--- 1336,1342 ----
          eout "{ecnshame} download of $DLIST_ECNSHAME_URL_PROT://$DLIST_ECNSHAME_URL failed"
     fi
     rm -rf $URL_TMP
!    cd $INSTALL_PATH
  else
     rm -f $ECNSHAME_HOSTS
     touch $ECNSHAME_HOSTS
***************
*** 1355,1361 ****
  
  glob_allow_download() {
  if [ ! "$GA_URL_PROT" == "" ] && [ ! "$GA_URL" == "" ] && [ "$USE_RGT" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="/etc/apf/.apf-$$"
     rm -rf $URL_TMP
     URL_FILE=`echo $GA_URL | tr '/' '\n' | grep "." | tail -n 1`
     GA_URL_CON="$GA_URL_PROT://$GA_URL"
--- 1357,1363 ----
  
  glob_allow_download() {
  if [ ! "$GA_URL_PROT" == "" ] && [ ! "$GA_URL" == "" ] && [ "$USE_RGT" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="$INSTALL_PATH/.apf-$$"
     rm -rf $URL_TMP
     URL_FILE=`echo $GA_URL | tr '/' '\n' | grep "." | tail -n 1`
     GA_URL_CON="$GA_URL_PROT://$GA_URL"
***************
*** 1370,1376 ****
          eout "{trust} download of $GA_URL_PROT://$GA_URL failed"
     fi
     rm -rf $URL_TMP
!    cd /etc/apf
  else
     rm -f $GALLOW_HOSTS
     touch $GALLOW_HOSTS
--- 1372,1378 ----
          eout "{trust} download of $GA_URL_PROT://$GA_URL failed"
     fi
     rm -rf $URL_TMP
!    cd $INSTALL_PATH
  else
     rm -f $GALLOW_HOSTS
     touch $GALLOW_HOSTS
***************
*** 1380,1386 ****
  
  glob_deny_download() {
  if [ ! "$GD_URL_PROT" == "" ] && [ ! "$GD_URL" == "" ] && [ "$USE_RGT" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="/etc/apf/.apf-$$"
     rm -rf $URL_TMP
     URL_FILE=`echo $GD_URL | tr '/' '\n' | grep "." | tail -n 1`
     GD_URL_CON="$GD_URL_PROT://$GD_URL"
--- 1382,1388 ----
  
  glob_deny_download() {
  if [ ! "$GD_URL_PROT" == "" ] && [ ! "$GD_URL" == "" ] && [ "$USE_RGT" == "1" ] && [ -f "$WGET" ]; then
!    URL_TMP="$INSTALL_PATH/.apf-$$"
     rm -rf $URL_TMP
     URL_FILE=`echo $GD_URL | tr '/' '\n' | grep "." | tail -n 1`
     GD_URL_CON="$GD_URL_PROT://$GD_URL"
***************
*** 1395,1401 ****
          eout "{trust} download of $GD_URL_PROT://$GD_URL failed"
     fi
     rm -rf $URL_TMP
!    cd /etc/apf
  else
     rm -f $GDENY_HOSTS
     touch $GDENY_HOSTS
--- 1397,1403 ----
          eout "{trust} download of $GD_URL_PROT://$GD_URL failed"
     fi
     rm -rf $URL_TMP
!    cd $INSTALL_PATH
  else
     rm -f $GDENY_HOSTS
     touch $GDENY_HOSTS
***************
*** 1481,1489 ****
  
  refresh() {
  	eout "{glob} refreshing trust system rules."
! 	/sbin/iptables-save | grep -E "TDENY|TGDENY" | grep -E '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | awk '{print$4}' | sort -n | uniq  | sort > /etc/apf/internals/refresh.drop.temp
  	$IPT -F TMP_DROP
!         for i in `cat /etc/apf/internals/refresh.drop.temp | grep -v "#"`; do
  		if [ ! "$i" == "" ]; then
          	 $IPT -A TMP_DROP -s $i -d 0/0 -j $ALL_STOP
  	         $IPT -A TMP_DROP -d $i -s 0/0 -j $ALL_STOP
--- 1483,1491 ----
  
  refresh() {
  	eout "{glob} refreshing trust system rules."
! 	$IPTS | grep -E "TDENY|TGDENY" | grep -E '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | awk '{print$4}' | sort -n | uniq  | sort > $INSTALL_PATH/internals/refresh.drop.temp
  	$IPT -F TMP_DROP
!         for i in `cat $INSTALL_PATH/internals/refresh.drop.temp | grep -v "#"`; do
  		if [ ! "$i" == "" ]; then
          	 $IPT -A TMP_DROP -s $i -d 0/0 -j $ALL_STOP
  	         $IPT -A TMP_DROP -d $i -s 0/0 -j $ALL_STOP
***************
*** 1509,1515 ****
  cat<<EOF > $INSTALL_PATH/internals/cron.refresh
  MAILTO=
  SHELL=/bin/bash
! */$SET_REFRESH * * * * root /etc/apf/apf --refresh >> /dev/null 2>&1 &
  EOF
  	chmod 644 $INSTALL_PATH/internals/cron.refresh
  	ln -fs $INSTALL_PATH/internals/cron.refresh /etc/cron.d/refresh.apf
--- 1511,1517 ----
  cat<<EOF > $INSTALL_PATH/internals/cron.refresh
  MAILTO=
  SHELL=/bin/bash
! */$SET_REFRESH * * * * root $INSTALL_PATH/apf --refresh >> /dev/null 2>&1 &
  EOF
  	chmod 644 $INSTALL_PATH/internals/cron.refresh
  	ln -fs $INSTALL_PATH/internals/cron.refresh /etc/cron.d/refresh.apf
diff -crB apf-9.7-1/files/internals/internals.conf apf-9.7-A/files/internals/internals.conf
*** apf-9.7-1/files/internals/internals.conf	2009-03-17 08:37:05.000000000 -0400
--- apf-9.7-A/files/internals/internals.conf	2011-03-01 22:33:09.000000000 -0500
***************
*** 3,23 ****
  ##
  #
  PATH=/sbin:/usr/sbin:/usr/bin:/usr/local/bin:/usr/local/sbin:$PATH ; export PATH
! VER="9.7"
  APPN="apf"
  
  ifconfig=/sbin/ifconfig
! ip=/sbin/ip
! IPT="/sbin/iptables"
! MPB="/sbin/modprobe"
! LSM="/sbin/lsmod"
! RMM="/sbin/rmmod"
! IPTS="/sbin/iptables-save"
! IPTR="/sbin/iptables-restore"
! DIFF="/usr/bin/diff"
! WGET="/usr/bin/wget"
! MD5="/usr/bin/md5sum"
! UNAME="/bin/uname"
  IF="$IFACE_IN"
  IN_IF="$IFACE_IN"
  OUT_IF="$IFACE_OUT"
--- 3,23 ----
  ##
  #
  PATH=/sbin:/usr/sbin:/usr/bin:/usr/local/bin:/usr/local/sbin:$PATH ; export PATH
! VER="9.7-ARCH"
  APPN="apf"
  
  ifconfig=/sbin/ifconfig
! ip=/usr/sbin/ip
! IPT=/usr/sbin/iptables
! MPB=/sbin/modprobe
! LSM=/bin/lsmod
! RMM=/sbin/rmmod
! IPTS=/usr/sbin/iptables-save
! IPTR=/usr/sbin/iptables-restore
! DIFF=/usr/bin/diff
! WGET=/usr/bin/wget
! MD5=/usr/bin/md5sum
! UNAME=/bin/uname
  IF="$IFACE_IN"
  IN_IF="$IFACE_IN"
  OUT_IF="$IFACE_OUT"
diff -crB apf-9.7-1/files/sysctl.rules apf-9.7-A/files/sysctl.rules
*** apf-9.7-1/files/sysctl.rules	2007-06-03 16:23:44.000000000 -0400
--- apf-9.7-A/files/sysctl.rules	2011-03-02 20:46:07.426178096 -0500
***************
*** 9,14 ****
--- 9,16 ----
  echo $SYSCTL_CONNTRACK > /proc/sys/net/ipv4/ip_conntrack_max
  echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
  echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
+ # echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all
+ # echo 1 > /proc/sys/net/netfilter/nf_conntrack_acct
  
  if [ "$SYSCTL_LOGMARTIANS" == "1" ]; then
  	eout "{glob} setting sysctl_logmartians enabled"
diff -crB apf-9.7-1/files/vnet/vnetgen apf-9.7-A/files/vnet/vnetgen
*** apf-9.7-1/files/vnet/vnetgen	2009-03-17 08:37:05.000000000 -0400
--- apf-9.7-A/files/vnet/vnetgen	2011-03-02 04:55:56.000000000 -0500
***************
*** 21,27 ****
  #
  CNF="/etc/apf/conf.apf"
  if [ -f $CNF ]; then
!    source $CNF
  else
     echo "$CNF not found, aborting."
     exit 1
--- 21,27 ----
  #
  CNF="/etc/apf/conf.apf"
  if [ -f $CNF ]; then
!    source $CNF 2>/dev/null
  else
     echo "$CNF not found, aborting."
     exit 1
***************
*** 41,47 ****
  	echo "$ip and $ifconfig not found; aborting"
          exit 1
  elif [ -f "$ip" ]; then
!  for addr in `/sbin/ip addr list | tr '/' ' ' | grep -w inet | grep -w $IF | grep -v 127.0.0.1 | grep -vw $NET | awk '{print$2}'`; do
    if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
--- 41,47 ----
  	echo "$ip and $ifconfig not found; aborting"
          exit 1
  elif [ -f "$ip" ]; then
!  for addr in `$ip addr list | tr '/' ' ' | grep -w inet | grep -w $IF | grep -v 127.0.0.1 | grep -vw $NET | awk '{print$2}'`; do
    if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
***************
*** 49,56 ****
    fi
   done
  elif [ -f "$ifconfig" ]; then
! for iface in `ifconfig | grep -w $IF | awk '{print$1}'`; do
!   for addr in `ifconfig $iface | grep -w inet | tr ':' ' ' | grep -vw $NET | awk '{print$3}'`; do
      if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
--- 49,56 ----
    fi
   done
  elif [ -f "$ifconfig" ]; then
! for iface in `$ifconfig | grep -w $IF | awk '{print$1}'`; do
!   for addr in `$ifconfig $iface | grep -w inet | tr ':' ' ' | grep -vw $NET | awk '{print$3}'`; do
      if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
***************
*** 63,73 ****
  
  if [ "$SET_ADDIFACE" == "1" ]; then
   ## associate a vnet rule for ip's on additional interfaces other than the main
!  for anet in `ifconfig | grep Link | grep -vwE "inet|inet6|lo|$IFACE_IN|$IFACE_OUT" | awk '{print$1}'`; do
    if [ -f "$ip" ]; then
    valtif=`echo $TIF | grep $anet`
     if [ "$valtif" == "" ]; then
!     for addr in `/sbin/ip addr list | tr '/' ' ' | grep -w inet | grep -w $anet | grep -v 127.0.0.1 | grep -vw $NET | awk '{print$2}'`; do
       if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
--- 63,73 ----
  
  if [ "$SET_ADDIFACE" == "1" ]; then
   ## associate a vnet rule for ip's on additional interfaces other than the main
!  for anet in `$ifconfig | grep Link | grep -vwE "inet|inet6|lo|$IFACE_IN|$IFACE_OUT" | awk '{print$1}'`; do
    if [ -f "$ip" ]; then
    valtif=`echo $TIF | grep $anet`
     if [ "$valtif" == "" ]; then
!     for addr in `$ip addr list | tr '/' ' ' | grep -w inet | grep -w $anet | grep -v 127.0.0.1 | grep -vw $NET | awk '{print$2}'`; do
       if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
***************
*** 76,85 ****
      done
     fi
    elif [ -f "$ifconfig" ]; then
!    for iface in `ifconfig | grep -w $anet | awk '{print$1}'`; do
      valtif=`echo $TIF | grep $anet`
      if [ "$valtif" == "" ]; then 
!      for addr in `ifconfig $iface | grep -w inet | tr ':' ' ' | grep -vw $NET | awk '{print$3}'`; do
        if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
--- 76,85 ----
      done
     fi
    elif [ -f "$ifconfig" ]; then
!    for iface in `$ifconfig | grep -w $anet | awk '{print$1}'`; do
      valtif=`echo $TIF | grep $anet`
      if [ "$valtif" == "" ]; then 
!      for addr in `$ifconfig $iface | grep -w inet | tr ':' ' ' | grep -vw $NET | awk '{print$3}'`; do
        if [ ! -f "$INSTALL_PATH/vnet/$addr.rules" ]; then
          touch $INSTALL_PATH/vnet/$addr.rules
          chmod 600 $INSTALL_PATH/vnet/$addr.rules
