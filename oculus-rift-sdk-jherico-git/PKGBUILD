pkgname=oculus-rift-sdk-jherico-git
pkgver=124.2c7932e
pkgrel=1
_branch=stable
pkgdesc="Oculus SDK with additional community supported features and bug-fixes. Installs 32 bit + 64 bit static + shared library + headers + Tuscany demo in /usr/share/OculusTuscanyDemo + config utility in /usr/share/"
arch=('x86_64')
url="https://github.com/jherico/OculusSDK"
license=('custom')
depends=('oculus-udev')
makedepends=('git' 'patchelf' 'wget') #TODO: Fix cmake to set rpath right first time
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
source=("git+https://github.com/jherico/OculusSDK.git#branch=$_branch"
  'libovr.pc')

pkgver() {
  cd "$srcdir/OculusSDK"

   echo $(git rev-list --count ${_branch}).$(git rev-parse --short ${_branch})
}

prepare() {
  cd "$srcdir/"
  wget -r -np --no-host-directories --cut-dirs=2 http://haagch.frickel.club/files/oculus/OculusConfigUtil/ # It's directly binaries from upstream. Look it up, if you like
  cd OculusConfigUtil
  chmod +x OculusConfigUtil_*
  rm index.html
}

build() {
  cd "$srcdir/OculusSDK"

  mkdir -p "$srcdir/lib32" "$srcdir/lib64" "$srcdir/share"

  msg "Building 64 bit static library and demo"
  cmake -DCMAKE_PREFIX=/usr/ .
  make
  install output/libOculusVR.a "$srcdir/lib64"
  install output/libOVR_C.so "$srcdir/lib64"
  patchelf --set-rpath /usr/lib/ output/OculusWorldDemo
  install output/OculusWorldDemo "$srcdir/share"

  git clean -xfd

  msg "Building 64 bit shared library"
  sed -i "s/STATIC/SHARED/g" LibOVR/CMakeLists.txt
  cmake -DCMAKE_PREFIX=/usr/ -DOCULUS_BUILD_SAMPLES=0 .
  make
  install output/libOculusVR.so "$srcdir/lib64"

  git clean -xfd

  msg "Building 32 bit static library" #and demo"
  git checkout LibOVR/CMakeLists.txt
  CC="gcc -m32" CXX="g++ -m32" cmake -DCMAKE_PREFIX=/usr/ -DOCULUS_BUILD_SAMPLES=0 .
  make
  install output/libOculusVR.a "$srcdir/lib32"
  install output/libOVR_C.so "$srcdir/lib32"
  #patchelf --set-rpath /usr/lib32/ output/OculusWorldDemo
#  install output/OculusWorldDemo "$srcdir/share/OculusWorldDemo32"

  git clean -xfd

  msg "Building 64 bit shared library"
  sed -i "s/STATIC/SHARED/g" LibOVR/CMakeLists.txt
  CC="gcc -m32" CXX="g++ -m32" cmake -DCMAKE_PREFIX=/usr/ -DOCULUS_BUILD_SAMPLES=0 .
  make
  install output/libOculusVR.so "$srcdir/lib32"
 
}

package() {
  cd "$srcdir/OculusSDK"
  oculusv=$(cat LibOVR/Include/OVRVersion.h | sed -n 's/.*#define OVR_VERSION_STRING "\(.*\)"/\1/p')

  #make DESTDIR="$pkgdir/" install
  install -d "$pkgdir/usr/lib"
  install -d "$pkgdir/usr/lib32"
  install -d "$pkgdir/usr/include/ovr-$oculusv/ovr"
  install -d "$pkgdir/usr/share/"
  install -d "$pkgdir/usr/lib/pkgconfig/"

  install "$srcdir/libovr.pc" "$pkgdir/usr/lib/pkgconfig/"
  sed -i "s/@PACKAGE_VERSION@/$oculusv/g" "$pkgdir/usr/lib/pkgconfig/libovr.pc"

  cp -ra "Samples/OculusWorldDemo/Assets/Tuscany/" "$pkgdir/usr/share/OculusTuscanyDemo"
  install "$srcdir/share/OculusWorldDemo" "$pkgdir/usr/share/OculusTuscanyDemo/OculusWorldDemo64"
 # install "$srcdir/share/OculusWorldDemo32" "$pkgdir/usr/share/OculusTuscanyDemo/OculusWorldDemo32"

  cp -ra "$srcdir/OculusConfigUtil" "$pkgdir/usr/share/"

  install "$srcdir/lib32"/* "$pkgdir/usr/lib32/"
  install "$srcdir/lib64"/* "$pkgdir/usr/lib/"

  cp -ra "LibOVR/Include"/* "$pkgdir/usr/include/ovr-$oculusv/ovr/"
  cp -ra "LibOVR/Src" "$pkgdir/usr/include/ovr-$oculusv"
}

# vim:set ts=2 sw=2 et:
md5sums=('SKIP'
         'e300cc1d2537036cc367adb6490d4f85')
