diff -Nur gmsh-2.7.0-source.orig/Geo/OCC_Connect.cpp gmsh-2.7.0-source/Geo/OCC_Connect.cpp
--- gmsh-2.7.0-source.orig/Geo/OCC_Connect.cpp	2013-03-08 19:06:44.000000000 +0100
+++ gmsh-2.7.0-source/Geo/OCC_Connect.cpp	2013-05-07 01:02:45.736918548 +0200
@@ -41,7 +41,6 @@
 #include <BRep_Tool.hxx>
 #include <BRepClass_FaceClassifier.hxx>
 
-#include <IntTools_Context.hxx>
 
 #include <BRepExtrema_DistShapeShape.hxx>
 #include <BRepOffsetAPI_NormalProjection.hxx>
diff -Nur gmsh-2.7.0-source.orig/Geo/OCCEdge.cpp gmsh-2.7.0-source/Geo/OCCEdge.cpp
--- gmsh-2.7.0-source.orig/Geo/OCCEdge.cpp	2013-03-08 19:06:44.000000000 +0100
+++ gmsh-2.7.0-source/Geo/OCCEdge.cpp	2013-05-07 00:39:49.310127365 +0200
@@ -23,7 +23,7 @@
 #include <Geom_Circle.hxx>
 #include <Geom_Line.hxx>
 #include <Geom_Conic.hxx>
-#include <BOPTools_Tools.hxx>
+#include <BOPTools_AlgoTools.hxx>
 
 OCCEdge::OCCEdge(GModel *m, TopoDS_Edge edge, int num, GVertex *v1, GVertex *v2)
   : GEdge(m, num, v1, v2), c(edge), trimmed(0)
@@ -327,7 +327,7 @@
     _replacement=E;
   }
   else {
-    BOPTools_Tools::MakeSplitEdge(aEx, aVR1, t1, aVR2, t2, _replacement);
+    BOPTools_AlgoTools::MakeSplitEdge(aEx, aVR1, t1, aVR2, t2, _replacement);
   }
   TopoDS_Edge temp = c;
   c = _replacement;
diff -Nur gmsh-2.7.0-source.orig/Geo/OCCFace.cpp gmsh-2.7.0-source/Geo/OCCFace.cpp
--- gmsh-2.7.0-source.orig/Geo/OCCFace.cpp	2013-03-08 19:06:44.000000000 +0100
+++ gmsh-2.7.0-source/Geo/OCCFace.cpp	2013-05-07 01:01:00.326909013 +0200
@@ -26,9 +26,10 @@
 #include <Geom_Plane.hxx>
 #include <gp_Pln.hxx>
 #include <BRepMesh_FastDiscret.hxx>
-#include <IntTools_Context.hxx>
-#include <BOPTools_Tools2D.hxx>
-#include <BOPTools_Tools3D.hxx>
+#include <BOPInt_Context.hxx>
+#include <BOPTools_AlgoTools.hxx>
+#include <BOPTools_AlgoTools2D.hxx>
+#include <BOPTools_AlgoTools3D.hxx>
 
 OCCFace::OCCFace(GModel *m, TopoDS_Face _s, int num)
   : GFace(m, num), s(_s)
@@ -420,7 +421,7 @@
 void OCCFace::replaceEdgesInternal(std::list<GEdge*> &new_edges)
 {
 #if defined(OCC_VERSION_HEX) && OCC_VERSION_HEX >= 0x060503
-  Handle(IntTools_Context) myContext = new IntTools_Context;
+  Handle(BOPInt_Context) myContext = new BOPInt_Context;
 #else
   IntTools_Context myContext;
 #endif
@@ -483,7 +484,7 @@
 	      continue;
 	    }
 	    else{
-	      aTx=BOPTools_Tools2D::IntermediatePoint(aT1, aT2);
+	      aTx=BOPTools_AlgoTools2D::IntermediatePoint(aT1, aT2);
 	      gp_Pnt2d aP2D;
 	      aC2D->D0(aTx, aP2D);
 	      aUx=aP2D.X();
@@ -495,11 +496,11 @@
 	    }
 	  }
 	}
-	BOPTools_Tools2D::BuildPCurveForEdgeOnFace(aER, copy_of_s_forward);
+	BOPTools_AlgoTools2D::BuildPCurveForEdgeOnFace(aER, copy_of_s_forward);
 
 	// orient image
 	Standard_Boolean bIsToReverse =
-          BOPTools_Tools3D::IsSplitToReverse1(aER, aE, myContext);
+          BOPTools_AlgoTools::IsSplitToReverse(aER, aE, myContext);
 	if (bIsToReverse) {
 	  aER.Reverse();
 	}
