diff -Nur gmsh-2.5.0-source.orig/CMakeLists.txt gmsh-2.5.0-source/CMakeLists.txt
--- gmsh-2.5.0-source.orig/CMakeLists.txt	2012-04-25 14:24:39.586251494 +0200
+++ gmsh-2.5.0-source/CMakeLists.txt	2012-04-25 14:28:09.425289058 +0200
@@ -221,14 +221,14 @@
       set_config_option(HAVE_BLAS "Blas(IntelMKL)")
       set_config_option(HAVE_LAPACK "Lapack(IntelMKL)")
     else(LAPACK_LIBRARIES)
-      # on Linux also try to find ATLAS without a Fortran compiler,
+      # on Linux also try to find lapack without a Fortran compiler,
       # because cmake ships with a buggy FindBLAS e.g. on Ubuntu Lucid
       # Lynx
-      set(ATLAS_LIBS_REQUIRED lapack f77blas cblas atlas)
-      find_all_libraries(LAPACK_LIBRARIES ATLAS_LIBS_REQUIRED "" "")
+      set(DIST_LIBS_REQUIRED lapack blas dl)
+      find_all_libraries(LAPACK_LIBRARIES DIST_LIBS_REQUIRED "" "")
       if(LAPACK_LIBRARIES)
-        set_config_option(HAVE_BLAS "Blas(ATLAS)")
-        set_config_option(HAVE_LAPACK "Lapack(ATLAS)")
+         set_config_option(HAVE_BLAS "Blas(DIST)")
+         set_config_option(HAVE_LAPACK "Lapack(DIST)")
       endif(LAPACK_LIBRARIES)
     endif(LAPACK_LIBRARIES)
   elseif(${CMAKE_SYSTEM_NAME} MATCHES "SunOS")
diff -Nur gmsh-2.5.0-source.orig/contrib/bamg/bamglib/Mesh2.cpp gmsh-2.5.0-source/contrib/bamg/bamglib/Mesh2.cpp
--- gmsh-2.5.0-source.orig/contrib/bamg/bamglib/Mesh2.cpp	2012-04-25 14:24:39.579584858 +0200
+++ gmsh-2.5.0-source/contrib/bamg/bamglib/Mesh2.cpp	2012-04-25 14:28:40.451813420 +0200
@@ -3201,7 +3201,7 @@
   if (inbvx) {
     vertices=new Vertex[nbvx];
     assert(vertices);
-    ordre=new (Vertex* [nbvx]);
+    ordre=new Vertex* [nbvx];
     assert(ordre);
     triangles=new Triangle[nbtx];
     assert(triangles);}
@@ -3977,7 +3977,7 @@
 Edge** Triangles::MakeGeometricalEdgeToEdge()
  {
   assert(Gh.nbe);
-  Edge **e= new (Edge* [Gh.nbe]);
+  Edge **e= new Edge* [Gh.nbe];
   
   Int4 i;
   for ( i=0;i<Gh.nbe ; i++)
diff -Nur gmsh-2.5.0-source.orig/contrib/bamg/bamglib/MeshRead.cpp gmsh-2.5.0-source/contrib/bamg/bamglib/MeshRead.cpp
--- gmsh-2.5.0-source.orig/contrib/bamg/bamglib/MeshRead.cpp	2012-04-25 14:24:39.579584858 +0200
+++ gmsh-2.5.0-source/contrib/bamg/bamglib/MeshRead.cpp	2012-04-25 14:28:40.455146738 +0200
@@ -119,7 +119,7 @@
 	   nbvx=nbv;
 	   vertices=new Vertex[nbvx];
 	   assert(vertices);
-	   ordre=new (Vertex* [nbvx]);
+	   ordre=new Vertex* [nbvx];
 	   assert(ordre);
 	   
 	   nbiv = nbv;
@@ -399,7 +399,7 @@
      triangles =new Triangle[nbtx];
      assert(triangles);
      vertices=new Vertex[nbvx];
-     ordre=new (Vertex* [nbvx]);
+     ordre=new Vertex* [nbvx];
      
      for (     i=0;i<nbt;i++)
        {
@@ -448,7 +448,7 @@
   triangles =new Triangle[nbtx];
   assert(triangles);
   vertices=new Vertex[nbvx];
-  ordre=new (Vertex* [nbvx]);
+  ordre=new Vertex* [nbvx];
   
 
   Int4 i;
@@ -547,7 +547,7 @@
   triangles =new Triangle[nbtx];
   assert(triangles);
   vertices=new Vertex[nbvx];
-  ordre=new (Vertex* [nbvx]);
+  ordre=new Vertex* [nbvx];
 
 
  f_in >> l;
@@ -711,7 +711,7 @@
   triangles =new Triangle[nbtx];
   assert(triangles);
   vertices=new Vertex[nbvx];
-  ordre=new (Vertex* [nbvx]);
+  ordre=new Vertex* [nbvx];
   Int4 k=0;
   
   for ( i=0;i<ne;i++) 
@@ -774,7 +774,7 @@
      triangles =new Triangle[nbtx];
      assert(triangles);
      vertices=new Vertex[nbvx];
-     ordre=new (Vertex* [nbvx]);
+     ordre=new Vertex* [nbvx];
       edges = new Edge[nbe];
      for ( i=0;i<nbv;i++)
 	{
@@ -822,7 +822,7 @@
      triangles =new Triangle[nbtx];
      assert(triangles);
      vertices=new Vertex[nbvx];
-     ordre=new (Vertex* [nbvx]);
+     ordre=new Vertex* [nbvx];
      Int4 j;
       for ( i=0;i<nbv;i++)
 	{
diff -Nur gmsh-2.5.0-source.orig/Graphics/gl2png.h gmsh-2.5.0-source/Graphics/gl2png.h
--- gmsh-2.5.0-source.orig/Graphics/gl2png.h	2012-04-25 14:24:39.602918084 +0200
+++ gmsh-2.5.0-source/Graphics/gl2png.h	2012-04-25 14:28:18.061916113 +0200
@@ -7,6 +7,7 @@
 #define _GL2PNG_H_
 
 #include <stdio.h>
+#include <zlib.h>
 #include "PixelBuffer.h"
 
 void create_png(FILE *outfile, PixelBuffer *buffer, int quality);
