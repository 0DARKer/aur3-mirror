# Contributor: Cian Mc Govern <cian@cianmcgovern.com>
# Contributor: Roland Singer <roland@manjaro.org>
# Contributor: TheBenj <thebenj88 *AT* gmail *DOT* com>
# Contributor: Philipp 'TamCore' B. <philipp [at] tamcore [dot] eu>
# Maintainer: William Overstreet <william.ab.overstreet@gmail.com>

pkgname=crossover
pkgver=14.1.1
pkgrel=1
_pkgdebrel=1
pkgdesc="Run Windows Programs on Linux"
arch=('i686' 'x86_64')
url="http://www.codeweavers.com"
license=('custom')
changelog="CHANGELOG"
makedepends=('tar')
install=${pkgname}.install
replaces=('crossover-games' 'crossover-pro' 'crossover-standard')

source=("http://media.codeweavers.com/pub/${pkgname}/cxlinux/demo/${pkgname}_${pkgver}-${_pkgdebrel}.deb")
sha256sums=('d41ac71bbbe0ac00e013ed6f563687e97d0e23fa03468f47a9bfd7346776454a')

depends=( 
    'python2' 'glibc>=2.11' 'libice' 'libsm' 
    'libx11' 'libxext' 'libxi' 'freetype2' 
    'libpng' 'zlib' 'lcms2' 'alsa-lib' 
    'libgl' 'libxcursor' 'libxrandr' 
    'desktop-file-utils' 'gstreamer0.10' 'mpg123'
    'libgphoto2' 'libexif' 'openal' 'libcl'
    'pygtk' 'python2-dbus' 'libxinerama' 'sane'
    'gnutls' 'libcups' 'libxcomposite' 'libxslt'
    'v4l-utils' 'gstreamer0.10-base' 'libxxf86dga'
    'libxxf86vm' 'glu'
)

optdepends=(
    'nss-mdns: Host name resolution via mDNS'
    'unzip: required to install Guild Wars, automatic installer extraction'
    'gsm: Support for GSM speech codecs'
)

depends_x86_64=(
    'python2' 'lib32-glibc>=2.11' 'lib32-libice' 'lib32-libsm'
    'lib32-libx11' 'lib32-libxext' 'lib32-libxi' 'lib32-freetype2' 
    'lib32-libpng' 'lib32-zlib' 'lib32-lcms2' 'lib32-alsa-lib' 
    'lib32-libgl' 'lib32-libxcursor' 'lib32-libxrandr' 
    'desktop-file-utils' 'lib32-gstreamer0.10' 'lib32-mpg123' 
    'lib32-libgphoto2' 'lib32-libexif' 'lib32-openal' 'lib32-libcl'
    'pygtk' 'python2-dbus' 'lib32-libxinerama' 'lib32-sane'
    'lib32-gnutls' 'lib32-libcups' 'lib32-libxcomposite' 'lib32-libxslt'
    'lib32-v4l-utils' 'lib32-gstreamer0.10-base' 'lib32-libxxf86dga'
    'lib32-libxxf86vm' 'lib32-glu'
)

optdepends_x86_64=(
    'lib32-nss-mdns: (aur) host name resolution via mDNS'
    'lib32-gsm: (aur) Support for GSM speech codecs'
)


#yaourt does not support arrays for specific architectures yet.
if [[ "${CARCH}" = 'x86_64' ]]; then
    #depends_x86_64=(
    depends+=(
        'python2' 'lib32-glibc>=2.11' 'lib32-libice' 'lib32-libsm'
        'lib32-libx11' 'lib32-libxext' 'lib32-libxi' 'lib32-freetype2' 
        'lib32-libpng' 'lib32-zlib' 'lib32-lcms2' 'lib32-alsa-lib' 
        'lib32-libgl' 'lib32-libxcursor' 'lib32-libxrandr' 
        'desktop-file-utils' 'lib32-gstreamer0.10' 'lib32-mpg123' 
        'lib32-libgphoto2' 'lib32-libexif' 'lib32-openal' 'lib32-libcl'
        'pygtk' 'python2-dbus' 'lib32-libxinerama' 'lib32-sane'
        'lib32-gnutls' 'lib32-libcups' 'lib32-libxcomposite' 'lib32-libxslt'
        'lib32-v4l-utils' 'lib32-gstreamer0.10-base' 'lib32-libxxf86dga'
        'lib32-libxxf86vm' 'lib32-glu'
    )

    #optdepends_x86_64=(
    optdepends+=(
        'lib32-nss-mdns: (aur) host name resolution via mDNS'
        'lib32-gsm: (aur) Support for GSM speech codecs'
    )
fi
package() {
    cd ${srcdir}

    ar -p crossover_${pkgver}-${_pkgdebrel}.deb data.tar.gz | tar zxf - -C "${pkgdir}" || return 1
    if [[ "${CARCH}" = 'i686' ]]; then
        rm -f ${pkgdir}/opt/cxoffice/lib/nsplugin-linux64.so
    fi

    #remove symlink and create real directory
    rm ${pkgdir}/opt/cxoffice/doc 
    mkdir ${pkgdir}/opt/cxoffice/doc 

    mv ${pkgdir}/usr/share/doc/crossover/* ${pkgdir}/opt/cxoffice/doc

    gzip -d "${pkgdir}/opt/cxoffice/doc/license.txt.gz"
    rm -r "${pkgdir}/usr"
    sed -e 's!;;"MenuRoot" = ""!"MenuRoot" = "Windows Games"!' \
        -e 's!;;"MenuStrip" = ""!"MenuStrip" = "1"!' \
        -i ${pkgdir}/opt/cxoffice/share/crossover/bottle_data/cxbottle.conf

    mkdir -p ${pkgdir}/usr/bin
    ln -s /opt/cxoffice/bin/crossover ${pkgdir}/usr/bin/crossover
    ln -s /opt/cxoffice/bin/cxsetup ${pkgdir}/usr/bin/cxsetup

    mkdir -p ${pkgdir}/etc/profile.d
    echo '[ -d /opt/cxoffice/bin ] && export PATH="${PATH}:/opt/cxoffice/bin"' > ${pkgdir}/etc/profile.d/cxoffice.sh
    echo '[ -d /opt/cxoffice/bin ] && setenv PATH ${PATH}:/opt/cxoffice/bin' > ${pkgdir}/etc/profile.d/cxoffice.csh
    chmod 755 ${pkgdir}/etc/profile.d/cxoffice.sh ${pkgdir}/etc/profile.d/cxoffice.csh

    # Fix Auto update error
    install -m 644 -D ${pkgdir}/opt/cxoffice/share/crossover/data/cxoffice.conf ${pkgdir}/opt/cxoffice/etc/cxoffice.conf
    sed -e 's!;;"PrivateShortcutDirs" = ""!"PrivateShortcutDirs" = "${HOME}/bin:${CX_ROOT}/bin"!' \
        -e 's!;;"PrivateLinuxNSPluginDirs" = ""!"PrivateLinuxNSPluginDirs" = "${MOZ_PLUGIN_PATH}"!' \
        -e 's!;;"PrivateLinux64NSPluginDirs" = ""!"PrivateLinux64NSPluginDirs" = "${MOZ_PLUGIN_PATH}"!' \
        -e 's!;;"ProductPackage" = ""!"ProductPackage" = "Converted from .deb to pacman."!' \
        -i ${pkgdir}/opt/cxoffice/etc/cxoffice.conf

    # Changelog for pacman -Qc
    gzip -dfc ${pkgdir}/opt/cxoffice/doc/changelog.Debian.gz > ${startdir}/CHANGELOG

    # place license in correct directory
    install -D -m644 ${pkgdir}/opt/cxoffice/doc/license.txt ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE
}
