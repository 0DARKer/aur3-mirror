# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>

## OPTIONS: 0=off 1=on ##

_use_qt4=0
_use_qt5=0
_use_gtk=0 #Fail build if active
_use_cli=0

#########################

[ "${_use_qt4}" = "1" ] && use_qt5=0
[ "${_use_qt5}" = "1" ] && use_qt4=0

[ "${_use_qt4}" = "1" -o "${_use_qt5}" = "1" -o "${_use_gtk}" = "1" -o "${_use_cli}" = "1" ] && _use+="avidemux-core-git "
[ "${_use_qt4}" = "1" ] && _use+="avidemux-qt4-git "
[ "${_use_qt5}" = "1" ] && _use+="avidemux-qt5-git "
[ "${_use_gtk}" = "1" ] && _use+="avidemux-gtk-git "
[ "${_use_cli}" = "1" ] && _use+="avidemux-cli-git "

if [ "${_use_qt4}" = "1" -o "${_use_qt5}" = "1" -o "${_use_gtk}" = "1" -o "${_use_cli}" = "1" ]; then
  makedepends=('git' 'cmake' 'subversion' 'yasm' 'aften' 'dcaenc' 'faac' 'faad2' 'fribidi' 'jack2' 'lame' 'libdca' 'libpulse' 'libva' 'libvpx' 'libx264' 'opencore-amr' 'twolame' 'xvidcore' 'x265' 'sqlite')
  [ "${_use_qt4}" = "1" ] && makedepends+=('qt4' 'glu')
  [ "${_use_qt5}" = "1" ] && makedepends+=('qt5-script' 'libxv')
  [ "${_use_gtk}" = "1" ] && makedepends+=('gtk3')
else
  warning "Need choice, at least, one GUI/Frontend, Please edit options in the PKGBUILD. if not build a EMPTY package"
fi

pkgbase=avidemux-git
pkgname=('avidemux-git' $_use)
pkgver=2.6.8.150323.6424f733886
pkgrel=1
pkgdesc="A graphical/cli tool to edit video (filter/re-encode/split). (GIT version) (SPLIT PKGBUILD)"
url="http://www.avidemux.org/"
license=('GPL2')
arch=('i686' 'x86_64')
source=('avidemux::git+https://github.com/mean00/avidemux2.git')
sha1sums=('SKIP')
options=('!makeflags')
install=avidemux-git.install

pkgver() {
  if [ "${_use_qt4}" = "1" -o "${_use_qt5}" = "1" -o "${_use_gtk}" = "1" -o "${_use_cli}" = "1" ]; then
    cd avidemux
    _ver="$(cat cmake/avidemuxVersion.cmake | grep -e VERSION_MAJOR -e VERSION_MINOR -e VERSION_PATCH | head -n3 | cut -d '"' -f2)"
    echo "$(echo ${_ver} | tr ' ' .).$(date -u +%g%m%d).$(git log --format=oneline -1 | head -c 11)"
  else
    echo "EMPTY"
  fi
}

prepare() {
  if [ "${_use_qt4}" = "1" -o "${_use_qt5}" = "1" -o "${_use_gtk}" = "1" -o "${_use_cli}" = "1" ]; then
    [ "${_use_qt4}" = "1" ] && mkdir -p build_qt4{,_plugins}
    [ "${_use_qt5}" = "1" ] && mkdir -p build_qt5{,_plugins}
    [ "${_use_gtk}" = "1" ] && mkdir -p build_gtk{,_plugins}
    [ "${_use_cli}" = "1" ] && mkdir -p build_cli{,_plugins}
    mkdir -p build_core{,_plugins,_plugins_settings}

    # http://avidemux.org/smuf/index.php/topic,16302.msg71463.html#msg71463
    sed 's|hf_hflip|vf_hflip|g' -i avidemux/avidemux_plugins/ADM_videoFilters6/horizontalFlip/CMakeLists.txt
  fi
}

build() {
  if [ "${_use_qt4}" = "1" -o "${_use_qt5}" = "1" -o "${_use_gtk}" = "1" -o "${_use_cli}" = "1" ]; then
#-Common-------------------------------------------------------------
msg2 "Build Core Libs"
    cd "${srcdir}/build_core"
    cmake ../avidemux/avidemux_core \
      -DFAKEROOT="${srcdir}/fakeroot" \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_BUILD_TYPE=Release
    make VERBOSE=""
    make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install

    msg2 "Build Common Plugins"
    cd "${srcdir}/build_core_plugins"
    cmake ../avidemux/avidemux_plugins \
      -DFAKEROOT="${srcdir}/fakeroot" \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DAVIDEMUX_SOURCE_DIR="${srcdir}/avidemux" \
      -DPLUGIN_UI=COMMON \
      -DCMAKE_BUILD_TYPE=Release \
      -DQTSCRIPT=OFF
    make -j$(nproc) VERBOSE=""
    make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
#-Qt4----------------------------------------------------------------
    if [ "${_use_qt4}" = "1" ]; then
      msg2 "Build Qt4 GUI"
      cd "${srcdir}/build_qt4"
      cmake ../avidemux/avidemux/qt4 \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release
      make -j$(nproc) VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install

      msg2 "Build Qt4 GUI Plugins"
      cd "${srcdir}/build_qt4_plugins"
      cmake ../avidemux/avidemux_plugins \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DAVIDEMUX_SOURCE_DIR="${srcdir}/avidemux" \
        -DPLUGIN_UI=QT4 \
        -DCMAKE_BUILD_TYPE=Release
      make -j$(nproc) VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi
#-Qt5---------------------------------------------------------------
    if [ "${_use_qt5}" = "1" ]; then
      msg2 "Build Qt5 GUI"
      cd "${srcdir}/build_qt5"
      cmake ../avidemux/avidemux/qt4 \
        -DENABLE_QT5=ON \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release
      make -j$(nproc) VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install

      msg2 "Build Qt5 GUI Plugins"
      cd ${srcdir}/build_qt5_plugins
      cmake "../avidemux/avidemux_plugins" \
        -DENABLE_QT5=ON \
        -DQT_LRELEASE_EXECUTABLE=/usr/bin/lrelease-qt5 \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DAVIDEMUX_SOURCE_DIR="${srcdir}/avidemux" \
        -DPLUGIN_UI=QT4 \
        -DCMAKE_BUILD_TYPE=Release
      make -j$(nproc) VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi
#-GTK---------------------------------------------------------------
    if [ "${_use_gtk}" = "1" ]; then
      msg2 "Build Gtk GUI"
      cd "${srcdir}/build_gtk"
      cmake ../avidemux/avidemux/gtk \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release
      make -j$(nproc) VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install

      msg2 "Build Gtk GUI plugins"
      cd ${srcdir}/build_gtk_plugins
      cmake "../avidemux/avidemux_plugins" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DAVIDEMUX_SOURCE_DIR="${srcdir}/avidemux" \
        -DPLUGIN_UI=GTK \
        -DCMAKE_BUILD_TYPE=Release
      make -j$(nproc) VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi
#-CLI---------------------------------------------------------------
    if [ "${_use_cli}" = "1" ]; then
      msg2 "Build CLI frontend"
      cd "${srcdir}/build_cli"
      cmake ../avidemux/avidemux/cli \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release
      make -j$(nproc) VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install

      msg2 "Build CLI plugins"
      cd "${srcdir}/build_cli_plugins"
      cmake ../avidemux/avidemux_plugins \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DAVIDEMUX_SOURCE_DIR="${srcdir}/avidemux" \
        -DPLUGIN_UI=CLI \
        -DCMAKE_BUILD_TYPE=Release
      make -j$(nproc) VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi
#-Settings----------------------------------------------------------
    msg2 "Build Settings"
    cd "${srcdir}/build_core_plugins_settings"
    cmake ../avidemux/avidemux_plugins \
      -DFAKEROOT="${srcdir}/fakeroot" \
      -DCMAKE_INSTALL_PREFIX=/usr  \
      -DAVIDEMUX_SOURCE_DIR="${srcdir}/avidemux" \
      -DPLUGIN_UI=SETTINGS \
      -DCMAKE_BUILD_TYPE=Release
    make -j$(nproc) VERBOSE=""
    make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
  fi
}

package_avidemux-git() {
  arch=('any')
  pkgdesc="A graphical/cli tool to edit video (filter/re-encode/split). (GIT version)"
  makedepends=()
  conflicts=()
  makepkgopt=()
}

package_avidemux-core-git() {
  depends=('aften' 'dcaenc' 'faac' 'faad2' 'fribidi' 'jack2' 'lame' 'libdca' 'libpulse' 'libva' 'libvpx'  'opencore-amr' 'twolame' 'xvidcore' 'sqlite')
  [ -f "${srcdir}/fakeroot/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x264_other.so" ] && depends+=('libx264')
  [ -f "${srcdir}/fakeroot/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x265_other.so" ] && depends+=('x265')
  pkgdesc="Core libs for Avidemux. (GIT version)"
  provides=("avidemux-core-git=${pkgver}" 'avidemux-core')
  conflicts=('avidemux-cli' 'avidemux-gtk' 'avidemux-qt')
  optdepends=('avidemux-qt4-git: a Qt4 GUI for Avidemux. (GIT Version) (install from "avidemux-git" package)'
              'avidemux-qt5-git: a Qt5 GUI for Avidemux. (GIT Version) (install from "avidemux-git" package)'
              'avidemux-gtk-git: a Gtk3 GUI for Avidemux. (GIT Version) (install from "avidemux-git" package)'
              'avidemux-cli-git: a CLI frontend for Avidemux. (GIT Version) (install from "avidemux-git" package)'
              'wine: AVSload')

  make -C build_core VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_core_plugins VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_core_plugins_settings VERBOSE="" DESTDIR="${pkgdir}" install

  for i in 4 5; do
    if [ -f fakeroot/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x26${i}_other.so ]; then
      install -Dm755 fakeroot/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x26${i}_other.so "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x26${i}_other.so"
    fi
  done
}

package_avidemux-qt4-git() {
  depends=("avidemux-core-git=${pkgver}" 'qt4' 'glu' 'desktop-file-utils' 'libx264' 'x265')
  pkgdesc="Qt4 GUI for Avidemux. (GIT version)"
  provides=("avidemux-qt4-git=${pkgver}")
  conflicts=('avidemux-qt4')
  install=avidemux-git.install

  make -C build_qt4 VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_qt4_plugins VERBOSE="" DESTDIR="${pkgdir}" install

  install -Dm644 avidemux/avidemux2.desktop "${pkgdir}/usr/share/applications/avidemux-qt4.desktop"
  sed -e 's|Icon=avidemux|Icon=avidemux-qt4|g' \
      -e 's|Exec=avidemux2_gtk|Exec=avidemux3_qt4|g' \
      -e 's|Name=avidemux2|Name=Avidemux Qt4|' \
      -i "${pkgdir}/usr/share/applications/avidemux-qt4.desktop"
  install -Dm644 avidemux/avidemux_icon.png "${pkgdir}/usr/share/pixmaps/avidemux-qt4.png"
}

package_avidemux-qt5-git() {
  depends=("avidemux-core-git=${pkgver}" 'qt5-script' 'libxv' 'desktop-file-utils' 'libx264' 'x265')
  pkgdesc="Qt5 GUI for Avidemux. (GIT version)"
  provides=("avidemux-qt5-git=${pkgver}")
  conflicts=('avidemux-qt5')
  install=avidemux-git.install

  make -C build_qt5 VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_qt5_plugins VERBOSE="" DESTDIR="${pkgdir}" install

  install -Dm644 avidemux/avidemux2.desktop "${pkgdir}/usr/share/applications/avidemux-qt5.desktop"
  sed -e 's|Icon=avidemux|Icon=avidemux-qt5|g' \
      -e 's|Exec=avidemux2_gtk|Exec=avidemux3_qt5|g' \
      -e 's|Name=avidemux2|Name=Avidemux Qt5|' \
      -i "${pkgdir}/usr/share/applications/avidemux-qt5.desktop"
  install -Dm644 avidemux/avidemux_icon.png "${pkgdir}/usr/share/pixmaps/avidemux-qt5.png"
}

package_avidemux-gtk-git() {
  depends=("avidemux-core-git=${pkgver}" 'gtk3' 'libxv' 'sdl' 'desktop-file-utils')
  pkgdesc="Gtk3 GUI for Avidemux. (GIT version)"
  provides=("avidemux-gtk-git=${pkgver}" 'avidemux-gtk')
  conflicts=('avidemux-gtk')
  install=avidemux-git.install

  make -C build_gtk VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_gtk_plugins VERBOSE="" DESTDIR="${pkgdir}" install

  install -Dm644 avidemux/avidemux2.desktop "${pkgdir}/usr/share/applications/avidemux-gtk.desktop"
  sed -e 's|Icon=avidemux|Icon=avidemux-gtk|g' \
      -e 's|Exec=avidemux2_gtk|Exec=avidemux3_gtk|g' \
      -e 's|Name=avidemux2|Name=Avidemux Gtk|' \
      -i "${pkgdir}/usr/share/applications/avidemux-gtk.desktop"
  install -Dm644 avidemux/avidemux_icon.png "${pkgdir}/usr/share/pixmaps/avidemux-gtk.png"

  rm -fr "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders/"
}

package_avidemux-cli-git() {
  depends=("avidemux-core-git=${pkgver}")
  pkgdesc="CLI frontend for Avidemux. (GIT version)"
  provides=("avidemux-cli-git=${pkgver}" 'avidemux-cli')
  conflicts=('avidemux-cli')

  make -C build_cli VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_cli_plugins VERBOSE="" DESTDIR="${pkgdir}" install

  rm -fr "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders/"
}
