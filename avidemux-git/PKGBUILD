# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>

## OPTIONS: 0=off 1=on ##

_use_qt4=0
_use_gtk3=0 #Fail build if active
_use_cli=0

#########################

[ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ] && 
_use+="avidemux-core-git "
[ "${_use_qt4}" = "1" ] && _use+="avidemux-qt4-git "
[ "${_use_gtk3}" = "1" ] && _use+="avidemux-gtk3-git "
[ "${_use_cli}" = "1" ] && _use+="avidemux-cli-git "

if [ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ]; then
  makedepends=('git' 'cmake' 'subversion' 'yasm' 'aften' 'dcaenc' 'faac' 'faad2' 'fribidi' 'jack2' 'lame' 'libdca' 'libpulse' 'libva' 'libvpx' 'libx264' 'opencore-amr' 'twolame' 'xvidcore' 'x265')
  [ "${_use_qt4}" = "1" ] && makedepends+=('qt4' 'glu')
  [ "${_use_gtk3}" = "1" ] && makedepends+=('gtk3')
else
  warning "Need choice, at least, one GUI/Frontend, Please edit options in the PKGBUILD. if not build a EMPTY package"
fi

pkgbase=avidemux-git
pkgname=('avidemux-git' $_use)
pkgver=2.6.8.141207.75df0921043
pkgrel=1
pkgdesc="A graphical/cli tool to edit video (filter/re-encode/split). (GIT version) (SPLIT PKGBUILD)"
url="http://www.avidemux.org/"
license=('GPL2')
arch=('i686' 'x86_64')
source=('avidemux::git+https://github.com/mean00/avidemux2.git')
md5sums=('SKIP')
options=('!makeflags')
install=avidemux.install
_gitname="avidemux"

pkgver() {
  if [ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ]; then
    cd "${_gitname}"
    _ver="$(cat cmake/avidemuxVersion.cmake | grep -e VERSION_MAJOR -e VERSION_MINOR -e VERSION_PATCH | head -n3 | cut -d '"' -f2)"
    echo "$(echo ${_ver} | tr ' ' .).$(date -u +%g%m%d).$(git log -l3 | head -1 | tail -c 12)"
  else
    echo "EMPTY"
  fi
}

prepare() {
  if [ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ]; then
    rm -fr build_core{,_plugins,_plugins_settings} build_{qt4,gtk3,cli}{,_plugins} get_x264_encode_plugin_conf build_x264_encode_plugin fakeroot
    [ "${_use_gtk3}" = "0" -a "${_use_cli}" = "0" ] && mkdir -p get_x264_encode_plugin_conf build_x264_encode_plugin
    [ "${_use_qt4}" = "1" ] && mkdir -p build_qt4{,_plugins}
    [ "${_use_gtk3}" = "1" ] && mkdir -p build_gtk3{,_plugins}
    [ "${_use_cli}" = "1" ] && mkdir -p build_cli{,_plugins}
    mkdir -p build_core{,_plugins,_plugins_settings}
  fi
}

build() {
  if [ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ]; then

    msg2 "Build Core Libs"
    cd "${srcdir}/build_core"
    cmake "../${_gitname}/avidemux_core" \
      -DFAKEROOT="${srcdir}/fakeroot" \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_BUILD_TYPE=Release
    make VERBOSE=""
    make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install

    if [ "${_use_qt4}" = "1" ]; then
      msg2 "Build Qt GUI"
      cd "${srcdir}/build_qt4"
      cmake "../${_gitname}/avidemux/qt4" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi

    if [ "${_use_gtk3}" = "1" ]; then
      msg2 "Build Gtk3 GUI"
      cd "${srcdir}/build_gtk3"
      cmake "../${_gitname}/avidemux/gtk" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi

    if [ "${_use_cli}" = "1" ]; then
      msg2 "Build CLI frontend"
      cd "${srcdir}/build_cli"
      cmake "../${_gitname}/avidemux/cli" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi

    msg2 "Build Common Plugins"
    [ "${_use_qt4}" = "1" ]
    cd "${srcdir}/build_core_plugins"
    cmake "../${_gitname}/avidemux_plugins" \
      -DQT_LRELEASE_EXECUTABLE=/usr/bin/lrelease-qt4 \
      -DFAKEROOT="${srcdir}/fakeroot" \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DAVIDEMUX_SOURCE_DIR="${srcdir}/${_gitname}" \
      -DPLUGIN_UI=COMMON \
      -DCMAKE_BUILD_TYPE=Release
    make VERBOSE=""
    make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install

    if [ "${_use_gtk3}" = "0" -a "${_use_cli}" = "0" ]; then
      msg2 "Build Common x264 GTK3/CLI encoder plugin"
      cd "${srcdir}/get_x264_encode_plugin_conf"
      cmake "../${_gitname}/avidemux/cli" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install

      cd "${srcdir}/build_x264_encode_plugin"
      cmake "../${_gitname}/avidemux_plugins" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DAVIDEMUX_SOURCE_DIR="${srcdir}/${_gitname}" \
        -DPLUGIN_UI=CLI \
        -DCMAKE_BUILD_TYPE=Release
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi

    if [ "${_use_qt4}" = "1" ]; then
      msg2 "Build Qt GUI Plugins"
      cd "${srcdir}/build_qt4_plugins"
      cmake "../${_gitname}/avidemux_plugins" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DAVIDEMUX_SOURCE_DIR="${srcdir}/${_gitname}" \
        -DPLUGIN_UI=QT4 \
        -DCMAKE_BUILD_TYPE=Release
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi

    if [ "${_use_gtk3}" = "1" ]; then
      msg2 "Build Gtk3 GUI plugins"
      cd "${srcdir}/build_gtk3_plugins"
      cmake "../${_gitname}/avidemux_plugins" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DAVIDEMUX_SOURCE_DIR="${srcdir}/${_gitname}" \
        -DPLUGIN_UI=GTK \
        -DCMAKE_BUILD_TYPE=Release
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi

    if [ "${_use_cli}" = "1" ]; then
      msg2 "Build CLI plugins"
      cd "${srcdir}/build_cli_plugins"
      cmake "../${_gitname}/avidemux_plugins" \
        -DFAKEROOT="${srcdir}/fakeroot" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DAVIDEMUX_SOURCE_DIR="${srcdir}/${_gitname}" \
        -DPLUGIN_UI=CLI \
        -DCMAKE_BUILD_TYPE=Release
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
    fi

    msg2 "Build Settings"
    cd "${srcdir}/build_core_plugins_settings"
    cmake "../${_gitname}/avidemux_plugins" \
      -DFAKEROOT="${srcdir}/fakeroot" \
      -DCMAKE_INSTALL_PREFIX=/usr  \
      -DAVIDEMUX_SOURCE_DIR="${srcdir}/${_gitname}" \
      -DPLUGIN_UI=SETTINGS \
      -DCMAKE_BUILD_TYPE=Release
    make VERBOSE=""
    make VERBOSE="" DESTDIR="${srcdir}/fakeroot" install
  fi
}

package_avidemux-git() {
  arch=('any')
  conflicts=('avidemux-cli' 'avidemux-gtk' 'avidemux-qt')
}

package_avidemux-core-git() {
  depends=('aften' 'dcaenc' 'faac' 'faad2' 'fribidi' 'jack2' 'lame' 'libdca' 'libpulse' 'libva' 'libvpx' 'libx264' 'opencore-amr' 'twolame' 'xvidcore' 'x265')
  pkgdesc="Core libs for Avidemux. (GIT version)"
  provides=("avidemux-core-git=${pkgver}")
  conflicts=('avidemux-cli' 'avidemux-gtk' 'avidemux-qt')
  optdepends=('avidemux-qt4-git: a Qt4 GUI for Avidemux. (GIT Version) (install from "avidemux-git" package)'
              'avidemux-gtk3-git: a Gtk3 GUI for Avidemux. (GIT Version) (install from "avidemux-git" package)'
              'avidemux-cli-git: a CLI frontend for Avidemux. (GIT Version) (install from "avidemux-git" package)')

  make -C build_core VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_core_plugins VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_core_plugins_settings VERBOSE="" DESTDIR="${pkgdir}" install

  install -Dm755 fakeroot/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x264_other.so "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x264_other.so"
  install -Dm755 fakeroot/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x265_other.so "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x265_other.so"

  rm -fr "${pkgdir}/usr/lib/ADM_plugins6/scriptEngines/libADM_script_qt.so"
  rm -fr "${pkgdir}/usr/share/"
}

package_avidemux-qt4-git() {
  depends=("avidemux-core-git=${pkgver}" 'qt4' 'glu' 'libx264' 'x265')
  pkgdesc="Qt4 GUI for Avidemux. (GIT version)"
  conflicts=('avidemux-qt' 'avidemux-2.6-qt4-git')
  install=avidemux.install

  make -C build_qt4 VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_qt4_plugins VERBOSE="" DESTDIR="${pkgdir}" install

  install -Dm755 fakeroot/usr/lib/ADM_plugins6/scriptEngines/libADM_script_qt.so "${pkgdir}/usr/lib/ADM_plugins6/scriptEngines/libADM_script_qt.so"
  install -d "${pkgdir}/usr/share/avidemux6"
  cp -R fakeroot/usr/share/avidemux6/help "${pkgdir}/usr/share/avidemux6"

  install -Dm644 "${_gitname}/avidemux2.desktop" "${pkgdir}/usr/share/applications/avidemux-qt4.desktop"
  sed -e 's|Icon=avidemux|Icon=avidemux-qt4|g' \
      -e 's|Exec=avidemux2_gtk|Exec=avidemux3_qt4|g' \
      -e 's|Name=avidemux2|Name=Avidemux Qt4|' \
      -i "${pkgdir}/usr/share/applications/avidemux-qt4.desktop"
  install -Dm644 "${_gitname}/avidemux_icon.png" "${pkgdir}/usr/share/pixmaps/avidemux-qt4.png"
}

package_avidemux-gtk3-git() {
  depends=("avidemux-core-git=${pkgver}" 'gtk3' 'libxv' 'sdl' 'desktop-file-utils')
  pkgdesc="Gtk3 GUI for Avidemux. (GIT version)"
  conflicts=('avidemux-gtk' 'avidemux-2.6-gtk3-git')
  install=avidemux.install

  make -C build_gtk3 VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_gtk3_plugins VERBOSE="" DESTDIR="${pkgdir}" install

  rm -fr "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders"

  install -Dm644 "${_gitname}/avidemux2.desktop" "${pkgdir}/usr/share/applications/avidemux-gtk.desktop"
  sed -e 's|Icon=avidemux|Icon=avidemux-gtk|g' \
      -e 's|Exec=avidemux2_gtk|Exec=avidemux3_gtk|g' \
      -e 's|Name=avidemux2|Name=Avidemux Gtk|' \
      -i "${pkgdir}/usr/share/applications/avidemux-gtk.desktop"
  install -Dm644 "${_gitname}/avidemux_icon.png" "${pkgdir}/usr/share/pixmaps/avidemux-gtk.png"
}

package_avidemux-cli-git() {
  depends=("avidemux-core-git=${pkgver}")
  pkgdesc="CLI frontend for Avidemux. (GIT version)"
  conflicts=('avidemux-cli' 'avidemux-2.6-cli-git' )

  make -C build_cli VERBOSE="" DESTDIR="${pkgdir}" install
  make -C build_cli_plugins VERBOSE="" DESTDIR="${pkgdir}" install

  rm -fr "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders"
}
