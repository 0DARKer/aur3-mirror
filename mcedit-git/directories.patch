--- mcplatform.py.orig	2012-03-15 19:32:33.595921677 +0100
+++ mcplatform.py	2012-03-15 19:38:26.285862212 +0100
@@ -361,6 +361,9 @@
 
 def goPortable():
     global configFilePath, schematicsDir, portable
+    if sys.platform.startswith("linux"):
+        raise RuntimeError("Portable mode is not available on Linux")
+        # Since I can't even imagine what _that_ would do
 
     if os.path.exists(fixedSchematicsDir):
         move_displace(fixedSchematicsDir, portableSchematicsDir)
@@ -407,7 +407,12 @@
     return (os.path.exists(portableConfigFilePath)  # mcedit.ini in MCEdit folder
         or (sys.platform != 'darwin' and not os.path.exists(fixedConfigFilePath)))  # no mcedit.ini in Documents folder (except on OS X when we always want it in Library/Preferences
 
-if "-fixed" not in sys.argv and ("-portable" in sys.argv or portableConfigExists()):
+if sys.platform.startswith("linux"):
+    print "We are on Linux. Forcing fixed install mode. MCEdit-schematics and mcedit.ini are in your home folder."
+    configFilePath = os.path.expanduser("~/.mcedit/mcedit.ini")
+    schematicsDir = os.path.expanduser("~/.mcedit/schematics")
+    portable = False
+elif "-fixed" not in sys.argv and ("-portable" in sys.argv or portableConfigExists()):
     print "Running in portable mode. MCEdit-schematics and mcedit.ini are stored alongside " + (sys.platform == "darwin" and "the MCEdit app bundle" or "MCEditData")
     portable = True
     schematicsDir = portableSchematicsDir
@@ -434,4 +439,7 @@
 else:
     jarStorage = ServerJarStorage()
 
-items.items = items.Items(join(dataDir, "pymclevel", "items.txt"))
+if sys.platform.startswith("linux"):
+    items.items = items.Items("/usr/share/pymclevel/items.txt")
+else:
+    items.items = items.Items(join(dataDir, "pymclevel", "items.txt"))
--- directories.py.orig	2012-03-15 18:28:09.000000000 +0100
+++ directories.py	2012-03-15 19:40:15.617343890 +0100
@@ -82,6 +82,9 @@
     elif sys.platform == "darwin":
         dataDir = os.getcwdu()
         runningInEditor = False
+    if sys.platform.startswith("linux"):
+        dataDir = "/usr/share/mcedit"
+        runningInEditor = False
     else:
         if argzero.endswith("mcedit.pyo"):
             dataDir = os.path.split(argzero)[0]
--- albow/resource.py.orig	2012-03-15 19:48:27.844000304 +0100
+++ albow/resource.py	2012-03-15 19:52:56.671251316 +0100
@@ -73,6 +73,8 @@
 
 def get_font(size, *names, **kwds):
     path = _resource_path("fonts", names, **kwds)
+    if sys.platform.startswith("linux"):
+        path = os.path.join("/usr/share/fonts/TTF", *names)
     key = (path, size)
     font = font_cache.get(key)
     if not font:
