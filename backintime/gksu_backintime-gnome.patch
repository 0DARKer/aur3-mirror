=== modified file 'common/askpass.py'
--- common/askpass.py	2013-05-21 20:33:30 +0000
+++ common/askpass.py	2013-10-22 17:53:07 +0000
@@ -18,6 +18,10 @@
 import os
 import sys
 import base64
+try:
+    import gtk
+except:
+    pass
 
 import password
 import password_ipc
@@ -30,14 +34,12 @@
     """
     cfg = config.Config()
     tools.load_env(cfg)
-    try:
-        profile_id = os.environ['ASKPASS_PROFILE_ID']
-        mode = os.environ['ASKPASS_MODE']
-    except KeyError:
-        pass
-    try:
-        temp_file = os.environ['ASKPASS_TEMP']
-    except KeyError:
+
+    profile_id = os.getenv('ASKPASS_PROFILE_ID', '1')
+    mode = os.getenv('ASKPASS_MODE', 'local')
+
+    temp_file = os.getenv('ASKPASS_TEMP')
+    if temp_file is None:
         #normal mode, get password from module password
         pw = password.Password(cfg)
         print(pw.get_password(None, profile_id, mode))

=== modified file 'common/password.py'
--- common/password.py	2013-10-09 18:34:43 +0000
+++ common/password.py	2013-10-21 18:55:36 +0000
@@ -22,7 +22,6 @@
 import base64
 import subprocess
 import gettext
-import keyring
 import re
 
 import config
@@ -325,7 +324,7 @@
                             service_name = self.config.get_keyring_service_name(profile_id, mode, pw_id)
                             user_name = self.config.get_keyring_user_name(profile_id)
                                 
-                            password = keyring.get_password(service_name, user_name)
+                            password = tools.get_password(service_name, user_name)
                             if password is None:
                                 continue
                             #add some snakeoil
@@ -397,7 +396,7 @@
         """
         if self.keyring_supported:
             try:
-                return keyring.get_password(service_name, user_name)
+                return tools.get_password(service_name, user_name)
             except Exception:
                 logger.error('get password from Keyring failed')
         return None
@@ -481,7 +480,7 @@
             self._set_password_db(service_name, user_name, password)
 
     def _set_password_to_keyring(self, service_name, user_name, password):
-        return keyring.set_password(service_name, user_name, password)
+        return tools.set_password(service_name, user_name, password)
 
     def _set_password_to_cache(self, service_name, user_name, password):
         if self.pw_cache.status():

=== modified file 'common/tools.py'
--- common/tools.py	2013-10-12 21:02:00 +0000
+++ common/tools.py	2013-10-22 18:23:06 +0000
@@ -24,9 +24,13 @@
 import commands
 import signal
 import re
-import keyring
+try:
+    import keyring
+except:
+    pass
 
 import configfile
+import logger
 
 ON_AC = 0
 ON_BATTERY = 1
@@ -503,6 +507,8 @@
         env_file.set_str_value(key, env[key])
 
 def keyring_supported():
+    if not 'keyring' in globals():
+        return False
     try:
         backends = (keyring.backends.SecretService.Keyring,
                     keyring.backends.Gnome.Keyring,
@@ -513,6 +519,16 @@
                     keyring.backend.KDEKWallet)
     return isinstance(keyring.get_keyring(), backends)
 
+def get_password(*args):
+    if 'keyring' in globals():
+        return keyring.get_password(*args)
+    return None
+
+def set_password(*args):
+    if 'keyring' in globals():
+        return keyring.set_password(*args)
+    return False
+
 def get_mountpoint(path):
     '''return (DEVICE, MOUNTPOINT) for given PATH'''
     if os.path.exists(path):
@@ -660,3 +676,6 @@
             raise Timeout()
         else:
             self.callback()
+
+if not 'keyring' in globals():
+    logger.warning('import keyring failed')
