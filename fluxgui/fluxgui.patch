--- fluxgui.orig/src/fluxgui/fluxgui.py	2010-09-08 12:13:14.000000000 +0200
+++ fluxgui/src/fluxgui/fluxgui.py	2010-09-28 21:15:06.000000000 +0200
@@ -1,7 +1,7 @@
-#!/usr/bin/python
+#!/usr/bin/python2
-import appindicator
 import gtk
 import gtk.glade
+import pygtk
 import gconf
 import sys
 import pexpect
@@ -14,7 +14,7 @@ VERSION = "1.1.8"
 class Fluxgui:
     def __init__(self):
         self.check_pid()
-        self.indicator = Indicator(self)
+        self.statusIcon = StatIco(self)
 
         self.color = None;
         self.settings = Settings(self)
@@ -56,8 +56,8 @@ class Fluxgui:
             self.xflux = None
 
     def stop_xflux(self, item):
-        self.indicator.item_turn_off.hide()
-        self.indicator.item_turn_on.show()
+        self.statusIcon.item_turn_off.hide()
+        self.statusIcon.item_turn_on.show()
 
         if self.xflux:
             # xflux is not running
@@ -68,13 +68,13 @@ class Fluxgui:
                 pass
 
     def pause_xflux(self, item):
-        self.indicator.item_turn_off.hide()
-        self.indicator.item_turn_on.show()
+        self.statusIcon.item_turn_off.hide()
+        self.statusIcon.item_turn_on.show()
         self.update_xflux("k=" + self.settings.get_color("4"))
 
     def unpause_xflux(self, item):
-        self.indicator.item_turn_off.show()
-        self.indicator.item_turn_on.hide()
+        self.statusIcon.item_turn_off.show()
+        self.statusIcon.item_turn_on.hide()
         self.update_xflux("k=" + self.settings.color)
 
     def update_xflux(self, command):
@@ -142,31 +142,11 @@ class Fluxgui:
         gtk.main_quit()
         sys.exit(0)
 
-class Indicator:
-
+class StatIco:
     def __init__(self, main):
         self.main = main
-        self.setup_indicator()
-
-    def setup_indicator(self):
-        self.indicator = appindicator.Indicator(
-          "fluxgui-indicator",
-          "fluxgui",
-          appindicator.CATEGORY_APPLICATION_STATUS)
-        self.indicator.set_status(appindicator.STATUS_ACTIVE)
-
-        # Check for special Ubuntu themes. copied from lookit
-        self.indicator.set_icon('fluxgui')
-        if gtk.gdk.screen_get_default():
-          theme = gtk.gdk.screen_get_default().get_setting(
-                  'gtk-icon-theme-name')
-          if theme == 'ubuntu-mono-dark':
-              self.indicator.set_icon('fluxgui-dark')
-          elif theme == 'ubuntu-mono-light':
-              self.indicator.set_icon('fluxgui-light')
-
-        self.indicator.set_menu(self.setup_menu())
-
+        self.create_icon()
+    
     def setup_menu(self):
         menu = gtk.Menu()
 
@@ -195,10 +175,25 @@ class Indicator:
         menu.append(item)
 
         return menu
-
+        
+    def popup_menu_cb(self, widget, button, time, data = None):
+      if button == 3:
+	if data:
+	  data.show_all()
+	  data.popup(None, None, gtk.status_icon_position_menu,3, time, self.staticon)
+
+
+    def create_icon(self):
+        # create a new Status Icon 
+        self.staticon = gtk.StatusIcon() 
+        self.staticon.set_from_icon_name('fluxgui')
+        self.staticon.set_tooltip("fluxgui")
+        self.staticon.connect('popup-menu', self.popup_menu_cb, self.setup_menu())
+        self.staticon.set_visible(True) 
+        
     def main(self):
-        gtk.main()
-
+	# invoking the main() 
+        gtk.main() 
 
 class Preferences:
 
