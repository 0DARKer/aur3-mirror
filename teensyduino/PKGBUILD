# Maintainer: Niels Martignène <niels.martignene@gmail.com>
# Contributor: PyroPeter <googlemail.com@abi1789>
# Contributor: darkapex <me@jailuthra.in>
# Contributor: tty0 <vt.tty0[d0t]gmail.com>

pkgname='teensyduino'
true && pkgname=('teensyduino' 'teensyduino-libraries')
pkgver=1.18
_arduino=1.0.5
_loader=2.1
pkgrel=2
arch=('i686' 'x86_64')
url="http://www.pjrc.com/teensy/teensyduino.html"
options=(!strip staticlibs)
license=('GPL' 'LGPL' 'custom')
depends=('arm-none-eabi-gcc' 'arm-none-eabi-binutils' 'avr-gcc' 'avr-libc'
         'avrdude' 'libusb-compat' 'libusb' 'java-runtime' 'java-rxtx')
makedepends=('xorg-server-xvfb' 'libxft' 'xdotool')
source=("http://arduino.googlecode.com/files/arduino-${_arduino}-linux32.tgz"
        'arduino-fix-arguments.patch'
        'arduino-gcc-4.8-no-use-cxa-atexit.patch'
        'arduino.png'
        'arduino.desktop'
        "http://www.pjrc.com/teensy/td_${pkgver//./}/teensyduino.32bit"
        'teensyduino.sh'
        'teensyduino-fix-local-static-initialization.patch'
        'teensy.desktop'
        "http://www.pjrc.com/teensy/teensy_loader_cli.${_loader}.zip"
        "http://www.pjrc.com/teensy/49-teensy.rules"
        'LICENSE')
md5sums=('ca6a87052a83e9500d6555c1f54c793b'
         '304c9b494f4c97a927ab92aa00b14ea1'
         '57a444a1fe8328b56563388c015b5e2f'
         '9e36d33891d5e68d38ec55d1494499a5'
         'eebc4d6495864bea99ad057af801afb9'
         '23a301eda00b69c24e438664e4a3f27e'
         '938d0061610c2e6cee5537ca4890a8cc'
         'e65eaf55c38e014ea9114865e63c086c'
         '8716606687b10d470300d27aaaec2c98'
         'c27a8a970f32b60e5bb12b70cb52dd42'
         '9f0593b4f3dab6d9a32ebc993d6aedc3'
         '97ce5af4d697a059f2933ddf93146926')

if [ "$CARCH" == 'x86_64' ]; then
  source[0]="http://arduino.googlecode.com/files/arduino-${_arduino}-linux64.tgz"
  source[5]="http://www.pjrc.com/teensy/td_${pkgver//./}/teensyduino.64bit"
  md5sums[0]='47bc3292f96a9d0e1a31f7c707c9acef'
  md5sums[5]='dc2d68bbf395cc10001f64ed6bb2b58d'

  _bits=64
elif [ "$CARCH" == 'i686' ]; then
  _bits=32
fi

prepare() {
  cd "${srcdir}/arduino-${_arduino}"

  patch -Np1 <"${srcdir}/arduino-fix-arguments.patch"
  patch -Np1 <"${srcdir}/arduino-gcc-4.8-no-use-cxa-atexit.patch"
}

build() {
  msg2 "Running Teensyduino installer (takes around 40 seconds)"

  cd "${srcdir}/arduino-${_arduino}/libraries"
  ls -d */ >1.txt

  cd "${srcdir}"
  chmod +x "teensyduino.${_bits}bit"
  xvfb-run ./teensyduino.sh "./teensyduino.${_bits}bit" "${srcdir}/arduino-${_arduino}"

  cd "arduino-${_arduino}"
  patch -Np1 <"${srcdir}/teensyduino-fix-local-static-initialization.patch"

  cd ..
  rm -rf libraries
  mv "arduino-${_arduino}/libraries" .

  cd libraries
  ls -d */ >2.txt

  msg2 "Building Teensy Loader command line"

  cd "${srcdir}/teensy_loader_cli"
  make
}

package_teensyduino() {
  pkgdesc="Arduino SDK with Teensyduino"
  provides=('arduino')
  conflicts=('arduino' 'teensy-loader-cli')
  optdepends=('gtk2: Arduino IDE and Teensy Loader GUI'
              'libpng12: Teensy Loader GUI'
              'libsm: Teensy Loader GUI')
  install="arduino.install"

  cd "${srcdir}/arduino-${_arduino}"

  mkdir -p "${pkgdir}/usr/bin"
  mkdir -p "${pkgdir}/usr/share/"{doc,applications,pixmaps,licenses/teensyduino}
  mkdir -p "${pkgdir}/usr/lib/udev/rules.d"

  # use Arch's avr toolchain
  mkdir -p "${pkgdir}/usr/arm-none-eabi/lib"
  install -m644 hardware/tools/arm-none-eabi/arm-none-eabi/lib/libarm_cortexM4l_math.a "${pkgdir}/usr/arm-none-eabi/lib/"
  rm -rf hardware/tools/{arm-none-eabi,avr}
  rm -f hardware/tools/{avrdude,avrdude64,avrdude.conf,readme.txt}

  # copy the whole SDK to /usr/share/arduino/
  cp -a . "${pkgdir}/usr/share/arduino"

  # use system's RXTX library
  ln -sf /usr/lib/librxtxSerial.so "${pkgdir}/usr/share/arduino/lib/librxtxSerial.so"
  ln -sf /usr/lib/librxtxSerial.so "${pkgdir}/usr/share/arduino/lib/librxtxSerial64.so"
  ln -sf /usr/share/java/rxtx/RXTXcomm.jar "${pkgdir}/usr/share/arduino/lib/RXTXcomm.jar"

  # we don't need these sources
  rm -rf "${pkgdir}/usr/share/arduino/src"

  # at least support the FHS a little bit
  ln -s /usr/share/arduino/arduino "${pkgdir}/usr/bin/arduino"
  ln -s /usr/share/arduino/reference "${pkgdir}/usr/share/doc/arduino"

  # desktop icon
  install -m644 "${srcdir}/arduino.desktop" "${pkgdir}/usr/share/applications/"
  install -m644 "${srcdir}/arduino.png" "${pkgdir}/usr/share/pixmaps/"

  # install custom PJRC license
  install -m644 "${srcdir}/LICENSE" "${pkgdir}/usr/share/licenses/teensyduino/"

  # install teensy loader files
  install -m644 "${srcdir}/49-teensy.rules" "${pkgdir}/usr/lib/udev/rules.d"
  ln -s /usr/share/arduino/hardware/tools/teensy "${pkgdir}/usr/bin/teensy-loader"
  install -m644 "${srcdir}/teensy.desktop" "${pkgdir}/usr/share/applications/"

  # install command-line teensy loader
  install -m755 "${srcdir}/teensy_loader_cli/teensy_loader_cli" "${pkgdir}/usr/bin/teensy-loader-cli"

  cd "${srcdir}/libraries"

  # package arduino libraries only
  mkdir "${pkgdir}/usr/share/arduino/libraries"
  cp -a $(comm -12 1.txt 2.txt) "${pkgdir}/usr/share/arduino/libraries/"
}

package_teensyduino-libraries() {
  pkgdesc="Additional libraries for Teensyduino"
  depends=('teensyduino')

  cd "${srcdir}/libraries"

  mkdir -p "${pkgdir}/usr/share/arduino/libraries"
  cp -a $(comm -13 1.txt 2.txt) "${pkgdir}/usr/share/arduino/libraries/"
}

