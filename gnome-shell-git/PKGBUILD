#Contributor: Flamelab <panosfilip@gmail.com

pkgname=gnome-shell-git
_realname=gnome-shell
pkgver=20110413
_realver=3.0.0.2
pkgrel=1
pkgdesc="The next generation GNOME Shell. Experimental, GNOME 3.0 version."
arch=('i686' 'x86_64')
url="http://live.gnome.org/GnomeShell"
license=('GPL2')

depends=('mutter' 'gconf' 'dconf' 'gjs' 'gnome-menus' 'gnome-desktop' 'libcroco' 'libcanberra' 'libpulse' 'telepathy-glib' 'polkit-gnome'
         'gobject-introspection' 'evolution-data-server' 'gtk3' 'gnome-bluetooth' 'gstreamer0.10')
makedepends=('intltool' 'gnome-doc-utils' 'git' 'gnome-common-git')

provides=("${_realname}=${_realver}")
conflicts=("${_realname}")
options=(!libtool !emptydirs)
install=gnome-shell-git.install

#Turn this to 0 if you want to disable the message about the dependencies
buildmsg=1


_gitroot="git://git.gnome.org/gnome-shell"
_gitname="gnome-shell"

build() {
     
if [ $buildmsg = 1 ];then
    echo 
    echo "The [testing] repository is needed to be activated in order to pull"
    echo "the proper dependencies and build this package."
    echo "This applies till GNOME 3 is moved to [extra]."
    sleep 4
fi

    cd ${srcdir}/

    msg "Connecting to the GNOME GIT server..."
    if [[ -d ${srcdir}/${_gitname} ]] ; then
    	cd ${_gitname}
    	git pull origin
    	msg "The local files are updated..."
    else
    	git clone ${_gitroot} ${gitname}
    fi

    msg "GIT checkout done."

    msg2 "Starting make for: ${pkgname}"

    if [[ -d ${srcdir}/${_gitname}-build ]]; then
       msg "Cleaning the previous build directory..."
       rm -rf ${srcdir}/${_gitname}-build
    fi

    git clone ${srcdir}/${_gitname} ${srcdir}/${_gitname}-build

    cd ${srcdir}/${_gitname}-build

    msg "Starting configure..."

    ./autogen.sh \
      --prefix=/usr --sysconfdir=/etc \
      --libexecdir=/usr/lib/gnome-shell \
      --localstatedir=/var --disable-static \
      --disable-schemas-compile

    sed -i 's/\-Werror//g' configure.ac

    export LD_LIBRARY_PATH=/usr/lib/xulrunner-devel-1.9.*/lib:/usr/lib/libfakeroot

    make
}

package()

{
   cd ${srcdir}/${_gitname}-build
   make GCONF_DISABLE_MAKEFILE_SCHEMA_INSTALL=1 DESTDIR="${pkgdir}" install

   install -m755 -d "${pkgdir}/usr/share/gconf/schemas"
   gconf-merge-schema "${pkgdir}/usr/share/gconf/schemas/${pkgname}.schemas" --domain gnome-shell ${pkgdir}/etc/gconf/schemas/*.schemas
   rm -f ${pkgdir}/etc/gconf/schemas/*.schemas
}

