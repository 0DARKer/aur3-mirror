#!/usr/bin/perl
use strict;
use warnings;
use File::Spec qw(rel2abs);
use File::Basename;

my @args = ();
my $enabled = 1;

$enabled = 1;
my $force_stack = 1;
my $force_fortify = 1;
my $force_format = 0;
my $force_pie = 1;
my $force_fPIE = 1;

if ($enabled) {
    # Scan arguments 
    my $linking = 1;
    foreach my $arg (@ARGV) {
        if ($arg eq "-fno-PIC" ||
            $arg eq "-fno-pic" ||
            $arg eq "-fno-PIE" ||
            $arg eq "-fno-pie" ||
            $arg eq "-nopie" ||
            $arg eq "-static" ||
            $arg eq "-shared" ||
            $arg eq "-D__KERNEL__" ||
            $arg eq "-nostdlib" ||
            $arg eq "-nostartfiles")
        {
            $force_fPIE = 0;
            $force_pie = 0;
        }
        if ($arg eq "-fPIC" ||
            $arg eq "-fpic")
        {
            $force_fPIE = 0;
        }
        if ($arg eq "-c") {
            $linking = 0;
        }
        if ($arg =~ /^-D_FORTIFY_SOURCE(=|$)/) {
            $force_fortify = 0;
        }
        if ($arg eq "-nostdlib" ||
            $arg eq "-ffreestanding") {
            $force_stack = 0;
        }
    }

    if ($force_stack) {
        push(@args,'-fstack-protector', '--param=ssp-buffer-size=4');
    }

    if ($force_fPIE) {
        push(@args, '-DPIC', '-fPIE');
    }

    if ($force_pie) {
        if ($linking) {
            push(@args, '-pie');
        }
    }

    if ($force_fortify) {
        push(@args,'-D_FORTIFY_SOURCE=2');
    }

    if ($force_format) {
        push(@args,'-Wformat','-Wformat-security','-Werror=format-security');
    }
}

my $arg0 = File::Spec->rel2abs(basename($0),dirname($0));

my $tool = "/usr/bin/gcc";

my @target = ($tool, @args, @ARGV);

exec @target or die "Unable to exec $target[0]: $!\n";
