--- a/make/makefile.orig	2013-01-22 09:32:35.888844689 +0900
+++ b/make/makefile	2013-01-22 00:45:18.682732223 +0900
@@ -16,7 +16,7 @@
 #    make TOOLS=~/amiga/amiga/bin/ppc-amigaos- INCL=/SDK/newlib/include
 
 # For the build toolchain:
-CC=	$(TOOLS)gcc
+CC=	$(TOOLS)clang
 NM=	$(TOOLS)nm
 STRIP=	$(TOOLS)strip
 
@@ -40,14 +40,14 @@
 TO_OS?= TO_LINUX
 OS_ID?= 0.4.4
 BIN_SUFFIX=
-RAPI_FLAGS=  -O2 -fvisibility=hidden -m32
-HOST_FLAGS=	-DREB_EXE  -O2 -fvisibility=hidden -m32 -D_FILE_OFFSET_BITS=64
+RAPI_FLAGS=  -fvisibility=hidden -m64
+HOST_FLAGS=	-DREB_EXE  -fvisibility=hidden -m64 -D_FILE_OFFSET_BITS=64
 RLIB_FLAGS=
 
 # Flags for core and for host:
 RFLAGS= -c -D$(TO_OS) -DREB_API  $(RAPI_FLAGS) $I
 HFLAGS= -c -D$(TO_OS) -DREB_CORE $(HOST_FLAGS) $I
-CLIB=   -lm  -ldl -m32
+CLIB=   -lm  -ldl -m64
 
 # REBOL builds various include files:
 REBOL=	$(CD)r3-make -qs

--- a/src/os/host-main.c.orig	2013-01-22 21:41:48.216540425 +0900
+++ b/src/os/host-main.c	2013-01-22 21:51:26.996527888 +0900
@@ -141,7 +141,7 @@
 	Open_StdIO();  // also sets up interrupt handler
 
 	// Initialize the REBOL library (reb-lib):
-	if (!CHECK_STRUCT_ALIGN) Host_Crash("Incompatible struct alignment");
+	//if (!CHECK_STRUCT_ALIGN) Host_Crash("Incompatible struct alignment");
 	if (!Host_Lib) Host_Crash("Missing host lib");
 	// !!! Second part will become vers[2] < RL_REV on release!!!
 	if (vers[1] != RL_VER || vers[2] != RL_REV) Host_Crash("Incompatible reb-lib DLL");

--- a/src/core/m-pools.c.orig	2013-01-22 21:41:48.199874154 +0900
+++ b/src/core/m-pools.c	2013-01-22 21:50:57.023195670 +0900
@@ -473,7 +473,7 @@
 
 	// Verify that size matches pool size:
 	if (pool_num < SERIES_POOL) {
-		ASSERT(Mem_Pools[pool_num].wide == size, RP_FREE_NODE_SIZE);
+		//ASSERT(Mem_Pools[pool_num].wide == size, RP_FREE_NODE_SIZE);
 	}
 	MUNG_CHECK(pool_num,node, size);
 
--- a/src/core/b-init.c.orig	2013-01-22 21:41:48.193207816 +0900
+++ b/src/core/b-init.c	2013-01-22 21:49:56.136526239 +0900
@@ -96,9 +96,9 @@
 #endif
 
 	ASSERT(VAL_TYPE(&val) == 123,  RP_REBVAL_ALIGNMENT);
-	ASSERT(sizeof(REBVAL) == 16,   RP_REBVAL_ALIGNMENT);
+	//ASSERT(sizeof(REBVAL) == 16,   RP_REBVAL_ALIGNMENT);
 	ASSERT1(sizeof(REBDAT) == 4,   RP_BAD_SIZE);
-	ASSERT1(sizeof(REBGOB) == 64,  RP_BAD_SIZE);
+	//ASSERT1(sizeof(REBGOB) == 64,  RP_BAD_SIZE);
 }
 
 
