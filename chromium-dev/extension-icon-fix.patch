Index: chrome/browser/ui/webui/extension_icon_source.cc
diff --git a/chrome/browser/ui/webui/extension_icon_source.cc b/chrome/browser/ui/webui/extension_icon_source.cc
index 321cd55a7abc01d99a8b5c68c04aa8beb5a28426..1dd64a22d967ee2b9f7e2b2c3091eaca7771fd2a 100644
--- a/chrome/browser/ui/webui/extension_icon_source.cc
+++ b/chrome/browser/ui/webui/extension_icon_source.cc
@@ -123,15 +123,16 @@ void ExtensionIconSource::StartDataRequest(const std::string& path,
   ExtensionResource icon =
       request->extension->GetIconResource(request->size, request->match);
 
-  // We fall back to multiple sources, using the following order:
-  //  1) The icons as listed in the extension / app manifests.
-  //  2) If a 16px icon and the extension has a launch URL, see if Chrome
-  //     has a corresponding favicon.
-  //  3) If still no matches, load the default extension / application icon.
-  if (!icon.relative_path().empty()) {
+  if (icon.relative_path().empty())
+    LoadIconFailed(request_id);
+  else
     LoadExtensionImage(icon, request_id);
-    return;
-  }
+}
+
+void ExtensionIconSource::LoadIconFailed(int request_id) {
+  ExtensionIconRequest* request = GetData(request_id);
+  ExtensionResource icon =
+      request->extension->GetIconResource(request->size, request->match);
 
   if (request->size == Extension::EXTENSION_ICON_BITTY)
     LoadFaviconImage(request_id);
@@ -236,7 +237,11 @@ void ExtensionIconSource::OnImageLoaded(SkBitmap* image,
                                         int index) {
   int request_id = tracker_map_[index];
   tracker_map_.erase(tracker_map_.find(index));
-  FinalizeImage(image, request_id);
+
+  if (!image || image->empty())
+    LoadIconFailed(request_id);
+  else
+    FinalizeImage(image, request_id);
 }
 
 bool ExtensionIconSource::ParseData(const std::string& path,
Index: chrome/browser/ui/webui/extension_icon_source.h
diff --git a/chrome/browser/ui/webui/extension_icon_source.h b/chrome/browser/ui/webui/extension_icon_source.h
index 5008ad1b7d2f2a7c6a76c27d7d71d531c62b451f..dfb211f139b4de34c2cb6a5ff0dbb7f3f2898a82 100644
--- a/chrome/browser/ui/webui/extension_icon_source.h
+++ b/chrome/browser/ui/webui/extension_icon_source.h
@@ -110,6 +110,14 @@ class ExtensionIconSource : public ChromeURLDataManager::DataSource,
                              ExtensionResource resource,
                              int id);
 
+  // Called when the extension doesn't have an icon. We fall back to multiple
+  // sources, using the following order:
+  //  1) The icons as listed in the extension / app manifests.
+  //  2) If a 16px icon and the extension has a launch URL, see if Chrome
+  //     has a corresponding favicon.
+  //  3) If still no matches, load the default extension / application icon.
+  void LoadIconFailed(int request_id);
+
   // Parses and savse an ExtensionIconRequest for the URL |path| for the
   // specified |request_id|.
   bool ParseData(const std::string& path, int request_id);
