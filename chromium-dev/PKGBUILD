# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>
# Contributor: Mikhail Vorozhtsov <mikhail.vorozhtsov@gmail.com>
# Contributor: Nagisa <simonas@kazlauskas.me>
# Contributor: Misc <andreas.reis@gmail.com>
# Contributor: Jeagoss <jgoliver@jeago.com>

#########################
## -- Build options -- ##
#########################
_use_libpdf=1          # Enable Chrome PDF support.
_use_pepperflash=1     # Use Pepper Flash plugin. Depends on Native Client!
_use_clang=0           # Use clang compiler. Results in faster build and smaller chromium.

##############################################
## -- Package and components information -- ##
##############################################
pkgname=chromium-dev
pkgver=28.0.1478.0
_toolchains_rev=11198
pkgrel=1
pkgdesc='The open-source project behind Google Chrome (Dev channel)'
arch=('i686' 'x86_64')
url="http://www.chromium.org/"
license=('BSD')
depends=('alsa-lib' 'desktop-file-utils' 'ffmpeg' 'gtk2' 'gpsd' 'hicolor-icon-theme' 'jsoncpp' 'libevent' 'libxslt' 'libxss'
         'minizip' 'nss' 'protobuf' 'speech-dispatcher' 'ttf-font' 'udev') #'v8' 'libwebp' 're2'
makedepends=('elfutils' 'gperf' 'mesa' 'python2-ply' 'python2-simplejson' 'subversion' 'xdg-utils' 'yasm') # 'libsrtp'
install="chromium-dev.install"
backup=('etc/chromium-dev/default')
source=("https://gsdview.appspot.com/chromium-browser-official/chromium-${pkgver}.tar.xz"
        'chromium-dev.desktop'
        'chromium-dev.sh'
        'default'
        'gcc-4.7.diff'
        'gcc-4.8.diff::https://codereview.chromium.org/download/issue13811009_3002.diff'
        'http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/www-client/chromium/files/chromium-gpsd-r0.patch'
        'http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/www-client/chromium/files/chromium-system-ffmpeg-r4.patch'
        'http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/www-client/chromium/files/chromium-smhasher-r0.patch'
        'http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/www-client/chromium/files/chromium-speech-dispatcher-0.8-r0.patch'
        'http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/www-client/chromium/files/chromium-system-minizip-r0.patch'
        "naclsdk_nacl_linux_x86-${_toolchains_rev}.tgz::http://gsdview.appspot.com/nativeclient-archive2/toolchain/${_toolchains_rev}/naclsdk_linux_x86.tgz"
#        "naclsdk_pnacl_linux_x86-${_toolchains_rev}.tgz::http://gsdview.appspot.com/nativeclient-archive2/toolchain/${_toolchains_rev}/naclsdk_pnacl_linux_x86.tgz"
        "naclsdk_toolchain_linux_x86-${_toolchains_rev}.tar.bz2::http://gsdview.appspot.com/nativeclient-archive2/x86_toolchain/r${_toolchains_rev}/toolchain_linux_x86.tar.bz2")

sha1sums=('3251aafc84f78fd113d7fcef70f9783dd45f6c81'
          '004d7496d7e08d96bb884748a9e55cd71cf78cee'
          '54c53502c26456c9735e67314b2d61e29477438e'
          'd6d2da45c0729dfd1c606a15c8ffb7591dbc7b44'
          'e25739be0c7e6d14c2675d3ed4dcd99f63f4661c'
          '2bda576caaa29e89677d63458a74223fb99089ee'
          'faefcc85fab0dec3fc85efaeea5fa9a6d469e61c'
          '3afcb454d52dbdde0d9b2468ec78142aae64c73f'
          '28f33b11c8cc642a8d786c242629029bd2ae7268'
          '063f2f3800c510c42d239ea41028e66d8ad8d776'
          '6d87f3ec26f3d9f110f35e14408b7ce86c5ed990'
          "$(curl -sL "http://gsdview.appspot.com/nativeclient-archive2/toolchain/${_toolchains_rev}/naclsdk_linux_x86.tgz.sha1hash")"
#           "$(curl -sL "http://gsdview.appspot.com/nativeclient-archive2/toolchain/${_toolchains_rev}/naclsdk_pnacl_linux_x86.tgz.sha1hash")"
          "$(curl -sL "http://gsdview.appspot.com/nativeclient-archive2/x86_toolchain/r${_toolchains_rev}/toolchain_linux_x86.tar.bz2.sha1hash")")

noextract=("chromium-${pkgver}.tar.xz"
           "naclsdk_nacl_linux_x86-${_toolchains_rev}.tgz"
#           "naclsdk_pnacl_linux_x86-${_toolchains_rev}.tgz"
           "naclsdk_toolchain_linux_x86-${_toolchains_rev}.tar.bz2")

# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
# Note: These are for Arch Linux use ONLY. For your own distribution, please
# get your own set of keys. Feel free to contact foutrelis@archlinux.org for
# more information.
_google_api_key="AIzaSyDwr302FpOSkGRpLlUpPThNTDPbXcIn_FM"
_google_default_client_id="413772536636.apps.googleusercontent.com"
_google_default_client_secret="0ZChLK6AxeA3Isu96MkwqDR4"

################################################
## -- Don't touch anything below this line -- ##
################################################

[ "$CARCH" = "i686" ] && _rpm_arch='i386' && _target_arch='ia32'
[ "$CARCH" = "x86_64" ] && _rpm_arch='x86_64' && _target_arch='x64'

# Pepper Flash Plugin and/or libpdf?
if [ "${_use_pepperflash}" = "1" ] || [ "${_use_libpdf}" = "1" ]; then
  rm -f filelists.xml*
  curl -sL "http://dl.google.com/linux/chrome/rpm/stable/${_rpm_arch}/repodata/filelists.xml.gz" | gzip -d > filelists.xml
  _rpm_build="$(grep -e "unstable" filelists.xml | cut -d '"' -f12 | head -n 1)"
  _rpm_ver="$(grep -e "unstable" filelists.xml | cut -d '"' -f10 | head -n 1)"
  _rpm_sha1sum="$(grep -e "unstable" filelists.xml | cut -d '"' -f2 | head -n 1)"
  rm -f filelists.xml*

  source+=("http://dl.google.com/linux/chrome/rpm/stable/${_rpm_arch}/google-chrome-unstable-${_rpm_ver}-${_rpm_build}.${_rpm_arch}.rpm")
  sha1sums+=("${_rpm_sha1sum}")
  noextract+=("google-chrome-unstable-${_rpm_ver}-${_rpm_build}.${_rpm_arch}.rpm")
fi

# Are we in Gnome?
_use_gnome=0
if [ -f /usr/lib/libgnome-keyring.so ]; then
  depends+=('libgnome-keyring')
  _use_gnome=1
fi

# Use Pulseaudio?
_use_pulseaudio=0
if [ -x /usr/bin/pulseaudio ]; then
  _use_pulseaudio=1
fi

prepare() {
  ##############################
  ## -- Get ready to build -- ##
  ##############################

  cd "${srcdir}"

  rm -rf chromium
  bsdtar -xf "chromium-${pkgver}.tar.xz"
  mv "chromium-${pkgver}" chromium
  cd chromium

  msg2 "Fix to save configuration in ~/.config/chromium-dev"
  sed -e "s|'filename': 'chromium-browser'|'filename': 'chromium-dev'|" \
      -e "s|'confdir': 'chromium'|'confdir': 'chromium-dev'|" \
      -i chrome/chrome_exe.gypi
  sed -e 's|config_dir.Append("chromium")|config_dir.Append(\"chromium-dev\")|' \
      -e 's|config_dir.Append("chrome-frame")|config_dir.Append(\"chrome-frame-dev\")|' \
      -i chrome/common/chrome_paths_linux.cc

  msg2 "Remove unnecesary components"
  find third_party -type f \! -iname '*.gyp*' \
    \! -path 'third_party/WebKit/*' \
    \! -path 'third_party/angle/*' \
    \! -path 'third_party/cacheinvalidation/*' \
    \! -path 'third_party/cld/*' \
    \! -path 'third_party/cros_system_api/*'  \
    \! -path 'third_party/ffmpeg/*' \
    \! -path 'third_party/flot/*' \
    \! -path 'third_party/hunspell/*' \
    \! -path 'third_party/hyphen/*' \
    \! -path 'third_party/iccjpeg/*' \
    \! -path 'third_party/jsoncpp/*' \
    \! -path 'third_party/jstemplate/*' \
    \! -path 'third_party/khronos/*' \
    \! -path 'third_party/leveldatabase/*' \
    \! -path 'third_party/libXNVCtrl/*' \
    \! -path 'third_party/libjingle/*' \
    \! -path 'third_party/libphonenumber/*' \
    \! -path 'third_party/libsrtp/*' \
    \! -path 'third_party/libvpx/*' \
    \! -path 'third_party/libwebp/*' \
    \! -path 'third_party/libxml/chromium/*' \
    \! -path 'third_party/libyuv/*' \
    \! -path 'third_party/lss/*' \
    \! -path 'third_party/mesa/*' \
    \! -path 'third_party/modp_b64/*' \
    \! -path 'third_party/mongoose/*' \
    \! -path 'third_party/mt19937ar/*' \
    \! -path 'third_party/npapi/*' \
    \! -path 'third_party/openmax/*' \
    \! -path 'third_party/ots/*' \
    \! -path 'third_party/pywebsocket/*' \
    \! -path 'third_party/qcms/*' \
    \! -path 'third_party/re2/*' \
    \! -path 'third_party/sfntly/*' \
    \! -path 'third_party/skia/*' \
    \! -path 'third_party/smhasher/*' \
    \! -path 'third_party/sqlite/*' \
    \! -path 'third_party/tcmalloc/*' \
    \! -path 'third_party/tlslite/*' \
    \! -path 'third_party/trace-viewer/*' \
    \! -path 'third_party/undoview/*' \
    \! -path 'third_party/v8-i18n/*' \
    \! -path 'third_party/webdriver/*' \
    \! -path 'third_party/webrtc/*' \
    \! -path 'third_party/widevine/*' \
    \! -path 'third_party/x86inc/*' \
    -delete

  msg2 "Misc patches"
  # Fix missing gcc4.7.x header
  patch -p0 -E -i "${srcdir}/gcc-4.7.diff"

  # Fix build with gcc4.8 (http://crbug.com/227506)
  patch -p1 -E -i "${srcdir}/gcc-4.8.diff"

  # Make it possible to remove third_party/adobe
  echo > "${srcdir}/flapper_version.h"

  # Patch for use some system libraries
  patch -p0 -E -i "${srcdir}/chromium-gpsd-r0.patch"
  patch -p1 -E -i "${srcdir}/chromium-system-ffmpeg-r4.patch"
  patch -p0 -E -i "${srcdir}/chromium-smhasher-r0.patch"
  patch -p0 -E -i "${srcdir}/chromium-speech-dispatcher-0.8-r0.patch"
  patch -p0 -E -i "${srcdir}/chromium-system-minizip-r0.patch"

  #msg "Compiler specific configuration..."
  if [ "${_use_clang}" = "1" ]; then
    msg2 "Download clang"
    sh tools/clang/scripts/update.sh
  fi

  msg2 "Fix to really use python2."
  rm -rf "${srcdir}/python"
  mkdir "${srcdir}/python"
  ln -s /usr/bin/python2 "${srcdir}/python/python"
  export PATH="${srcdir}/python":$PATH
  find . -type f -exec sed -i -r -e 's|/usr/bin/python$|&2|g' -e 's|(/usr/bin/python2)\.4$|\1|g' {} \;

  msg "Prepare NaCl SDK"
  mkdir native_client/toolchain/.tars
  ln -s "${srcdir}/naclsdk_nacl_linux_x86-${_toolchains_rev}.tgz" native_client/toolchain/.tars/naclsdk_linux_x86.tgz
#  ln -s "${srcdir}/naclsdk_pnacl_linux_x86-${_toolchains_rev}.tgz" native_client/toolchain/.tars/naclsdk_pnacl_linux_x86.tgz
  ln -s "${srcdir}/naclsdk_toolchain_linux_x86-${_toolchains_rev}.tar.bz2" native_client/toolchain/.tars/toolchain_linux_x86.tar.bz2
}

build() {
  cd "${srcdir}/chromium"

  #######################
  ## -- Let's build -- ##
  #######################
  msg2 "Building Chromium..."

  # CFLAGS are passed through release_extra_cflags below
  export -n CFLAGS CXXFLAGS

  # Silence "locally defined but not used" warnings in Chromium and WebKit
  CFLAGS+=' -Wno-unused-local-typedefs'

  # TODO
  # use_system_hunspell=1 (upstream changes needed)
  # use_system_ssl=1 (http://crbug.com/58087)
  # use_system_libvpx=1 (http://crbug.com/174287)
  # use_system_v8=1 (need downgrade (?¿?¿))
  # use_system_libsrtp=1 (https://bugs.gentoo.org/show_bug.cgi?id=459932)
  # disable_pnacl=0 (http://crbug.com/224169)
  # use_system_libwebp=1 (need package update)
  # use_system_re2=1 (need update r2 code in chromium upstream)
  # enable_sql_database=0 (maybe fix in next release?¿)
  # use_system_sqlite=1 (maybe fix in next release?¿)

  GYP_DEFINES="\
    disable_glibc=1 \
    disable_pnacl=1 \
    disable_sse2=1 \
    ffmpeg_branding=Chrome \
    flapper_version_h_file="${srcdir}/flapper_version.h" \
    google_api_key="${_google_api_key}" \
    google_default_client_id="${_google_default_client_id}" \
    google_default_client_secret="${_google_default_client_secret}" \
    linux_link_gsettings=1 \
    linux_link_libpci=1 \
    linux_link_libspeechd=1 \
    linux_link_libgps=1 \
    linux_link_gnome_keyring="${_use_gnome}" \
    linux_sandbox_path="/usr/lib/chromium-dev/chromium-sandbox" \
    linux_sandbox_chrome_path="/usr/lib/chromium-dev/chromium" \
    linux_strip_binary=1 \
    linux_use_gold_binary=0 \
    linux_use_gold_flags=0 \
    linux_use_libgps=1 \
    linux_use_tcmalloc=0 \
    no_strict_aliasing=1 \
    proprietary_codecs=1 \
    release_extra_cflags="${CFLAGS}" \
    remove_webcore_debug_symbols=1 \
    target_arch="${_target_arch}" \
    usb_ids_path="/usr/share/hwdata/usb.ids" \
    use_gconf=0 \
    use_gnome_keyring="${_use_gnome}" \
    use_pulseaudio="${_use_pulseaudio}" \
    use_system_bzip2=1 \
    use_system_flac=1 \
    use_system_ffmpeg=1 \
    use_system_harfbuzz=1 \
    use_system_jsoncpp=1 \
    use_system_icu=1 \
    use_system_libevent=1 \
    use_system_libexpat=1 \
    use_system_libjpeg=1 \
    use_system_libpng=1 \
    use_system_libsrtp=0 \
    use_system_libusb=1 \
    use_system_libvpx=0 \
    use_system_libwebp=0 \
    use_system_libxml=1 \
    use_system_mesa=1 \
    use_system_minizip=1 \
    use_system_nspr=1 \
    use_system_opus=1 \
    use_system_protobuf=1 \
    use_system_re2=0 \
    use_system_speex=1 \
    use_system_sqlite=0 \
    use_system_ssl=0 \
    use_system_v8=0 \
    use_system_xdg_utils=1 \
    use_system_yasm=1 \
    use_system_zlib=1 \
    werror= \
  "

  if [ "${_use_clang}" = "1" ]; then
    GYP_DEFINES+="clang=1 clang_use_chrome_plugins=1 "
  else
    GYP_DEFINES+="gcc_version=48 "
  fi

  export GYP_DEFINES

  build/gyp_chromium -f make --depth=. build/all.gyp

  make V=1 BUILDTYPE=Release chrome chrome_sandbox chromedriver
}

package() {
  cd "${srcdir}/chromium"

  install -Dm644 "${srcdir}/default" "${pkgdir}/etc/chromium-dev/default"
  install -Dm755 "${srcdir}/chromium-dev.sh" "${pkgdir}/usr/bin/chromium-dev"
  install -Dm755 out/Release/chrome "${pkgdir}/usr/lib/chromium-dev/chromium"
  install -Dm4755 -o root -g root out/Release/chrome_sandbox "${pkgdir}/usr/lib/chromium-dev/chromium-sandbox"
  install -Dm755 out/Release/chromedriver "${pkgdir}/usr/lib/chromium-dev/chromiumdriver"
  install -Dm644 out/Release/{chrome,chrome_100_percent,chrome_remote_desktop,content_resources,resources}.pak "${pkgdir}/usr/lib/chromium-dev"
#  install -Dm755 out/Release/libffmpegsumo.so "${pkgdir}/usr/lib/chromium-dev/libffmpegsumo.so"
  install -d "${pkgdir}/usr/lib/chromium-dev/locales"
  for i in out/Release/locales/*; do  install -Dm644 "$i" "${pkgdir}/usr/lib/chromium-dev/locales"; done
  install -Dm644 "${srcdir}/chromium-dev.desktop" "${pkgdir}/usr/share/applications/chromium-dev.desktop"
  install -Dm644 out/Release/chrome.1 "${pkgdir}/usr/share/man/man1/chromium-dev.1"
  install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/chromium-dev/LICENSE"
  for _size in 16 22 24 32 48 128 256; do
    case ${_size} in
      16|32) branding="chrome/app/theme/default_100_percent/chromium" ;;
      *) branding="chrome/app/theme/chromium" ;;
    esac
    install -Dm644 "${branding}/product_logo_${_size}.png" "${pkgdir}/usr/share/icons/hicolor/${_size}x${_size}/apps/chromium-dev.png"
  done
  install -Dm755 out/Release/libppGoogleNaClPluginChrome.so "${pkgdir}/usr/lib/chromium-dev/libppGoogleNaClPluginChrome.so"
  install -Dm755 out/Release/nacl_helper{,_bootstrap} "${pkgdir}/usr/lib/chromium-dev"
  [ "${CARCH}" = "i686" ] && install -Dm755 out/Release/nacl_irt_x86_32.nexe "${pkgdir}/usr/lib/chromium-dev/nacl_irt_x86_32.nexe"
  [ "${CARCH}" = "x86_64" ] && install -Dm755 out/Release/nacl_irt_x86_64.nexe "${pkgdir}/usr/lib/chromium-dev/nacl_irt_x86_64.nexe"

  # Extract and install PepperFlash
  if [ "${_use_pepperflash}" = "1" ]; then
    msg2 "Adding PepperFlash"
    cd "${srcdir}"
    bsdtar -xf "google-chrome-unstable-${_rpm_ver}-${_rpm_build}.${_rpm_arch}.rpm" opt/google/chrome/PepperFlash
    install -d "${pkgdir}/usr/lib/chromium-dev/PepperFlash"
    for i in "${srcdir}/opt/google/chrome/PepperFlash/"*; do install -Dm644 "$i" "${pkgdir}/usr/lib/chromium-dev/PepperFlash"; done
    chmod 775 "${pkgdir}/usr/lib/chromium-dev/PepperFlash/libpepflashplayer.so"
    rm -fr "${srcdir}/opt"
  fi

  # Extract and install libpdf.so
  if [ "${_use_libpdf}" = "1" ]; then
    msg2 "Adding libpdf"
    cd "${srcdir}"
    bsdtar -xf "google-chrome-unstable-${_rpm_ver}-${_rpm_build}.${_rpm_arch}.rpm" opt/google/chrome/libpdf.so
    install -Dm755 "${srcdir}/opt/google/chrome/libpdf.so" "${pkgdir}/usr/lib/chromium-dev/libpdf.so"
    rm -rf "${srcdir}/opt"
  fi
}
