# Maintainer: skydrome <skydrome@i2pmail.org>
# Contributor: skydrome <skydrome@i2pmail.org>

########[ OPTIONS ]########################################
## Clone i2p from github
__gitroot="git://github.com/i2p/i2p.i2p.git"

## Clone i2p through i2p
# Add and Start a new Standard client tunnel with the following settings:
#   Name: pull.git.repo.i2p
#   Port: 9450  or some other unused port
#   Tunnel Destination: 3so7htzxzz6h46qvjm3fbd735zl3lrblerlj2xxybhobublcv67q.b32.i2p
#__gitroot="git://127.0.0.1:9450/i2p.i2p.git"

####[ BUILD OPTIONS ]####
# Build multi language translations
_multilang=0

## Build current java service wrapper
_build_wrapper=1
_wrapper_ver=3.5.17
###########################################################

pkgname=i2p-dev
pkgver=0.9.4
pkgrel=4
pkgdesc="A distributed anonymous network (daily mtn->git sync)"
url="http://www.i2p2.de"
license=('GPL2')
arch=('x86_64' 'i686' 'armv6h')
depends=('java-environment' 'bash' 'libxtst' 'schedtool')
makedepends=('apache-ant' 'git')
[[ "$_multilang" = 1 ]] && depends+=('gettext')
optdepends=('gtk2: for rrd graphs')
conflicts=('i2p' 'i2p-bin' 'i2p-portable' 'i2p-portable-source')
provides=('i2p')
backup=('opt/i2p/wrapper.config'
        'opt/i2p/clients.config'
        'opt/i2p/i2psnark.config'
        'opt/i2p/i2ptunnel.config'
        'opt/i2p/i2prouter')
install='i2p.install'
source=('i2prouter.service' 'i2prouter.rc' 'schedtool.patch')
sha256sums=('77105f3a4c52467fa5e70c3b2cf6a8435744760c53feb1358773191e746207b1'
            '68e2cdc7bd85b38679fcc59f9aeb15ccc42bf0dffe3a2389040fd450006c80d0'
            'e001698938d68f075456ecce80c7778d6895a50c5917aeb81c1bdbd4d99ac8b2')

[[ "$_build_wrapper" = 1 ]] && {
    source+=("https://wrapper.tanukisoftware.com/download/${_wrapper_ver}/wrapper_${_wrapper_ver}_src.tar.gz")
    sha256sums+=('e4432fdef6cfc1d19d8571429c8554748ec21ffa9fecabd464f5f12ec5160f9b')
}

build() {
    cd "$srcdir"
    if [ -d "i2p.i2p/.git" ]; then
        msg "Cleaning repo..."
        cd "i2p.i2p"
        git clean -xdf 2&>/dev/null
        git pull --depth 1 origin
        msg "The local repository was updated."
    else
        msg "Connecting to GIT server..."
        git clone --depth 1 ${__gitroot}
        cd "i2p.i2p"
        msg "The remote repository was cloned."
    fi

    [[ "$_multilang" = 0 ]] && export LG2=en
    patch -uNp0 -i ${srcdir}/schedtool.patch
    source /etc/profile.d/apache-ant.sh
    ant installer-linux

    cd core/c/
    mkdir -p t/freenet/support/CPUInformation t/net/i2p/util
    (
        cd jbigi
        ./build.sh dynamic notest
        cp lib/*.so ../t/

        if [[ "$CARCH" != @(arm)* ]]; then
            cd ../jcpuid
            ./build.sh
            cp lib/freenet/support/CPUInformation/*.so ../t/
        fi
    )
    cd t
    jar cf ../jbigi.jar .

    if [[ "$_build_wrapper" = 1 ]]; then
        msg "Starting wrapper build..."
        cd "$srcdir/wrapper_${_wrapper_ver}_src"
        [[ "$CARCH" = "x86_64" ]] && _arch=64 || _arch=32
        ./build${_arch}.sh
    fi
}

package() {
    cd "$srcdir/i2p.i2p"
    echo "INSTALL_PATH=${pkgdir}/opt/i2p" >install.properties
    java -jar i2pinstall_${pkgver}*.jar -options install.properties

    sed -i $pkgdir/opt/i2p/{i2prouter,wrapper.config,runplain.sh,eepget} \
        -e "s:$pkgdir/opt/i2p:/opt/i2p:g"
    sed -i $pkgdir/opt/i2p/i2prouter \
        -e "s:I2P_CONFIG_DIR=.*:I2P_CONFIG_DIR=\"\$I2P/.i2p\":"
    sed -i $pkgdir/opt/i2p/clients.config \
        -e "s:clientApp.4.startOnLoad=.*:clientApp.4.startOnLoad=false:"
    echo 'router.updateDisabled=true' >${pkgdir}/opt/i2p/router.config

    install -d "${pkgdir}/usr/share/licenses/i2p/"
    install -Dm644 ${srcdir}/i2p.i2p/core/c/jbigi.jar             "${pkgdir}/opt/i2p/lib/jbigi.jar"
    install -Dm644 ${srcdir}/i2p.i2p/core/c/jbigi/lib/libjbigi.so "${pkgdir}/opt/i2p/libjbigi.so"
    [[ "$CARCH" != @(arm)* ]] &&
    install -Dm644 ${srcdir}/i2p.i2p/core/c/jcpuid/lib/freenet/support/CPUInformation/*.so "${pkgdir}/opt/i2p/libjcpuid.so"
    install -Dm755 ${srcdir}/i2prouter.rc            "${pkgdir}/etc/rc.d/i2prouter"
    install -Dm644 ${srcdir}/i2prouter.service       "${pkgdir}/usr/lib/systemd/system/i2prouter.service"
    install -Dm644 ${pkgdir}/opt/i2p/man/eepget.1    "${pkgdir}/usr/share/man/man1/eepget.1"
    install -Dm644 ${pkgdir}/opt/i2p/man/i2prouter.1 "${pkgdir}/usr/share/man/man1/i2prouter.1"
    mv ${pkgdir}/opt/i2p/LICENSE.txt                 "${pkgdir}/usr/share/licenses/i2p/"
    mv ${pkgdir}/opt/i2p/licenses/*                  "${pkgdir}/usr/share/licenses/i2p/"

    if [[ "$_build_wrapper" = 1 ]]; then
        cd "$srcdir/wrapper_${_wrapper_ver}_src"
        install -m644 bin/wrapper       "${pkgdir}/opt/i2p/i2psvc"
        install -m644 lib/wrapper.jar   "${pkgdir}/opt/i2p/lib/wrapper.jar"
        install -m644 lib/libwrapper.so "${pkgdir}/opt/i2p/lib/libwrapper.so"
    fi

    rm -r ${pkgdir}/opt/i2p/{Uninstaller,.installationinformation,INSTALL-headless.txt,licenses,man}
    chmod 750 ${pkgdir}/opt/i2p
    chmod -x  ${pkgdir}/opt/i2p/*.config
}
