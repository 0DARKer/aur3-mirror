# Maintainer: skydrome <skydrome@i2pmail.org>
# Contributor: skydrome <skydrome@i2pmail.org>

########[ OPTIONS ]########################################
# Comment out if you want to build all language translations
export LG2=en

## Clone i2p from github
#_gitroot="git://github.com/i2p/i2p.i2p.git"
_gitroot="git://github.com/skydrome/i2p.i2p.git"

## Clone i2p through i2p
# Add and Start a new Standard client tunnel with the following settings:
#   Name: pull.git.repo.i2p
#   Port: 9450  or some other unused port
#   Tunnel Destination: 3so7htzxzz6h46qvjm3fbd735zl3lrblerlj2xxybhobublcv67q.b32.i2p
#_gitroot="git://127.0.0.1:9450/i2p.i2p.git"
###########################################################

pkgname=i2p-dev
pkgver=0.9.5
pkgrel=3
pkgdesc="A distributed anonymous network (daily mtn->git sync)"
url="http://www.i2p2.de"
license=('GPL2')
arch=('x86_64' 'i686' 'armv6h')
depends=('java-environment' 'gmp' 'java-service-wrapper')
makedepends=('apache-ant' 'git')
optdepends=('gtk2: for rrd graphs')
conflicts=('i2p' 'i2p-bin' 'i2p-portable' 'i2p-portable-source')
provides=('i2p')
backup=('opt/i2p/wrapper.config')
install='i2p.install'
source=('tmpfiles.d' 'i2prouter.service' 'i2prouter.sh')
sha256sums=('875a979992c789d8191ecc17c9e43063d5dd90215afd7101c5019e3fdc3fc8a4'
            '05741e9dcbe004ff79ecd5c8bfbcf13ead4a9351f5c5cc3185bd464038805e5f'
            'db60360b085bb1903c0877af4d33402b0a2f49101b663f9efdd3fe898d139fda')

build_jbigi() {
    msg "Building libjbigi..."
    cd ${srcdir}/i2p.i2p/core/c/jbigi
    CFLAGS+=" -fPIC -Wall"
    INCLUDES="-I./jbigi/include -I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux"
    LDFLAGS="-shared -Wl,-O1,--sort-common,-z,relro,-soname,libjbigi.so"
    echo "gcc -c ${CFLAGS} ${INCLUDES} jbigi/src/jbigi.c"
    gcc -c ${CFLAGS} ${INCLUDES} jbigi/src/jbigi.c
    echo "gcc ${LDFLAGS} ${INCLUDES} -o libjbigi.so jbigi.o -lgmp"
    gcc ${LDFLAGS} ${INCLUDES} -o libjbigi.so jbigi.o -lgmp
    install -Dm644 libjbigi.so "${srcdir}/i2p.i2p/pkg-temp/lib/libjbigi.so"
}

build_jcpuid() {
if [[ "$CARCH" != @(arm)* ]]; then
    msg "Building libjcpuid..."
    cd ${srcdir}/i2p.i2p/core/c/jcpuid
    INCLUDES="-I./include -I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux"
    LDFLAGS="-shared -Wl,-O1,--sort-common,-z,relro,-soname,libjcpuid-${CARCH}-linux.so"
    echo "gcc ${CFLAGS} ${LDFLAGS} ${INCLUDES} src/jcpuid.c -o libjcpuid-${CARCH}-linux.so"
    gcc ${CFLAGS} ${LDFLAGS} ${INCLUDES} src/jcpuid.c -o libjcpuid-${CARCH}-linux.so
    install -Dm644 libjcpuid-${CARCH}-linux.so "${srcdir}/i2p.i2p/pkg-temp/lib/libjcpuid.so"
fi
}

build() {
    cd "$srcdir"
    if [[ -d "i2p.i2p/.git" ]]; then
        msg "Cleaning repo..."
        cd "i2p.i2p"
        git clean -xdf 2&>/dev/null
        git pull --depth 1
        msg "The local repository was updated."
    else
        msg "Connecting to ${_gitroot} ..."
        git clone --depth 1 ${_gitroot}
        cd "i2p.i2p"
        msg "The remote repository was cloned."
    fi

    source /etc/profile.d/apache-ant.sh
    source /etc/profile.d/jdk.sh

    sed -i router/java/build.xml core/java/build.xml \
        -e 's:target="1.5":target="1.6":'

    ant preppkg-linux
    build_jbigi
    build_jcpuid
}

package() {
    cd "$srcdir/i2p.i2p"

    install -dm700   ${pkgdir}/run/i2p
    install -dm755   ${pkgdir}/usr/bin
    install -dm755   ${pkgdir}/opt/i2p

    cp -r pkg-temp/* ${pkgdir}/opt/i2p

    install -Dm755 ${srcdir}/i2prouter.sh         "${pkgdir}/opt/i2p/i2prouter"
    install -Dm644 ${srcdir}/i2prouter.service    "${pkgdir}/usr/lib/systemd/system/i2prouter.service"
    install -Dm644 ${srcdir}/tmpfiles.d           "${pkgdir}/usr/lib/tmpfiles.d/i2prouter.conf"
    install -Dm644 ${pkgdir}/opt/i2p/man/eepget.1 "${pkgdir}/usr/share/man/man1/eepget.1"
    install -Dm644 ${pkgdir}/opt/i2p/LICENSE.txt  "${pkgdir}/usr/share/licenses/i2p/LICENSE"
    mv ${pkgdir}/opt/i2p/licenses/*               "${pkgdir}/usr/share/licenses/i2p/"

    chmod +x ${pkgdir}/opt/i2p/eepget
    ln -s /opt/i2p/{eepget,i2prouter} ${pkgdir}/usr/bin/

    rm -r ${pkgdir}/opt/i2p/{osid,postinstall.sh,runplain.sh,INSTALL-headless.txt,LICENSE.txt,licenses,man,lib/wrapper}

    sed -i $pkgdir/opt/i2p/{eepget,wrapper.config} \
        -e 's:%INSTALL_PATH:/opt/i2p:g' \
        -e 's:$INSTALL_PATH:/opt/i2p:g' \
        -e 's:$SYSTEM_java_io_tmpdir:/opt/i2p:g' \
        -e 's:wrapper.signal.mode.usr1=.*:wrapper.signal.mode.usr1=RESTART:'
    sed -i $pkgdir/opt/i2p/clients.config \
        -e "s:clientApp.4.startOnLoad=.*:clientApp.4.startOnLoad=false:"
    sed -i $pkgdir/opt/i2p/wrapper.config \
        -e '/wrapper.java.classpath.1/a \wrapper.java.classpath.2=/usr/share/java/wrapper.jar' \
        -e '/wrapper.java.library.path.2/a \wrapper.java.library.path.3=/usr/lib/java-service-wrapper'
    echo 'router.updateDisabled=true' >${pkgdir}/opt/i2p/router.config
}
