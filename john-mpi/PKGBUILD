#Contributor: MatToufoutu <mattoufootu[at]gmail[dot]com>
#Contributor: Jan Lieven jan[at]das<minus>labor(dot)org

pkgname=john-mpi
pkgver=1.7.6
pkgrel=1
arch=('i686' 'x86_64')
pkgdesc='JohnTheRipper password cracker with Jumbo patch and MPI support'
url='http://openwall.info'
license=('GPL')
provides=('john')
conflicts=('john' 'john-latest')
depends=('mpich2')

source=("http://www.openwall.com/john/g/john-${pkgver}.tar.gz"
        "http://www.openwall.com/john/contrib/john-${pkgver}-jumbo-3.diff.gz"
	"http://openwall.info/wiki/_media/john/john-${pkgver}-fullmpi8-after-jumbo3.diff.gz"
        "params.h.patch")

build() {
    cd ${srcdir}/john-${pkgver}/

    msg "Applying patches..."
    patch -p1 < ${srcdir}/john-${pkgver}-jumbo-3.diff
    patch -p0 < ${srcdir}/params.h.patch || return 1
    patch -p1 < ${srcdir}/john-${pkgver}-fullmpi8-after-jumbo3.diff || return 1

    msg "Starting build..."
    cd src
    if [ "$CARCH" == "x86_64" ]; then
        make linux-x86-64 || return 1
    else
        make linux-x86-sse2 || return 1
    fi

    msg "Installing files..."
    cd ..
}

package() {
    cd ${srcdir}/john-${pkgver}/
    #config file
    msg2 "Configuration file"
    install -d ${pkgdir}/etc/john/
    sed -i 's|$JOHN|/usr/share/john|g' run/john.conf || return 1
    install -m644 run/john.conf ${pkgdir}/etc/john/john.conf || return 1

    #docs
    msg2 "Documentation"
    install -d ${pkgdir}/usr/share/doc/john/
    install -m644 doc/* ${pkgdir}/usr/share/doc/john/ || return 1

    #wordlists, charset and stats files
    msg2 "Wordlists, charset and stats files"
    install -d ${pkgdir}/usr/share/john/
    install -m644 run/{{all,alnum,alpha,digits,lanman}.chr,password.lst,stats} ${pkgdir}/usr/share/john/ || return 1

    #binaries
    msg2 "John binaries"
    install -d ${pkgdir}/usr/bin/
    install -m755 run/john ${pkgdir}/usr/bin/john || return 1
    install -m755 run/mailer ${pkgdir}/usr/bin/john-mailer || return 1
    install -m755 run/netntlm.pl ${pkgdir}/usr/bin/john-netntlm || return 1
    install -m755 run/sap_prepare.pl ${pkgdir}/usr/bin/john-sap_prepare || return 1
    install -m755 run/sha-dump.pl ${pkgdir}/usr/bin/john-ldap-dump || return 1
    install -m755 run/netscreen.py ${pkgdir}/usr/bin/john-netscreen || return 1
    install -m755 run/genincstats.rb ${pkgdir}/usr/bin/john-genincstats || return 1

    #additional binaries
    msg2 "Additional binaries"
    install -d ${pkgdir}/usr/sbin/
    install -m755 run/genmkvpwd ${pkgdir}/usr/sbin/genmkvpwd || return 1
    install -m755 run/calc_stat ${pkgdir}/usr/sbin/calc_stat || return 1
    install -m755 run/mkvcalcproba ${pkgdir}/usr/sbin/mkvcalcproba || return 1
    install -m755 run/tgtsnarf ${pkgdir}/usr/sbin/tgtsnarf || return 1
    
    #symlinks
    msg2 "Symlinks"
    cd ${pkgdir}/usr/bin/
    ln -s john unafs
    ln -s john unique
    ln -s john unshadow
    ln -s john undrop
}

sha256sums=('77e44d068d317648c41d3ac61b8ea1df18d5c7401083e7a4f6681816900c1a73'
            'd68f74460b18b51d3d794381ba1a79af1674ed4a5fb9fe1de356035322158f3d'
            'db7fc9e05f904d0220bf7729c264dfd1761faa77015d3c618d3ec032c1c147bb'
            '159bb6f742d81bea23dbbb6fe3cecaece6b8f19005defcbf97fca04913acab72')
