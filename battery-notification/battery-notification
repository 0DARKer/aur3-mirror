#!/bin/bash

AC_0="/usr/share/battery-notification/icons/ac-0.png"
AC_25="/usr/share/battery-notification/icons/ac-25.png"
AC_50="/usr/share/battery-notification/icons/ac-50.png"
AC_75="/usr/share/battery-notification/icons/ac-75.png"
AC_FULL="/usr/share/battery-notification/icons/ac-full.png"
BAT_0="/usr/share/battery-notification/icons/bat-0.png"
BAT_25="/usr/share/battery-notification/icons/bat-25.png"
BAT_50="/usr/share/battery-notification/icons/bat-50.png"
BAT_75="/usr/share/battery-notification/icons/bat-75.png"
BAT_FULL="/usr/share/battery-notification/icons/bat-full.png"
BAT_WARNING="/usr/share/battery-notification/icons/bat-warning.png"

ON_AC=0
BAT_STATUS=0
MINIMUM_BAT=10
SUSPEND_VALUE=6
SUSPEND=1	# When 1: Suspend when the battery is lower than SUSPEND_VALUE
SUSPEND_LOCK=0
UPDATE_INTERVAL=1 # Seconds
AC_MESSAGE="AC Online"
BAT_MESSAGE="AC Offline"
DISPLAY_ONCE=0

. /etc/battery-notification.conf
#------

update_ac_status()
{
ON_AC=0
FOUND_SYS_CLASS_POWER_SUPPLY_AC=0
for POWER_SUPPLY in /sys/class/power_supply/* ; do
	if [ -f $POWER_SUPPLY/type ] ; then
		if [ "$(cat $POWER_SUPPLY/type)" = "Mains" ] ;then
			FOUND_SYS_CLASS_POWER_SUPPLY_AC=1
			if [ "$(cat $POWER_SUPPLY/online)" = 1 ] ; then
				ON_AC=1
			fi
		fi
	fi
done

if [ $FOUND_SYS_CLASS_POWER_SUPPLY_AC = 1 ] ; then
	# Already found it!
	/bin/true
elif [ -d /proc/acpi/ac_adapter ] ; then
	ADAPTERS_FOUND=0
	ON_AC=0
	for ADAPTER in /proc/acpi/ac_adapter/* ; do
		if [ -f $ADAPTER/state ] ; then
			ADAPTERS_FOUND=1
			STATUS=`awk '/^state: / { print $2 }' $ADAPTER/state`
			if [ "$STATUS" = "on-line" ] ; then
				ON_AC=1
			fi
		fi
	done
	if [ "$ADAPTERS_FOUND" -eq 0 ] ; then
		ON_AC=1
	fi
elif [ -f /proc/pmu/info ] ; then
	if ( grep -q "^AC Power.*0$" /proc/pmu/info ) ; then
		ON_AC=0
	else
		# It is possible that there is no AC Power = 1 in the file,
		# but we always assume AC power when we're not sure.
		ON_AC=1
	fi
elif [ -f /proc/apm ] ; then
	read D1 D2 D3 APM_AC_STATE D0 </proc/apm
	if [ "$APM_AC_STATE" = "0x00" ] ; then
		ON_AC=0
	else
		ON_AC=1
	fi
else
	ON_AC=1
fi
}


update_bat_status ()
{
	BAT_STATUS="$(acpi | sed 's|%.*||g' | sed 's|.*,||g' | sed 's| ||g')"
}

update_notification ()
{
	update_ac_status
	update_bat_status

	if [ "$ON_AC" -eq 1 ]; then
		if [ "$BAT_STATUS" -ge 80 ]; then
   		echo "icon:$AC_FULL" >&3
		elif [ "$BAT_STATUS" -ge 65 ] && [ "$BAT_STATUS" -lt 81 ]; then
   		echo "icon:$AC_75" >&3
		elif [ "$BAT_STATUS" -ge 35 ] && [ "$BAT_STATUS" -lt 66 ]; then
   		echo "icon:$AC_50" >&3
		elif [ "$BAT_STATUS" -ge $MINIMUM_BAT ] && [ "$BAT_STATUS" -lt 36 ]; then
   		echo "icon:$AC_25" >&3
		else
			echo "icon:$AC_0" >&3
		fi

		if [ "$DISPLAY_ONCE" -eq 1 ]; then
			DISPLAY_ONCE=2
			echo "message:$AC_MESSAGE" >&3
		elif [ "$DISPLAY_ONCE" -eq 0 ]; then
			DISPLAY_ONCE=2
		fi		
	else
		if [ "$BAT_STATUS" -ge 80 ]; then
   		echo "icon:$BAT_FULL" >&3
		elif [ "$BAT_STATUS" -ge 65 ] && [ "$BAT_STATUS" -lt 81 ]; then
   		echo "icon:$BAT_75" >&3
		elif [ "$BAT_STATUS" -ge 35 ] && [ "$BAT_STATUS" -lt 66 ]; then
   		echo "icon:$BAT_50" >&3
		elif [ "$BAT_STATUS" -ge $MINIMUM_BAT ] && [ "$BAT_STATUS" -lt 36 ]; then
   		echo "icon:$BAT_25" >&3
		else
			echo "icon:$BAT_0" >&3
			sleep 0.6
			echo "icon:$BAT_WARNING" >&3
		fi

		if [ "$DISPLAY_ONCE" -eq 2 ]; then
			DISPLAY_ONCE=1
			echo "message:$BAT_MESSAGE" >&3
		elif [ "$DISPLAY_ONCE" -eq 0 ]; then
			DISPLAY_ONCE=1
		fi	

		if [ "$SUSPEND_LOCK" -eq 0 ] && [ "$SUSPEND" -eq 1 ] && [ "$BAT_STATUS" -lt $SUSPEND_VALUE ]; then
				SUSPEND_LOCK=1
				dbus-send --system --print-reply --dest=org.freedesktop.Hal \
/org/freedesktop/Hal/devices/computer \
org.freedesktop.Hal.Device.SystemPowerManagement.Suspend int32:0
		fi

		if [ "$SUSPEND_LOCK" -eq 1 ] && [ "$BAT_STATUS" -ge $SUSPEND_VALUE ];then
			SUSPEND_LOCK=0
		fi
	fi
}


##---

exec 3> >(zenity --notification --listen)
echo "tooltip:battery-notification" >&3

while(true)
do
	update_notification

	sleep $UPDATE_INTERVAL
done



