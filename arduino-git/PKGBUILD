# Maintainer: ente <ducksource@duckpond.ch>
pkgname=arduino-git
pkgver=1.0
pkgrel=1
pkgdesc="Arduino SDK (compile directly from git)"
arch=('i686' 'x86_64')
url="http://arduino.cc/en/Main/Software"
license=('GPL')
options=(!strip)
depends=('avr-libc' 'libusb-compat' 'java-runtime')
makedepends=('wget' 'tar' 'git' 'apache-ant' )
install="arduino-git.install"

#The final installation directory
install_dir="/usr/share/"
dstdir=''

#Build Methods..
default_btmethod=1

#Wget
wget_dir="arduino_wget"
wget_download="https://github.com/arduino/Arduino/tarball/master"

#Git
git_dir="arduino_git"
git_root="git://github.com/arduino/Arduino.git"

ant_profile="/etc/profile.d/apache-ant.sh"

build() {
	# Select build-method
	msg "Select build-method:"
	msg "- git (First time huge download. On update only download changed Files): 0"
	msg "- Wget (Always download all files): 1"
	msg "[${default_btmethod}] :"
	read -r select
	btmethod=$(echo $select | sed -n -r -e 's/^[^0-9]*([0-9]).*$/\1/p')

	if [ "$btmethod" == '' ]; then
		btmethod=$default_btmethod
	fi

	#Download
	case "$btmethod" in 
	'0')
		msg "Building from ${git_root} using git"

		dstdir="${srcdir}/${git_dir}"

		# Git-dir exist try only pulling
		if [ -d "${dstdir}" ]; then
			msg "Updating local files"
			cd "${dstdir}"
			git pull "${git_root}"
		else 
			msg "Cloning from ${git_root}"
			mkdir -p "$dstdir" 
			git clone "$git_root" "$dstdir"
		fi

	;;	
	'1')
		msg "Building from ${wget_download} using wget"
		wget -N ${wget_download}
		# Get name of downloaded file
		tarname=$(basename ${wget_download})
		# Get Destination extract-dir
		tardir=$(tar -tf "$tarname" | sed -r -n -e 's/^([^\/]+).*/\1/p' | uniq)
		if [ ! -n $tarname ]  || [ ! -n $tardir ]; then
			error "tarname or tardir emtpy!"
			error "tarname := ${tarname}"
			error "tardir := ${tardir}"
			error "Please report this issue!"
			exit
		fi

		if [ -d "${wget_dir}" ]; then
			rm -rf "$wget_dir"
		fi

		#Unpack & move 
		tar -xf "$tarname"
		mv "$tardir" "$wget_dir"

		#Set dstdir
		dstdir="${srcdir}/${wget_dir}"
	;;
	esac


	# Sourcing apache-ant-profile
	msg "Sourcing ant-path"
	if [ ! -x "$ant_profile" ]; then
		echo "Cannot source apache ant!" >&2
	fi
	. /etc/profile.d/apache-ant.sh
	
	# Build ide
	msg "Building Arduino"
	cd "${dstdir}/build"
	ant linux64-dist
	cd "${srcdir}"

	mv "${dstdir}/build/linux/arduino-\${version}-linux.tgz" "${srcdir}/arduino.tgz"
}

package() {
	# Make directory structure
	msg "Copy to ${pkgdir}"
	tar -xvf "arduino.tgz" -C "${pkgdir}"
	mkdir -p "${pkgdir}/${install_dir}"

	arduino_install_dir="${install_dir}/arduino-${pkgver}"
	
	mv "${pkgdir}/arduino-\${version}" "${pkgdir}/${arduino_install_dir}"

	# Add arduino-path to profile.d
	mkdir -p "${pkgdir}/etc/profile.d"

	cat > "${pkgdir}/etc/profile.d/arduino-git.sh" <<EOF
export ARDUINO_HOME=${arduino_install_dir}
export PATH=\$PATH:\$ARDUINO_HOME
EOF
	cat > "${pkgdir}/etc/profile.d/arduino-git.csh" <<EOF
setenv ARDUINO_HOME=${arduino_install_dir}
setenv PATH=\$PATH:\$ARDUINO_HOME
EOF

}

