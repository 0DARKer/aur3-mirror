# Contributor: giniu <gginiu@gmail.com>
# Package partially based on icc package by Nicolas Bigaouette

pkgname=intel-mkl
_mklver=10.3
_mklupdate=2
pkgver=${_mklver}.${_mklupdate}
_urlnumber=2058
_build=137
_compilerver=12.0
_composerver=2011

pkgrel=1
pkgdesc="Intel Math Kernel Library, for non-commercial use"
arch=('i686' 'x86_64')
url="http://software.intel.com/en-us/intel-mkl/"
license=('custom')
makedepends=('cpio')
if [ "$CARCH" = "i686" ]
then
  _intel_arch=ia32
  _archive_md5='05ee150890495525506d20100ca1a7c2'
else
  _intel_arch=intel64
  _archive_md5='85647586b6b6427881536756de0230cd'
fi
_archive=l_mkl_${_mklver}.${_mklupdate}.${_build}_${_intel_arch}
_common_url=http://registrationcenter-download.intel.com/irc_nas/${_urlnumber}
source=(${_common_url}/${_archive}.tgz
        http://software.intel.com/sites/products/documentation/hpc/mkl/userguides/mkl_userguide_lnx.pdf
        ${_common_url}/mklnotes.htm
        silent.ini)
md5sums=($_archive_md5
         '624e3c49cdcd1052f45fc13244c17403'
         '85985b7afd9b598659c4cf8448dc2194'
         '32e6a3398e2625a816b8c894fbf88fae')

build() {
  cd "${srcdir}"/${_archive}

  rm -rf "${srcdir}"/.home.dir.exists
  if [ -e /home/"$USER"/intel ]
  then
    if [ -d /home/"$USER"/intel ]
    then
      touch "${srcdir}"/.home.dir.exists
      msg "Found directory /home/${USER}/intel"
      msg "        this directory will be used by Intel script and cannot be removed afterwards,"
      msg "        it might require some cleaning after makepkg finishes"
    else
      msg "Found file /home/${USER}/intel"
      msg "        install script uses directory named intel in builders home."
      msg "        Installation cannot be continued"
      return 1
    fi
  else
    msg "Directory /home/${USER}/intel will be created and removed after packaging ends"
  fi

  _licensefile_nb=0
  for f in /opt/intel/licenses/*.lic; do
    _licensefile[_licensefile_nb]=$f
    _licensefile_nb=$(($_licensefile_nb+1))
  done
  if [[ ! -f "${_licensefile[0]}" ]]; then
    msg "ERROR:"
    msg "         Due to a requirement in Intel's installation script, the"
    msg "         license file needs to be placed in /opt/intel/licenses/"
    msg "         BEFORE calling 'makepkg'."
    msg "         Please copy it there NOW and re-run 'makepkg':"
    msg "         $ sudo mkdir -p /opt/intel/licenses/"
    msg "         $ sudo cp NCOM_L_CMP__*.lic /opt/intel/licenses/"
    msg "         $ makepkg"
    msg "Aborting."
    return 1
  fi

  msg "Unpacking..."
  rm -rf "${srcdir}"/tmp
  mkdir "${srcdir}"/tmp
  sed -e "s|PSET_INSTALL_DIR=.*|PSET_INSTALL_DIR=${pkgdir}/opt/intel|g" "${srcdir}"/silent.ini > ./silent.ini
  ./install.sh -t "${srcdir}"/tmp -s silent.ini -l default || return 1
}

# Install script do not work with fakeroot unfortunatelly, fixes?
package() {
  if [ -e "${srcdir}"/.home.dir.exists ]
  then
    msg "You might want to delete or cleanup this folder:"
    msg "    /home/${USER}/intel"
    rm "${srcdir}"/.home.dir.exists
  else
    msg "Removing /home/${USER}/intel"
    rm -r /home/"${USER}"/intel
  fi

  msg "Removing '${pkgdir}' from all files containing it"
  grep -irl "${pkgdir}" "${pkgdir}"/opt/intel/* | xargs sed -i "s|${pkgdir}||g" || return 1

  msg "Fixing symlinks"
  cd "${pkgdir}"/opt/intel
  rm compilerpro-${_compilerver}.${_mklupdate}.${_build}
  ln -s composerxe-${_composerver}.${_mklupdate}.${_build} compilerpro-${_compilerver}.${_mklupdate}.${_build}

  msg "Installing release notes, users guide and license file"
  install -D -m 644 "${srcdir}"/${_archive}/license         "${pkgdir}"/usr/share/licenses/${pkgname}/license.txt  || return 1
  install -D -m 644 "${srcdir}"/mkl_userguide_lnx.pdf "${pkgdir}"/usr/share/doc/${pkgname}/Users_Guide.pdf   || return 1
  install -D -m 644 "${srcdir}"/mklnotes.htm      "${pkgdir}"/usr/share/doc/${pkgname}/Relase_Notes.htm  || return 1

  _profile=/etc/profile.d/${pkgname}.sh
  _config_file=/opt/intel/mkl/bin/${_intel_arch}/mklvars_${_intel_arch}.sh
  msg "Installing ${_config_file} as ${_profile}"
  sed "s|^/opt/intel|source /opt/intel|" "${pkgdir}"${_config_file} > "${srcdir}"/${pkgname}.sh
  install -D -m 755 "${srcdir}"/${pkgname}.sh "${pkgdir}"${_profile} || return 1
}

# vim:set ts=2 sw=2 et:
