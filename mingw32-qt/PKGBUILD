# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Denis Martinez <deuns.martinez AT gmail.com>
# Contributor: Alexander 'hatred' Drozdov <adrozdoff AT gmail.com>
# Contributor: mosra <mosra@centrum.cz>
# Contributor: Alexandre Bique <bique.alexandre@gmail.com>

pkgname=mingw32-qt
pkgver=4.8.1
pkgrel=1
pkgdesc="The Qt gui toolkit (mingw32)."
arch=('any')
url="http://qt.nokia.com/"
license=('LGPL')
depends=('mingw32-runtime' 'mingw32-zlib' 'mingw32-libjpeg' 'mingw32-libiconv' 'mingw32-libtiff' 'mingw32-sqlite3' 'mingw32-libpng') #'mingw32-openssl'
makedepends=('mingw32-gcc')
options=(!strip !buildflags !libtool)
_pkgfqn="qt-everywhere-opensource-src-${pkgver}"
source=("ftp://ftp.qt.nokia.com/qt/source/${_pkgfqn}.tar.gz"
        i486-mingw32-qmake
        qplatformdefs.h
        qmake.conf
        qt-dbus-dont-link-to-dbus-1d.patch
	    mingw32-qt-4.8.0-no-webkit-tests.patch
        audio-device-name-fix.patch)
md5sums=('7960ba8e18ca31f0c6e4895a312f92ff'
         '32e7e887cc8d783491db8845296f7753'
         'e3edee8c1b183043198f826fb3171670'
         '9da22e30dff63369b1fa0b73b6bc2629'
         '878ff1ea1ae368647c75cdaa7444ae86'
         '91d01b6d31887f78c7933c04544c5758'
         '31120e7aea52ef9e5e39a628e68d3f0e')

build() {
  cd "${srcdir}/${_pkgfqn}"

  # The debug build tries to link against libdbus-1d which doesn't exist.
  patch -Np0 < ${srcdir}/qt-dbus-dont-link-to-dbus-1d.patch

  # Fix https://bugreports.qt-project.org/browse/QTBUG-21398
  patch -Np2 < ${srcdir}/audio-device-name-fix.patch

  # Disable WebKit tests that are failing (as of Qt 4.8.0 rc1) with
  # out of source builds.
  patch -Np1 < ${srcdir}/mingw32-qt-4.8.0-no-webkit-tests.patch

  # Configure script erroneously disables shared memory support with
  # QT_NO_SHAREDMEMORY. Do some hack here.
  sed -i '5167d' ./configure

  mkdir -p mkspecs/win32-g++-cross
  cp ${srcdir}/qplatformdefs.h mkspecs/win32-g++-cross
  cp ${srcdir}/qmake.conf mkspecs/win32-g++-cross

  export PKG_CONFIG_LIBDIR="/usr/i486-mingw32/lib/pkgconfig"
  unset PKG_CONFIG_PATH

  ./configure -confirm-license -opensource \
      -release \
      -prefix /usr/i486-mingw32 \
      -datadir /usr/i486-mingw32/share/qt \
      -shared \
      -qt3support \
      -verbose \
      -exceptions \
      -fast \
      -confirm-license \
      -force-pkg-config \
      -little-endian \
      -xplatform win32-g++-cross \
      -xmlpatterns \
      -multimedia \
      -audio-backend \
      -webkit \
      -script \
      -scripttools \
      -declarative \
      -no-phonon \
      -qt-libmng \
      -system-zlib \
      -system-libtiff \
      -system-libpng \
      -system-libjpeg \
      -system-sqlite \
      -iconv \
      -nomake demos \
      -nomake examples \
      -nomake docs

  make
}

package() {
  pkgdesc='A cross-platform application and UI framework (mingw32)'

  cd "${srcdir}/${_pkgfqn}"

  make install INSTALL_ROOT=${pkgdir}

  # install qmake
  install -D -m755 bin/qmake ${pkgdir}/usr/i486-mingw32/bin/qmake

  cd "$pkgdir/usr/i486-mingw32"

  # Move plugins to bin/qt-plugins
  mkdir -p bin/qt-plugins
  mv plugins bin/qt-plugins
  
  # Move imports to bin/qt-imports
  mkdir -p bin/qt-imports
  mv imports bin/qt-imports

  # Install only relevant mkspecs
  rm -r share/qt/mkspecs
  mkdir -p ${pkgdir}/usr/share/qt/mkspecs/win32-g++-cross
  cp ${srcdir}/qplatformdefs.h ${pkgdir}/usr/share/qt/mkspecs/win32-g++-cross
  cp ${srcdir}/qmake.conf ${pkgdir}/usr/share/qt/mkspecs/win32-g++-cross

  # Make default mkspec in cross-environment
  mkdir -p ${pkgdir}/usr/i486-mingw32/share/qt/mkspecs
  cd ${pkgdir}/usr/i486-mingw32/share/qt/mkspecs
  ln -s /usr/share/qt/mkspecs/win32-g++-cross default

  # qmake wrapper
  install -D -m755 ${srcdir}/i486-mingw32-qmake ${pkgdir}/usr/bin/i486-mingw32-qmake
}
