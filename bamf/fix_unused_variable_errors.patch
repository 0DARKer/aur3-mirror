=== modified file 'lib/libbamf/bamf-view.c'
--- lib/libbamf/bamf-view.c	2011-01-26 14:15:59 +0000
+++ lib/libbamf/bamf-view.c	2011-04-04 14:49:52 +0000
@@ -556,10 +556,6 @@
 static void
 bamf_view_set_property (GObject *object, guint property_id, const GValue *value, GParamSpec *pspec)
 {
-  BamfView *self;
-
-  self = BAMF_VIEW (object);
-
   switch (property_id)
     {
       default:

=== modified file 'src/bamf-application.c'
--- src/bamf-application.c	2011-03-29 09:37:44 +0000
+++ src/bamf-application.c	2011-04-04 14:56:31 +0000
@@ -530,14 +530,14 @@
   if (BAMF_IS_WINDOW (child))
     {
       if (bamf_view_is_on_bus (child))
-        g_signal_emit (BAMF_APPLICATION (view), application_signals[WINDOW_REMOVED],0, bamf_view_get_path (child));
+        g_signal_emit (application, application_signals[WINDOW_REMOVED],0, bamf_view_get_path (child));
     }
 
   g_signal_handlers_disconnect_by_func (G_OBJECT (child), view_active_changed, view);
   g_signal_handlers_disconnect_by_func (G_OBJECT (child), view_urgent_changed, view);
   g_signal_handlers_disconnect_by_func (G_OBJECT (child), view_visible_changed, view);
 
-  bamf_application_ensure_flags (BAMF_APPLICATION (view));
+  bamf_application_ensure_flags (application);
 
   if (g_list_length (bamf_view_get_children (view)) == 0)
     {

=== modified file 'src/bamf-control.c'
--- src/bamf-control.c	2010-08-18 23:22:58 +0000
+++ src/bamf-control.c	2011-04-04 14:55:07 +0000
@@ -57,8 +57,7 @@
 static void
 bamf_control_init (BamfControl * self)
 {
-  BamfControlPrivate *priv;
-  priv = self->priv = BAMF_CONTROL_GET_PRIVATE (self);
+  self->priv = BAMF_CONTROL_GET_PRIVATE (self);
 }
 
 static void

=== modified file 'src/bamf-legacy-screen.c'
--- src/bamf-legacy-screen.c	2010-06-03 02:41:53 +0000
+++ src/bamf-legacy-screen.c	2011-04-04 14:54:50 +0000
@@ -242,18 +242,13 @@
 static void
 bamf_legacy_screen_dispose (GObject *object)
 {
-  BamfLegacyScreen *self;
-
-  self = BAMF_LEGACY_SCREEN (object);
-
   G_OBJECT_CLASS (bamf_legacy_screen_parent_class)->dispose (object);
 }
 
 static void
 bamf_legacy_screen_init (BamfLegacyScreen * self)
 {
-  BamfLegacyScreenPrivate *priv;
-  priv = self->priv = BAMF_LEGACY_SCREEN_GET_PRIVATE (self);
+  self->priv = BAMF_LEGACY_SCREEN_GET_PRIVATE (self);
 }
 
 static void

=== modified file 'src/bamf-tab-source.c'
--- src/bamf-tab-source.c	2010-05-25 13:47:38 +0000
+++ src/bamf-tab-source.c	2011-04-04 14:57:22 +0000
@@ -339,10 +339,6 @@
 static void
 bamf_tab_source_dispose (GObject *object)
 {
-  BamfTabSource *self;
-
-  self = BAMF_TAB_SOURCE (object);
-
   G_OBJECT_CLASS (bamf_tab_source_parent_class)->dispose (object);
 }
 

=== modified file 'src/bamf-tab.c'
--- src/bamf-tab.c	2010-05-25 13:47:38 +0000
+++ src/bamf-tab.c	2011-04-04 14:57:02 +0000
@@ -157,18 +157,13 @@
 static void
 bamf_tab_dispose (GObject *object)
 {
-  BamfTab *self;
-
-  self = BAMF_TAB (object);
-
   G_OBJECT_CLASS (bamf_tab_parent_class)->dispose (object);
 }
 
 static void
 bamf_tab_init (BamfTab * self)
 {
-  BamfTabPrivate *priv;
-  priv = self->priv = BAMF_TAB_GET_PRIVATE (self);
+  self->priv = BAMF_TAB_GET_PRIVATE (self);
 }
 
 static void

=== modified file 'src/bamf-view.c'
--- src/bamf-view.c	2011-01-26 15:07:24 +0000
+++ src/bamf-view.c	2011-04-04 14:52:27 +0000
@@ -549,10 +549,6 @@
 static void
 bamf_view_set_property (GObject *object, guint property_id, const GValue *value, GParamSpec *pspec)
 {
-  BamfView *self;
-
-  self = BAMF_VIEW (object);
-
   switch (property_id)
     {
       default:
@@ -563,8 +559,7 @@
 static void
 bamf_view_init (BamfView * self)
 {
-  BamfViewPrivate *priv;
-  priv = self->priv = BAMF_VIEW_GET_PRIVATE (self);
+  self->priv = BAMF_VIEW_GET_PRIVATE (self);
 }
 
 static void

=== modified file 'src/bamf-window.c'
--- src/bamf-window.c	2011-01-14 15:53:35 +0000
+++ src/bamf-window.c	2011-04-04 14:55:36 +0000
@@ -306,8 +306,7 @@
 static void
 bamf_window_init (BamfWindow * self)
 {
-  BamfWindowPrivate *priv;
-  priv = self->priv = BAMF_WINDOW_GET_PRIVATE (self);
+  self->priv = BAMF_WINDOW_GET_PRIVATE (self);
 
   g_signal_connect (G_OBJECT (bamf_legacy_screen_get_default ()), "active-window-changed",
 		    (GCallback) active_window_changed, self);

=== modified file 'src/main.c'
--- src/main.c	2010-07-09 08:05:06 +0000
+++ src/main.c	2011-04-04 14:54:24 +0000
@@ -32,9 +32,6 @@
 main (int argc, char **argv)
 {
   GOptionContext *options;
-  BamfControl *control;
-  BamfMatcher *matcher;
-  BamfIndicatorSource *approver;
   DBusGConnection *bus;
   DBusGProxy *bus_proxy;
   GError *error = NULL;
@@ -91,9 +88,9 @@
 
   g_object_unref (G_OBJECT (bus_proxy));
 
-  matcher  = bamf_matcher_get_default ();
-  control  = bamf_control_get_default ();
-  approver = bamf_indicator_source_get_default ();
+  bamf_matcher_get_default ();
+  bamf_control_get_default ();
+  bamf_indicator_source_get_default ();
 
   if (state_file)
     {

=== modified file 'tests/functional/tab-source-test.c'
--- tests/functional/tab-source-test.c	2010-05-18 19:55:44 +0000
+++ tests/functional/tab-source-test.c	2011-04-04 14:58:18 +0000
@@ -25,15 +25,11 @@
 
 int main (int argc, char **argv)
 {
-  BamfMatcher *matcher;
-  BamfControl *control;
-  BamfTabSource *source;
-  
   gtk_init (&argc, &argv);
 
-  matcher = bamf_matcher_get_default ();
-  control = bamf_control_get_default ();
-  source = g_object_new (BAMF_TYPE_TAB_SOURCE, "id", "testingsource", NULL);
+  bamf_matcher_get_default ();
+  bamf_control_get_default ();
+  g_object_new (BAMF_TYPE_TAB_SOURCE, "id", "testingsource", NULL);
   
   gtk_main ();
   return 0;

