# Maintainer:   Lucky <archlinux@builds.lucky.li>
# Based on libtorrent [community]

pkgname=libtorrent-git
_pkgname="${pkgname%-*}"
pkgver=20120123
pkgrel=1
pkgdesc="BitTorrent library written in C++"
url="http://libtorrent.rakshasa.no"
license=("GPL")
arch=("i686" "x86_64")
depends=("libsigc++" "openssl")
makedepends=("cppunit" "git")
options=("!libtool")
conflicts=("${_pkgname}")
provides=("${_pkgname}")
source=()
md5sums=()


_gitname="${_pkgname}"
_gitroot="git://github.com/rakshasa/${_pkgname}.git"
_gitoptions="--depth 1"

build() {
  cd "${srcdir}"

  #GIT {{{
  msg "Connecting to GIT server..."
  if [ -d "${_gitname}/.git" ]; then
    (cd "${_gitname}" && git pull origin)
    msg "The local repository was updated."
  else
    (git clone ${_gitoptions} ${_gitroot} ${_gitname})
    msg "The remote repository was cloned."
  fi
  msg "GIT sync done or server timeout."

  cd "${srcdir}"
  msg "GIT hash check."
  if [ -e ".githash_${CARCH}" ]; then
    _githash="$(cat ".githash_${CARCH}")"
  else
    _githash=""
  fi
  cd "${_gitname}"
  if [ "${_githash}" == "$(git show | grep -m 1 commit | sed "s/commit //")" ];then
    msg "GIT hash is the same as previous build."
    return 1
  else
    echo "$(git show | grep -m 1 commit | sed "s/commit //")" > "${srcdir}/.githash_${CARCH}"
  fi

  cd "${srcdir}"
  msg "Creating build directory."
  [ -d "${_gitname}-build" ] && rm -rf "${_gitname}-build"
  cp -a "${_gitname}" "${_gitname}-build"
  msg "Starting make..."
  cd "${_gitname}-build"
  #}}}

  ./autogen.sh
#  export LIBS="${LIBS} -lpthread"
  export CXXFLAGS="${CXXFLAGS} -fno-strict-aliasing"
  ./configure --prefix=/usr --disable-debug

  make
}

package() {
  cd "${srcdir}/${_pkgname}-build"

  make DESTDIR="${pkgdir}" install
}
