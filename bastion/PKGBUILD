# Maintainer: Daniel Wallace <danielwallace at gtmanfred dot com>

pkgname=bastion
pkgver=2
_pkgver=2012-06-01-1
pkgrel=5
pkgdesc="an original action role-playing game set in a lush imaginative world, in which players must create and fight for civilizationâ€™s last refuge as a mysterious narrator marks their every move."
arch=('i686' 'x86_64')
url="http://supergiantgames.com/?page_id=242"
license=('custom')
makedepends=('xz' 'aria2')
depends=('libxft')
_sh=Bastion-HIB-$_pkgver.sh
PKGEXT='.pkg.tar'
#source=($pkgname.desktop)
#md5sums=('5d0ae62e997fc2a121aec0105516840f')
_shmd5='6bfaf5f637a1b54aef066506f6cd6e55'


build() {
    cd $srcdir
    if [[ ! -f $_sh || ! $(md5sum $_sh) == $_shmd5 ]]; then
        cd ..
        echo "You do not have the file required for this install"
        echo if you already have $_sh please place it into $PWD
        echo Otherwise, press Enter to continue
        cd $srcdir
        read
        if [[ -z "${_humblebundleVkey}" ]]; then
            cd ..
            echo You can automate the download of the archive using the _humblebundle4key bash variable.
            echo "Just add export  '_humblebundleVkey=<Your key here>' to .bashrc"
            echo
            echo Otherwise please just place ${_sh} into $(pwd)/
            cd $srcdir
            read
        else
            testfile=$(curl https://www.humblebundle.com/downloads\?key\=$_humblebundleVkey | grep $_sh)
            echo "if you would like to use:"
            echo "aria2c and the torrent file, input 1"
            echo "curl and download the file directly, input 2"
            echo "default is 1, 2 costs HIB bandwidth:"
            read -a _torrent
            if [[ $_torrent -eq 2 ]];then
                testfile=${testfile#*data-web\=\'}
                curl -o $_sh ${testfile%%\'*}
            else
                testfile=${testfile##*data-bt\=\'}
                curl -o $_sh.torrent ${testfile%%\'*}
                aria2c $_sh.torrent
            fi
        fi
    fi
    _md5sum=$(md5sum $_sh);
    if [[ ${_md5sum%% *} != $_shmd5 ]];then
        echo "md5sum of downloaded file is invalid"
        exit
    fi
  # Extract installer.
  #if [ ! -d $srcdir/$pkgname-$pkgver ]; then
  #  install -d $srcdir/$pkgname-$pkgver
  #fi
  #msg "Extracting archive..."
  #sh $_sh --tar xf -C $srcdir/$pkgname-$pkgver 
  #cd $srcdir/$pkgname-$pkgver
  #if test "$CARCH" == x86_64; then
  #    _arch=x86_64 
  #    _sfix=x86_64
  #else
  #    _arch=x86
  #fi
  #lzcat subarch | tar xvf -
  #tar --lzma -xf instarchive_all
  #tar --lzma -xf instarchive_linux_$_arch
  sh $_sh -u --packager pacman --target $srcdir/$pkgname-$_pkgver --bindir $pkgdir/usr/bin --datadir $pkgdir/usr/share/games
}
package() {
  #install -d $pkgdir/usr/share/games/$pkgname
  case $CARCH in
    i686) _arch=x86 ;;
    x86_64) _arch=x86_64;;
  esac

cat <<EOF > $srcdir/intelbastion
#!/usr/bin/env bash
export force_s3tc_enable=true
/usr/bin/bastion
EOF
cat <<EOF > $srcdir/$pkgname.desktop
[Desktop Entry]
Version=1.0
Type=Application
Icon=/usr/share/games/Bastion/Bastion.png
Exec=/usr/bin/bastion
Terminal=false
StartupNotify=false
Name=Bastion
Comment=An original action role-playing game set in a lush imaginative world
Categories=Game;
EOF
  install -Dm755 $srcdir/intelbastion $pkgdir/usr/bin/intelbastion

  #cd $srcdir/$pkgname-$pkgver

  # Move all libraries.
  #mv libs$_sfix/all/* libu$_sfix/
  #rmdir libs$_sfix/all

  # Copy the game folder.
  #case $CARCH in
  #  i686) [[ -d bin/linux/x86_64 ]] && rm -r bin/linux/x86_64;;
  #  x86_64) [[ -d bin/linux/x86 ]] && rm -r bin/linux/x86;;
  #esac
  #cp -dpr --no-preserve=ownership * $pkgdir/usr/share/games/$pkgname
  
  # Make executable links.
  ln -s /usr/share/games/Bastion/Bastion.bin.$_arch $pkgdir/usr/bin/$pkgname

  # Install icons and .desktop files.
  install -Dm644 $pkgdir/usr/share/games/Bastion/Bastion.png $pkgdir/usr/share/icons/$pkgname.png
  install -Dm644 $srcdir/$pkgname.desktop $pkgdir/usr/share/applications/$pkgname.desktop
}
