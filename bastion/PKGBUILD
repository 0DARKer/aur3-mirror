#Maintainer: Daniel Wallace < danielwallace at gtmanfred dot com >
pkgname=bastion
pkgver=2
_pkgver=2012-06-01-1
pkgrel=7

pkgdesc="An original action role-playing game set in a lush imaginative world, in which players must create and fight for civilizationâ€™s last refuge as a mysterious narrator marks their every move."
url="http://supergiantgames.com/?page_id=242"
license=('custom')
arch=('i686' 'x86_64')
groups=("humble-indie-bundleV" "games")
depends=('libxft')
makedepends=('curl')
source=("Bastion-HIB-${_pkgver}.sh" "$pkgname.desktop" "mesa$pkgname" "$pkgname.install")
install=$pkgname.install
md5sums=('6bfaf5f637a1b54aef066506f6cd6e55'
         '0facce79c6d93c5914a58e096eca8c92'
         'a42e39c5f52abf19b6975cb79f732907'
         '87417cee226efe4aca17ad99c44ea50b')
PKGEXT=".pkg.tar"
case $CARCH in
    i686) _arch=x86 ;;
    x86_64) _arch=x86_64;;
esac

_humblebundle() {
	_archive="source[0]%%:*"
	for group in "${groups[@]}"; do

        [[ -f "${!_archive}" ]] && break;

		case "${group}" in 
			"humble-indie-bundle"*) _key="_humblebundle${group:19}key" ;;
			*) continue ;;
		esac
		if [[ -n "${!_key}" ]]; then
			_uri="$(curl -s http://www.humblebundle.com/downloads?key="${!_key}" | grep "${!_archive}")"
            echo "Choose download method."
            echo "1. Torrent with aria2c"
            echo "2. HTTP with curl"
            read -a _method
            if [[ "${_method}" -eq 2 ]]; then
                _uri="${_uri##*data-web\=\'}"
                _uri="${_uri%%\'*}" 
                curl -o "${!_archive}" "${_uri}"
            else
                _uri="${_uri##*data-bt\=\'}"
                _uri="${_uri%%\'*}" 
                echo "To resume this download later:"
                echo "Run \`aria2c ${pkgname}.torrent\`"
                [[ ! -f "${pkgname}.torrent" ]] &&
                curl -s -o "${pkgname}.torrent" "${_uri}"
                aria2c "${pkgname}.torrent" --seed-time=0
            fi
			source[0]="${!_archive}::${_uri}"
		else
			warning "Please export _humblebundleVkey for downloading"
			echo "Alternatively, place the download into ${startdir} and retry"
		fi
	done
	if [[ -z "${!_key}" && ! -f "${startdir}/${!_archive}" ]]; then
		error "Failed to download \"${!_archive}\"."
		exit 1
    elif [[ -f "${startdir}/${!_archive}" ]];then
        break
	fi
	unset _archive _key _uri 
}

package() {
    cd $srcdir
    [[ -d "$srcdir/$pkgname-$_pkgver" ]] && rm -r "$srcdir/$pkgname-$_pkgver"
    sh ${source[0]%%:*} -u --packager pacman --target "$srcdir/$pkgname-$_pkgver" --bindir "$pkgdir/opt/games/Bastion" --datadir "$pkgdir/opt/games"

	find "${pkgdir}" -type f -exec chmod 644 "{}" +
	install -Dm644 "${pkgname}".desktop "${pkgdir}/usr/share/applications/${pkgname}.desktop"
	install -Dm755 "mesa${pkgname}" "${pkgdir}/usr/bin/mesa${pkgname}"
	install -Dm644 "${pkgdir}/opt/games/Bastion/Bastion.png" "${pkgdir}/usr/share/icons/${pkgname}.png"

	chmod 755 "${pkgdir}/opt/games/Bastion/Bastion.bin.$_arch"
	ln -s "${pkgdir}/opt/games/Bastion/Bastion.bin.$_arch" "${pkgdir}/usr/bin/${pkgname}"
}

_humblebundle
