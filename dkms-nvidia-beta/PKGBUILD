# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>

pkgname=dkms-nvidia-beta
_modname=nvidia
pkgver=295.20
pkgrel=2
pkgdesc="NVIDIA Dynamic Kernel Module (DKMS) drivers, utilities and libraries. BETA DRIVERS"
arch=('i686' 'x86_64')
url="http://www.nvidia.com/"
license=('custom:NVIDIA')
depends=('libxvmc' 'gcc-libs' 'xorg-server' 'dkms' 'gtk2')
conflicts=('nvidia' 'nvidia-beta' 'nvidia-275xx' 'nvidia-173xx' 'nvidia-96xx' 'nvidia-71xx'
           'nvidia-utils' 'nvidia-utils-beta' 'nvidia-utils-275xx' 'nvidia-utils-173xx' 'nvidia-utils-96xx' 'nvidia-utils-71xx'
           'dkms-nvidia' 'dkms-nvidia-275xx' 'dkms-nvidia-173xx' 'dkms-nvidia-96xx' 'dkms-nvidia-71xx' 
           'opencl-nvidia' 'libgl' 'libcl')
provides=("nvidia="${pkgver}"" "nvidia-utils="${pkgver}"" 'opencl-nvidia' 'libgl' 'libcl')
install="${pkgname}".install
optdepends=('lib32-nvidia-utils-beta: Nvidia 32bit libs'
            "cuda-toolkit: NVIDIA's GPU programming toolkit")
backup=('etc/X11/xorg.conf.d/20-nvidia.conf')
options=('!strip')
source=(dkms.conf
        "${pkgname}".install
        20-nvidia.conf)
md5sums=('7b16cb9dfaab33d552e3c86394a97240'
         '8ea6094c649aa153afc90c0cf7a63107'
         '646e64d99c44eb24b02b28defe182317')

if [ "$CARCH" = "i686" ]; then
    _pkg="NVIDIA-Linux-x86-"${pkgver}""
    source+=(ftp://download.nvidia.com/XFree86/Linux-x86/"${pkgver}"/"${_pkg}".run)
    md5sums+=('a6f702271da49930a17e28b5928fe75a')
elif [ "$CARCH" = "x86_64" ]; then
    _pkg="NVIDIA-Linux-x86_64-"${pkgver}"-no-compat32"
    source+=(ftp://download.nvidia.com/XFree86/Linux-x86_64/"${pkgver}"/"${_pkg}".run)
    md5sums+=('79b05cffa482234833ae1c4bb40664c3')
fi

build() {
    cd "${srcdir}"
    if [ -d "${_pkg}" ]; then
       rm -rf "${_pkg}"
    fi
    sh "${_pkg}".run --extract-only
}

package() {
    cd "${srcdir}"/"${_pkg}"

# fix for 3.3 kernel
  if [ `pacman -Q linux |cut -d " " -f2 | cut -d "-" -f1` = "3.3" ]; then
  sed 's|CFLAGS="$CFLAGS -I$SOURCES/arch/x86/include"|CFLAGS="$CFLAGS -I$SOURCES/arch/x86/include -I$SOURCES/arch/x86/include/generated"|' -i "${srcdir}"/"${_pkg}"/kernel/conftest.sh
  fi


# Create install dirs
    install -d "${pkgdir}"/usr/{bin,lib/{vdpau,xorg/modules/{extensions,drivers}},share/{applications,pixmaps,man/man1,licenses/nvidia,doc/nvidia/html},src/${_modname}-${pkgver}}
    install -d "${pkgdir}"/etc/{OpenCL/vendors,modprobe.d,X11/xorg.conf.d}

# Copy header in DKMS makepath
    install -Dm755 kernel/* "${pkgdir}"/usr/src/"${_modname}"-"${pkgver}"/
    install -Dm644 "${srcdir}"/dkms.conf "${pkgdir}"/usr/src/"${_modname}"-"${pkgver}"/

# Add Noveau and nvidiafb Blacklist
    install -d -m755 "${pkgdir}"/lib/modprobe.d
    echo "blacklist nouveau" >> "${pkgdir}"/lib/modprobe.d/nvidia.conf
    echo "blacklist nvidiafb" >> "${pkgdir}"/lib/modprobe.d/nvidia.conf

# Install OpenCL configuration
    install -Dm644 nvidia.icd "${pkgdir}"/etc/OpenCL/vendors/

# Install libraries
    install -Dm755 {libGL,libnvidia-{cfg,compiler,glcore,ml},libcuda,tls/libnvidia-tls,libnvcuvid,libXvMCNVIDIA}.so.${pkgver} "${pkgdir}"/usr/lib/
    install -Dm755 libvdpau_nvidia.so."${pkgver}" "${pkgdir}"/usr/lib/vdpau/
    install -Dm755 libOpenCL.so.1.0.0 "${pkgdir}"/usr/lib/
    install -Dm644 libXvMCNVIDIA.a "${pkgdir}"/usr/lib/
    install -Dm755 nvidia_drv.so "${pkgdir}"/usr/lib/xorg/modules/drivers/
    install -Dm755 libglx.so."${pkgver}" "${pkgdir}"/usr/lib/xorg/modules/extensions/
    ln -s libglx.so."${pkgver}" "${pkgdir}"/usr/lib/xorg/modules/extensions/libglx.so

# Install manpages
    install -Dm644 nvidia-{settings,xconfig,smi}.1.gz "${pkgdir}"/usr/share/man/man1/

# Install license
    install -Dm644 LICENSE "${pkgdir}"/usr/share/licenses/nvidia/
    ln -s nvidia "${pkgdir}"/usr/share/licenses/nvidia-utils
    ln -s nvidia "${pkgdir}"/usr/share/licenses/libcl

# Install readme
    install -Dm644 README.txt "${pkgdir}"/usr/share/doc/nvidia/README
    install -Dm644 NVIDIA_Changelog "${pkgdir}"/usr/share/doc/nvidia/
    install -Dm644 html/* "${pkgdir}"/usr/share/doc/nvidia/html/
    ln -s nvidia "${pkgdir}"/usr/share/doc/nvidia-utils

# Install .desktop file
    install -Dm644 nvidia-settings.desktop "${pkgdir}"/usr/share/applications/

# Fix nvidia .desktop file
    sed -e 's:__UTILS_PATH__:/usr/bin:' -e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' -i "${pkgdir}"/usr/share/applications/nvidia-settings.desktop

# Install pixmaps
    install -Dm644 nvidia-settings.png "${pkgdir}"/usr/share/pixmaps/

# Install binaries
    install -Dm755 nvidia-{settings,xconfig,smi,bug-report.sh} "${pkgdir}"/usr/bin/

# Create soname links
    while read -d '' _lib; do
        _soname="$(dirname "${_lib}")/$(readelf -d "${_lib}" | sed -nr 's/.*Library soname: \[(.*)\].*/\1/p')"
        [[ -e "${_soname}" ]] || ln -s "$(basename "${_lib}")" "${_soname}"
        [[ -e "${_soname/.[0-9]*/}" ]] || ln -s "$(basename "${_soname}")" "${_soname/.[0-9]*/}"
    done < <(find "${pkgdir}" -type f -name '*.so*' -print0)

# Install nvidia file for xorg autodection
    install -Dm644 "${srcdir}"/20-nvidia.conf "${pkgdir}"/etc/X11/xorg.conf.d/

}
