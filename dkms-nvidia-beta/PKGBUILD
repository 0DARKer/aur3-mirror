# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>

pkgname=dkms-nvidia-beta
pkgrel=3
pkgdesc="NVIDIA Dynamic Kernel Module (DKMS) drivers, utilities and libraries. BETA DRIVERS"
pkgver="313.09"
arch=('i686' 'x86_64')
url="http://www.nvidia.com/"
license=('custom:NVIDIA' 'GPL2')
depends=('libxvmc' 'gcc-libs' 'xorg-server' 'dkms' 'gtk2' 'pangox-compat')
makedepends=('libx11' 'libxext' 'xextproto')
conflicts=('nvidia' 'nvidia-utils' 'opencl-nvidia' 'libgl' 'libcl' 'libxnvctrl')
provides=("nvidia=${pkgver}" "nvidia-utils=${pkgver}" 'opencl-nvidia' 'libgl' 'libcl' 'libxnvctrl')
install="${pkgname}.install"
optdepends=("cuda: NVIDIA's GPU programming toolkit"
            'lib32-nvidia-utils-beta: Nvidia 32bit libs'
            'libvdpau: Support for Video Hardware Acceleration'
            'opencl-headers: headers necessary for OpenCL development')
backup=('etc/X11/xorg.conf.d/20-nvidia.conf')
options=('!strip')
source=("20-nvidia.conf")

if [ "$CARCH" = "i686" ]; then
    _pkg="NVIDIA-Linux-x86-${pkgver}"
    source+=("http://download.nvidia.com/XFree86/Linux-x86/${pkgver}/${_pkg}.run")
elif [ "$CARCH" = "x86_64" ]; then
    _pkg="NVIDIA-Linux-x86_64-${pkgver}-no-compat32"
    source+=("http://download.nvidia.com/XFree86/Linux-x86_64/${pkgver}/${_pkg}.run")
fi
source+=("http://download.nvidia.com/XFree86/nvidia-settings/nvidia-settings-${pkgver}.tar.bz2")

md5sums=('646e64d99c44eb24b02b28defe182317')
[ "$CARCH" = "i686" ] && md5sums+=('705e43f37f9de5cf873679691469ce42')
[ "$CARCH" = "x86_64" ] && md5sums+=('cd8645ab96a669b4875046214f6797ba')
md5sums+=('7b869a0a6451ce3a92e6e661828f84f6')

create_links() {
    # create soname links
    while read -d '' _lib; do
        _soname="$(dirname "${_lib}")/$(LANG=C readelf -d "${_lib}" | sed -nr 's/.*Library soname: \[(.*)\].*/\1/p')"
        [[ -e "${_soname}" ]] || ln -s "$(basename "${_lib}")" "${_soname}"
        [[ -e "${_soname/.[0-9]*/}" ]] || ln -s "$(basename "${_soname}")" "${_soname/.[0-9]*/}"
    done < <(find "${pkgdir}" -type f -name '*.so*' -print0)
}

build() {
    cd "${srcdir}"

    msg2 "Extract Driver"
    rm -rf "${_pkg}" build
    sh "${_pkg}".run --extract-only
    mv "${_pkg}" build

    msg2 "Build libxnvctrl"
    rm -fr nvidia-settings-build
    mv "nvidia-settings-${pkgver}" nvidia-settings-build
    cd nvidia-settings-build/src/libXNVCtrl
    make clean
    make
}

package() {
    cd "${srcdir}/build"

# Copy header in DKMS makepath
    install -d "${pkgdir}/usr/src/nvidia-${pkgver}"
    install -Dm755 kernel/* "${pkgdir}/usr/src/nvidia-${pkgver}"
    sed "s|/kernel/drivers/video|/extramodules|g" -i "${pkgdir}/usr/src/nvidia-${pkgver}/dkms.conf"

# Add Noveau to Blacklist
    install -d -m755 "${pkgdir}/usr/lib/modprobe.d"
    echo "blacklist nouveau" >> "${pkgdir}/usr/lib/modprobe.d/nvidia.conf"

# Install libraries
    # X Driver
    install -Dm755 "nvidia_drv.so" "${pkgdir}/usr/lib/xorg/modules/drivers/nvidia_drv.so"
    # OpenGL library
    install -Dm755 "libGL.so.${pkgver}" "${pkgdir}/usr/lib/libGL.so.${pkgver}"
    # GLX extension module for X
    install -Dm755 "libglx.so.${pkgver}" "${pkgdir}/usr/lib/xorg/modules/extensions/libglx.so.${pkgver}"
    ln -s "libglx.so.${pkgver}" "${pkgdir}/usr/lib/xorg/modules/extensions/libglx.so"
    # OpenGL core library
    install -Dm755 "libnvidia-glcore.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-glcore.so.${pkgver}"
    # VDPAU
    install -Dm755 "libvdpau_nvidia.so.${pkgver}" "${pkgdir}/usr/lib/vdpau/libvdpau_nvidia.so.${pkgver}"
    # nvidia-tls library
    install -Dm755 "tls/libnvidia-tls.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-tls.so.${pkgver}"
    install -Dm755 "libnvidia-cfg.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-cfg.so.${pkgver}"
    install -Dm775 "libnvidia-ml.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-ml.so.${pkgver}"
    # OpenCL
    install -Dm644 "nvidia.icd" "${pkgdir}/etc/OpenCL/vendors/nvidia.icd"
    install -Dm755 "libnvidia-compiler.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-compiler.so.${pkgver}"
    install -Dm755 "libnvidia-opencl.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-opencl.so.${pkgver}"
    install -Dm755 "libOpenCL.so.1.0.0" "${pkgdir}/usr/lib/libOpenCL.so.1.0.0"
    # CUDA
    install -Dm775 "libcuda.so.${pkgver}" "${pkgdir}/usr/lib/libcuda.so.${pkgver}"
    install -Dm755 "libnvcuvid.so.${pkgver}" "${pkgdir}/usr/lib/libnvcuvid.so.${pkgver}"
    install -Dm755 "libnvidia-encode.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-encode.so.${pkgver}"
    # nvidia-xconfig
    install -Dm755 nvidia-xconfig "${pkgdir}/usr/bin/nvidia-xconfig"
    install -Dm644 nvidia-xconfig.1.gz "${pkgdir}/usr/share/man/man1/nvidia-xconfig.1.gz"
    # nvidia-settings
    install -Dm755 nvidia-settings "${pkgdir}/usr/bin/nvidia-settings"
    install -Dm644 nvidia-settings.1.gz "${pkgdir}/usr/share/man/man1/nvidia-settings.1.gz"
    install -Dm644 nvidia-settings.desktop "${pkgdir}/usr/share/applications/nvidia-settings.desktop"
    install -Dm644 nvidia-settings.png "${pkgdir}/usr/share/pixmaps/nvidia-settings.png"
    sed -e 's:__UTILS_PATH__:/usr/bin:' -e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' -i "${pkgdir}/usr/share/applications/nvidia-settings.desktop"
    # nvidia-bug-report
    install -Dm755 nvidia-bug-report.sh "${pkgdir}/usr/bin/nvidia-bug-report.sh"
    # nvidia-smi
    install -Dm755 nvidia-smi "${pkgdir}/usr/bin/nvidia-smi"
    install -Dm644 nvidia-smi.1.gz "${pkgdir}/usr/share/man/man1/nvidia-smi.1.gz"
    # Install license and readme
    install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/nvidia/LICENSE"
    ln -s nvidia "${pkgdir}/usr/share/licenses/nvidia-utils"
    ln -s nvidia "${pkgdir}/usr/share/licenses/libcl"
    install -Dm644 README.txt "${pkgdir}/usr/share/doc/nvidia/README"
    install -Dm644 NVIDIA_Changelog "${pkgdir}/usr/share/doc/nvidia/NVIDIA_Changelog"
    install -d "${pkgdir}/usr/share/doc/nvidia/html/"
    install -Dm644 html/* "${pkgdir}/usr/share/doc/nvidia/html/"
    ln -s nvidia "${pkgdir}/usr/share/doc/nvidia-utils"

    create_links

# Install nvidia file for xorg autodection
    install -Dm644 "${srcdir}/20-nvidia.conf" "${pkgdir}/etc/X11/xorg.conf.d/20-nvidia.conf"

# install libXNVCtrl and headers
    cd "${srcdir}/nvidia-settings-build/src/libXNVCtrl"
    install -d "${pkgdir}/usr/include/NVCtrl"
    install -Dm644 nv_control.h NVCtrl{,Lib}.h "${pkgdir}/usr/include/NVCtrl/"
    install -Dm644 libXNVCtrl.a "${pkgdir}/usr/lib/libXNVCtrl.a"

}