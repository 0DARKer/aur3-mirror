# Contributor: Calimero <calimeroteknik at free dot fr>
pkgname=e17-full-svn
pkgver=20091109
pkgrel=1
pkgdesc="Complete e17 environment from svn"
arch=('i686' 'x86_64')
url="http://www.enlightenment.org/"
license=('GPL')
depends=('svn' 'libpng' 'libjpeg' 'freetype2' 'dbus' 'pam' 'librsvg' 'libnotify' 'curl' 'libungif' 'libtiff' 'glibmm' 'doxygen' 'giflib' 'fontconfig' 'sdl' 'mesa' 'librsvg' 'libtiff')
provides=('e-svn' 'eina-svn' 'eet-svn' 'evas-svn' 'ecore-svn' 'ecore-svn' 'efreet-svn' 'edje-svn' 'embryo-svn' 'e_dbus-svn')
conflicts=('e-svn' 'eina-svn' 'eet-svn' 'evas-svn' 'ecore-svn' 'ecore-svn' 'efreet-svn' 'edje-svn' 'embryo-svn' 'e_dbus-svn')

build() {
# Function name:           prep
# Function paramiter(s):   none
# Function description:    This function prepers the envirement to run
#                          the rest of the script
prep()
{
    #go to temporary directory
    cd "$srcdir"
    #export this path to compile successfuly
    export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$pkgdir/usr/local/lib/pkgconfig/
}

# Function name:           message
# Function paramiter(s):   Word to be printed on the screen
# Function description:    This function print messages on the screen.
#
message()
{
    #print a message to the screen
    echo -e "==>" $*
}

# Function name:            downloadPackage
# Function paramiter(s):    none
# Function description:     This function go to the user's home 
#                           directory and downloads e17 from svn repo.
downloadPackage()
{
    message "Downloading " $1 " from E17 svn repository."

    #download the specifed package with less text
    svn co --quiet http://svn.enlightenment.org/svn/e/trunk/$1 $1-svn
}


# Function name:            installPackage
# Function paramiter(s):    The name of the package to install
# Function description:     This fuction need one paramiter that is
#                           the package to configure and install.   
installPackage()
{
    #change directory to the program to configure and install
    cd $srcdir/$1-svn
    
    message "Configurating package " $1
    
    #run the autogen script that will configure and 
    #make read to install this program
    ./autogen.sh || return 1

    message "Compiling package " $1

    #now compile the source file of the program
    make || return 1

    #I'd REALLY like PREFIX="/usr" to work ! unfortunately, it doesn't.

    message "Building Package " $1
    
    #now build the package
    make DESTDIR="$pkgdir" install || return 1
}

################################################################################
# MAIN                                                                         #
################################################################################
main()
{
    #preper the envirement
    prep
    
    #list of packages to download and install
    packagesList=(
    'eina'
    'eet'
    'evas'
    'ecore'
    'efreet'
    'embryo'
    'edje'
    'e_dbus'
    'e'
    )
    
    #loop that gos through the list and downloads the packages
    for package in ${packagesList[@]}
    do
        downloadPackage $package
        message "Done\n"
    done
    
    #loop that gos through the list and installs the packages
    for package in ${packagesList[@]}
    do
        installPackage $package
        message "Done\n"
    done
}

main
}
