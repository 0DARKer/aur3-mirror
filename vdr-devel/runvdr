#!/bin/sh

# runvdr: Loads the DVB driver and runs VDR
#
# If VDR exits abnormally, the driver will be reloaded
# and VDR restarted.
#
# In order to actually use this script you need to implement
# the functions DriverLoaded(), LoadDriver() and UnloadDriver()
# and maybe adjust the VDRPRG and VDRCMD to your particular
# requirements.
#
# Since this script loads the DVB driver, it must be started
# as user 'root'. Add the option "-u username" to run VDR
# under the given user name.
#
# Any command line parameters will be passed on to the
# actual 'vdr' program.
#
# See the main source file 'vdr.c' for copyright information and
# how to reach the author.
#
# $Id: runvdr 1.19 2006/05/14 16:02:05 kls Exp $

. /etc/rc.vdr

VDRPRG="/usr/bin/vdr"

VDRCMD="LANG=$VDRLANG $VDRPRG $VDROPTS -c /etc/vdr -s /usr/bin/vdrshutdown.sh -w 60 $VDRPLUGINS"

KILL="/usr/bin/killall -q -TERM"

# Load all DVB driver modules needed for your hardware:
function LoadDriver()
{
  for driver in ${VDRDRIVERS}; do
    modprobe $driver
  done
}

# Unload all DVB driver modules loaded in LoadDriver():
function UnloadDriver()
{
  var="$VDRDRIVERS"
  lc=`echo $var | wc -w`
  while [ $lc -ne 0 ]; do
    modprobe -r ${var##* }
    var=${var% *}
    lc=$((lc-1))
  done
}

LoadDriver

while (true) do
      eval "$VDRCMD >> /var/log/vdr.log 2>&1"
      if test $? -eq 0 -o $? -eq 2; then exit; fi
      echo "`date` reloading DVB driver"
      $KILL $VDRPRG
      sleep 10
      UnloadDriver
      LoadDriver
      echo "`date` restarting VDR"
done
