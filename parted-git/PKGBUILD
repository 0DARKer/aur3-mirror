# Maintainer : Keshav P R <(the.ridikulus.rat) (aatt) (gemmaeiil) (ddoott) (ccoomm)>
# Contributor: Gen2ly <toddrpartridge@gmail.com>
# Contributor: Aaron Griffin <aaron@archlinux.org>
# Contributor: dorphell <dorphell@archlinux.org>

_pkgname="parted"
pkgname="${_pkgname}-git"

pkgver=20120110
pkgrel=1
pkgdesc="A program for creating, destroying, resizing, checking and copying partitions"
arch=('i686' 'x86_64')
license=('GPL3')
url="http://www.gnu.org/software/parted/parted.html"

makedepends=('git' 'rsync' 'gperf' 'bc' 'libtool')
checkdepends=('valgrind' 'perl-digest-crc')
depends=('device-mapper' 'util-linux' 'gettext' 'e2fsprogs' 'ncurses' 'readline')
optdepends=('reiserfsprogs: for reiserfs partitions')

conflicts=("${_pkgname}")
provides=("${_pkgname}")
options=(!libtool)
source=()
md5sums=()

install="${pkgname}.install"

_gitroot="git://git.savannah.gnu.org/parted.git"
_gitname="${_pkgname}"
_gitbranch="master"

_update_git() {
	
	cd "${srcdir}/"
	
	msg "Connecting to GIT server...."
	
	if [[ -d "${srcdir}/${_gitname}/" ]]; then
		cd "${srcdir}/${_gitname}/"
		git reset --hard
		
		git remote rm origin
		git remote add origin "${_gitroot}"
		
		git fetch
		git checkout "${_gitbranch}"
		git merge "remotes/origin/${_gitbranch}"
		msg "The local GIT repo has been updated."
	else
		git clone "${_gitroot}" "${_gitname}"
		cd "${srcdir}/${_gitname}/"
		git checkout "${_gitbranch}"
		msg "GIT checkout done or server timeout"
	fi
	
	echo
	
}

build() {
	
	_update_git
	
	rm -rf "${srcdir}/${_gitname}_build/" || true
	cp -r "${srcdir}/${_gitname}" "${srcdir}/${_gitname}_build"
	
	cd "${srcdir}/${_gitname}_build/"
	
	install -d "${srcdir}/${_gitname}_build/build-aux/" || true
	install -D -m0755 "/usr/share/libtool/config/ltmain.sh" "${srcdir}/${_gitname}_build/build-aux/ltmain.sh"
	
	sed 's|include/parted/parted.h|include/parted/parted.in.h|g' -i "${srcdir}/${_gitname}_build/configure.ac" || true
	echo
	
	./bootstrap
	echo
	
	# mkdir -p "${srcdir}/${_gitname}_build/BUILD"
	# cd "${srcdir}/${_gitname}_build/BUILD"
	cd "${srcdir}/${_gitname}_build/"
	
	# CFLAGS="" ../configure \#
	CFLAGS="" ./configure \
		--host="${CARCH}-unknown-linux-gnu" \
		--prefix="/usr" \
		--bindir="/usr/bin" \
		--sbindir="/usr/bin" \
		--libexecdir="/usr/lib" \
		--with-readline \
		--disable-silent-rules \
		--enable-mtrace \
		--enable-device-mapper \
		--enable-dynamic-loading \
		--enable-nls \
		--enable-debug \
		--enable-pc98
	echo
	
	make clean || true
	echo
	
	CFLAGS="" LDFLAGS="" make
	echo
	
}

check() {
	
	# cd "${srcdir}/${_gitname}_build/BUILD"
	cd "${srcdir}/${_gitname}_build/"
	
	## Normal test-suite for 512 byte sectors
	make check
	echo
	
	## Check whether test-suite works for 4K byte sectors - seems like already done by top command
	# PARTED_SECTOR_SIZE="4096" CK_FORK="no" make check
	echo
	
}

package() {
	
	# cd "${srcdir}/${_gitname}_build/BUILD"
	cd "${srcdir}/${_gitname}_build/"
	
	make DESTDIR="${pkgdir}/" install
	echo
	
}
