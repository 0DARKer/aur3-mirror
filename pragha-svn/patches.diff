diff -c ../pragha/src/gui.c ./gui.c
*** ../pragha/src/gui.c	2011-09-27 12:53:56.568498952 -0300
--- ./gui.c	2011-09-27 12:53:56.595165515 -0300
***************
*** 1930,1936 ****
  {
  	if(cwin->cpref->close_to_tray){
  		if(gtk_status_icon_is_embedded(GTK_STATUS_ICON(cwin->status_icon))){
! 			toogle_main_window(cwin, FALSE);
  		}
  		else{
  			g_warning("(%s): No embedded status_icon.", __func__);
--- 1930,1936 ----
  {
  	if(cwin->cpref->close_to_tray){
  		if(gtk_status_icon_is_embedded(GTK_STATUS_ICON(cwin->status_icon))){
! 			toogle_main_window(cwin, TRUE);
  		}
  		else{
  			g_warning("(%s): No embedded status_icon.", __func__);
diff -c ../pragha/src/init.c ./init.c
*** ../pragha/src/init.c	2011-09-27 12:53:56.578498912 -0300
--- ./init.c	2011-09-27 12:53:56.595165515 -0300
***************
*** 200,206 ****
  gint init_config(struct con_win *cwin)
  {
  	GError *error = NULL;
! 	gint *col_widths, *win_size;
  	gchar *conrc, *condir, **libs, **columns, **nodes, *last_rescan_time;
  	gchar *u_file;
  	const gchar *config_dir;
--- 200,206 ----
  gint init_config(struct con_win *cwin)
  {
  	GError *error = NULL;
! 	gint *col_widths, *win_size, *win_position;
  	gchar *conrc, *condir, **libs, **columns, **nodes, *last_rescan_time;
  	gchar *u_file;
  	const gchar *config_dir;
***************
*** 211,217 ****
  	gboolean save_playlist_f, shuffle_f,repeat_f, columns_f, col_widths_f;
  	gboolean libs_f, lib_add_f, lib_delete_f, nodes_f, cur_lib_view_f, fuse_folders_f, sort_by_year_f;
  	gboolean audio_sink_f, audio_alsa_device_f, audio_oss_device_f, software_mixer_f, use_cddb_f;
! 	gboolean remember_window_state_f, start_mode_f, window_size_f, sidebar_size_f, sidebar_pane_f, album_f, album_art_size_f, status_bar_f;
  	gboolean show_osd_f, osd_in_systray_f, albumart_in_osd_f, actions_in_osd_f;
  	gboolean instant_filter_f, use_hint_f;
  	gboolean all_f;
--- 211,217 ----
  	gboolean save_playlist_f, shuffle_f,repeat_f, columns_f, col_widths_f;
  	gboolean libs_f, lib_add_f, lib_delete_f, nodes_f, cur_lib_view_f, fuse_folders_f, sort_by_year_f;
  	gboolean audio_sink_f, audio_alsa_device_f, audio_oss_device_f, software_mixer_f, use_cddb_f;
! 	gboolean remember_window_state_f, start_mode_f, window_size_f, window_position_f, sidebar_size_f, sidebar_pane_f, album_f, album_art_size_f, status_bar_f;
  	gboolean show_osd_f, osd_in_systray_f, albumart_in_osd_f, actions_in_osd_f;
  	gboolean instant_filter_f, use_hint_f;
  	gboolean all_f;
***************
*** 225,231 ****
  	save_playlist_f = shuffle_f = repeat_f = columns_f = col_widths_f = FALSE;
  	libs_f = lib_add_f = lib_delete_f = nodes_f = cur_lib_view_f = fuse_folders_f = sort_by_year_f = FALSE;
  	audio_sink_f = audio_alsa_device_f = audio_oss_device_f = software_mixer_f = use_cddb_f = FALSE;
! 	remember_window_state_f = start_mode_f = window_size_f = sidebar_size_f = sidebar_pane_f = album_f = album_art_size_f = status_bar_f = FALSE;
  	show_osd_f = osd_in_systray_f = albumart_in_osd_f = actions_in_osd_f = FALSE;
  	instant_filter_f = use_hint_f = FALSE;
  	#ifdef HAVE_LIBGLYR
--- 225,231 ----
  	save_playlist_f = shuffle_f = repeat_f = columns_f = col_widths_f = FALSE;
  	libs_f = lib_add_f = lib_delete_f = nodes_f = cur_lib_view_f = fuse_folders_f = sort_by_year_f = FALSE;
  	audio_sink_f = audio_alsa_device_f = audio_oss_device_f = software_mixer_f = use_cddb_f = FALSE;
! 	remember_window_state_f = start_mode_f = window_size_f = window_position_f = sidebar_size_f = sidebar_pane_f = album_f = album_art_size_f = status_bar_f = FALSE;
  	show_osd_f = osd_in_systray_f = albumart_in_osd_f = actions_in_osd_f = FALSE;
  	instant_filter_f = use_hint_f = FALSE;
  	#ifdef HAVE_LIBGLYR
***************
*** 318,323 ****
--- 318,339 ----
  			window_size_f = TRUE;
  		}
  
+ 		win_position = g_key_file_get_integer_list(cwin->cpref->configrc_keyfile,
+ 						       GROUP_WINDOW,
+ 						       KEY_WINDOW_POSITION,
+ 						       &cnt,
+ 						       &error);
+ 		if (win_position) {
+ 			cwin->cpref->window_x = win_position[0];
+ 			cwin->cpref->window_y = win_position[1];
+ 			g_free(win_position);
+ 		}
+ 		else {
+ 			g_error_free(error);
+ 			error = NULL;
+ 			window_position_f = TRUE;
+ 		}
+ 
  		cwin->cpref->status_bar =
  			g_key_file_get_boolean(cwin->cpref->configrc_keyfile,
  					       GROUP_WINDOW,
***************
*** 889,894 ****
--- 905,914 ----
  		cwin->cpref->window_width = MIN_WINDOW_WIDTH;
  		cwin->cpref->window_height = MIN_WINDOW_HEIGHT;
  	}
+ 	if (all_f || window_position_f) {
+ 		cwin->cpref->window_x = -1;
+ 		cwin->cpref->window_y = -1;
+   }
  	if (all_f || sidebar_size_f)
  		cwin->cpref->sidebar_size = DEFAULT_SIDEBAR_SIZE;
  	if (all_f || sidebar_pane_f)
***************
*** 1469,1474 ****
--- 1489,1502 ----
  				    cwin->cpref->window_width,
  				    cwin->cpref->window_height);
  
+   /* Set Position */
+ 
+   if (cwin->cpref->window_x != -1) {
+     gtk_window_move(GTK_WINDOW(cwin->mainwindow),
+ 				    cwin->cpref->window_x,
+ 				    cwin->cpref->window_y);
+   }
+ 
  	/* Systray */
  
  	create_status_icon(cwin);
diff -c ../pragha/src/pragha.h ./pragha.h
*** ../pragha/src/pragha.h	2011-09-27 12:53:56.568498952 -0300
--- ./pragha.h	2011-09-27 12:53:56.595165515 -0300
***************
*** 206,211 ****
--- 206,212 ----
  #define KEY_REMEMBER_STATE	   "remember_window_state"
  #define KEY_START_MODE		   "start_mode"
  #define KEY_WINDOW_SIZE            "window_size"
+ #define KEY_WINDOW_POSITION        "window_position"
  #define KEY_SIDEBAR_SIZE           "sidebar_size"
  #define KEY_SIDEBAR                "sidebar"
  #define KEY_SHOW_ALBUM_ART         "show_album_art"
***************
*** 450,455 ****
--- 451,458 ----
  	gint album_art_size;
  	gint window_width;
  	gint window_height;
+ 	gint window_x;
+ 	gint window_y;
  	gint sidebar_size;
  	GTimeVal last_rescan_time;
  	GKeyFile *configrc_keyfile;
diff -c ../pragha/src/pref.c ./pref.c
*** ../pragha/src/pref.c	2011-09-27 12:53:56.568498952 -0300
--- ./pref.c	2011-09-27 12:55:22.924828829 -0300
***************
*** 756,763 ****
  	gchar *data, **libs, **columns, **nodes, *last_rescan_time;
  	gchar *u_file = NULL;
  	gsize length;
! 	gint cnt = 0, i = 0, *col_widths, *window_size;
! 	gint win_width, win_height, sidebar_size;
  	GError *error = NULL;
  	GSList *list;
  	GList *cols, *j;
--- 756,763 ----
  	gchar *data, **libs, **columns, **nodes, *last_rescan_time;
  	gchar *u_file = NULL;
  	gsize length;
! 	gint cnt = 0, i = 0, *col_widths, *window_size, *window_position;
! 	gint win_width, win_height, win_x, win_y, sidebar_size;
  	GError *error = NULL;
  	GSList *list;
  	GList *cols, *j;
***************
*** 1230,1241 ****
--- 1230,1243 ----
  					      KEY_START_MODE,
  					      FULLSCREEN_STATE);
  		}
+     /*
  		else if(state & GDK_WINDOW_STATE_WITHDRAWN) {
  			g_key_file_set_string(cwin->cpref->configrc_keyfile,
  					      GROUP_WINDOW,
  					      KEY_START_MODE,
  					      ICONIFIED_STATE);
  		}
+     */
  		else {
  			g_key_file_set_string(cwin->cpref->configrc_keyfile,
  					      GROUP_WINDOW,
***************
*** 1254,1271 ****
--- 1256,1288 ----
  
  	if (!(state & GDK_WINDOW_STATE_MAXIMIZED) || !(state & GDK_WINDOW_STATE_FULLSCREEN)) {
  		window_size = g_new0(gint, 2);
+ 
  		gtk_window_get_size(GTK_WINDOW(cwin->mainwindow),
  				    &win_width,
  				    &win_height);
  		window_size[0] = win_width;
  		window_size[1] = win_height;
  
+ 		window_position = g_new0(gint, 2);
+ 		gtk_window_get_position(GTK_WINDOW(cwin->mainwindow),
+ 				    &win_x,
+ 				    &win_y);
+ 		window_position[0] = win_x;
+ 		window_position[1] = win_y;
+ 
  		g_key_file_set_integer_list(cwin->cpref->configrc_keyfile,
  					    GROUP_WINDOW,
  					    KEY_WINDOW_SIZE,
  					    window_size,
  					    2);
+ 		g_key_file_set_integer_list(cwin->cpref->configrc_keyfile,
+ 					    GROUP_WINDOW,
+ 					    KEY_WINDOW_POSITION,
+ 					    window_position,
+ 					    2);
+ 
  		g_free(window_size);
+ 		g_free(window_position);
  	}
  
  	/* Save sidebar size */
