diff -ru mf2pt1/mf2pt1.mp mf2pt1~/mf2pt1.mp
--- mf2pt1/mf2pt1.mp	2008-01-13 21:49:58.000000000 -0800
+++ mf2pt1~/mf2pt1.mp	2011-05-07 15:44:54.743024815 -0700
@@ -61,7 +61,6 @@
     def to_bp (expr num) = decimal (ceiling (num*bp_per_pixel)) enddef;
     special "% MF2PT1: glyph_dimensions 0 " & to_bp (-d) & " " & to_bp(w) & " " & to_bp(h);
     special "% MF2PT1: font_size " & decimal designsize;
-    special "% MF2PT1: font_slant " & decimal font_slant_;
     special "% MF2PT1: charwd " & decimal charwd;   % Must come after the |font_size| |special|
     for fvar = "font_identifier", "font_coding_scheme", "font_version",
       "font_comment", "font_family", "font_weight", "font_unique_id",
@@ -76,8 +75,6 @@
           scantokens ("decimal " & fvar & "_");
       fi;
     endfor;
-    special "% MF2PT1: font_fixed_pitch " &
-            (if font_fixed_pitch_: "1" else: "0" fi);
 enddef;
 
 
@@ -91,19 +88,6 @@
 
 
 %% \begin{explaincode}
-%%   Store the value of \mfcomment
-%    |font_slant_|, so we can recall it at each |beginchar|.
-%% \end{explaincode}
-
-font_slant_ := 0;
-
-def font_slant expr x =
-  font_slant_ := x;
-  fontdimen 1: x
-enddef;
-
-
-%% \begin{explaincode}
 %%   Redefine \mfcomment
 %    |bpppix_|, the number of ``big'' points per pixel. \mfcomment
 %    This in turn redefines |mm|, |in|, |pt|, and other derived units.
@@ -141,11 +125,6 @@
   scantokens ("def " & str fvar & " expr x = " & str fvar & "_ := x enddef;");
 endfor;
 
-boolean font_fixed_pitch_;
-font_fixed_pitch_ := false;
-def font_fixed_pitch expr x = font_fixed_pitch_ := x enddef;
-
-
 %% \begin{explaincode}
 %%   We'd like to be able to use calligraphic pens.  Normally, MetaPost's
 %%   output routine does all the work for us of converting these to filled
diff -ru mf2pt1/mf2pt1.pl mf2pt1~/mf2pt1.pl
--- mf2pt1/mf2pt1.pl	2008-01-28 00:41:36.000000000 -0800
+++ mf2pt1~/mf2pt1.pl	2011-05-07 15:40:06.427911423 -0700
@@ -427,7 +427,7 @@
 sub get_bboxes ($)
 {
     execute_command 1, ("mpost", "-mem=mf2pt1", "-progname=mpost",
-                        "\\mode:=localfont; mag:=$mag; bpppix $bpppix; input $mffile");
+                        "\\mode:=localfont; mag:=$mag; bpppix:=$bpppix; input $mffile");
     opendir (CURDIR, ".") || die "${progname}: $! ($filedir)\n";
     @charfiles = sort
                    { ($a=~ /\.(\d+)$/)[0] <=> ($b=~ /\.(\d+)$/)[0] }
