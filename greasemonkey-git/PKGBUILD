# Contributor: Michael Witten <mfwitten>

# The various phases of the build can be controlled
# with the following variables (use an empty value
# to mean false):

_source=yes
_clean=yes
_compile=yes
_install=yes
#_install=          # do not install

######################################################################

pkgname=greasemonkey-git
license=(MIT)
pkgver=20110921
pkgrel=1
pkgdesc="A user-script manager for Firefox."
arch=(any)
url=http://www.greasespot.net/
depends=('firefox>=3.0')
makedepends=(unzip)
provides=(greasemonkey)

_gitroot=git://github.com/greasemonkey/greasemonkey.git
_gitname=repo 
_repo=$srcdir/$_gitname

build()
{

  #### Source ####

    if [[ $srcdir ]]; then

      cd "$srcdir"

      msg "Getting source code ..."

      if [[ -d $_gitname ]]; then

        cd "$_gitname"
        git pull origin

      else

        git clone "$_gitroot" "$_gitname"

      fi

    fi

  #### Clean ####

    if [[ $_clean ]]; then

      cd "$_repo"

      msg "Cleaning ..."
      git clean -fdx

    fi

  #### Compile ####

    if [[ $_compile ]]; then
    
      cd "$_repo"

      msg "Compiling ..."
      sh build.sh

    fi
}

package()
{

  #### Install  ####

    if [[ $_install ]]; then
    
      cd "$_repo"
    
      local version_firefox="$(perl -e '`firefox -v` =~ /(\d+(?:\.\d+)+[^\s.,;:]*)/; print $1')"

      # This isn't very safe over time; XML parsing should really be used
      local extension_id="`awk -F'<em:id>|</em:id>' '/<em:id>/ {print $2; exit}' install.rdf`"

      local path_install="$pkgdir/usr/lib/firefox-$version_firefox/extensions/$extension_id"

      msg "Installing ..."

      install -d "$path_install"
      unzip -od "$path_install" *.xpi # it's probably bad to rely on globbing.

    fi
}
