diff --git a/Makefile b/Makefile
index 6722451..973b2c3 100644
--- a/Makefile
+++ b/Makefile
@@ -14,7 +14,7 @@ all:
 install:
 	install -d ${DESTDIR}${datadir} ${DESTDIR}${bindir}
 	install -m644 -t ${DESTDIR}${datadir} data/dictionary.txt data/linux-kernel.exclude
-	install -m755 -t ${DESTDIR}${bindir} codespell.py
+	install -m755 -T codespell.py ${DESTDIR}${bindir}/codespell
 
 git-tag-release:
 	git commit -a -m "codespell $(VERSION)"
diff --git a/codespell.py b/codespell.py
index b16c901..10f7ee2 100755
--- a/codespell.py
+++ b/codespell.py
@@ -25,7 +25,7 @@ import os
 import fnmatch
 
 USAGE = """
-\t%prog [OPTIONS] dict_filename [file1 file2 ... fileN]
+\t%prog [OPTIONS] [file1 file2 ... fileN]
 """
 VERSION = '1.5'
 
@@ -193,13 +193,15 @@ def parse_options(args):
     parser.add_option('-d', '--disable-colors',
                         action = 'store_true', default = False,
                         help = 'Disable colors even when printing to terminal')
-    parser.add_option('-r', '-R',
-                        action = 'store_true', default = False,
-                        dest = 'recursive',
-                        help = 'parse directories recursively')
     parser.add_option('-w', '--write-changes',
                         action = 'store_true', default = False,
                         help = 'write changes in place if possible')
+    parser.add_option('-D', '--dictionary',
+                        action = 'store', metavar='FILE',
+                        default = '/usr/share/codespell/dictionary.txt',
+                        help = 'Custom dictionary file that contains spelling '\
+                               'corrections. If this flag is not specified '\
+                               'then default dictionary is used.')
 
     parser.add_option('-s', '--summary',
                         action = 'store_true', default = False,
@@ -210,7 +212,7 @@ def parse_options(args):
                                'accepts globs as well. E.g.: if you want '\
                                'codespell to skip .eps and .txt files, '\
                                'you\'d give "*.eps,*.txt" to this option. '\
-                               'It is expecially useful if you are using in '\
+                               'It is especially useful if you are using in '\
                                'conjunction with -r option.')
 
     parser.add_option('-x', '--exclude-file',
@@ -245,12 +247,14 @@ def parse_options(args):
 
 
     (o, args) = parser.parse_args()
-    if (len(args) < 1):
-        print('ERROR: you need to specify a dictionary!', file=sys.stderr)
+
+    if not os.path.exists(o.dictionary):
+        print('ERROR: cannot find dictionary file!', file=sys.stderr)
         parser.print_help()
         sys.exit(1)
-    if (len(args) == 1):
-        args.append('-')
+
+    if not args:
+        args.append('.')
 
     return o, args
 
@@ -470,7 +474,7 @@ def main(*args):
 
     (options, args) = parse_options(args)
 
-    build_dict(args[0])
+    build_dict(options.dictionary)
     colors = TermColors();
     if options.disable_colors:
         colors.disable()
@@ -490,14 +494,11 @@ def main(*args):
 
     glob_match = GlobMatch(options.skip)
 
-    for filename in args[1:]:
+    for filename in args:
         # ignore hidden files
         if ishidden(filename):
             continue
 
-        if not options.recursive and os.path.isdir(filename):
-            continue
-
         if os.path.isdir(filename):
             for root, dirs, files in os.walk(filename):
                 i = 0
