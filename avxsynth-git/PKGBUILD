# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>

pkgname=avxsynth-git
pkgver=20120625
pkgrel=1
pkgdesc="Linux Port of AviSynth. with include build with libav/libpostproc/ffmpegsource from GIT/SVN"
arch=('i686' 'x86_64')
url="http://www.avxsynth.org"
license=('GPL2' 'GPL3' 'MIT')
depends=('qt' 'mplayer' 'log4cpp' 'zlib' 'bzip2')
makedepends=('git' 'svn' 'yasm' 'subversion')
provides=('avxsynth')
conflicts=('avxsynth')
options=('!libtool')

buildall=0

if [ "${buildall}" = "0" ]; then
   depends+=('ffmpegsource' 'ffmpeg')
fi

_gitavroot="git://git.libav.org/libav.git"
_gitavname="libav"

_gitpostprocroot='git://git.videolan.org/libpostproc.git'
_gitpostprocname='libpostproc'

_svnffms2trunk="http://ffmpegsource.googlecode.com/svn/trunk/"
_svnffms2name="ffmpegsource"

_gitavxroot="git://github.com/avxsynth/avxsynth.git"
_gitavxname="avxsynth"

build() {
    cd "${srcdir}"
    rm -fr build
if [ "${buildall}" = "1" ]; then
    msg "Connecting to the libav Git repository..."
    if [ -d "${_gitavname}" ] ; then
        cd "${_gitavname}" && git pull --depth=1 && cd "${srcdir}"
        msg "The local files are updated."
    else
        git clone --depth=1 "${_gitavroot}" && cd "${srcdir}"
    fi
    msg "GIT checkout done or server timeout"
    rm -rf "${_gitavname}"-build
    cp -R "${_gitavname}" "${_gitavname}"-build

    msg "Connecting to libpostproc GIT server..."
    if [ -d "${_gitpostprocname}" ] ; then
        cd "${_gitpostprocname}" && git pull --depth=1 && cd "${srcdir}"
        msg "The local files are updated."
    else
        git clone --depth=1 "${_gitpostprocroot}" && cd "${srcdir}"
    fi
    msg "GIT checkout done or server timeout"
    rm -fr "${_gitpostprocname}"-build
    cp -R "${_gitpostprocname}" "${_gitpostprocname}"-build

    msg "Connecting to fmpegsource SVN server...."
    if [ -d "${_svnffms2name}" ] ; then
        cd "${_svnffms2name}" && svn update && cd "${srcdir}"
        msg "The local files are updated."
    else
        svn co "${_svnffms2trunk}" "${_svnffms2name}" && cd "${srcdir}"
    fi
    msg "SVN checkout done or server timeout"
    rm -fr "${_svnffms2name}"-build
    cp -R "${_svnffms2name}" "${_svnffms2name}"-build
fi
    msg "Connecting to avxsynth GIT server..."
    if [ -d "${_gitavxname}" ] ; then
        cd "${_gitavxname}" && git pull && cd "${srcdir}"
        msg "The local files are updated."
    else
        git clone --depth=1 "${_gitavxroot}" && cd "${srcdir}"
    fi
    msg "GIT checkout done or server timeout"
    rm -fr "${_gitavxname}"-build
    cp -R "${_gitavxname}" "${_gitavxname}"-build
if [ "${buildall}" = "1" ]; then
    msg "Starting build..."
    msg2 "Build libav"
    cd "${srcdir}"/"${_gitavname}"-build/
    ./configure --prefix="${srcdir}"/build --disable-{network,{encod,mux}ers,hwaccels,{in,out}devs,debug,av{conv,play,probe,server},doc,vdpau} --enable-pic
    make
    make install

    msg2 "Build libpostproc"
    cd "${srcdir}"/"${_gitpostprocname}"-build/
    CFLAGS="-fPIC" PKG_CONFIG_LIBDIR=""${srcdir}"/build/lib/pkgconfig" ./configure --prefix="${srcdir}"/build --disable-debug
    make
    make install

    msg2 "build ffmpegsource"
    cd "${srcdir}"/"${_svnffms2name}"-build/
    PKG_CONFIG_LIBDIR=""${srcdir}"/build/lib/pkgconfig" ./configure --prefix="${srcdir}"/build --enable-silent-rules --disable-shared --with-pic=yes
    make
    make install
fi
    msg2 "Build avxsynth"
    cd "${srcdir}"/"${_gitavxname}"-build/

    [ "${buildall}" = "1" ] && ln -s /usr/lib/pkgconfig/{glib-2.0,gobject-2.0,gmodule-no-export-2.0,libpcre,cairo,pango,pangocairo,log4cpp,Qt{Core,Gui},pixman-1,fontconfig,freetype2,libpng,x{cb{,-shm},au,proto,dmcp,cb-render,render,11},{kb,render}proto}.pc "${srcdir}"/build/lib/pkgconfig

    autoreconf -i

if [ "${buildall}" = "1" ]; then
    PKG_CONFIG_LIBDIR=""${srcdir}"/build/lib/pkgconfig" ./configure --prefix=/usr --enable-all
else
    ./configure --prefix=/usr --enable-all
fi
    make
    msg2 "Done"
}

package() {
    cd "${srcdir}"/"${_gitavxname}"-build/
    make DESTDIR="${pkgdir}" install

    # Install examples
    install -d "${pkgdir}"/usr/share/"${_gitavxname}"/examples
    cp -R scripts/*.avs "${pkgdir}"/usr/share/"${_gitavxname}"/examples
}