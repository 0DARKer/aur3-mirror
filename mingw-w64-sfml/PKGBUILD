pkgname=mingw-w64-sfml
pkgver=2.0rc1
pkgrel=1
pkgdesc="A simple, fast, cross-platform, and object-oriented multimedia API (mingw-w64)"
arch=(any)
url="http://www.sfml-dev.org"
license=("zlib")
makedepends=(mingw-w64-gcc cmake)
depends=(mingw-w64-crt
mingw-w64-libsndfile
mingw-w64-libjpeg-turbo
mingw-w64-openal
mingw-w64-glew
mingw-w64-freetype)
conflicts=(mingw-w64-sfml-static)
provides=(mingw-w64-sfml-static)
options=(!libtool !strip !buildflags)
source=("2.0-rc.tar.gz::https://github.com/LaurentGomila/SFML/tarball/2.0-rc"
"Toolchain-i686-w64-mingw32.cmake"
"Toolchain-x86_64-w64-mingw32.cmake")
md5sums=('03c8e6817f4525092b94a3d44e8eada8'
         'da10ad00a161800e0b011a77c3efbf76'
         'adea9ccdeea1784c7cd30af195f2a8cb')

_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

build() {
  cd "$srcdir/"Laurent*
  unset LDFLAGS
  for _arch in ${_architectures}; do
    mkdir -p "build-${_arch}" && pushd "build-${_arch}"
    PATH="/usr/${_arch}/bin:$PATH" cmake \
      -DCMAKE_INSTALL_PREFIX:PATH=/usr/${_arch} \
      -DCMAKE_TOOLCHAIN_FILE=${srcdir}/Toolchain-${_arch}.cmake \
      -DBUILD_EXAMPLES:BOOL=OFF \
      ..
    make
    popd
  done
}

package() {

  for _arch in ${_architectures}; do
    cd "$srcdir/"Laurent*/build-$_arch
    make DESTDIR="$pkgdir" install
    find "$pkgdir/usr/${_arch}" -name '*.dll' | xargs -rtl1 ${_arch}-strip -x
    find "$pkgdir/usr/${_arch}" -name '*.a' -o -name '*.dll' | xargs -rtl1 ${_arch}-strip -g
    find "$pkgdir/usr/${_arch}" -name '*.txt' | xargs -rtl1 rm # licenses are redundant
    rm "$pkgdir/usr/$_arch/bin/"{libsndfile-1.dll,openal32.dll}
  done
}