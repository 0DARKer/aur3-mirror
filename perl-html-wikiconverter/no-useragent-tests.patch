--- HTML-WikiConverter-0.68/t/01-wikiconverter.t	2009-03-08 03:24:42.000000000 +0100
+++ HTML-WikiConverter-0.68-new/t/01-wikiconverter.t	2011-12-11 14:41:32.779254868 +0100
@@ -71,10 +71,9 @@
 
 package main;
 
-use Test::More tests => 53;
+use Test::More tests => 49;
 use HTML::WikiConverter;
 
-my $have_lwp = eval "use LWP::UserAgent; 1";
 my $have_query_param = eval "use URI::QueryParam; 1";
 
 my $wc = new HTML::WikiConverter(
@@ -155,21 +154,6 @@
 is( $wc4->html2wiki( html => '&lt;', escape_entities => 1 ), '&lt;', "escape entities" );
 is( $wc4->html2wiki( html => '&lt;' ), '&lt;', "escape_entities is enabled by default" );
 
-SKIP: {
-  skip "LWP::UserAgent required for testing how content is fetched from URIs" => 4 unless $have_lwp;
-  skip "Couldn't fetch test website http://www.perl.org. Perhaps you don't have internet access?" => 4 unless LWP::UserAgent->new->get('http://www.perl.org')->is_success;
-
-  is( $wc4->html2wiki( uri => 'http://diberri.dyndns.org/wikipedia/html2wiki-old/test.html', strip_tags => ['head'] ), '**test**', 'fetch uri, no ua' );
-  is( $wc4->user_agent->agent, $wc4->__default_ua_string, 'using default ua' );
-
-  my $ua_agent = 'html2wiki-test/0.5x';
-  my $ua = new LWP::UserAgent( agent => $ua_agent );
-  $wc4->user_agent($ua);
-
-  is( $wc4->html2wiki( uri => 'http://diberri.dyndns.org/wikipedia/html2wiki-old/test.html', strip_tags => ['head'] ), '**test**', 'fetch uri w/ ua' );
-  is( $wc4->user_agent->agent, $ua_agent, 'using user-specified ua' );
-};
-
 eval { $wc4->html2wiki( url => '...' ) };
 ok( $@ =~ /not a valid argument/, 'url not a valid argument to html2wiki()' );
 
