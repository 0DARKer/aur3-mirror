diff -Nru kde-workspace/kwin/clients/oxygen/config/oxygenconfig.cpp kde-workspace-appmenu//kwin/clients/oxygen/config/oxygenconfig.cpp
--- kde-workspace/kwin/clients/oxygen/config/oxygenconfig.cpp	2012-01-30 16:09:48.660085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/config/oxygenconfig.cpp	2012-01-30 15:32:25.884116755 +0100
@@ -120,6 +120,7 @@
         else if( ui->ui.separatorMode->currentIndex() != configuration.separatorMode() ) modified = true;
         else if( ui->ui.titleOutline->isChecked() !=  configuration.drawTitleOutline() ) modified = true;
         else if( ui->ui.narrowButtonSpacing->isChecked() !=  configuration.useNarrowButtonSpacing() ) modified = true;
+        else if( ui->ui.applicationMenuButtonType->currentIndex() != configuration.applicationMenuButtonType() ) modified = true;
 
         // shadow configurations
         else if( ui->shadowConfigurations[0]->isChecked() !=  configuration.useOxygenShadows() ) modified = true;
@@ -157,6 +158,7 @@
         configuration.setUseDropShadows( ui->shadowConfigurations[1]->isChecked() );
         configuration.setUseOxygenShadows( ui->shadowConfigurations[0]->isChecked() );
         configuration.setUseNarrowButtonSpacing( ui->ui.narrowButtonSpacing->isChecked() );
+        configuration.setApplicationMenuButtonType( ui->ui.applicationMenuButtonType->currentIndex() );
 
         if( ui->expertMode() )
         {
@@ -246,7 +248,8 @@
         ui->shadowConfigurations[1]->setChecked( configuration.useDropShadows() );
         ui->ui.animationsEnabled->setChecked( configuration.animationsEnabled() );
         ui->ui.narrowButtonSpacing->setChecked( configuration.useNarrowButtonSpacing() );
-
+        ui->ui.applicationMenuButtonType->setCurrentIndex( configuration.applicationMenuButtonType() );
+        
         ui->animationConfigWidget()->setConfiguration( configuration );
         ui->animationConfigWidget()->load();
 
diff -Nru kde-workspace/kwin/clients/oxygen/config/oxygenconfigurationui.cpp kde-workspace-appmenu//kwin/clients/oxygen/config/oxygenconfigurationui.cpp
--- kde-workspace/kwin/clients/oxygen/config/oxygenconfigurationui.cpp	2012-01-30 16:09:48.660085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/config/oxygenconfigurationui.cpp	2012-01-30 15:32:25.884116755 +0100
@@ -107,6 +107,7 @@
         connect( ui.sizeGripMode, SIGNAL(currentIndexChanged(int)), SIGNAL(changed()) );
 
         connect( ui.narrowButtonSpacing, SIGNAL(clicked()), SIGNAL(changed()) );
+        connect( ui.applicationMenuButtonType, SIGNAL(currentIndexChanged(int)), SIGNAL(changed()) );
         connect( ui.separatorMode, SIGNAL(currentIndexChanged(int)), SIGNAL(changed()) );
         connect( ui.titleOutline, SIGNAL(clicked()), SIGNAL(changed()) );
         connect( ui.exceptions, SIGNAL(changed()), SIGNAL(changed()) );
diff -Nru kde-workspace/kwin/clients/oxygen/config/ui/oxygenconfigurationui.ui kde-workspace-appmenu//kwin/clients/oxygen/config/ui/oxygenconfigurationui.ui
--- kde-workspace/kwin/clients/oxygen/config/ui/oxygenconfigurationui.ui	2012-01-30 16:09:48.660085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/config/ui/oxygenconfigurationui.ui	2012-01-30 15:32:25.884116755 +0100
@@ -228,6 +228,38 @@
          </property>
         </widget>
        </item>
+       <item row="3" column="0">
+        <widget class="QLabel" name="label_6">
+         <property name="text">
+          <string>Menu button style:</string>
+         </property>
+         <property name="alignment">
+          <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+         </property>
+        </widget>
+       </item>
+       <item row="3" column="1">
+        <widget class="QComboBox" name="applicationMenuButtonType">
+         <property name="currentIndex">
+          <number>0</number>
+         </property>
+         <item>
+          <property name="text">
+           <string>None</string>
+          </property>
+         </item>
+         <item>
+          <property name="text">
+           <string>Menu</string>
+          </property>
+         </item>
+         <item>
+          <property name="text">
+           <string>Application name</string>
+          </property>
+         </item>
+        </widget>
+       </item>
       </layout>
      </widget>
      <widget class="QWidget" name="tab_3">
@@ -338,4 +370,4 @@
  </customwidgets>
  <resources/>
  <connections/>
-</ui>
+</ui>
\ Pas de fin de ligne Ã  la fin du fichier
diff -Nru kde-workspace/kwin/clients/oxygen/oxygenbutton.cpp kde-workspace-appmenu//kwin/clients/oxygen/oxygenbutton.cpp
--- kde-workspace/kwin/clients/oxygen/oxygenbutton.cpp	2012-01-30 16:09:48.660085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/oxygenbutton.cpp	2012-01-30 15:32:25.884116755 +0100
@@ -28,14 +28,22 @@
 #include "oxygenbutton.h"
 #include "oxygenbutton.moc"
 #include "oxygenclient.h"
+#include "oxygenhelper.h"
 
 #include <cmath>
 
 #include <QtGui/QPainter>
 #include <QtGui/QPen>
+#include <QtGui/QStyle>
+#include <QtGui/QPushButton>
+#include <QtGui/QApplication>
+#include <QtGui/QStyleOption>
+
+
 
 #include <KColorUtils>
 #include <KColorScheme>
+#include <klocale.h>
 #include <kcommondecoration.h>
 
 namespace Oxygen
@@ -57,9 +65,8 @@
         setAutoFillBackground(false);
         setAttribute(Qt::WA_NoSystemBackground);
 
-        unsigned int size( _client.configuration().buttonSize() );
-        setFixedSize( size, size );
-
+        setFixedSize( sizeHint() );
+        
         setCursor(Qt::ArrowCursor);
         setToolTip(tip);
 
@@ -70,6 +77,9 @@
         _glowAnimation->setPropertyName( "glowIntensity" );
         _glowAnimation->setEasingCurve( QEasingCurve::InOutQuad );
 
+        if ( _type == ButtonApplicationMenu )
+            connect(&_client, SIGNAL(menuAboutToHide()), this, SLOT(slotAboutToHide()));
+
         // setup connections
         reset(0);
 
@@ -101,8 +111,8 @@
     //___________________________________________________
     QSize Button::sizeHint() const
     {
-        unsigned int size( _client.configuration().buttonSize() );
-        return QSize( size, size );
+        return QSize( _client.layoutMetric(KCommonDecoration::LM_ButtonWidth, true, this),
+                      _client.layoutMetric(KCommonDecoration::LM_ButtonHeight, true, this));
     }
 
     //___________________________________________________
@@ -124,6 +134,10 @@
         // translate buttons down if window maximized
         if( _client.isMaximized() ) painter.translate( 0, 1 );
 
+        // translate buttons down only if not a menu
+        if( _type != ButtonApplicationMenu || _client.configuration().applicationMenuButtonType() == 0) 
+            painter.translate( 0, 3);
+        
         // base button color
         QColor base;
         if( _type == ButtonItemClose && _forceInactive ) base = _client.backgroundPalette( this, palette ).window().color();
@@ -172,13 +186,52 @@
 
         // Icon
         // for menu button the application icon is used
-        if( isMenuButton() )
-        {
+        if( isMenuButton() || 
+          ( _type == ButtonApplicationMenu && ( !_client.hasApplicationMenu() || _client.configuration().applicationMenuButtonType() == 0 ) ) ) {
 
             const QPixmap& pixmap( _client.icon().pixmap( _client.configuration().iconScale() ) );
             const double offset = 0.5*(width()-pixmap.width() );
             painter.drawPixmap(offset, offset-1, pixmap );
+            
+        } else if( _type == ButtonApplicationMenu ) {
+
+            TileSet *tile;
+            QString menuTitle;
+            const int iconScale = _client.configuration().iconScale();
+            const QPixmap& pixmap( _client.icon().pixmap( iconScale ) );
+
+            const QFont font = _client.options()->font(isActive());
+            const QFontMetrics metrics(font);
+            const unsigned int height = metrics.height();
+            const QPen pen(buttonDetailColor( _client.backgroundPalette( this, palette ) ) );
 
+            painter.setFont(font);
+            painter.setPen(pen);
+
+            switch( _client.configuration().applicationMenuButtonType() )
+            {
+                default:
+                case 1:
+                menuTitle = i18n("Menu");
+                break;
+
+                case 2:
+                menuTitle = _client.className();
+                break;
+            }
+                        
+            if( _status&Oxygen::Pressed )
+                tile = _helper.slabSunken(QColor("black"), 9);
+            else if( _status&Oxygen::Hovered )
+                tile = _helper.slab(QColor("black"), glow, 1, 9);
+            else
+                tile = _helper.slab(QColor("black"), 1, 9);
+            
+            tile->render(QRect(0, -iconScale/2, iconScale+16+metrics.width(menuTitle), iconScale+15), &painter, (TileSet::Tiles)(TileSet::Left|TileSet::Bottom|TileSet::Right));
+            
+            painter.drawText( 10 + iconScale, height - 1 + (iconScale - height)/2, menuTitle);
+            painter.drawPixmap(6, 2, pixmap );
+            
         } else {
 
             painter.setRenderHints(QPainter::Antialiasing);
@@ -410,4 +463,10 @@
         return;
     }
 
+    //___________________________________________________
+    void Button::slotAboutToHide()
+    {
+        _status = Oxygen::Normal;
+        update();
+    }
 }
diff -Nru kde-workspace/kwin/clients/oxygen/oxygenbutton.h kde-workspace-appmenu//kwin/clients/oxygen/oxygenbutton.h
--- kde-workspace/kwin/clients/oxygen/oxygenbutton.h	2012-01-30 16:09:48.660085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/oxygenbutton.h	2012-01-30 15:32:25.884116755 +0100
@@ -157,8 +157,8 @@
 
         //! true if button if of menu type
         bool isMenuButton( void ) const
-        { return _type == ButtonMenu || _type == ButtonItemMenu; }
-
+        { return _type == ButtonMenu || _type == ButtonItemMenu; }      
+        
         //! true if button is of toggle type
         bool isToggleButton( void ) const
         { return _type == ButtonSticky || _type == ButtonAbove || _type == ButtonBelow; }
@@ -169,10 +169,15 @@
 
         //! true if button has decoration
         bool hasDecoration( void ) const
-        { return !isMenuButton() && _type != ButtonItemClose; }
+        { return !isMenuButton() && _type != ButtonApplicationMenu 
+                                 && _type != ButtonItemClose; }
 
         //@}
 
+        private slots:
+        //! restore button state     
+        void slotAboutToHide();
+        
         private:
 
         //! parent client
diff -Nru kde-workspace/kwin/clients/oxygen/oxygenclient.cpp kde-workspace-appmenu//kwin/clients/oxygen/oxygenclient.cpp
--- kde-workspace/kwin/clients/oxygen/oxygenclient.cpp	2012-01-30 16:09:48.660085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/oxygenclient.cpp	2012-01-30 15:32:25.884116755 +0100
@@ -37,6 +37,8 @@
 #include <KLocale>
 #include <KColorUtils>
 #include <KDebug>
+#include <KWindowInfo>
+#include <KWindowSystem>
 
 #include <QtGui/QApplication>
 #include <QtGui/QLabel>
@@ -65,7 +67,10 @@
         _itemData( this ),
         _sourceItem( -1 ),
         _shadowAtom( 0 )
-    {}
+    {
+        KWindowInfo info( windowId(), 0, NET::WM2WindowClass );
+        _className = QString( info.windowClassClass() );
+    }
 
     //___________________________________________
     Client::~Client()
@@ -209,7 +214,10 @@
         switch (type) {
 
             case MenuButton:
-            return new Button(*this, i18n("Menu"), ButtonMenu);
+            return new Button(*this, i18n("Window Menu"), ButtonMenu);
+
+            case ApplicationMenuButton:
+            return new Button(*this, i18n("Application Menu"), ButtonApplicationMenu);
 
             case HelpButton:
             return new Button(*this, i18n("Help"), ButtonHelp);
@@ -379,6 +387,26 @@
             }
 
             case LM_ButtonWidth:
+            {
+                if ( btn && btn->type() == ApplicationMenuButton ) {
+                    QFontMetrics metrics(options()->font(isActive()));
+                    switch( configuration().applicationMenuButtonType() )
+                    {
+                            case 0:
+                            return buttonSize;
+
+                            default:
+                            case 1:
+                            return configuration().iconScale() * 2 + metrics.width(i18n("Menu"));
+
+                            case 2:
+                            return configuration().iconScale() * 2 + metrics.width(_className);
+                    }
+                } else {
+                    return buttonSize;
+                }
+            }
+
             case LM_ButtonHeight:
             case LM_TitleHeight:
             {
@@ -389,7 +417,7 @@
             return narrowSpacing ? 1:3;
 
             case LM_ButtonMarginTop:
-            return 0;
+            return -3;
 
             // outer margin for shadow/glow
             case LM_OuterPaddingLeft:
@@ -1331,6 +1359,31 @@
     { return "HIAX"; }
 
     //________________________________________________________________
+    QString Client::caption( void ) const
+    {
+        switch( configuration().applicationMenuButtonType() )
+        {
+            default:
+            case 0:
+            case 1:
+                return KCommonDecoration::caption();
+
+            case 2:
+                if( hasApplicationMenu() )
+                {
+                    QString toFilter = KCommonDecoration::caption();
+                    QRegExp rx("[:\\x2013-]*[\\w \']*" + _className +"[\\w \']*[\\x2013:-]*");
+
+                    rx.setCaseSensitivity(Qt::CaseInsensitive);
+
+                    return toFilter.remove( rx );
+                }
+                else
+                    return KCommonDecoration::caption();
+        }
+    }
+    
+    //________________________________________________________________
     void Client::updateWindowShape()
     {
 
diff -Nru kde-workspace/kwin/clients/oxygen/oxygenclient.h kde-workspace-appmenu//kwin/clients/oxygen/oxygenclient.h
--- kde-workspace/kwin/clients/oxygen/oxygenclient.h	2012-01-30 16:09:48.664085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/oxygenclient.h	2012-01-30 15:32:25.884116755 +0100
@@ -56,13 +56,13 @@
         Q_PROPERTY( qreal glowIntensity READ glowIntensityUnbiased WRITE setGlowIntensity )
 
         public:
-
+      
         //! constructor
         Client(KDecorationBridge *b, Factory *f);
 
         //! destructor
         virtual ~Client();
-
+        
         //! decoration name
         virtual QString visibleName() const;
 
@@ -119,6 +119,9 @@
                 clientGroupItems().count() == 1;
         }
 
+        //! filter caption
+        QString caption( void ) const;
+        
         //@}
 
         //! window shape
@@ -226,6 +229,10 @@
 
         //! paint background to painter
         void paintBackground( QPainter& ) const;
+        
+        //! client window class name
+        QString className( void ) const
+        { return _className; }
 
         public slots:
 
@@ -471,6 +478,9 @@
         */
         QBasicTimer _dragStartTimer;
 
+        //! Client window class name
+        QString _className;   
+        
         //! shadow atom
         Atom _shadowAtom;
 
diff -Nru kde-workspace/kwin/clients/oxygen/oxygenconfiguration.cpp kde-workspace-appmenu//kwin/clients/oxygen/oxygenconfiguration.cpp
--- kde-workspace/kwin/clients/oxygen/oxygenconfiguration.cpp	2012-01-30 16:09:48.664085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/oxygenconfiguration.cpp	2012-01-30 15:32:25.888116756 +0100
@@ -48,6 +48,7 @@
         _useDropShadows( true ),
         _useOxygenShadows( true ),
         _useNarrowButtonSpacing( false ),
+        _applicationMenuButtonType( 1 ),
         _animationsEnabled( true ),
         _buttonAnimationsEnabled( true ),
         _titleAnimationsEnabled( true ),
@@ -132,6 +133,11 @@
             OxygenConfig::NARROW_BUTTON_SPACING,
             defaultConfiguration.useNarrowButtonSpacing() ) );
 
+        // application menu button type
+        setApplicationMenuButtonType( group.readEntry(
+            OxygenConfig::APPLICATION_MENU_BUTTON_TYPE,
+            defaultConfiguration.applicationMenuButtonType() ) );
+
         // animations
         setAnimationsEnabled( group.readEntry(
             OxygenConfig::ANIMATIONS_ENABLED,
@@ -208,7 +214,8 @@
         if( useDropShadows() != defaultConfiguration.useDropShadows() ) group.writeEntry( OxygenConfig::USE_DROP_SHADOWS, useDropShadows() );
         if( useOxygenShadows() != defaultConfiguration.useOxygenShadows() ) group.writeEntry( OxygenConfig::USE_OXYGEN_SHADOWS, useOxygenShadows() );
         if( useNarrowButtonSpacing() != defaultConfiguration.useNarrowButtonSpacing() ) group.writeEntry( OxygenConfig::NARROW_BUTTON_SPACING, useNarrowButtonSpacing() );
-
+        if( applicationMenuButtonType() != defaultConfiguration.applicationMenuButtonType() ) group.writeEntry(OxygenConfig::APPLICATION_MENU_BUTTON_TYPE, applicationMenuButtonType() );
+        
         // animations
         if( animationsEnabled() != defaultConfiguration.animationsEnabled() ) group.writeEntry( OxygenConfig::ANIMATIONS_ENABLED, animationsEnabled() );
         if( buttonAnimationsEnabled() != defaultConfiguration.buttonAnimationsEnabled() ) group.writeEntry( OxygenConfig::BUTTON_ANIMATIONS_ENABLED, buttonAnimationsEnabled() );
@@ -401,6 +408,7 @@
             useDropShadows() == other.useDropShadows() &&
             useOxygenShadows() == other.useOxygenShadows() &&
             useNarrowButtonSpacing() == other.useNarrowButtonSpacing() &&
+            applicationMenuButtonType() == other.applicationMenuButtonType() &&
             animationsEnabled() == other.animationsEnabled() &&
             buttonAnimationsEnabled() == other.buttonAnimationsEnabled() &&
             titleAnimationsEnabled() == other.titleAnimationsEnabled() &&
diff -Nru kde-workspace/kwin/clients/oxygen/oxygenconfiguration.h kde-workspace-appmenu//kwin/clients/oxygen/oxygenconfiguration.h
--- kde-workspace/kwin/clients/oxygen/oxygenconfiguration.h	2012-01-30 16:09:48.664085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/oxygenconfiguration.h	2012-01-30 15:32:25.888116756 +0100
@@ -44,6 +44,7 @@
     static const QString HIDE_TITLEBAR = "HideTitleBar";
     static const QString ANIMATIONS_ENABLED = "AnimationsEnabled";
     static const QString NARROW_BUTTON_SPACING = "UseNarrowButtonSpacing";
+    static const QString APPLICATION_MENU_BUTTON_TYPE = "applicationMenuButtonType";
 
     //!@name animation flags
     //@{
@@ -193,6 +194,12 @@
 
         virtual void  setUseNarrowButtonSpacing( bool value )
         { _useNarrowButtonSpacing = value; }
+        
+        virtual int applicationMenuButtonType( void ) const
+        { return _applicationMenuButtonType; }
+        
+        virtual void setApplicationMenuButtonType( int value )
+        { _applicationMenuButtonType = value; }
 
         //@}
 
@@ -414,7 +421,10 @@
 
         //! narrow button spacing
         bool _useNarrowButtonSpacing;
-
+        
+        //! application menu button type
+        int _applicationMenuButtonType;
+        
         //!@name animation flags
         //@{
         bool _animationsEnabled;
diff -Nru kde-workspace/kwin/clients/oxygen/oxygenfactory.cpp kde-workspace-appmenu//kwin/clients/oxygen/oxygenfactory.cpp
--- kde-workspace/kwin/clients/oxygen/oxygenfactory.cpp	2012-01-30 16:09:48.664085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/oxygenfactory.cpp	2012-01-30 15:32:25.888116756 +0100
@@ -148,6 +148,7 @@
 
             // buttons
             case AbilityButtonMenu:
+            case AbilityButtonApplicationMenu:
             case AbilityButtonHelp:
             case AbilityButtonMinimize:
             case AbilityButtonMaximize:
diff -Nru kde-workspace/kwin/clients/oxygen/oxygenfactory.h kde-workspace-appmenu//kwin/clients/oxygen/oxygenfactory.h
--- kde-workspace/kwin/clients/oxygen/oxygenfactory.h	2012-01-30 16:09:48.664085447 +0100
+++ kde-workspace-appmenu//kwin/clients/oxygen/oxygenfactory.h	2012-01-30 15:32:25.888116756 +0100
@@ -47,7 +47,8 @@
         ButtonMax,
         ButtonMin,
         ButtonClose,
-        ButtonMenu,
+        ButtonMenu,        
+        ButtonApplicationMenu,
         ButtonSticky,
         ButtonAbove,
         ButtonBelow,
@@ -58,7 +59,7 @@
         ButtonItemClose=100,
 
         // shows the window menu for one tab
-        ButtonItemMenu
+        ButtonItemMenu,
 
     };
 
diff -Nru kde-workspace/kwin/kcmkwin/kwindecoration/buttons.cpp kde-workspace-appmenu//kwin/kcmkwin/kwindecoration/buttons.cpp
--- kde-workspace/kwin/kcmkwin/kwindecoration/buttons.cpp	2012-01-30 16:09:48.696085445 +0100
+++ kde-workspace-appmenu//kwin/kcmkwin/kwindecoration/buttons.cpp	2012-01-30 15:32:25.920116755 +0100
@@ -680,7 +680,7 @@
 
     // insert all possible buttons into the source (backwards to keep the preferred order...)
     bool dummy;
-    m_supportedButtons = "MSHIAX_FBLR"; // support all buttons
+    m_supportedButtons = "MNSHIAX_FBLR"; // support all buttons
     new ButtonSourceItem(m_buttonSource, getButton('R', dummy));
     new ButtonSourceItem(m_buttonSource, getButton('L', dummy));
     new ButtonSourceItem(m_buttonSource, getButton('B', dummy));
@@ -691,6 +691,7 @@
     new ButtonSourceItem(m_buttonSource, getButton('H', dummy));
     new ButtonSourceItem(m_buttonSource, getButton('S', dummy));
     new ButtonSourceItem(m_buttonSource, getButton('M', dummy));
+    new ButtonSourceItem(m_buttonSource, getButton('N', dummy));
     new ButtonSourceItem(m_buttonSource, getButton('_', dummy));
 }
 
@@ -742,6 +743,10 @@
         QBitmap bmp = QBitmap::fromData(QSize(menu_width, menu_height), menu_bits);
         bmp.createMaskFromColor(Qt::white);
         return Button(i18n("Menu"), bmp, 'M', false, m_supportedButtons.contains('M'));
+    } else if (type == 'N') {
+        QBitmap bmp = QBitmap::fromData(QSize(menu_width, menu_height), menu_bits);
+        bmp.createMaskFromColor(Qt::white);
+        return Button(i18n("Application Menu"), bmp, 'N', false, m_supportedButtons.contains('N'));
     } else if (type == '_') {
         QBitmap bmp = QBitmap::fromData(QSize(spacer_width, spacer_height), spacer_bits);
         bmp.createMaskFromColor(Qt::white);
diff -Nru kde-workspace/kwin/libkdecorations/CMakeLists.txt kde-workspace-appmenu//kwin/libkdecorations/CMakeLists.txt
--- kde-workspace/kwin/libkdecorations/CMakeLists.txt	2012-01-30 16:09:48.708085445 +0100
+++ kde-workspace-appmenu//kwin/libkdecorations/CMakeLists.txt	2012-01-30 15:32:25.932116754 +0100
@@ -5,11 +5,14 @@
    kdecoration_plugins_p.cpp
    kdecorationfactory.cpp
    kcommondecoration.cpp
-   kcommondecoration_p.cpp )
+   kcommondecoration_p.cpp 
+)
+
+include_directories(${DBUSMENUQT_INCLUDE_DIR})
 
 kde4_add_library(kdecorations SHARED ${kdecorations_LIB_SRCS})
 
-target_link_libraries(kdecorations ${KDE4_KDEUI_LIBS} kephal)
+target_link_libraries(kdecorations ${KDE4_KDEUI_LIBS} ${DBUSMENUQT_LIBRARIES} kephal appmenu-kde)
 target_link_libraries(kdecorations LINK_INTERFACE_LIBRARIES ${KDE4_KDEUI_LIBS})
 
 set_target_properties(kdecorations PROPERTIES
diff -Nru kde-workspace/kwin/libkdecorations/kcommondecoration.cpp kde-workspace-appmenu//kwin/libkdecorations/kcommondecoration.cpp
--- kde-workspace/kwin/libkdecorations/kcommondecoration.cpp	2012-01-30 16:09:48.708085445 +0100
+++ kde-workspace-appmenu//kwin/libkdecorations/kcommondecoration.cpp	2012-01-30 15:32:25.932116754 +0100
@@ -29,6 +29,7 @@
 #include <QCursor>
 #include <QDateTime>
 #include <QLabel>
+#include <QMenu>
 
 #include <QWidget>
 
@@ -57,6 +58,7 @@
     memset(m_button, 0, sizeof(KCommonDecorationButton *) * NumButtons);
     connect(wrapper, SIGNAL(keepAboveChanged(bool)), this, SIGNAL(keepAboveChanged(bool)));
     connect(wrapper, SIGNAL(keepBelowChanged(bool)), this, SIGNAL(keepBelowChanged(bool)));
+    connect(wrapper, SIGNAL(menuAboutToHide()), this, SIGNAL(menuAboutToHide()));
 }
 
 KCommonDecoration::~KCommonDecoration()
@@ -296,12 +298,16 @@
         connect(m_previewWidget, SIGNAL(destroyed(QObject*)), this, SLOT(objDestroyed(QObject*)));
     }
 
-    addButtons(m_buttonsLeft,
-               options()->customButtonPositions() ? options()->titleButtonsLeft() : defaultButtonsLeft(),
-               true);
-    addButtons(m_buttonsRight,
-               options()->customButtonPositions() ? options()->titleButtonsRight() : defaultButtonsRight(),
-               false);
+    QString leftSettings = options()->customButtonPositions() ? options()->titleButtonsLeft() : defaultButtonsLeft();
+    QString rightSettings = options()->customButtonPositions() ? options()->titleButtonsRight() : defaultButtonsRight();
+
+    if (!isPreview()) {
+        bool containsN = leftSettings.contains("N") || rightSettings.contains("N");
+        wrapper->manageApplicationMenu(containsN);
+    }
+
+    addButtons(m_buttonsLeft, leftSettings, true);
+    addButtons(m_buttonsRight, rightSettings, false);
 
     updateLayout();
 
@@ -378,7 +384,7 @@
                 if (!m_button[MenuButton]) {
                     btn = createButton(MenuButton);
                     if (!btn) break;
-                    btn->setTipText(i18n("Menu"));
+                    btn->setTipText(i18n("Window Menu"));
                     btn->setRealizeButtons(Qt::LeftButton | Qt::RightButton);
                     connect(btn, SIGNAL(pressed()), SLOT(menuButtonPressed()));
                     connect(btn, SIGNAL(released()), this, SLOT(menuButtonReleased()));
@@ -389,6 +395,19 @@
                     m_button[MenuButton] = btn;
                 }
                 break;
+             case 'N': // Application Menu button
+                if (!m_button[ApplicationMenuButton]) {
+                    btn = createButton(ApplicationMenuButton);
+                    if (!btn) break;
+                    btn->setTipText(i18n("Application Menu"));
+                    btn->setRealizeButtons(Qt::LeftButton | Qt::RightButton);
+                    connect(btn, SIGNAL(pressed()), SLOT(applicationMenuButtonPressed()));
+
+                    // fix double deletion, see objDestroyed()
+                    connect(btn, SIGNAL(destroyed(QObject*)), this, SLOT(objDestroyed(QObject*)));
+                    m_button[ApplicationMenuButton] = btn;
+                }
+                break;
             case 'S': // OnAllDesktops button
                 if (!m_button[OnAllDesktopsButton]) {
                     btn = createButton(OnAllDesktopsButton);
@@ -721,6 +740,18 @@
         closeWindow();
 }
 
+void KCommonDecoration::applicationMenuButtonPressed()
+{
+    QRect menuRect = m_button[ApplicationMenuButton]->rect();
+    QPoint menubottom = m_button[ApplicationMenuButton]->mapToGlobal(menuRect.bottomLeft()) + QPoint(0, 2);
+    showApplicationMenu(menubottom);
+
+    KDecorationFactory* f = factory();
+    if (!f->exists(decoration()))   // 'this' was deleted
+        return;
+    m_button[ApplicationMenuButton]->setDown(false);
+}
+
 void KCommonDecoration::resizeEvent(QResizeEvent */*e*/)
 {
     if (decorationBehaviour(DB_ButtonHide))
@@ -1004,11 +1035,17 @@
 
 void KCommonDecorationButton::mousePressEvent(QMouseEvent* e)
 {
-    m_lastMouse = e->button();
-    // pass on event after changing button to LeftButton
-    QMouseEvent me(e->type(), e->pos(), (e->button()&m_realizeButtons) ? Qt::LeftButton : Qt::NoButton, e->buttons(), e->modifiers());
-
-    QAbstractButton::mousePressEvent(&me);
+    if ( m_type == ApplicationMenuButton && !m_decoration->hasApplicationMenu() ) {
+        // no menu, tansfer event to parent decoration
+        e->ignore();
+    }
+    else {
+        m_lastMouse = e->button();
+        // pass on event after changing button to LeftButton
+        QMouseEvent me(e->type(), e->pos(), (e->button()&m_realizeButtons) ? Qt::LeftButton : Qt::NoButton, e->buttons(), e->modifiers());
+        
+        QAbstractButton::mousePressEvent(&me);
+    }
 }
 
 void KCommonDecorationButton::mouseReleaseEvent(QMouseEvent* e)
@@ -1115,6 +1152,19 @@
 {
     return wrapper->showWindowMenu(pos);
 }
+void KCommonDecoration::manageApplicationMenu(bool manage)
+{
+    return wrapper->manageApplicationMenu(manage);
+
+}
+void KCommonDecoration::showApplicationMenu(QPoint pos)
+{
+    return wrapper->showApplicationMenu(pos);
+}
+bool KCommonDecoration::hasApplicationMenu() const
+{
+    return wrapper->hasApplicationMenu();
+}
 void KCommonDecoration::showWindowMenu(QPoint pos)
 {
     return wrapper->showWindowMenu(pos);
diff -Nru kde-workspace/kwin/libkdecorations/kcommondecoration.h kde-workspace-appmenu//kwin/libkdecorations/kcommondecoration.h
--- kde-workspace/kwin/libkdecorations/kcommondecoration.h	2012-01-30 16:09:48.708085445 +0100
+++ kde-workspace-appmenu//kwin/libkdecorations/kcommondecoration.h	2012-01-30 15:32:25.932116754 +0100
@@ -40,6 +40,7 @@
     MinButton,
     CloseButton,
     MenuButton,
+    ApplicationMenuButton,
     OnAllDesktopsButton,
     AboveButton,
     BelowButton,
@@ -274,6 +275,7 @@
     void slotKeepBelow();
     void menuButtonPressed();
     void menuButtonReleased();
+    void applicationMenuButtonPressed();
 public:
     virtual Position mousePosition(const QPoint &point) const;
 
@@ -310,6 +312,9 @@
     void showWindowMenu(const QRect &pos);
     void showWindowMenu(QPoint pos);
     void performWindowOperation(WindowOperation op);
+    void manageApplicationMenu(bool manage);
+    void showApplicationMenu(QPoint pos);
+    bool hasApplicationMenu() const;
     void setMask(const QRegion& reg, int mode = 0);
     void clearMask(); // convenience
     bool isPreview() const;
@@ -323,6 +328,7 @@
 Q_SIGNALS:
     void keepAboveChanged(bool);
     void keepBelowChanged(bool);
+    void menuAboutToHide();
 public:
     void setMainWidget(QWidget*);
     void createMainWidget(Qt::WFlags flags = 0);
diff -Nru kde-workspace/kwin/libkdecorations/kdecoration.cpp kde-workspace-appmenu//kwin/libkdecorations/kdecoration.cpp
--- kde-workspace/kwin/libkdecorations/kdecoration.cpp	2012-01-30 16:09:48.708085445 +0100
+++ kde-workspace-appmenu//kwin/libkdecorations/kdecoration.cpp	2012-01-30 15:32:25.932116754 +0100
@@ -28,6 +28,7 @@
 #include <kdebug.h>
 #include <QApplication>
 #include <kglobal.h>
+#include <appmenu-kde/registrarclient.h>
 #include <assert.h>
 #if defined Q_WS_X11 && ! defined K_WS_QTONLY
 #include <X11/Xlib.h>
@@ -54,8 +55,8 @@
 
 */
 
-
 KDecorationOptions* KDecoration::options_;
+RegistrarClient* KDecoration::mRegistrarClient = 0;
 
 KDecoration::KDecoration(KDecorationBridge* bridge, KDecorationFactory* factory)
     :   bridge_(bridge),
@@ -206,6 +207,31 @@
     bridge_->showWindowMenu(pos);
 }
 
+bool KDecoration::hasApplicationMenu() const
+{
+    return mRegistrarClient && mRegistrarClient->menuForWinId(windowId());
+}
+
+void KDecoration::manageApplicationMenu(bool manage)
+{
+    if (!manage && mRegistrarClient) {
+        delete mRegistrarClient;
+        mRegistrarClient = 0;
+    }
+    else if (manage && !mRegistrarClient) {
+        mRegistrarClient = new RegistrarClient();
+    }
+}
+
+void KDecoration::showApplicationMenu(QPoint pos)
+{
+    QMenu* menu = mRegistrarClient->menuForWinId(windowId());
+    if (menu) {
+        connect(menu, SIGNAL(aboutToHide()), this, SLOT(emitMenuAboutToHide()));
+        menu->popup(pos);
+    }
+}
+
 void KDecoration::showWindowMenu(QPoint pos)
 {
     bridge_->showWindowMenu(pos);
@@ -324,6 +350,11 @@
     keepBelowChanged(below);
 }
 
+void KDecoration::emitMenuAboutToHide()
+{
+    menuAboutToHide();
+}
+
 bool KDecoration::drawbound(const QRect&, bool)
 {
     return false;
diff -Nru kde-workspace/kwin/libkdecorations/kdecoration.h kde-workspace-appmenu//kwin/libkdecorations/kdecoration.h
--- kde-workspace/kwin/libkdecorations/kdecoration.h	2012-01-30 16:09:48.712085445 +0100
+++ kde-workspace-appmenu//kwin/libkdecorations/kdecoration.h	2012-01-30 15:32:25.932116754 +0100
@@ -35,6 +35,8 @@
 #define KWIN_EXPORT KDE_EXPORT
 
 class KConfig;
+class RegistrarClient;
+class QMenu;
 
 /** @defgroup kdecoration KWin decorations library */
 
@@ -164,7 +166,7 @@
         AbilityAnnounceButtons = 0, ///< decoration supports AbilityButton* values (always use)
         AbilityAnnounceColors = 1, ///< decoration supports AbilityColor* values (always use)
         // buttons
-        AbilityButtonMenu = 1000,   ///< decoration supports the menu button
+        AbilityButtonMenu = 1000,   ///< decoration supports the window menu button
         AbilityButtonOnAllDesktops = 1001, ///< decoration supports the on all desktops button
         AbilityButtonSpacer = 1002, ///< decoration supports inserting spacers between buttons
         AbilityButtonHelp = 1003,   ///< decoration supports what's this help button
@@ -175,6 +177,7 @@
         AbilityButtonBelowOthers = 1008, ///< decoration supports a below button
         AbilityButtonShade = 1009, ///< decoration supports a shade button
         AbilityButtonResize = 1010, ///< decoration supports a resize button
+        AbilityButtonApplicationMenu = 1011,   ///< decoration supports the application menu button
         // colors
         AbilityColorTitleBack = 2000, ///< decoration supports titlebar background color
         ABILITYCOLOR_FIRST = AbilityColorTitleBack, ///< @internal
@@ -310,7 +313,8 @@
      * If customButtonPositions() returns true, titleButtonsLeft
      * returns which buttons should be on the left side of the titlebar from left
      * to right. Characters in the returned string have this meaning :
-     * @li 'M' menu button
+     * @li 'N' application menu button
+     * @li 'M' window menu button
      * @li 'S' on_all_desktops button
      * @li 'H' quickhelp button
      * @li 'I' minimize ( iconify ) button
@@ -579,6 +583,18 @@
      * Overloaded version of the above.
      */
     void showWindowMenu(QPoint pos);
+    /** 
+     * TODO: add documentation for this method
+     */
+    void showApplicationMenu(QPoint pos);
+    /**
+     * TODO: add documentation for this method
+     */
+    void manageApplicationMenu(bool manage);
+    /**
+     * TODO: add documentation for this method
+     */
+    bool hasApplicationMenu() const;
     /**
      * This function performs the given window operation. This function may destroy
      * the current decoration object, just like showWindowMenu().
@@ -747,6 +763,10 @@
      * This signal is emitted whenever the window's keep-below state changes.
      */
     void keepBelowChanged(bool);
+    /**
+     * This signal is emitted whenever application menu is closed
+     */
+    void menuAboutToHide();
 
 public:
     /**
@@ -898,6 +918,10 @@
      * @internal
      */
     void emitKeepBelowChanged(bool below);
+    /**
+     * @internal
+     */
+    void emitMenuAboutToHide();
 
 private:
     KDecorationBridge* bridge_;
@@ -907,7 +931,7 @@
     friend class KDecorationUnstable; // for bridge_
     static KDecorationOptions* options_;
     KDecorationPrivate* d;
-
+    static RegistrarClient* mRegistrarClient;
 };
 
 /**
