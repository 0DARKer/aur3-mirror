# Maintainer: Bob Fanger < bfanger(at)gmail >
# Contributors: Filip <fila pruda com>, Det < nimetonmaili(at)gmail >
# Credits: nvidia-all
pkgname=r8168
pkgver=8.025.00
pkgrel=2
_kernver=`uname -r`
pkgdesc="A kernel module for Realtek 8168 network cards"
url="http://www.realtek.com.tw"
license="realtek"
arch=('i686' 'x86_64')
depends=('glibc')
makedepends=('linux-headers')
source=(http://r8168.googlecode.com/files/$pkgname-$pkgver.tar.bz2)
install=${pkgname}.install
sha1sums=('c8e3f5672805961ecdbc2c45cf842414fc9d1633')

### Enable using of version numbers from pacman. This should only be used if you have kernels with
### long version numbers (for example if compiled with git-suffixes). This will not work with kernels
### compiled outside pacman's management, and takes much longer than the canonical method, due to
### needing to search the local repository. Set to '1' to enable
USE_PACMAN_VERSION=0

  if [ "$USE_PACMAN_VERSION" = "0" ]; then
    _KERNELS=`file /boot/* | grep 'Linux kernel.*boot executable' | sed 's/.*version \([^ ]\+\).*/\1/'`
  else
    _PACKAGES=`pacman -Qsq linux`
    _KERNELS=`pacman -Ql $PACKAGES | grep /modules.alias.bin | sed 's/.*\/lib\/modules\/\(.*\)\/modules.alias.bin/\1/g'`
  fi

build() {
  # Loop through all detected kernels
  for _kernver in $_KERNELS; do
    cd "${srcdir}"
    cp -R ${pkgname}-${pkgver} ${pkgname}-${pkgver}-${_kernver}
    cd ${pkgname}-${pkgver}-${_kernver}
    msg2 "Building module for ${_kernver}"
    make clean SYSSRC=/lib/modules/linux-"${_kernver}" modules
  done

  # Modify .install
  if [ "$USE_PACMAN_VERSION" = "0" ]; then
    sed 's/USE_PACMAN_VERSION=1/USE_PACMAN_VERSION=0/g' "$startdir/${pkgname}.install" >/dev/null 2>&1
  else
    sed 's/USE_PACMAN_VERSION=0/USE_PACMAN_VERSION=1/g' "$startdir/${pkgname}.install" >/dev/null 2>&1
  fi
}

package() {
  install -d -m755 "${pkgdir}/etc/modprobe.d"
  echo "blacklist r8169" > "${pkgdir}/etc/modprobe.d/r8169_blacklist.conf"
  # Loop through all detected kernels
  for _kernver in $_KERNELS; do
    cd "${srcdir}/${pkgname}-${pkgver}-${_kernver}/src"
    # Install kernel module
    install -D -m644 ${pkgname}.ko "${pkgdir}/lib/modules/${_kernver}/kernel/drivers/net/${pkgname}.ko"
    gzip "${pkgdir}/lib/modules/${_kernver}/kernel/drivers/net/${pkgname}.ko"
  done
}
