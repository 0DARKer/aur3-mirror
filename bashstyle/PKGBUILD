# Maintainer: ian <ian at kremlin dot cc>
pkgname=bashstyle
pkgver=8.4
pkgrel=2
# new epoch as PKGBUILD was rewritten -- kremlin
epoch=1
pkgdesc="A PyGTK client for managing bash, readline, vim, and nano settings"
arch=('any')
url="http://nanolx.org/nanolx/bashstyle-ng"
license=('GPL3')
groups=('system')
depends=('python' 'hicolor-icon-theme' 'libnewt')
makedepends=('python-configobj' 'bc')
optdepends=('dmidecode: hardware information support' 'acpi: acpi events support' 'lspci: pci device support' 'lsusb: usb device support' 'ps2pdf: pdf display' 'tree: treecd support')
install=".install"
provides=("bashstyle-git")
conflicts=("bashstyle-git")
source=("http://downloads.nanolx.org/BashStyle-NG/bashstyle-ng_8.4.tar.bz2" "configchecks.patch")
md5sums=('0370596cee8cacebe99893748d88a343'
         '7ecf14c62c11ce35778ce7b320f85b7f')
sha256sums=('ef7254ee0847086ec5b75fd3a97b07f571af4079887f52749717180832d501f8'
            'a3b1fff33f186dff8541f897f6d4dfd05dd77ddc9bb168b765e233c416f79096')

prepare() {
	cd "$srcdir/bashstyle-ng_8.4/.configure"
	patch checks < $srcdir/configchecks.patch
}

build() {
	cd "$srcdir/bashstyle-ng_8.4"
	./configure
	make
}

package() {
	cd "$srcdir/bashstyle-ng_8.4"
	make DESTDIR="$pkgdir/" install

	# get rid of potfiles if already present
	if [ -f /usr/share/locale/de/LC_MESSAGES/bs-ng-wizard.mo ]; then
		rm $pkgdir/usr/share/locale/de/LC_MESSAGES/bs-ng-wizard.mo
	fi
	if [ -f /usr/share/locale/de/LC_MESSAGES/bs-ng.mo ]; then
		rm $pkgdir/usr/share/locale/de/LC_MESSAGES/bs-ng.mo
	fi
	if [ -f /usr/share/locale/de/LC_MESSAGES/nx-rc.mo ]; then
		rm $pkgdir/usr/share/locale/de/LC_MESSAGES/nx-rc.mo
	fi
	if [ -f /usr/share/locale/es/LC_MESSAGES/bs-ng.mo ]; then
		rm $pkgdir/usr/share/locale/es/LC_MESSAGES/bs-ng.mo
	fi
	if [ -f /usr/share/locale/es/LC_MESSAGES/nx-rc.mo ]; then
		rm $pkgdir/usr/share/locale/es/LC_MESSAGES/nx-rc.mo
	fi
	if [ -f /usr/share/locale/it/LC_MESSAGES/bs-ng.mo ]; then
		rm $pkgdir/usr/share/locale/it/LC_MESSAGES/bs-ng.mo
	fi
	if [ -f /usr/share/locale/ru/LC_MESSAGES/bs-ng-wizard.mo ]; then
		rm $pkgdir/usr/share/locale/ru/LC_MESSAGES/bs-ng-wizard.mo
	fi
	if [ -f /usr/share/locale/ru/LC_MESSAGES/bs-ng.mo ]; then
		rm $pkgdir/usr/share/locale/ru/LC_MESSAGES/bs-ng.mo
	fi
	if [ -f /usr/share/locale/ru/LC_MESSAGES/nx-rc.mo ]; then
		rm $pkgdir/usr/share/locale/ru/LC_MESSAGES/nx-rc.mo
	fi

	# clean up empty dirs
	if [ "$(ls -A $pkgdir/usr/share/locale/ru/LC_MESSAGES 2> /dev/null)" == "" ]; then
		rmdir $pkgdir/usr/share/locale/ru/LC_MESSAGES
		rmdir $pkgdir/usr/share/locale/ru
	fi
	if [ "$(ls -A $pkgdir/usr/share/locale/de/LC_MESSAGES 2> /dev/null)" == "" ]; then
		rmdir $pkgdir/usr/share/locale/de/LC_MESSAGES
		rmdir $pkgdir/usr/share/locale/de
	fi
	if [ "$(ls -A $pkgdir/usr/share/locale/it/LC_MESSAGES 2> /dev/null)" == "" ]; then
		rmdir $pkgdir/usr/share/locale/it/LC_MESSAGES
		rmdir $pkgdir/usr/share/locale/it
	fi
	if [ "$(ls -A $pkgdir/usr/share/locale/es/LC_MESSAGES 2> /dev/null)" == "" ]; then
		rmdir $pkgdir/usr/share/locale/es/LC_MESSAGES
		rmdir $pkgdir/usr/share/locale/es
	fi
	if [ "$(ls -A $pkgdir/usr/share/doc/bashstyle-ng/img-style 2> /dev/null)" == "" ]; then
		rmdir $pkgdir/usr/share/doc/bashstyle-ng/img-style
	fi
	if [ "$(ls -A $pkgdir/usr/share/doc/bashstyle-ng/img 2> /dev/null)" == "" ]; then
		rmdir $pkgdir/usr/share/doc/bashstyle-ng/img
	fi
	if [ "$(ls -A $pkgdir/usr/share/locale 2> /dev/null)" == "" ]; then
		rmdir $pkgdir/usr/share/locale
	fi
	if [ "$(ls -A $pkgdir/usr/share/doc/bashstyle-ng 2> /dev/null)" == "" ]; then
		rmdir $pkgdir/usr/share/doc/bashstyle-ng
		rmdir $pkgdir/usr/share/doc
	fi
}

