# Maintainer: Nicolas Pouillard <nicolas.pouillard@gmail.com>
# Contributor: Elena ``of Valhalla'' Grandi <elena.valhalla@gmail.com>

# The git-annex assistant requires significantly more dependencies.
# If you do not need the assistant or have build issues try:
# _assistant=0
_assistant=1

# In _cabal_mode=1 cabal install is used to install the missing dependencies
# for git-annex in a temporary local location to not interfer with you
# installation.
_cabal_mode=0
_cabal_flags=( -f-DBus -f-S3 )

if (( _assistant )); then
  _cabal_mode=1
fi

# Some of these features require packages not available in the [haskell] repo.
# The _cabal_mode=1 is here for that reason.
# Note that if network>=2.4 is used, then URI_24 has to be set
FEATURES='-DWITH_S3 -DURI_24'

if (( _assistant )); then
  FEATURES='-DURI_24 -DWITH_ASSISTANT -DWITH_WEBAPP -DWITH_NEW_YESOD -DWITH_PAIRING'
  # dbus has been temp disabled starting in 3.20121016 -DWITH_DBUS
  # S3 does not build with GHC 7.6 out of the box.
  #   * the arch-haskell package
  #     haskell-hs3 is correctly patched, however.
  #   * but, it is built against network 2.3...
  # -DWITH_S3'
fi

# Building the documentation requires ikiwiki.
# If you don't want to build the documentation turns this to 0.
_build_docs=1

pkgname=git-annex
pkgver=3.20121017
pkgrel=1
pkgdesc='manage files with git, without checking their contents into git'
arch=('i686' 'x86_64')
url="http://git-annex.branchable.com/"
license=(GPL3)
depends=(git util-linux openssh rsync pcre curl)
options=(!makeflags)
if (( _cabal_mode )); then
  makedepends=(ghc cabal-install)
else
  makedepends=(ghc
              haskell-bloomfilter
              haskell-dataenc
              haskell-edit-distance
              haskell-extensible-exceptions
              haskell-hinotify
              haskell-hs3
              haskell-hslogger
              haskell-http
              haskell-ifelse
              haskell-json
              haskell-lifted-base
              haskell-missingh
              haskell-monad-control
              haskell-pcre-light
              haskell-quickcheck
              haskell-sha
              haskell-stm
              haskell-transformers-base
              haskell-testpack
              haskell-utf8-string)
fi
(( ! _build_docs )) || makedepends=(ikiwiki "${makedepends[@]}")
_gitroot=git://git.kitenet.net/git-annex
_gitrepo=git-annex
_ignore='IGNORE=-ignore-package monads-fd -ignore-package monads-tf'

asking() {
  read -p "$@ (Y/n)" answer
  case "$answer" in
    n|N|no|NO|No|nO) false;;
    *) true;;
  esac
}

build() {
  cd $srcdir

  if [ -d $_gitrepo ] ; then
    cd $_gitrepo
    git fetch origin || return 1
    git reset --hard origin/master || return 1
    msg "The local files are updated."
  else
    # --depth=1 should only be used when no merge is done
    git clone "${_gitroot}" $_gitrepo || return 1
  fi
  cd "${srcdir}/$_gitrepo"
  git checkout $pkgver || return 1
  rsync -aH --del "${srcdir}/$_gitrepo/" "${srcdir}/build/" || return 1
  cd "${srcdir}/build"

  msg "GIT checkout done or server timeout"
  msg "Starting make..."

  ORIG_HOME="$HOME"
  ORIG_TMPDIR="$TMPDIR"
  export HOME="${srcdir}/home"
  export TMPDIR="${srcdir}/home/tmp"
  mkdir -p "$HOME" "$TMPDIR"

  git remote add nphub https://github.com/np/git-annex
  git fetch nphub
  git cherry-pick nphub/relax-base-deps
  git cherry-pick nphub/assistant-without-s3~4..nphub/assistant-without-s3

  if (( _cabal_mode )); then
    cabal update
    cabal install "${_cabal_flags[@]}" --user --only-dependencies
  fi

  make "$_ignore" FEATURES="$FEATURES" || return 1
  # haskell-testpack is required only to run the tests
  make "$_ignore" FEATURES="$FEATURES" test ||
    asking "Tests failed. Continue?"
  export HOME="$ORIG_HOME"
  export TMPDIR="$ORIG_TMPDIR"
}

package() {
  cd $srcdir/build
  make "$_ignore" DESTDIR=$pkgdir install
}
