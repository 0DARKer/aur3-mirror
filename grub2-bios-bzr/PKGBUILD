## Maintainer : Keshav P R <skodabenz at rocketmail dot com>

pkgname=grub2-bios-bzr
# pkgname=grub2-bios-bzr-exp   ## Uncomment for grub2 Experimental Branch

pkgver=3322
pkgdesc="The GNU GRand Unified Bootloader - Version 2 - Built for i386 BIOS - BZR Development version with grub-extras"
url="http://www.gnu.org/software/grub/"
arch=('i686' 'x86_64')
license=('GPL3')
makedepends=('bzr' 'rsync' 'xz' 'bdf-unifont' 'python2' 'autogen' 'texinfo' 'help2man' 'gettext' 'device-mapper')
depends=('xz' 'gettext' 'freetype2' 'device-mapper')
optdepends=()
install="grub2-bios-bzr.install"
backup=('etc/default/grub' 'etc/grub.d/40_custom')
conflicts=('grub2-common' 'grub2-bios')
provides=('grub2-common' 'grub2-bios')
replaces=()
source=('grub.default'
		'grub.cfg.example'
		'20_memtest86+'
		'archlinux_grub2_mkconfig_fixes.patch')

sha256sums=('bbea2d8cbf2920885b88766d5988ddb440b394cda4b8597dc6f4a9e7d236c61b'
			'7afe190bbbf582ac836d629314ab2ac1e0f1b2fd6cfeb6527d2a53f3fa3c1c2c'
			'ba0f871ee93760d14d7f19709bb875af4a863a758776a23519ca7100a63da295'
			'1197b9d567319ab3a0a243700b7d0592427fdc0ef3d375652a93c10249b4aebf')

case "${pkgname}" in
	grub2-bios-bzr-exp )
					pkgdesc="The GNU GRand Unified Bootloader 2 - Built for i386 BIOS - BZR Experimental Branch with grub-extras"
					pkgrel=1
					conflicts=(${conflicts[@]} 'grub2-bios-bzr' 'grub2-bios-bzr-butter')
					_trns_name="grub"
					_bzrtrunk="bzr://bzr.savannah.gnu.org/grub/branches/experimental/"
					# _bzrtrunk="lp:~skodabenz/grub/grub2-bzr-exp"
					_bzrmod="grub2_exp"
					;;
	grub2-bios-bzr )
					pkgdesc="The GNU GRand Unified Bootloader 2 - Built for i386 BIOS - BZR Main Trunk with grub-extras"
					pkgrel=2
					conflicts=(${conflicts[@]} 'grub2-bios-bzr-exp' 'grub2-bios-bzr-butter')
					_trns_name="grub"
					_bzrtrunk="bzr://bzr.savannah.gnu.org/grub/trunk/grub/"
					# _bzrtrunk="lp:grub/grub2"
					_bzrmod="grub2"
					;;
esac

if [ "$CARCH" = 'x86_64' ]
then
	# makedepends=(${makedepends[@]} 'gcc-multilib' 'gcc-libs-multilib' 'lib32-glibc' 'binutils-multilib' 'libtool-multilib')
	
	_EFIEMU="--enable-efiemu"
else
	_EFIEMU="--disable-efiemu"
fi

## grub2-extras bzr repo locations
_bzrtrunk_lua="bzr://bzr.savannah.gnu.org/grub-extras/lua/"
# _bzrtrunk_lua="lp:~skodabenz/grub/grub2-extras-lua"
_bzrtrunk_ntldr_img="bzr://bzr.savannah.gnu.org/grub-extras/ntldr-img/"
# _bzrtrunk_ntldr_img="lp:~skodabenz/grub/grub2-extras-ntldr-img"
_bzrtrunk_915resolution="bzr://bzr.savannah.gnu.org/grub-extras/915resolution/"
# _bzrtrunk_915resolution="lp:~skodabenz/grub/grub2-extras-915resolution"
_bzrtrunk_gpxe="bzr://bzr.savannah.gnu.org/grub-extras/gpxe/"
# _bzrtrunk_gpxe="lp:~skodabenz/grub/grub2-extras-gpxe"


update_bzr() {
	
	msg "Connecting to BZR server..."
	if [ -d "${srcdir}/${_bzrmod}" ]
	then
		cd "${srcdir}/${_bzrmod}" && bzr pull "${_bzrtrunk}"
		msg "GRUB2 BZR Local repository updated."
	else
		cd "${srcdir}/"
		bzr branch "${_bzrtrunk}" "${_bzrmod}"
		msg "GRUB2 BZR repository cloned."
	fi
	msg "BZR checkout done or server timeout"
	
	if [ -d "${srcdir}/${_bzrmod}/grub2-extras" ]
	then
		cd "${srcdir}/${_bzrmod}/grub2-extras/"
		
		if [ -d "${srcdir}/${_bzrmod}/grub2-extras/lua" ]
		then
			cd "${srcdir}/${_bzrmod}/grub2-extras/lua" && bzr pull "${_bzrtrunk_lua}"
			echo
		else
			bzr branch "${_bzrtrunk_lua}" lua
			echo
		fi
		
		if [ -d "${srcdir}/${_bzrmod}/grub2-extras/ntldr-img" ]
		then
			cd "${srcdir}/${_bzrmod}/grub2-extras/ntldr-img" && bzr pull "${_bzrtrunk_ntldr_img}"
			echo
		else
			bzr branch "${_bzrtrunk_ntldr_img}" ntldr-img
			echo
		fi
		
		if [ -d "${srcdir}/${_bzrmod}/grub2-extras/915resolution" ]
		then
			cd "${srcdir}/${_bzrmod}/grub2-extras/915resolution" && bzr pull "${_bzrtrunk_915resolution}"
			echo
		else
			bzr branch "${_bzrtrunk_915resolution}" 915resolution
			echo
		fi
		
		if [ -d "${srcdir}/${_bzrmod}/grub2-extras/gpxe" ]
		then
			cd "${srcdir}/${_bzrmod}/grub2-extras/gpxe" && bzr pull "${_bzrtrunk_gpxe}"
			echo
		else
			bzr branch "${_bzrtrunk_gpxe}" gpxe
			echo
		fi
	else
		mkdir -p "${srcdir}/${_bzrmod}/grub2-extras/"
		cd "${srcdir}/${_bzrmod}/grub2-extras/"
		
		bzr branch "${_bzrtrunk_lua}" lua
		echo
		bzr branch "${_bzrtrunk_ntldr_img}" ntldr-img
		echo
		bzr branch "${_bzrtrunk_915resolution}" 915resolution
		echo
		bzr branch "${_bzrtrunk_gpxe}" gpxe
		echo
	fi
	
	cd "${srcdir}/${_bzrmod}/"
	rsync -Lrtvz translationproject.org::tp/latest/grub/ "${srcdir}/${_bzrmod}/po"
	(cd "${srcdir}/${_bzrmod}/po" && ls *.po | cut -d. -f1 | xargs) > "${srcdir}/${_bzrmod}/po/LINGUAS"
	
}


build() {
	
	update_bzr
	
	rm -rf "${srcdir}/${_bzrmod}_build" || true
	
	cp -r "${srcdir}/${_bzrmod}" "${srcdir}/${_bzrmod}_build"
	cd "${srcdir}/${_bzrmod}_build"
	
	patch -Np1 -i "${srcdir}/archlinux_grub2_mkconfig_fixes.patch"
	echo
	
	rm -rf "${srcdir}/${_bzrmod}_build/grub2-extras/zfs" || true
	
	export GRUB_CONTRIB="${srcdir}/${_bzrmod}_build/grub2-extras/"
	
	## Archlinux changed default /usr/bin/python3, need to use /usr/bin/python2 instead
	cp "${srcdir}/${_bzrmod}_build/autogen.sh" "${srcdir}/${_bzrmod}_build/autogen_unmodified.sh"
	sed -i 's|python|python2|g' "${srcdir}/${_bzrmod}_build/autogen.sh"
	
	"${srcdir}/${_bzrmod}_build/autogen.sh"
	echo
	
	## fix unifont.bdf location so grub-mkfont can create *.pf2 files
	sed -i 's|/usr/share/fonts/unifont|/usr/share/fonts/misc|g' "${srcdir}/${_bzrmod}_build/configure"
	
	mkdir -p "${srcdir}/${_bzrmod}_build/BUILD"
	cd "${srcdir}/${_bzrmod}_build/BUILD"
	
	CFLAGS= ../configure --with-platform=pc \
						 --host="${CARCH}-unknown-linux-gnu" \
						 --program-transform-name=s,grub,grub, \
						 --enable-mm-debug \
						 --enable-grub-mkfont \
						 --enable-nls \
						 ${_EFIEMU} \
						 --prefix=/usr \
						 --bindir=/bin \
						 --sbindir=/sbin \
						 --mandir=/usr/share/man \
						 --infodir=/usr/share/info \
						 --sysconfdir=/etc
	echo
	
	CFLAGS= make
	echo
	
}

package() {
	
	cd "${srcdir}/${_bzrmod}_build/BUILD"
	make DESTDIR="${pkgdir}" install
	
	## install /etc/default/grub
	install -Dm644 "${srcdir}/grub.default" "${pkgdir}/etc/default/grub"
	
	## install grub.cfg for /boot/grub/grub.cfg backup
	install -Dm644 "${srcdir}/grub.cfg.example" "${pkgdir}/boot/grub/grub.cfg"
	
	## install memtest config detection
	install -Dm755 "${srcdir}/20_memtest86+" "${pkgdir}/etc/grub.d/20_memtest86+"
	
}
