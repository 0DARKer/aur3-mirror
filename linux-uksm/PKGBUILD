# Maintainer: Figo.zhang <figo1802@gmail.com>
# Maintainer: Lawliet <yanzilme@gmail.com>

pkgname=linux-uksm
true && pkgname=(linux-uksm linux-uksm-headers)
_kernelname=-uksm
_basekernel=3.4
pkgver=${_basekernel}.3
pkgrel=2
arch=('i686' 'x86_64')
url="http://kerneldedup.org/"
license=('GPL2')
options=('!strip')
_ckpatchversion=1
_ckpatchname="patch-${_basekernel}${_ckpatchversion}"
_uksmname="v3.4.ge.2"
source=(
      "http://www.kernel.org/pub/linux/kernel/v3.x/linux-${_basekernel}.tar.xz"
      "http://www.kernel.org/pub/linux/kernel/v3.x/patch-${pkgver}.xz"
      'linux-uksm.preset'
      'config'
      'config.x86_64'
      'change-default-console-loglevel.patch'
      'i915-fix-ghost-tv-output.patch'
      'fix-acerhdf-1810T-bios.patch'
      "http://kerneldedup.org/download/uksm/0.1.1.2/uksm-0.1.1.2-for-${_uksmname}.patch"
      '3.4.2-rpc_pipefs.patch'
       )

sha256sums=(
          'ff3dee6a855873d12487a6f4070ec2f7996d073019171361c955639664baa0c6'
          '445d0f20724e2b411282ffccc988b03a3e228780e06793a58a46148f64c89d4d'
          '28a956ae3f2a080f7fed0d043b3d2351494feda2128c4cd5ff64964c5c008032'
          '0f6507580f7e2cb260a87159e6e01fe3446a4d6ea45300eaa440a67748e6dbea'
          '18f22133129e5c76a1417622015c66a7ec36a52a1c1e65709d287111c663d079'
          'b9d79ca33b0b51ff4f6976b7cd6dbb0b624ebf4fbf440222217f8ffc50445de4'
          '9ccadbe3eb30bb283af3eb869c3a4bdb764628854811cc616a2e02e9ef398705'
          'f77e1a1f2d955f0499dc2957d1d65a3eb931212a13948b33916332296d0e4a7a'
          '5ab2966160825034fc25e7d40c46b89622450e617a07df64e36ee7196da5cd1d'
          'acc3996f7f3b3bfb841770c59118d794894f91ec37de9abec45c3209c13a362b'
           )

build() {
	cd "${srcdir}/linux-${_basekernel}"

	msg "Patching with upstream patch ${_basekernel}.2 to ${_basekernel}.3"
	patch -p1 -i "${srcdir}/patch-${pkgver}"
	
	# fix nfs4 regression
	msg "Patching with rpc_pipefs"
	patch -Np1 -i "${srcdir}/3.4.2-rpc_pipefs.patch"
	# add latest fixes from stable queue, if needed
	#http://git.kernel.org/?p=linux/kernel/git/stable/stable-queue.git
	
	msg "Patching with i915-fix-ghost-tv-output.patch"
	patch -Np1 -i "${srcdir}/i915-fix-ghost-tv-output.patch"

	msg "Patching with fix-acerhdf-1810T-bios.patch"
	patch -Np1 -i "${srcdir}/fix-acerhdf-1810T-bios.patch"

	msg "Patching with change-default-console-loglevel.patch"
	patch -Np1 -i "${srcdir}/change-default-console-loglevel.patch"



	### Patch source with UKSM
	msg "Patching with UKSM"
		patch -Np1 -i "${srcdir}/uksm-0.1.1.2-for-${_uksmname}.patch"
	
	### Clean tree and copy ARCH config over
	msg "Running make mrproper to clean source tree"
	make mrproper

	if [ "${CARCH}" = "x86_64" ]; then
		cat "${srcdir}/config.x86_64" > ./.config
	else
		cat "${srcdir}/config" > ./.config
	fi


	if [ "${_kernelname}" != "" ]; then
		sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
	fi


	# set extraversion to pkgrel
	sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile

	# get kernel version
	make prepare

	msg "Running make bzImage and modules"
	make ${MAKEFLAGS} bzImage modules
}

package_linux-uksm() {
	_Kpkgdesc='Linux kernel and modules with the UKSM patchset and default enable pae.'
	pkgdesc="${_Kpkgdesc}"
	depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
	optdepends=('crda: to set the correct wireless channels of your country' 'lirc: Linux Infrared Remote Control kernel modules for linux-uksm' 'modprobed_db: Keeps track of EVERY kernel module that has ever been probed - useful for those of us who make localmodconfig')
	provides=("linux-uksm=${pkgver}")
	conflicts=('kernel26-uksm')
	replaces=('kernel26-uksm')
	backup=("etc/mkinitcpio.d/linux-uksm.preset")
	install=linux-uksm.install

	cd "${srcdir}/linux-${_basekernel}"

	KARCH=x86

	# get kernel version
	_kernver="$(make kernelrelease)"

	mkdir -p "${pkgdir}"/{lib/modules,lib/firmware,boot}
	make INSTALL_MOD_PATH="${pkgdir}" modules_install
	cp arch/$KARCH/boot/bzImage "${pkgdir}/boot/vmlinuz-linux-uksm"

	# add vmlinux
	install -D -m644 vmlinux "${pkgdir}/usr/src/linux-${_kernver}/vmlinux"

	# install fallback mkinitcpio.conf file and preset file for kernel
	install -D -m644 "${srcdir}/linux-uksm.preset" "${pkgdir}/etc/mkinitcpio.d/linux-uksm.preset"

	# set correct depmod command for install
	sed \
		-e  "s/KERNEL_NAME=.*/KERNEL_NAME=-uksm/g" \
		-e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
		-i "${startdir}/linux-uksm.install"
	sed \
		-e "s|ALL_kver=.*|ALL_kver=\"/boot/vmlinuz-linux-uksm\"|g" \
		-e "s|default_image=.*|default_image=\"/boot/initramfs-linux-uksm.img\"|g" \
		-e "s|fallback_image=.*|fallback_image=\"/boot/initramfs-linux-uksm-fallback.img\"|g" \
		-i "${pkgdir}/etc/mkinitcpio.d/linux-uksm.preset"

	# remove build and source links
	rm -f "${pkgdir}"/lib/modules/${_kernver}/{source,build}
	# remove the firmware
	rm -rf "${pkgdir}/lib/firmware"
	# gzip -9 all modules to save 100MB of space
	find "${pkgdir}" -name '*.ko' -exec gzip -9 {} \;
	# make room for external modules
	ln -s "../extramodules-${_basekernel}${_kernelname:uksm}" "${pkgdir}/lib/modules/${_kernver}/extramodules"
	# add real version for building modules and running depmod from post_install/upgrade
	mkdir -p "${pkgdir}/lib/modules/extramodules-${_basekernel}${_kernelname:uksm}"
	echo "${_kernver}" > "${pkgdir}/lib/modules/extramodules-${_basekernel}${_kernelname:uksm}/version"
}

package_linux-uksm-headers() {
	_Hpkgdesc='Header files and scripts to build modules for linux-uksm.'
	pkgdesc="${_Hpkgdesc}"
	provides=("linux-uksm-headers=${pkgver}")
	conflicts=('kernel26-uksm-headers')
	replaces=('kernel26-uksm-headers')

	mkdir -p "${pkgdir}/lib/modules/${_kernver}"

	cd "${pkgdir}/lib/modules/${_kernver}"
	ln -sf ../../../usr/src/linux-${_kernver} build

	cd "${srcdir}/linux-${_basekernel}"
	install -D -m644 Makefile \
		"${pkgdir}/usr/src/linux-${_kernver}/Makefile"
	install -D -m644 kernel/Makefile \
		"${pkgdir}/usr/src/linux-${_kernver}/kernel/Makefile"
	install -D -m644 .config \
		"${pkgdir}/usr/src/linux-${_kernver}/.config"

	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/include"

	for i in acpi asm-generic config crypto drm generated linux math-emu \
		media net pcmcia scsi sound trace video xen; do
		cp -a include/${i} "${pkgdir}/usr/src/linux-${_kernver}/include/"
	done

	# copy arch includes for external modules
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/arch/x86"
	cp -a arch/x86/include "${pkgdir}/usr/src/linux-${_kernver}/arch/x86/"

	# copy files necessary for later builds, like nvidia and vmware
	cp Module.symvers "${pkgdir}/usr/src/linux-${_kernver}"
	cp -a scripts "${pkgdir}/usr/src/linux-${_kernver}"

	# fix permissions on scripts dir
	chmod og-w -R "${pkgdir}/usr/src/linux-${_kernver}/scripts"
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/.tmp_versions"
	
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/arch/${KARCH}/kernel"

	cp arch/${KARCH}/Makefile "${pkgdir}/usr/src/linux-${_kernver}/arch/${KARCH}/"

	if [ "${CARCH}" = "i686" ]; then
		cp arch/${KARCH}/Makefile_32.cpu "${pkgdir}/usr/src/linux-${_kernver}/arch/${KARCH}/"
	fi

	cp arch/${KARCH}/kernel/asm-offsets.s "${pkgdir}/usr/src/linux-${_kernver}/arch/${KARCH}/kernel/"

	# add headers for lirc package
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video"

	cp drivers/media/video/*.h  "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/"

	for i in bt8xx cpia2 cx25840 cx88 em28xx et61x251 pwc saa7134 sn9c102; do
		mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/${i}"
		cp -a drivers/media/video/${i}/*.h "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/${i}"
	done

	# add docbook makefile
	install -D -m644 Documentation/DocBook/Makefile \
	"${pkgdir}/usr/src/linux-${_kernver}/Documentation/DocBook/Makefile"

	# add dm headers
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/drivers/md"
	cp drivers/md/*.h "${pkgdir}/usr/src/linux-${_kernver}/drivers/md"

	# add inotify.h
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/include/linux"
	cp include/linux/inotify.h "${pkgdir}/usr/src/linux-${_kernver}/include/linux/"

	# add wireless headers
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/"
	cp net/mac80211/*.h "${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/"

	# add dvb headers for external modules
	# in reference to:
	# http://bugs.archlinux.org/task/9912
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core"
	cp drivers/media/dvb/dvb-core/*.h "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core/"
	# and...
	# http://bugs.archlinux.org/task/11194
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/"
	[[ -e include/config/dvb/ ]] && cp include/config/dvb/*.h "${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/" 

	# add dvb headers for http://mcentral.de/hg/~mrec/em28xx-new
	# in reference to:
	# http://bugs.archlinux.org/task/13146
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/"
	cp drivers/media/dvb/frontends/lgdt330x.h "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/"
	cp drivers/media/video/msp3400-driver.h "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/"

	# add dvb headers
	# in reference to:
	# http://bugs.archlinux.org/task/20402
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb"
	cp drivers/media/dvb/dvb-usb/*.h "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb/"
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends"
	cp drivers/media/dvb/frontends/*.h "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/"
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners"
	cp drivers/media/common/tuners/*.h "${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners/"

	# add xfs and shmem for aufs building
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/fs/xfs"
	mkdir -p "${pkgdir}/usr/src/linux-${_kernver}/mm"
	cp fs/xfs/xfs_sb.h "${pkgdir}/usr/src/linux-${_kernver}/fs/xfs/xfs_sb.h"

	# copy in Kconfig files
	for i in `find . -name "Kconfig*"`; do
		mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/`echo ${i} | sed 's|/Kconfig.*||'`
		cp ${i} "${pkgdir}/usr/src/linux-${_kernver}/${i}"
	done

	chown -R root.root "${pkgdir}/usr/src/linux-${_kernver}"
	find "${pkgdir}/usr/src/linux-${_kernver}" -type d -exec chmod 755 {} \;

	# strip scripts directory
	find "${pkgdir}/usr/src/linux-${_kernver}/scripts" -type f -perm -u+w 2>/dev/null | while read binary ; do
	case "$(file -bi "${binary}")" in
		*application/x-sharedlib*) # Libraries (.so)
			/usr/bin/strip ${STRIP_SHARED} "${binary}";;
		*application/x-archive*) # Libraries (.a)
			/usr/bin/strip ${STRIP_STATIC} "${binary}";;
		*application/x-executable*) # Binaries
			/usr/bin/strip ${STRIP_BINARIES} "${binary}";;
	esac
	done

	# remove unneeded architectures
	rm -rf "${pkgdir}"/usr/src/linux-${_kernver}/arch/{alpha,arm,arm26,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,microblaze,mn10300,parisc,powerpc,ppc,s390,sh,sh64,sparc,sparc64,um,v850,xtensa}
}
# Global pkgdesc and depends are here so that they will be picked up by AUR
pkgdesc='Linux kernel and modules with the UKSM patchset.'
