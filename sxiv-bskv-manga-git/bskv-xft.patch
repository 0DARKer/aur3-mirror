From ea4ea27cae735f107c191eb4590db357f9ee5d4f Mon Sep 17 00:00:00 2001
From: Bastien Dejean <nihilhill@gmail.com>
Date: Mon, 13 May 2013 10:49:33 +0200
Subject: [PATCH] Use XFT to draw characters

---
 Makefile     |   4 +--
 config.def.h |   2 +-
 main.c       |   4 +--
 thumbs.c     |   2 +-
 window.c     | 110 +++++++++++++++++++++++------------------------------------
 window.h     |  17 ++++-----
 6 files changed, 58 insertions(+), 81 deletions(-)

diff --git a/Makefile b/Makefile
index 29484db..15df6f5 100644
--- a/Makefile
+++ b/Makefile
@@ -4,9 +4,9 @@ PREFIX    = /usr/local
 MANPREFIX = $(PREFIX)/share/man
 
 CC      = gcc
-CFLAGS  = -std=c99 -Wall -pedantic -O2 -I$(PREFIX)/include -DHAVE_GIFLIB
+CFLAGS  = -std=c99 -Wall -pedantic -O2 -I/usr/include/freetype2 -DHAVE_GIFLIB
 LDFLAGS = -L$(PREFIX)/lib
-LIBS    = -lX11 -lImlib2 -lgif
+LIBS    = -lX11 -lImlib2 -lgif -lutil -lXext -lXft -lfontconfig
 
 SRC = commands.c exif.c image.c main.c options.c thumbs.c util.c window.c
 OBJ = $(SRC:.c=.o)
diff --git a/config.def.h b/config.def.h
index cd89b5f..5c6c66f 100644
--- a/config.def.h
+++ b/config.def.h
@@ -9,7 +9,7 @@ enum {
 /* bar font:
  * (see X(7) section "FONT NAMES" for valid values)
  */
-static const char * const BAR_FONT = "-*-fixed-medium-r-*-*-13-*-*-*-*-60-*-*";
+static const char * const BAR_FONT = "Monospace:size=9";
 
 /* colors:
  * (see X(7) section "COLOR NAMES" for valid values)
diff --git a/main.c b/main.c
index 4962782..fc72522 100644
--- a/main.c
+++ b/main.c
@@ -350,8 +350,8 @@ void update_info(void)
 	if (ow_info) {
 		fn = strlen(files[sel].name);
 		if (fn < llen &&
-		    win_textwidth(files[sel].name, fn, true) +
-		    win_textwidth(rt, n, true) < win.w)
+		    win_textwidth(&win, files[sel].name, fn, true) +
+		    win_textwidth(&win, rt, n, true) < win.w)
 		{
 			strncpy(lt, files[sel].name, llen);
 		} else {
diff --git a/thumbs.c b/thumbs.c
index 48b3a75..a2f2a15 100644
--- a/thumbs.c
+++ b/thumbs.c
@@ -378,7 +378,7 @@ void tns_highlight(tns_t *tns, int n, bool hl)
 	thumb_t *t;
 	win_t *win;
 	int x, y;
-	unsigned long col;
+	XftColor col;
 
 	if (tns == NULL || tns->thumbs == NULL || tns->win == NULL)
 		return;
diff --git a/window.c b/window.c
index e0b7273..6fe6be0 100644
--- a/window.c
+++ b/window.c
@@ -22,6 +22,8 @@
 #include <string.h>
 #include <locale.h>
 #include <X11/cursorfont.h>
+#include <fontconfig/fontconfig.h>
+#include <X11/Xft/Xft.h>
 
 #include "options.h"
 #include "util.h"
@@ -44,59 +46,38 @@ enum {
 static struct {
 	int ascent;
 	int descent;
-	XFontStruct *xfont;
-	XFontSet set;
+	XftFont *xfont;
 } font;
 
 static int fontheight;
 static int barheight;
 
-void win_init_font(Display *dpy, const char *fontstr)
+void win_init_font(Display *dpy, int screen, const char *fontstr)
 {
-	int n;
-	char *def, **missing;
-
-	font.set = XCreateFontSet(dpy, fontstr, &missing, &n, &def);
-	if (missing)
-		XFreeStringList(missing);
-	if (font.set) {
-		XFontStruct **xfonts;
-		char **font_names;
-
-		font.ascent = font.descent = 0;
-		XExtentsOfFontSet(font.set);
-		n = XFontsOfFontSet(font.set, &xfonts, &font_names);
-		while (n--) {
-			font.ascent  = MAX(font.ascent, (*xfonts)->ascent);
-			font.descent = MAX(font.descent,(*xfonts)->descent);
-			xfonts++;
-		}
-	} else {
-		if ((font.xfont = XLoadQueryFont(dpy, fontstr)) == NULL &&
-		    (font.xfont = XLoadQueryFont(dpy, "fixed")) == NULL)
-		{
-			die("could not load font: %s", fontstr);
-		}
-		font.ascent  = font.xfont->ascent;
-		font.descent = font.xfont->descent;
-	}
+	if(!(font.xfont = XftFontOpenName(dpy, screen, fontstr))
+	&& !(font.xfont = XftFontOpenName(dpy, screen, "fixed")))
+		die("error, cannot load font: '%s'\n", fontstr);
+
+	font.ascent = font.xfont->ascent;
+	font.descent = font.xfont->descent;
+
 	fontheight = font.ascent + font.descent;
 	barheight = fontheight + 2 * V_TEXT_PAD;
 }
 
-unsigned long win_alloc_color(win_t *win, const char *name)
+XftColor win_alloc_color(win_t *win, const char *name)
 {
-	XColor col;
+	XftColor col;
 
-	if (win == NULL)
-		return 0UL;
-	if (XAllocNamedColor(win->env.dpy,
-	                     DefaultColormap(win->env.dpy, win->env.scr),
-	                     name, &col, &col) == 0)
-	{
-		die("could not allocate color: %s", name);
+	if (win) {
+		if (!XftColorAllocName(win->env.dpy, DefaultVisual(win->env.dpy, win->env.scr),
+	                         DefaultColormap(win->env.dpy, win->env.scr),
+	                         name, &col))
+		{
+			die("could not allocate color: %s", name);
+		}
 	}
-	return col.pixel;
+	return col;
 }
 
 void win_init(win_t *win)
@@ -122,9 +103,9 @@ void win_init(win_t *win)
 	if (setlocale(LC_CTYPE, "") == NULL || XSupportsLocale() == 0)
 		warn("no locale support");
 
-	win_init_font(e->dpy, BAR_FONT);
+	win_init_font(e->dpy, e->scr, BAR_FONT);
 
-	win->white     = WhitePixel(e->dpy, e->scr);
+	win->white     = win_alloc_color(win, "#FFFFFF");
 	win->bgcol     = win_alloc_color(win, WIN_BG_COLOR);
 	win->fscol     = win_alloc_color(win, WIN_FS_COLOR);
 	win->selcol    = win_alloc_color(win, SEL_COLOR);
@@ -213,7 +194,7 @@ void win_open(win_t *win)
 		win->y = (e->scrh - win->h) / 2;
 	}
 
-	attr.background_pixel = win->bgcol;
+	attr.background_pixel = win->bgcol.pixel;
 	attr_mask = CWBackPixel;
 
 	win->xwin = XCreateWindow(e->dpy, RootWindow(e->dpy, e->scr),
@@ -392,7 +373,7 @@ void win_clear(win_t *win)
 	if (win->pm == None)
 		win->pm = XCreatePixmap(e->dpy, win->xwin, win->w, h, e->depth);
 
-	XSetForeground(e->dpy, gc, win->fullscreen ? win->fscol : win->bgcol);
+	XSetForeground(e->dpy, gc, win->fullscreen ? win->fscol.pixel : win->bgcol.pixel);
 	XFillRectangle(e->dpy, win->pm, gc, 0, 0, win->w, h);
 }
 
@@ -402,6 +383,7 @@ void win_draw_bar(win_t *win)
 	char rest[3];
 	const char *dots = "...";
 	win_env_t *e;
+	XftDraw *d;
 
 	if (win == NULL || win->xwin == None || win->pm == None)
 		return;
@@ -410,25 +392,24 @@ void win_draw_bar(win_t *win)
 	y = win->h + font.ascent + V_TEXT_PAD;
 	w = win->w;
 
-	XSetForeground(e->dpy, gc, win->bar.bgcol);
+	XSetForeground(e->dpy, gc, win->bar.bgcol.pixel);
 	XFillRectangle(e->dpy, win->pm, gc, 0, win->h, win->w, win->bar.h);
 
-	XSetForeground(e->dpy, gc, win->bar.fgcol);
-	XSetBackground(e->dpy, gc, win->bar.bgcol);
+	XSetForeground(e->dpy, gc, win->bar.fgcol.pixel);
+	XSetBackground(e->dpy, gc, win->bar.bgcol.pixel);
 
 	if ((len = strlen(win->bar.r)) > 0) {
-		if ((tw = win_textwidth(win->bar.r, len, true)) > w)
+		if ((tw = win_textwidth(win, win->bar.r, len, true)) > w)
 			return;
 		x = win->w - tw + H_TEXT_PAD;
 		w -= tw;
-		if (font.set)
-			XmbDrawString(e->dpy, win->pm, font.set, gc, x, y, win->bar.r, len);
-		else
-			XDrawString(e->dpy, win->pm, gc, x, y, win->bar.r, len);
+		d = XftDrawCreate(e->dpy, win->pm, DefaultVisual(e->dpy, e->scr), DefaultColormap(e->dpy, e->scr));
+		XftDrawStringUtf8(d, &win->bar.fgcol, font.xfont, x, y, (XftChar8 *)win->bar.r, len);
+		XftDrawDestroy(d);
 	}
 	if ((len = strlen(win->bar.l)) > 0) {
 		olen = len;
-		while (len > 0 && (tw = win_textwidth(win->bar.l, len, true)) > w)
+		while (len > 0 && (tw = win_textwidth(win, win->bar.l, len, true)) > w)
 			len--;
 		if (len > 0) {
 			if (len != olen) {
@@ -439,10 +420,9 @@ void win_draw_bar(win_t *win)
 				memcpy(win->bar.l + len - w, dots, w);
 			}
 			x = H_TEXT_PAD;
-			if (font.set)
-				XmbDrawString(e->dpy, win->pm, font.set, gc, x, y, win->bar.l, len);
-			else
-				XDrawString(e->dpy, win->pm, gc, x, y, win->bar.l, len);
+			d = XftDrawCreate(e->dpy, win->pm, DefaultVisual(e->dpy, e->scr), DefaultColormap(e->dpy, e->scr));
+			XftDrawStringUtf8(d, &win->bar.fgcol, font.xfont, x, y, (XftChar8 *)win->bar.l, len);
+			XftDrawDestroy(d);
 			if (len != olen)
 			  memcpy(win->bar.l + len - w, rest, w);
 		}
@@ -462,7 +442,7 @@ void win_draw(win_t *win)
 }
 
 void win_draw_rect(win_t *win, Pixmap pm, int x, int y, int w, int h,
-                   bool fill, int lw, unsigned long col)
+                   bool fill, int lw, XftColor col)
 {
 	XGCValues gcval;
 
@@ -470,7 +450,7 @@ void win_draw_rect(win_t *win, Pixmap pm, int x, int y, int w, int h,
 		return;
 
 	gcval.line_width = lw;
-	gcval.foreground = col;
+	gcval.foreground = col.pixel;
 	XChangeGC(win->env.dpy, gc, GCForeground | GCLineWidth, &gcval);
 
 	if (fill)
@@ -491,17 +471,13 @@ void win_update_bar(win_t *win)
 	}
 }
 
-int win_textwidth(const char *text, unsigned int len, bool with_padding)
+int win_textwidth(win_t *win, const char *text, unsigned int len, bool with_padding)
 {
-	XRectangle r;
+	XGlyphInfo ext;
 	int padding = with_padding ? 2 * H_TEXT_PAD : 0;
 
-	if (font.set) {
-		XmbTextExtents(font.set, text, len, NULL, &r);
-		return r.width + padding;
-	} else {
-		return XTextWidth(font.xfont, text, len) + padding;
-	}
+	XftTextExtentsUtf8(win->env.dpy, font.xfont, (XftChar8 *)text, len, &ext);
+	return ext.xOff + padding;
 }
 
 void win_set_title(win_t *win, const char *title)
diff --git a/window.h b/window.h
index 19a7171..b1f49ad 100644
--- a/window.h
+++ b/window.h
@@ -21,6 +21,7 @@
 
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
+#include <X11/Xft/Xft.h>
 
 #include "types.h"
 
@@ -42,10 +43,10 @@ enum {
 	Window xwin;
 	win_env_t env;
 
-	unsigned long white;
-	unsigned long bgcol;
-	unsigned long fscol;
-	unsigned long selcol;
+	XftColor white;
+	XftColor bgcol;
+	XftColor fscol;
+	XftColor selcol;
 	Pixmap pm;
 
 	int x;
@@ -62,8 +63,8 @@ enum {
 		unsigned int h;
 		char l[BAR_L_LEN];
 		char r[BAR_R_LEN];
-		unsigned long bgcol;
-		unsigned long fgcol;
+		XftColor bgcol;
+		XftColor fgcol;
 	} bar;
 } win_t;
 
@@ -83,11 +84,11 @@ enum {
 void win_clear(win_t*);
 void win_draw(win_t*);
 void win_draw_rect(win_t*, Pixmap, int, int, int, int, bool, int,
-                   unsigned long);
+                   XftColor);
 
 void win_update_bar(win_t*);
 
-int win_textwidth(const char*, unsigned int, bool);
+int win_textwidth(win_t*, const char*, unsigned int, bool);
 
 void win_set_title(win_t*, const char*);
 void win_set_cursor(win_t*, cursor_t);
-- 
1.8.1.6

