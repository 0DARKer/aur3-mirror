diff -Naur grafana-2.0.0-beta1.ori/build.go grafana-2.0.0-beta1/build.go
--- grafana-2.0.0-beta1.ori/build.go	2015-03-30 15:45:02.000000000 +0200
+++ grafana-2.0.0-beta1/build.go	2015-04-12 22:31:41.703552551 +0200
@@ -74,7 +74,6 @@
 		case "package":
 			//verifyGitRepoIsClean()
 			grunt("release", "--pkgVer="+version)
-			createRpmAndDeb()
 
 		case "latest":
 			makeLatestDistCopies()
diff -Naur grafana-2.0.0-beta1.ori/conf/defaults.ini grafana-2.0.0-beta1/conf/defaults.ini
--- grafana-2.0.0-beta1.ori/conf/defaults.ini	2015-03-30 15:45:02.000000000 +0200
+++ grafana-2.0.0-beta1/conf/defaults.ini	2015-04-12 22:31:41.703552551 +0200
@@ -14,7 +14,7 @@
 root_url = %(protocol)s://%(domain)s:%(http_port)s/
 router_logging = false
 ; the path relative to the binary where the static (html/js/css) files are placed
-static_root_path = public
+static_root_path = /usr/share/grafana/public
 ; enable gzip
 enable_gzip = false
 ; https certs & key file
@@ -40,7 +40,7 @@
 ; For "postgres" only, either "disable", "require" or "verify-full"
 ssl_mode = disable
 ; For "sqlite3" only
-path = data/grafana.db
+path = /var/lib/grafana/grafana.db
 
 [session]
 ; Either "memory", "file", "redis", "mysql", default is "memory"
@@ -50,7 +50,7 @@
 ; file: session file path, e.g. `data/sessions`
 ; redis: config like redis server addr, poolSize, password, e.g. `127.0.0.1:6379,100,grafana`
 ; mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1)/database_name`
-provider_config = data/sessions
+provider_config = /var/lib/grafana/sessions
 ; Session cookie name
 cookie_name = grafana_sess
 ; If you use session in https only, default is false
@@ -109,7 +109,7 @@
 token_url = https://accounts.google.com/o/oauth2/token
 
 [log]
-root_path = data/log
+root_path = /var/log/grafana
 ; Either "console", "file", default is "console"
 ; Use comma to separate multiple modes, e.g. "console, file"
 mode = console
diff -Naur grafana-2.0.0-beta1.ori/pkg/components/renderer/renderer.go grafana-2.0.0-beta1/pkg/components/renderer/renderer.go
--- grafana-2.0.0-beta1.ori/pkg/components/renderer/renderer.go	2015-03-30 15:45:02.000000000 +0200
+++ grafana-2.0.0-beta1/pkg/components/renderer/renderer.go	2015-04-12 22:33:02.091912367 +0200
@@ -22,7 +22,7 @@
 
 func RenderToPng(params *RenderOpts) (string, error) {
 	log.Info("PhantomRenderer::renderToPng url %v", params.Url)
-	binPath, _ := filepath.Abs(filepath.Join(setting.PhantomDir, "phantomjs"))
+	binPath := "/usr/bin/phantomjs"
 	scriptPath, _ := filepath.Abs(filepath.Join(setting.PhantomDir, "render.js"))
 	pngPath, _ := filepath.Abs(filepath.Join(setting.ImagesDir, getHash(params.Url)))
 	pngPath = pngPath + ".png"
