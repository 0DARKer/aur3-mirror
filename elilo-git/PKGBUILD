# Maintainer: Keshav P R <skodabenz at rocketmail com>

pkgname=elilo-git
pkgver=20110130
pkgrel=1
pkgdesc="EFI Linux Boot Loader"
arch=('i686' 'x86_64')
url="http://sourceforge.net/projects/elilo/"
license=('GPL')
makedepends=('git' 'gnu-efi')
depends=('dosfstools')
optdepends=('efibootmgr')
provides=('elilo')
conflicts=('elilo')
replaces=()
options=(strip docs zipman purge libtool !emptydirs)
install="${pkgname}.install"
noextract=()

source=('elilo.conf.example')

sha256sums=('5edee93bb5f7ccbc977b5f485142d7f95cd29830bbe86b67c5f45108813d1f71')

_gitroot="git://github.com/skodabenz/elilo_cvs_to_git_temp.git"
_gitname="elilo"


update_git() {
	
	cd "${srcdir}"
	
	msg "Connecting to GIT server...."
	
	if [ -d ${srcdir}/${_gitname}/ ]
	then
		cd ${srcdir}/${_gitname}/
		git reset --hard
		git fetch
		git checkout master
		git merge remotes/origin/master
		msg "The local GIT repo has been updated."
	else
		git clone ${_gitroot} ${_gitname}
	fi
	
	msg "GIT checkout done or server timeout"
	
}


build() {
	
	update_git
	echo
	
	[ -d ${srcdir}/${_gitname}_1 ] && rm -rf ${srcdir}/${_gitname}_1/
	
	cp -r "${srcdir}/${_gitname}" "${srcdir}/${_gitname}_1"
	
	cd "${srcdir}/${_gitname}_1"
	
	CFLAGS= make
	echo
	
}


package() {
	
	cd "${srcdir}/${_gitname}_1"
	
	mkdir -p "${pkgdir}/boot/efi/efi/elilo/"
	
	install ${srcdir}/${_gitname}_1/elilo.efi ${pkgdir}/boot/efi/efi/elilo/elilo.efi
	
	install -Dm755 ${srcdir}/elilo.conf.example ${pkgdir}/boot/efi/efi/elilo/elilo.conf.example
	
}
