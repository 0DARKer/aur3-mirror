--- oauth.py	2012-10-17 12:37:36.559907352 -0500
+++ b/oauth.py	2012-10-17 12:38:25.361685148 -0500
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 
 import os, sys
-import httplib
+import httplib_TLSv1
 import time
 import Cookie
 import uuid
@@ -91,7 +91,7 @@
 
         logging.debug("Request URL: %s:/%s > %s # %s", url, uri, unquote(params), headers["Cookie"])
 
-        conn = httplib.HTTPSConnection(url)
+        conn = httplib_TLSv1.HTTPSConnection(url)
         conn.request(method, uri, params, headers)
         response = conn.getresponse()
         data = response.read()
@@ -218,4 +218,4 @@
             tools.exit()
 
         logging.debug("OAuth token take : %s", responseData['oauth_token'])
-        self.OAuthToken = responseData['oauth_token']
\ No newline at end of file
+        self.OAuthToken = responseData['oauth_token']
--- lib/thrift/transport/THttpClient.py	2012-10-17 12:37:36.559907352 -0500
+++ b/lib/thrift/transport/THttpClient.py	2012-10-17 12:39:44.004550024 -0500
@@ -21,7 +21,7 @@
 from cStringIO import StringIO
 
 import urlparse
-import httplib
+import httplib_TLSv1
 import warnings
 import socket
 
@@ -49,9 +49,9 @@
       self.scheme = parsed.scheme
       assert self.scheme in ('http', 'https')
       if self.scheme == 'http':
-        self.port = parsed.port or httplib.HTTP_PORT
+        self.port = parsed.port or httplib_TLSv1.HTTP_PORT
       elif self.scheme == 'https':
-        self.port = parsed.port or httplib.HTTPS_PORT
+        self.port = parsed.port or httplib_TLSv1.HTTPS_PORT
       self.host = parsed.hostname
       self.path = parsed.path
       if parsed.query:
@@ -62,9 +62,9 @@
 
   def open(self):
     if self.scheme == 'http':
-      self.__http = httplib.HTTP(self.host, self.port)
+      self.__http = httplib_TLSv1.HTTP(self.host, self.port)
     else:
-      self.__http = httplib.HTTPS(self.host, self.port)
+      self.__http = httplib_TLSv1.HTTPS(self.host, self.port)
 
   def close(self):
     self.__http.close()
