ovs_dkms() {
  set -v
  echo "==> Building kernel modules with dkms"
  dkms add -m openvswitch -v ${1%-*}
  dkms build -m openvswitch -v ${1%-*}
  dkms install -m openvswitch -v ${1%-*}
  echo
  echo " -> WARNING: If you will use the bridged compatibility don't forget to blacklist the 'bridge' module!"
  echo " -> To build the modules for other kernels, use 'dkms install -m openvswitch -v ${1%-*}'"
  echo "    For more information refer to:"
  echo "    http://openvswitch.org/cgi-bin/gitweb.cgi?p=openvswitch;a=blob;f=INSTALL.bridge;hb=HEAD"
  echo "==> Done"
  set +v
}


pre_install() {
  groupadd -r ovs
}

post_install() {
  if [ ! -f /etc/openvswitch/ovs-vswitchd.conf.db ]; then
    ovsdb-tool create /etc/openvswitch/ovs-vswitchd.conf.db /usr/share/openvswitch/vswitch.ovsschema
  fi

  ovs_dkms $1
}

pre_upgrade() {
  if [[ -n $2 ]]; then
    echo "==> Pre_upgrade: removing a possible previous version of openvswitch kernel modules"
    echo "    If this fails then that's ok"
    set -v
    dkms remove --all openvswitch/${2%-*} || true
    set +v
  fi
}

post_upgrade() {
  if [[ -n $2 ]]; then
    echo "==> post_upgrade: removing a possible previous version of openvswitch kernel modules"
    echo "    If this fails then that's ok"
    set -v
    dkms remove --all openvswitch/${2%-*} || true
    set +v
    echo
  fi
  ovs_dkms $1
}


pre_remove() {
  set -v
  dkms remove --all openvswitch/${1%-*} --all || true
  set +v
}

post_remove() {
  groupdel ovs || true
}

# vim:set ts=2 sw=2 et:

