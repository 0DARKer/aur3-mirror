# Maintainer: 
# Maintainer:

pkgbase="linux-fedora"
 pkgname=linux-fedora       # Build kernel with a different name
_kernelname=${pkgname#linux}
_basekernel=3.1.2
pkgver=${_basekernel}
pkgrel=1
makedepends=('xmlto' 'docbook-xsl')
arch=(i686 x86_64)
license=('GPL2')
url="http://www.kernel.org"
options=(!strip)
source=(ftp://ftp.kernel.org/pub/linux/kernel/v3.0/linux-${pkgver}.tar.bz2
        # the main kernel config files
        config-i386 config.x86_64
        # standard config files for mkinitcpio ramdisk
        linux.preset
	linux-2.6-makefile-after_link.patch
  	taint-vbox.patch
  	linux-2.6-32bit-mmap-exec-randomization.patch
  	linux-2.6-i386-nx-emulation.patch
  	linux-2.6-defaults-aspm.patch

	linux-2.6-defaults-acpi-video.patch
	linux-2.6-acpi-video-dos.patch
	linux-2.6-acpi-debug-infinite-loop.patch
	acpi-ensure-thermal-limits-match-cpu-freq.patch
	acpi-sony-nonvs-blacklist.patch
	linux-2.6-input-kill-stupid-messages.patch
	linux-2.6.30-no-pcspkr-modalias.patch
	linux-2.6-serial-460800.patch
	die-floppy-die.patch
	floppy-Remove-_hlt-related-functions.patch
	linux-2.6-silence-noise.patch
	quite-apm.patch
	linux-2.6-silence-fbcon-logo.patch
	drm-i915-sdvo-lvds-is-digital.patch
	linux-2.6-intel-iommu-igfx.patch
	linux-2.6-silence-acpi-blacklist.patch
	disable-i8042-check-on-apple-mac.patch
	block-stray-block-put-after-teardown.patch
	usb-add-quirk-for-logitech-webcams.patch
	dmar-disable-when-ricoh-multifunction.patch
	revert-efi-rtclock.patch
	efi-dont-map-boot-services-on-32bit.patch
	utrace.patch
	arm-omap-dt-compat.patch
	arm-smsc-support-reading-mac-address-from-device-tree.patch
	oom-fix-integer-overflow-of-points.patch
	sysfs-msi-irq-per-device.patch
	pci-Rework-ASPM-disable-code.patch
	nfsv4-include-bitmap-in-nfsv4_get_acl_data.patch)

md5sums=('0c380e8891a9a53aed99335455b32e04'
         'fc6aae0fb4d70feff92ec762d29dee45'
         'a1d95fb1a7ec9d7ae76cff222a9e8fd5'
         '7cc9c4fbbdf9c5f5921aa4a3e582bf53'
         '012de79081ed3c3f280702a78f6d4982'
         '822ee1704afed349368eeb000a7e266b'
         'ed5a162f25836676f1ebd088d3d1044c'
         '94b2054dd1168fddf01de3d99b4003aa'
         'e7b0133bfd9cd2bdf4ca3c231585ea73'
         '731ff804d9dde997c1ffd98e2355bc2d'
         '96bd5bb046edb6de1f713e72fe8c6346'
         '29d0aa1d221d842b6a57bf65db411e05'
         '5abb70bd082a4e7e239c2f3272b40015'
         '9e4cfb6d73efde3c891882aa2209d26f'
         '10b7b35635f787cb5596aed2206c9187'
         'd0bb7577944432e6f98bb53615da8b34'
         '840c57e74a3e43009396d986f3fb6902'
         '0d5ef2e9201c71ed8f4ff85a981b93dc'
         '3a986312d06246adce0df172543e0c42'
         '5d1ccda093c0496bb329e3315b113351'
         'fb9a1d546f0cc373b7a70d34137cf397'
         '13fa4b7b4f5cfaba0c39f3780b3835d0'
         '8b6da295f65dc83295b16aa648fe1a3e'
         '6b8c1a38653795265c31072be4ef9b02'
         '529a3da98d3fd021c6fb949301c98eee'
         'b5541dd0d354884dd1ff79d7ad7661f4'
         '45277084cbe617daa3101d1b7ab270c5'
         '20ae94884ed5c084efb337d133d422b7'
         '93e63afd37c2726d14acce2727d84f17'
         'f15807e741aa45bb2760982e36e6b430'
         'c0cd97255f54e2f6ecf96f53f8cfdfe6'
         'ae32878b437a49cfe37abe56fa6c20f0'
         '964c902f0d3131db0f7f3bfd6ae4c9eb'
         '945595e62cfb645eb9b871bd0aac1b90'
         'b325b7e1245e2801332cd85de75e1400'
         '02ed1ea7c7f23161b3e2d39955fa7e07'
         'a9f1f67f0ced1269a3774880dbb49ba1'
         'fefd8519e9eaabe2799e8d8b694eb2fb')

build() {
  cd ${srcdir}/linux-${pkgver}

  # Add -ARCH patches
  #patch -Np1 -i ${srcdir}/${_patchname}

  # build tweak for build ID magic, even for -vanilla
  patch -Np1 -i ${srcdir}/linux-2.6-makefile-after_link.patch
  patch -Np1 -i ${srcdir}/taint-vbox.patch
  patch -Np1 -i ${srcdir}/linux-2.6-32bit-mmap-exec-randomization.patch
  patch -Np1 -i ${srcdir}/linux-2.6-i386-nx-emulation.patch
  patch -Np1 -i ${srcdir}/linux-2.6-defaults-aspm.patch
  patch -Np1 -i ${srcdir}/linux-2.6-defaults-acpi-video.patch
  patch -Np1 -i ${srcdir}/linux-2.6-acpi-video-dos.patch
  patch -Np1 -i ${srcdir}/linux-2.6-acpi-debug-infinite-loop.patch
  patch -Np1 -i ${srcdir}/acpi-ensure-thermal-limits-match-cpu-freq.patch
  patch -Np1 -i ${srcdir}/acpi-sony-nonvs-blacklist.patch
  patch -Np1 -i ${srcdir}/linux-2.6-input-kill-stupid-messages.patch
  patch -Np1 -i ${srcdir}/linux-2.6.30-no-pcspkr-modalias.patch
  patch -Np1 -i ${srcdir}/linux-2.6-serial-460800.patch
  patch -Np1 -i ${srcdir}/die-floppy-die.patch
  patch -Np1 -i ${srcdir}/floppy-Remove-_hlt-related-functions.patch
  patch -Np1 -i ${srcdir}/linux-2.6-silence-noise.patch
  patch -Np1 -i ${srcdir}/quite-apm.patch
  patch -Np1 -i ${srcdir}/linux-2.6-silence-fbcon-logo.patch
  
  # rhbz#729882, https://bugs.freedesktop.org/attachment.cgi?id=49069
  patch -Np1 -i ${srcdir}/drm-i915-sdvo-lvds-is-digital.patch
  patch -Np1 -i ${srcdir}/linux-2.6-intel-iommu-igfx.patch

  # Quiet boot fixes
  # silence the ACPI blacklist code
  patch -Np1 -i ${srcdir}/linux-2.6-silence-acpi-blacklist.patch

  # media patches
  # fs fixes
  # NFSv4

  # patches headed upstream
  patch -Np1 -i ${srcdir}/disable-i8042-check-on-apple-mac.patch
  patch -Np1 -i ${srcdir}/block-stray-block-put-after-teardown.patch
  patch -Np1 -i ${srcdir}/usb-add-quirk-for-logitech-webcams.patch
  patch -Np1 -i ${srcdir}/dmar-disable-when-ricoh-multifunction.patch
  patch -Np1 -i ${srcdir}/revert-efi-rtclock.patch
  patch -Np1 -i ${srcdir}/efi-dont-map-boot-services-on-32bit.patch
  patch -Np1 -i ${srcdir}/utrace.patch

  # Flattened devicetree support
  patch -Np1 -i ${srcdir}/arm-omap-dt-compat.patch
  patch -Np1 -i ${srcdir}/arm-smsc-support-reading-mac-address-from-device-tree.patch
  patch -Np1 -i ${srcdir}/oom-fix-integer-overflow-of-points.patch
  patch -Np1 -i ${srcdir}/sysfs-msi-irq-per-device.patch
  patch -Np1 -i ${srcdir}/pci-Rework-ASPM-disable-code.patch

  #rhbz 753236
  patch -Np1 -i ${srcdir}/nfsv4-include-bitmap-in-nfsv4_get_acl_data.patch

  echo "patching ...done"

  if [ "$CARCH" = "x86_64" ]; then
    cat ../config.x86_64 >./.config
  else
    cat ../config >./.config
  fi
  if [ "${_kernelname}" != "" ]; then
    sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
  fi
  # get kernel version  
  make prepare
  # load configuration
  # Configure the kernel. Replace the line below with one of your choice.
  #make menuconfig # CLI menu for configuration
  #make nconfig # new CLI menu for configuration
  #make xconfig # X-based configuration
  #make oldconfig # using old config from previous kernel version
  # ... or manually edit .config
  ####################
  # stop here
  # this is useful to configure the kernel
  #msg "Stopping build"
  #return 1
  ####################
  yes "" | make config
  # build!
  make ${MAKEFLAGS} bzImage modules
}

package() {
  pkgdesc="The Linux Kernel plus Fedora patches, modules and headers with debug enabled for systemtap"
  groups=('base')
  backup=(etc/mkinitcpio.d/${pkgname}.preset)
  depends=('coreutils' 'linux-firmware' 'module-init-tools>=3.12-2' 'mkinitcpio>=0.6.8-2')
  # pwc, ieee80211 and hostap-driver26 modules are included in kernel26 now
  # nforce package support was abandoned by nvidia, kernel modules should cover everything now.
  # kernel24 support is dropped since glibc24
  replaces=('kernel24' 'kernel24-scsi' 'kernel26-scsi'
            'alsa-driver' 'ieee80211' 'hostap-driver26'
            'pwc' 'nforce' 'squashfs' 'unionfs' 'ivtv'
            'zd1211' 'kvm-modules' 'iwlwifi' 'rt2x00-cvs'
            'gspcav1' 'atl2' 'wlan-ng26' 'rt2500' 'nouveau-drm')
  install=linux.install
  optdepends=('crda: to set the correct wireless channels of your country')

  KARCH=x86
  cd ${srcdir}/linux-${pkgver}
  # get kernel version
  _kernver="$(make kernelrelease)"
  mkdir -p ${pkgdir}/{lib/modules,lib/firmware,boot}
  make INSTALL_MOD_PATH=${pkgdir} modules_install
  cp System.map ${pkgdir}/boot/System.map${_kernelname}
  cp arch/$KARCH/boot/bzImage ${pkgdir}/boot/vmlinuz${_kernelname}
  #  # add vmlinux
  install -m644 -D vmlinux ${pkgdir}/usr/src/linux-${_kernver}/vmlinux

  # install fallback mkinitcpio.conf file and preset file for kernel
  install -m644 -D ${srcdir}/linux.preset ${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset
  # set correct depmod command for install
  sed \
    -e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/g" \
    -e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
    -i $startdir/linux.install
  sed \
    -e "s|source .*|source /etc/mkinitcpio.d/linux${_kernelname}.kver|g" \
    -e "s|default_image=.*|default_image=\"/boot/${pkgname}.img\"|g" \
    -e "s|fallback_image=.*|fallback_image=\"/boot/${pkgname}-fallback.img\"|g" \
    -i ${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset

  echo -e "# DO NOT EDIT THIS FILE\nALL_kver='${_kernver}'" > ${pkgdir}/etc/mkinitcpio.d/${pkgname}.kver
  # remove the firmware
  rm -rf ${pkgdir}/lib/firmware
  # gzip -9 all modules to safe 100MB of space
  find "$pkgdir" -name '*.ko' -exec gzip -9 {} \;

  # Add the headers package
  mkdir -p ${pkgdir}/lib/modules/${_kernver}
  cd ${pkgdir}/lib/modules/${_kernver}
  ln -sf ../../../usr/src/linux-${_kernver} build
  cd ${srcdir}/linux-${pkgver}
  install -D -m644 Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Makefile
  install -D -m644 kernel/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/kernel/Makefile
  install -D -m644 .config \
    ${pkgdir}/usr/src/linux-${_kernver}/.config
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include

  for i in acpi asm-generic config crypto drm generated linux math-emu \
    media net pcmcia scsi sound trace video xen; do
    cp -a include/$i ${pkgdir}/usr/src/linux-${_kernver}/include/
  done

  # copy arch includes for external modules
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/x86
  cp -a arch/x86/include ${pkgdir}/usr/src/linux-${_kernver}/arch/x86/

  # copy files necessary for later builds, like nvidia and vmware
  cp Module.symvers ${pkgdir}/usr/src/linux-${_kernver}
  cp -a scripts ${pkgdir}/usr/src/linux-${_kernver}
  # fix permissions on scripts dir
  chmod og-w -R ${pkgdir}/usr/src/linux-${_kernver}/scripts
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/.tmp_versions

  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel

  cp arch/$KARCH/Makefile ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  if [ "$CARCH" = "i686" ]; then
    cp arch/$KARCH/Makefile_32.cpu ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  fi
  cp arch/$KARCH/kernel/asm-offsets.s ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel/

  # add headers for lirc package
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video
  cp drivers/media/video/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/
  for i in bt8xx cpia2 cx25840 cx88 em28xx et61x251 pwc saa7134 sn9c102; do
   mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
   cp -a drivers/media/video/$i/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
  done
  # add docbook makefile
  install -D -m644 Documentation/DocBook/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Documentation/DocBook/Makefile
  # add dm headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  cp drivers/md/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  # add inotify.h
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/linux
  cp include/linux/inotify.h ${pkgdir}/usr/src/linux-${_kernver}/include/linux/
  # add wireless headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  cp net/mac80211/*.h ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/9912
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core
  cp drivers/media/dvb/dvb-core/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/11194
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/
  cp include/config/dvb/*.h ${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/
  # add dvb headers for http://mcentral.de/hg/~mrec/em28xx-new
  # in reference to:
  # http://bugs.archlinux.org/task/13146
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/dvb/frontends/lgdt330x.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/video/msp3400-driver.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  # add dvb headers  
  # in reference to:
  # http://bugs.archlinux.org/task/20402
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb
  cp drivers/media/dvb/dvb-usb/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends
  cp drivers/media/dvb/frontends/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners
  cp drivers/media/common/tuners/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners/
  # add xfs and shmem for aufs building
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/mm
  cp fs/xfs/xfs_sb.h ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs/xfs_sb.h
  # copy in Kconfig files
  for i in `find . -name "Kconfig*"`; do 
    mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/`echo $i | sed 's|/Kconfig.*||'`
    cp $i ${pkgdir}/usr/src/linux-${_kernver}/$i
  done

  chown -R root.root ${pkgdir}/usr/src/linux-${_kernver}
  find ${pkgdir}/usr/src/linux-${_kernver} -type d -exec chmod 755 {} \;
  # strip scripts directory
  find ${pkgdir}/usr/src/linux-${_kernver}/scripts  -type f -perm -u+w 2>/dev/null | while read binary ; do
  case "$(file -bi "$binary")" in
    *application/x-sharedlib*) # Libraries (.so)
    /usr/bin/strip $STRIP_SHARED "$binary";;
    *application/x-archive*) # Libraries (.a)
    /usr/bin/strip $STRIP_STATIC "$binary";;
    *application/x-executable*) # Binaries
    /usr/bin/strip $STRIP_BINARIES "$binary";;
    esac 
  done 
  # remove unneeded architectures
  rm -rf ${pkgdir}/usr/src/linux-${_kernver}/arch/{alpha,arm,arm26,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,microblaze,mn10300,parisc,powerpc,ppc,s390,sh,sh64,sparc,sparc64,um,v850,xtensa}
}

