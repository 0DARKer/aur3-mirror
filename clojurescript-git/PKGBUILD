#maintainer: kuno <neokuno AT gmail DOT com>

pkgname=clojurescript-git
_realname=clojurescript
pkgver=20120111
pkgrel=1
pkgdesc="Clojure to JS compiler"
arch=('i686' 'x86_64')
url="https://github.com/clojure/clojurescript"
license=('EPL')
groups=()
depends=('clojure' 'rhino' 'closure-compiler')
makedepends=('git' 'unzip' 'curl')
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=$pkgname.install
source=(clojurescript.sh)
noextract=()
#md5sums=() #generate with 'makepkg -g'
_gittrunk="git://github.com/clojure/clojurescript.git"
_gitmod=$_realname       

build() {
  if [ -d $srcdir/$_gitmod-build ]; then
     rm -rf $srcdir/$_gitmod-build
  fi

  cd $srcdir
  #
  msg "Connecting to the github...."
  if [ ! -d $_gitmod/.git ]; then
    git clone $_gittrunk $_gitmod
  else
    cd $_gitmod
    git pull $_gittrunk
  fi

  cp -r $srcdir/$_gitmod $srcdir/$_gitmod-build

  #
  cd $srcdir/$_gitmod-build/
  mkdir -p lib || return 1

  #
  echo "Fetching Google Closure library..."
  mkdir -p closure/library
  cd closure/library
  curl -O -s http://closure-library.googlecode.com/files/closure-library-20111110-r1376.zip
  unzip -qu closure-library-20111110-r1376.zip
  echo "Cleaning up Google Closure library archive..."
  rm closure-library-20111110-r1376.zip

  cd $srcdir/$_gitmod-build/
  echo "Building lib/goog.jar..."
  echo "jar cf ./lib/goog.jar -C closure/library/closure/ goog"
  jar cf ./lib/goog.jar -C closure/library/closure/ goog     

  #
  ln -s /usr/share/clojure/clojure.jar lib/clojure.jar 
  #
  ln -s /usr/share/java/closure-compiler/closure-compiler.jar lib/compiler.jar
  #
  ln -s /usr/share/java/js-1.7R3.jar lib/js.jar
}

package() {
  mkdir -p $pkgdir/etc/profile.d
  mkdir -p $pkgdir/opt/$_realname

  cp -r $srcdir/$_gitmod-build/{bin,lib,src,test,script} $pkgdir/opt/$_realname/ || return 1

  cp $_realname.sh $pkgdir/etc/profile.d || return 1
  rm -rf $srcdir/$_gitmod-build
}
md5sums=('ba08df6fbefe09783bf04a150f555b22')
