From 1d8f71814b945f086516c546f60d5bd46f1bacb9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20La=C3=9F?= <lass@mail.uni-paderborn.de>
Date: Wed, 17 Dec 2014 21:17:35 +0100
Subject: [PATCH] Quick&Dirty fix build with Linux 3.18.1

Only apply this patch on systems running Kernel 3.18.1! Older kernels will
fail with this patch applied.

Use this at your own risk. This is a dirty fix written by someone who does
not know what he is doing. You have been warned!

Change-Id: Id585bf4b9ac41c49bc66b4d728629d6df416c600
---
 src/afs/LINUX/osi_vcache.c   | 2 +-
 src/afs/LINUX/osi_vnodeops.c | 2 +-
 src/afs/afs_daemons.c        | 4 ++--
 src/cf/linux-test4.m4        | 4 ++--
 4 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/afs/LINUX/osi_vcache.c b/src/afs/LINUX/osi_vcache.c
index 1d0db82..13b2ab0 100644
--- a/src/afs/LINUX/osi_vcache.c
+++ b/src/afs/LINUX/osi_vcache.c
@@ -57,7 +57,7 @@ restart:
 restart:
 #if defined(D_ALIAS_IS_HLIST)
 # if defined(HLIST_ITERATOR_NO_NODE)
-	hlist_for_each_entry(dentry, &inode->i_dentry, d_alias) {
+	hlist_for_each_entry(dentry, &inode->i_dentry, d_u.d_alias) {
 # else
 	hlist_for_each_entry(dentry, p, &inode->i_dentry, d_alias) {
 # endif
diff --git a/src/afs/LINUX/osi_vnodeops.c b/src/afs/LINUX/osi_vnodeops.c
index b2ab9d5..cabbfac 100644
--- a/src/afs/LINUX/osi_vnodeops.c
+++ b/src/afs/LINUX/osi_vnodeops.c
@@ -890,7 +890,7 @@ canonical_dentry(struct inode *ip)
 
 #if defined(D_ALIAS_IS_HLIST)
 # if defined(HLIST_ITERATOR_NO_NODE)
-    hlist_for_each_entry(cur, &ip->i_dentry, d_alias) {
+    hlist_for_each_entry(cur, &ip->i_dentry, d_u.d_alias) {
 # else
     hlist_for_each_entry(cur, p, &ip->i_dentry, d_alias) {
 # endif
diff --git a/src/afs/afs_daemons.c b/src/afs/afs_daemons.c
index a78aaaa..b2b11ca 100644
--- a/src/afs/afs_daemons.c
+++ b/src/afs/afs_daemons.c
@@ -385,8 +385,8 @@ afs_CheckRootVolume(void)
 #endif
 #endif
 #if defined(D_ALIAS_IS_HLIST)
-		    hlist_del_init(&dp->d_alias);
-		    hlist_add_head(&dp->d_alias, &(AFSTOV(vcp)->i_dentry));
+		    hlist_del_init(&dp->d_u.d_alias);
+		    hlist_add_head(&dp->d_u.d_alias, &(AFSTOV(vcp)->i_dentry));
 #else
 		    list_del_init(&dp->d_alias);
 		    list_add(&dp->d_alias, &(AFSTOV(vcp)->i_dentry));
diff --git a/src/cf/linux-test4.m4 b/src/cf/linux-test4.m4
index f0269b3..3152bd2 100644
--- a/src/cf/linux-test4.m4
+++ b/src/cf/linux-test4.m4
@@ -713,7 +713,7 @@ AC_DEFUN([LINUX_D_ALIAS_IS_HLIST], [
 			[#include <linux/fs.h>],
 			[struct dentry *d = NULL;
 			struct hlist_node *hn = NULL;
-			d->d_alias = *hn;],
+			d->d_u.d_alias = *hn;],
 			[D_ALIAS_IS_HLIST],
 			[define if dentry->d_alias is an hlist],
 			[])
@@ -727,7 +727,7 @@ AC_DEFUN([LINUX_HLIST_ITERATOR_NO_NODE], [
 			#include <linux/fs.h>],
 			[struct dentry *d = NULL, *cur;
 			struct inode *ip;
-			hlist_for_each_entry(cur, &ip->i_dentry, d_alias) { }
+			hlist_for_each_entry(cur, &ip->i_dentry, d_u.d_alias) { }
 			],
 			[HLIST_ITERATOR_NO_NODE],
 			[define if hlist iterators don't need a node parameter],
-- 
2.2.0

