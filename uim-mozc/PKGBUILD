# Maintainer: ponsfoot <cabezon dot hashimoto at gmail dot com>

## NOTE: This doens't support kill_line feature of uim.

## Mozc compile option
_bldtype=Release
#_bldtype=Debug

_uimmozcrev=321
_protobuf_ver=2.4.1

pkgname=uim-mozc
pkgbase=mozc
pkgver=1.6.1187.102
pkgrel=1
pkgdesc="uim plugin module for Mozc"
arch=('i686' 'x86_64')
url="http://code.google.com/p/macuim/"
license=('BSD')
groups=('mozc-im')
depends=("mozc=${pkgver}" 'uim')
install=${pkgname}.install
makedepends=('pkg-config' 'python2')
changelog=ChangeLog
source=(http://mozc.googlecode.com/files/mozc-${pkgver}.tar.bz2
        http://protobuf.googlecode.com/files/protobuf-${_protobuf_ver}.tar.bz2
        http://downloads.sourceforge.net/project/pnsft-aur/mozc/uim-mozc-${_uimmozcrev}.tar.xz
)
sha1sums=('341e0edd1f5c8593b8936792975a4856e1c9c89e'
          'df5867e37a4b51fb69f53a8baf5b994938691d6d'
          '3ac794514e65bf04137bd5a22c05308f639d531b')

# run qmake -v and check version
qmake_check_v4() {
  if [[ -x "$1" ]]; then
    if echo `$1 -v 2>&1` | grep "Qt version 4\." >/dev/null 2>&1; then
      return 0
    fi
  fi
  return 1
}

# Checking Qt4 environments
qt4_check() {
  _qt4dir=""
  _qmnames="qmake-qt4 qmake4 qmake"

  # qt4 check: $QTDIR
  if [[ -z "$_qt4dir" && "$QTDIR" ]]; then
    for n in $_qmnames; do
      _qstr=${QTDIR}/bin/${n}
      if qmake_check_v4 "$_qstr"; then
        _qt4dir=`dirname $_qstr`
        break;
      fi
    done
  fi

  # qt4 check: pkg-config
  if [[ -z "$_qt4dir" ]]; then
    _str=`pkg-config QtCore --variable=exec_prefix 2>/dev/null`
    if [[ "$_str" ]]; then
      for n in $_qmnames; do
        _qstr=${_str}/bin/${n}
        if qmake_check_v4 "$_qstr"; then
          _qt4dir=`dirname $_qstr`
          break;
        fi
      done
    fi
  fi

  # qt4 check: PATH
  if [[ -z "$_qt4dir" ]]; then
    for n in $_qtnames; do
      _qstr="`which $n 2>/dev/null`"
      if qmake_check_v4 "$_qstr"; then
        _qt4dir=`dirname $_qstr`
        break;
      fi
    done
  fi

  if [[ -z "$_qt4dir" ]]; then
    msg "'qmake' for Qt4 not found."
    exit 1
  else
    _qt4dir=${_qt4dir%%/bin}
  fi
}

build() {
  # Check and find Qt4
  qt4_check

  cd "${srcdir}/${pkgbase}-${pkgver}"

  # uim-mozc
  cp -rf "${srcdir}/uim-mozc-${_uimmozcrev}/uim" unix/
  # Extract license part of uim-mozc
  head -n 32 unix/uim/mozc.cc > unix/uim/LICENSE

  # Copy protobuf to be linked statically
  cp -rf "${srcdir}/protobuf-${_protobuf_ver}" protobuf/files

  # Adjust to use python2
  find . -name  \*.py        -type f -exec sed -i -e "1s/python.*$/python2/"  {} +
  find . -regex '.*\.gypi?$' -type f -exec sed -i -e "s/'python'/'python2'/g" {} +

  # Use Qt4
  source /etc/profile.d/qt4.sh
  CFLAGS+=" -I/usr/include/qt4"
  CXXFLAGS+=" -I/usr/include/qt4"
  sed -i 's|(qt_dir)/bin|(qt_dir)/lib/qt4/bin|' gui/*.gyp{,i}
  sed -i 's|(qt_dir_env)/bin|(qt_dir_env)/lib/qt4/bin|' gui/*.gyp{,i}

  msg "Starting make..."

  # Get make -j option from $MAKEFLAGS
  _jobs=`sed -n -e "s/.*--jobs=\([0-9]\+\).*/\1/p" -e "s/.*-j *\([0-9]\+\).*/\1/p" <<< "$MAKEFLAGS"`
  _jobs=${_jobs:-1}

  QTDIR=$_qt4dir python2 build_mozc.py gyp
  python2 build_mozc.py build_tools -c $_bldtype -j $_jobs
  python2 build_mozc.py build -c $_bldtype -j $_jobs unix/uim/uim.gyp:uim-mozc
}

package() {
  cd "${srcdir}/${pkgbase}-${pkgver}"
  install -D -m 755 out_linux/${_bldtype}/libuim-mozc.so  "${pkgdir}/usr/lib/uim/plugin/libuim-mozc.so"
  install -d "${pkgdir}/usr/share/uim"
  install    -m 644 ${srcdir}/uim-mozc-${_uimmozcrev}/scm/*.scm       "${pkgdir}/usr/share/uim/"
  install -D -m 644 data/images/unix/ime_product_icon_opensource-32.png "${pkgdir}/usr/share/uim/pixmaps/mozc.png"
  install    -m 644 data/images/unix/ui-tool.png       "${pkgdir}/usr/share/uim/pixmaps/mozc_tool_selector.png"
  install    -m 644 data/images/unix/ui-properties.png "${pkgdir}/usr/share/uim/pixmaps/mozc_tool_config_dialog.png"
  install    -m 644 data/images/unix/ui-dictionary.png "${pkgdir}/usr/share/uim/pixmaps/mozc_tool_dictionary_tool.png"

  install -D -m 644 unix/uim/LICENSE "${pkgdir}/usr/share/licenses/${pkgbase}/uim-mozc/LICENSE"
}
