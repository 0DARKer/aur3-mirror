# Maintainer : Keshav P R <(the.ridikulus.rat) (aatt) (gemmaeiil) (ddoott) (ccoomm)>
# Contributor: Ronald van Haren <ronald.archlinux.org>
# Contributor: Thomas Bächler <thomas.archlinux.org>

_pkgname="ntfs-3g_ntfsprogs"
pkgname="${_pkgname}-git"

pkgver=20120506
pkgrel=1
pkgdesc="Read and write NTFS driver and utilities - GIT version"
url="http://www.tuxera.com"
arch=('i686' 'x86_64')
license=('GPL2')

makedepends=('pkgconfig')
depends=('glibc' 'fuse' 'util-linux')

conflicts=("${_pkgname}" 'ntfs-3g' 'ntfsprogs' 'ntfs-3g-ar')
provides=("${_pkgname}" 'ntfs-3g' 'ntfsprogs' 'ntfs-3g-ar')

options=(strip !emptydirs zipman !libtool docs)

_gitroot="git://ntfs-3g.git.sourceforge.net/gitroot/ntfs-3g/ntfs-3g"
_gitname="${_pkgname}"
_gitbranch="edge"

_update_git() {
	
	cd "${srcdir}/"
	
	msg "Connecting to GIT server...."
	
	if [[ -d "${srcdir}/${_gitname}/" ]]; then
		cd "${srcdir}/${_gitname}/"
		git reset --hard
		git fetch
		git checkout "${_gitbranch}"
		git merge "remotes/origin/${_gitbranch}"
		msg "The local GIT repo has been updated."
	else
		git clone "${_gitroot}" "${_gitname}"
		cd "${srcdir}/${_gitname}/"
		git checkout "${_gitbranch}"
		msg "GIT checkout done or server timeout"
	fi
	
	echo
	
}

build() {
	
	_update_git
	
	rm -rf "${srcdir}/${_gitname}_build/" || true
	cp -r "${srcdir}/${_gitname}" "${srcdir}/${_gitname}_build"
	
	cd "${srcdir}/${_gitname}_build/"
	
	./autogen.sh
	echo
	
	ac_cv_path_LDCONFIG="/bin/true" ./configure \
		--prefix="/usr" \
		--with-fuse="external" \
		--disable-static \
		--mandir="/usr/share/man" \
		--enable-posix-acls \
		--enable-xattr-mappings \
		--enable-extras
	echo
	
	make clean
	echo
	
	make
	echo
	
}

package() {
	
	install -d "${pkgdir}/lib"
	
	for DIR in src libntfs-3g include ntfsprogs; do
		cd "${srcdir}/${_gitname}_build/${DIR}/"
		make DESTDIR="${pkgdir}" install
	done
	
	install -d "${pkgdir}/usr/lib"
	mv "${pkgdir}/lib"/* "${pkgdir}/usr/lib"/
	rm -rf "${pkgdir}/lib"
	
	cd "${srcdir}/${_gitname}_build/"
	
	# install -d "${pkgdir}/usr/sbin"
	
	# ln -s "/bin/ntfs-3g" "${pkgdir}/usr/sbin/mount.ntfs"
	# ln -s "/usr/bin/ntfsck" "${pkgdir}/usr/sbin/fsck.ntfs"
	# ln -s "/usr/bin/ntfsck" "${pkgdir}/usr/sbin/fsck.ntfs-3g"
	
	install -d "${pkgdir}/sbin"
	
	ln -s "/sbin/mount.ntfs-3g" "${pkgdir}/sbin/mount.ntfs"
	ln -s "/usr/bin/ntfsck" "${pkgdir}/sbin/fsck.ntfs"
	ln -s "/usr/bin/ntfsck" "${pkgdir}/sbin/fsck.ntfs-3g"
	
}
