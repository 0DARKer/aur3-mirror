#!/bin/bash

. /etc/rc.conf
. /etc/rc.d/functions
. /etc/conf.d/neo4j

PIDFILE=/run/neo4j/neo4j.pid
CP="/usr/share/java/neo4j/*:/usr/share/java/neo4j/system/*:/usr/share/java/neo4j/plugins/*"
CP="$CP:/usr/share/java/commons-io/commons-io.jar:/usr/share/java/commons-logging/commons-logging.jar"
CP="$CP:/usr/share/java/commons-collections/commons-collections.jar"
CP="$CP:/usr/share/java/antlr2.jar"
. /usr/share/java/slf4j/setClasspath.sh
CP="$CP:$SLF4J_API:$SLF4J_JDK14:$JCL_OVER_SLF4J:$LOG4J_OVER_SLF4J"

export JAVA_HOME

case "$1" in
  start)
    if ! ck_daemon neo4j; then
      echo "Neo4j is already running.  Try 'neo4j restart'"
      exit 1
    fi

    stat_busy "Starting Neo4j server"

    [[ -f "$PIDFILE" ]] && rm -f "$PIDFILE"
    mkdir -p $(dirname $PIDFILE)

    "$JAVA_HOME/bin/java" -cp "$CP" \
      -Dorg.neo4j.server.properties=/etc/neo4j/neo4j-server.properties \
      -Djava.util.logging.config.file=/etc/neo4j/logging.properties \
      org.neo4j.server.Bootstrapper >&/dev/null &
    [[ -n "$STARTUP_TIMEOUT" ]] && sleep $STARTUP_TIMEOUT

    if pgrep -f org.neo4j.server.Bootstrapper | grep -q $!; then
      # Still running after $STARTUP_TIMEOUT seconds, assume success
      echo $! > "$PIDFILE"
      add_daemon neo4j
      stat_done
    else
      stat_fail
      exit 1
    fi
    ;;

  stop)
    if ck_daemon neo4j; then
      echo "Neo4j is not running."
      exit 1
    fi

    stat_busy "Stopping Neo4j server"

    PID=$(cat "$PIDFILE" 2>/dev/null)
    [ ! -z "$PID" ] && kill "$PID" &> /dev/null

    if [ $? -gt 0 ]; then
      stat_fail
      exit 1
    else
      rm -f "$PIDFILE" &> /dev/null
      rm_daemon neo4j
      stat_done
    fi
    ;;

  restart)
    $0 stop
    sleep 3
    $0 start
    ;;

  status)
    stat_busy "Checking neo4j status";
    ck_status neo4j
    ;;

  *)
    echo "usage: $0 {start|stop|restart|status}"
esac

exit 0
