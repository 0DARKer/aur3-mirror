Index: neo4j-community-1.8/bin/neo4j
===================================================================
--- neo4j-community-1.8.orig/bin/neo4j
+++ neo4j-community-1.8/bin/neo4j
@@ -46,8 +46,10 @@ function findBaseDirAndCdThere {
     cd "$(dirname "$SCRIPT")"
     SCRIPT=`basename "$SCRIPT"`
   done
-  NEO4J_HOME=`cd $( dirname "$SCRIPT" )/.. && dirs -l +0`
-  NEO4J_INSTANCE=$NEO4J_HOME
+  NEO4J_HOME=/usr/share/java/neo4j
+  NEO4J_INSTANCE=/var/lib/neo4j
+  NEO4J_CONFIG=/etc/neo4j
+  NEO4J_LOG=/var/log/neo4j
 
   cd "$NEO4J_HOME"
 }
@@ -55,20 +57,18 @@ function findBaseDirAndCdThere {
 function parseConfig {
   if [ ${BASH_VERSINFO[0]} -eq 3 ] ; then
     if [ ${BASH_VERSINFO[1]} -lt 2 ] ; then
-      getconfigquoted "${NEO4J_INSTANCE}/conf/neo4j-wrapper.conf"
-      getconfigquoted "${NEO4J_INSTANCE}/conf/neo4j-server.properties"
+      getconfigquoted "${NEO4J_CONFIG}/neo4j-server.properties"
       return
     fi
   fi
-  getconfig "${NEO4J_INSTANCE}/conf/neo4j-wrapper.conf"
-  getconfig "${NEO4J_INSTANCE}/conf/neo4j-server.properties"
+  getconfig "${NEO4J_CONFIG}/neo4j-server.properties"
 }
 
 findBaseDirAndCdThere
-source bin/utils
+source /usr/share/neo4j/bin/utils
 parseConfig
 
-NEO4J_OPTS="-Dlog4j.configuration=file:conf/log4j.properties -Dorg.neo4j.server.properties="${NEO4J_INSTANCE}"/conf/neo4j-server.properties -Djava.util.logging.config.file="${NEO4J_INSTANCE}/conf/logging.properties" -Dneo4j.home="${NEO4J_HOME}" -Dneo4j.instance="${NEO4J_INSTANCE}""
+NEO4J_OPTS="-Dlog4j.configuration=file:conf/log4j.properties -Dorg.neo4j.server.properties="${NEO4J_CONFIG}"/neo4j-server.properties -Djava.util.logging.config.file="${NEO4J_CONFIG}/logging.properties" -Dneo4j.home="${NEO4J_HOME}" -Dneo4j.instance="${NEO4J_INSTANCE}""
 
 JAVA_OPTS="-server -XX:+DisableExplicitGC ${wrapper_java_additional}"
 [ -z "${wrapper_java_initmemory}" ] || JAVA_OPTS="$JAVA_OPTS -Xms${wrapper_java_initmemory}m"
@@ -96,7 +96,9 @@ LAUNCHD_DIR=~/Library/LaunchAgents/
 
 TIMEOUT=120
 
-PID_FILE=${NEO4J_INSTANCE}/data/neo4j-service.pid
+PID_FILE=/run/neo4j/neo4j-service.pid
+mkdir -p $(dirname $PID_FILE)
+
 buildclasspath() {
   # confirm library jars
   LIBDIR="$NEO4J_HOME"/lib
@@ -140,20 +142,26 @@ buildclasspath() {
   fi
 
   CLASSPATH=${ALL_JARS}
+
+  CLASSPATH="$CLASSPATH:/usr/share/java/commons-io/commons-io.jar:/usr/share/java/commons-logging/commons-logging.jar"
+  CLASSPATH="$CLASSPATH:/usr/share/java/commons-collections/commons-collections.jar"
+  CLASSPATH="$CLASSPATH:/usr/share/java/antlr2.jar"
+  . /usr/share/java/slf4j/setClasspath.sh
+  CLASSPATH="$CLASSPATH:$SLF4J_API:$SLF4J_JDK14:$JCL_OVER_SLF4J:$LOG4J_OVER_SLF4J"
 }
 
 checkupgrade() {
     if [ $UID == 0 ] ; then
       su $NEO4J_USER -c "$JAVACMD -cp '$CLASSPATH' $JAVA_OPTS -Dlog4j.configuration=file:conf/log4j.properties \
-        -Dorg.neo4j.server.properties=\"${NEO4J_INSTANCE}/conf/neo4j-server.properties\" \
-        -Djava.util.logging.config.file=\"${NEO4J_INSTANCE}/conf/logging.properties\" \
+        -Dorg.neo4j.server.properties=\"${NEO4J_CONFIG}/neo4j-server.properties\" \
+        -Djava.util.logging.config.file=\"${NEO4J_CONFIG}/logging.properties\" \
         -Dneo4j.home=\"${NEO4J_HOME}\" -Dneo4j.instance=\"${NEO4J_INSTANCE}\" \
         org.neo4j.server.storemigration.PreStartupStoreUpgrader"
     else
       checkwriteaccess
       $JAVACMD -cp "${CLASSPATH}" $JAVA_OPTS -Dlog4j.configuration=file:conf/log4j.properties \
-        -Dorg.neo4j.server.properties="${NEO4J_INSTANCE}/conf/neo4j-server.properties" \
-        -Djava.util.logging.config.file="${NEO4J_INSTANCE}/conf/logging.properties" \
+        -Dorg.neo4j.server.properties="${NEO4J_CONFIG}/neo4j-server.properties" \
+        -Djava.util.logging.config.file="${NEO4J_CONFIG}/logging.properties" \
         -Dneo4j.home="${NEO4J_HOME}" -Dneo4j.instance="${NEO4J_INSTANCE}" \
         org.neo4j.server.storemigration.PreStartupStoreUpgrader
     fi
@@ -201,23 +209,22 @@ startit() {
 
     buildclasspath
     checkupgrade
-    checkandrepairenv
 
     if [ $UID == 0 ] ; then
       su $NEO4J_USER -c "$JAVACMD -cp '$CLASSPATH' $JAVA_OPTS -Dlog4j.configuration=file:conf/log4j.properties \
-        -Dorg.neo4j.server.properties=\"${NEO4J_INSTANCE}/conf/neo4j-server.properties\" \
-        -Djava.util.logging.config.file=\"${NEO4J_INSTANCE}/conf/logging.properties\" \
+        -Dorg.neo4j.server.properties=\"${NEO4J_CONFIG}/neo4j-server.properties\" \
+        -Djava.util.logging.config.file=\"${NEO4J_CONFIG}/logging.properties\" \
         -Dneo4j.home=\"${NEO4J_HOME}\" -Dneo4j.instance=\"${NEO4J_INSTANCE}\" \
         -Dfile.encoding=UTF-8 \
-        org.neo4j.server.Bootstrapper >> \"$NEO4J_INSTANCE/data/log/console.log\" 2>&1 & echo \$! > \"$PID_FILE\" "
+        org.neo4j.server.Bootstrapper >> \"$NEO4J_LOG/console.log\" 2>&1 & echo \$! > \"$PID_FILE\" "
     else
       checkwriteaccess
       echo "WARNING: not changing user"
       $JAVACMD -cp "${CLASSPATH}" $JAVA_OPTS -Dlog4j.configuration=file:conf/log4j.properties \
-        -Dorg.neo4j.server.properties="${NEO4J_INSTANCE}/conf/neo4j-server.properties" \
-        -Djava.util.logging.config.file="${NEO4J_INSTANCE}/conf/logging.properties" \
+        -Dorg.neo4j.server.properties="${NEO4J_CONFIG}/neo4j-server.properties" \
+        -Djava.util.logging.config.file="${NEO4J_CONFIG}/logging.properties" \
         -Dneo4j.home="${NEO4J_HOME}" -Dneo4j.instance="${NEO4J_INSTANCE}" \
-        org.neo4j.server.Bootstrapper >> "${NEO4J_INSTANCE}/data/log/console.log" 2>&1 & echo $! > "${PID_FILE}"
+        org.neo4j.server.Bootstrapper >> "${NEO4J_LOG}/console.log" 2>&1 & echo $! > "${PID_FILE}"
     fi
     STARTED_PID=$( cat "$PID_FILE" )
 
@@ -278,11 +285,10 @@ console() {
     exitonnojava
     buildclasspath
     checkwriteaccess
-    checkandrepairenv
 
     $JAVACMD -cp "${CLASSPATH}" $JAVA_OPTS -Dlog4j.configuration=file:conf/log4j.properties \
-        -Dorg.neo4j.server.properties="${NEO4J_INSTANCE}/conf/neo4j-server.properties" \
-        -Djava.util.logging.config.file="${NEO4J_INSTANCE}/conf/logging.properties" \
+        -Dorg.neo4j.server.properties="${NEO4J_CONFIG}/neo4j-server.properties" \
+        -Djava.util.logging.config.file="${NEO4J_CONFIG}/logging.properties" \
         -Dneo4j.home="${NEO4J_HOME}" -Dneo4j.instance="${NEO4J_INSTANCE}" \
         org.neo4j.server.Bootstrapper
 
