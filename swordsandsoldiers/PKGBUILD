# Maintainer: Claudio Kozicky <claudiokozicky@gmail.com>
# Contributor: Daniel Wallace <danielwallace at gtmanfred dot com>

pkgname=swordsandsoldiers
_pkgname=SwordsAndSoldiers
pkgver=20120329
_pkgver=2012-03-25-2
pkgrel=1
pkgdesc="An exciting 2D sidescrolling real-time strategy game."
arch=('i686' 'x86_64')
url="http://www.swordsandsoldiers.com/"
license=('custom')
groups=('humblebundleandroid2' 'humblebundleandroid4')
depends=('bash' 'glu' 'libvorbis' 'libxft' 'libxpm' 'openal')
case $CARCH in
    i686) 
        depends+=('gcc-libs')
        _arch=x86;;
    x86_64)
        depends+=('gcc-libs-multilib')
        _arch=x86_64;;
esac
makedepends=('curl')
source=("${_pkgname}-HIB-${_pkgver}.sh::https://www.humblebundle.com/login"
        "${_pkgname}-HIB-${_pkgver}.sh::http://www.humblebundle.com/downloads?key=${_humblebundleandroid2key}"
        "${_pkgname}-HIB-${_pkgver}.sh::http://www.humblebundle.com/downloads?key=${_humblebundleandroid4key}"
        'swordsandsoldiers.desktop'
        'swordsandsoldierssetup.desktop')

_char=\'
DLAGENTS=('https::/bin/echo %o > /tmp/arch && sed -i "s/.part//" /tmp/arch &&
               /usr/bin/curl -s --cookie-jar /tmp/cjar --output /dev/null %u && cp /tmp/cjar ./ &&
               /usr/bin/curl -sL --cookie /tmp/cjar --cookie-jar /tmp/cjar -F "username=$_humbleemail" -F "password=$_humblepassword" %u |
               grep -f /tmp/arch | grep -o -E "data-web=[^ ]+" | sed -e "s/data-web=\([^ ]*\)/\1/" > /tmp/url &&
               sed -i "s/$_char//g" /tmp/url &&
               /usr/bin/curl --cookie /tmp/cjar --cookie-jar /tmp/cjar -fLC -  --retry 3 --retry-delay 3 -o %o "$(</tmp/url)" &&
               rm -f /tmp/{arch,url} || return 0'
           "http::/bin/echo %o > /tmp/arch && sed -i \"s/.part//\" /tmp/arch &&
               /usr/bin/curl -sL %u |
               grep -f /tmp/arch | grep -o -E \"data-web=[^ ]+\" | sed -e \"s/data-web='\(.*\)'/url = \1/\" > /tmp/url &&
               /usr/bin/curl -fLC -  --retry 3 --retry-delay 3 -o %o -K /tmp/url &&
               rm /tmp/{url,arch}")

if [[ ! -f ${SRCDEST}/${source[0]%%:*} ]]; then
    if [[ -z ${_humbleemail} || -z ${_humblepassword} ]]; then
        if [[ -z ${_humblebundleandroid2key} && -z ${_humblebundleandroid4key} ]]; then
            msg "If you have bound your email and password to your account, "
            msg "export the values _humbleemail and _humblepassword so that"
            msg "you can be logged in to download the game."
            echo
            msg "If you have not bound the key to an email, export "
            msg "_humblebundleandroid2key or _humblebundleandroid4key"
            msg "in your .bashrc."
            return 1
        fi
    fi
fi

package() {
    cd "${srcdir}"
    [[ -d "${srcdir}/${pkgname}-${_pkgver}" ]] && rm -r "${srcdir}/${pkgname}-${_pkgver}"
    sh "${source[0]%%:*}" -u -r --packager pacman --target "${srcdir}/${pkgname}-${_pkgver}" --bindir "${pkgdir}/opt/${_pkgname}" --datadir "${pkgdir}/opt"

    find "${pkgdir}" -type f -exec chmod 644 "{}" +

    install -Dm644 "${pkgname}.desktop" "${pkgdir}/usr/share/applications/${pkgname}.desktop"
    install -Dm644 "${pkgname}setup.desktop" "${pkgdir}/usr/share/applications/${pkgname}setup.desktop"
    install -Dm644 "${pkgdir}/opt/${_pkgname}/${_pkgname}.png" "${pkgdir}/usr/share/icons/${pkgname}.png"
    install -Dm644 "${pkgdir}/opt/${_pkgname}/${_pkgname}Setup.png" "${pkgdir}/usr/share/icons/${pkgname}setup.png"

    chmod 755 "${pkgdir}/opt/${_pkgname}/${_pkgname}.bin.${_arch}"
    chmod 755 "${pkgdir}/opt/${_pkgname}/Setup.bin.${_arch}"
    mkdir "${pkgdir}/usr/bin"
    ln -s "/opt/${_pkgname}/${_pkgname}.bin.${_arch}" "${pkgdir}/usr/bin/${pkgname}"
    ln -s "/opt/${_pkgname}/Setup.bin.${_arch}" "${pkgdir}/usr/bin/${pkgname}setup"
}

md5sums=('1e14d084ff166d023efe8dd20e91164a'
         '1e14d084ff166d023efe8dd20e91164a'
         '1e14d084ff166d023efe8dd20e91164a'
         '3e384a7be5204ff03ee94ad7931dd6eb'
         'c0f18d8a2c7dec018fbab81f2857c5a5')

# vim:set ts=2 sw=2 et:
