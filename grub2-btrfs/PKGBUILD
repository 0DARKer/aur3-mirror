# Maintainer : Keshav P R <skodabenz at rocketmail dot com>
# Contributor: Sokolov Valentin <metal@pop3.ru>

pkgname=grub2-btrfs
pkgver=20110122
pkgrel=1
pkgdesc="The GNU GRand Unified Bootloader - Version 2 - with non-upstream btrfs support (git unofficial version)"
arch=('i686' 'x86_64')
url="https://launchpad.net/btrfs-grub2"
license=('GPL3')
depends=('sh' 'xz' 'freetype2' 'btrfs-progs')
makedepends=('git' 'xz' 'bdf-unifont' 'python2' 'ruby' 'texinfo' 'help2man' 'gettext' 'btrfs-progs')
install="${pkgname}.install"
backup=('etc/default/grub' 'etc/grub.d/40_custom')
conflicts=('grub2' 'grub2-common' 'grub2-bios')
provides=('grub2-bios')
replaces=('grub2')
source=('grub.default' 'grub.cfg.example' '20_memtest86+')

sha256sums=('51ba1f9246d0e669d7cb70552879350ab2171bfd3ed032891716c433bcc44de1'
            'dbd40aecc1ab99b9e57ce3bce22254f9696709e4489e277ceea4ed92189feb4c'
            'ba0f871ee93760d14d7f19709bb875af4a863a758776a23519ca7100a63da295')

if [ "$CARCH" = 'x86_64' ]
then
    makedepends=(${makedepends[@]} 'gcc-multilib' 'gcc-libs-multilib' 'lib32-glibc' 'binutils-multilib' 'libtool-multilib')
fi

_gitroot="git://gitorious.org/btrfs-grub2/btrfs-grub2.git"
_gitname="grub2-btrfs"

update_git() {
  
  cd "${srcdir}"
  
  msg "Connecting to GIT server...."
  
  if [ -d ${srcdir}/${_gitname}/ ]
  then
      cd ${srcdir}/${_gitname}/
      git reset --hard
      git fetch
      git checkout master
      git merge remotes/origin/master
      msg "The local GIT repo has been updated."
  else
      git clone ${_gitroot} ${_gitname}
  fi
  
  msg "GIT checkout done or server timeout"
  
}

build() {
  
  update_git
  
  rm -rf ${srcdir}/${_gitname}_1 || true

  cp -r ${srcdir}/${_gitname} ${srcdir}/${_gitname}_1

  cd ${srcdir}/${_gitname}_1
  
  ## Archlinux changed default /usr/bin/python3, need to use /usr/bin/python2 instead
  cp ${srcdir}/${_gitname}_1/autogen.sh ${srcdir}/${_gitname}_1/autogen_unmodified.sh
  sed -i 's|python|python2|' ${srcdir}/${_gitname}_1/autogen.sh
  
  ${srcdir}/${_gitname}_1/autogen.sh
  echo

  mkdir -p ${srcdir}/${_gitname}_1/BUILD
  cd ${srcdir}/${_gitname}_1/BUILD
  
  CFLAGS= ../configure --with-platform=pc \
                       --program-transform-name=s,grub,${pkgname}, \
                       --prefix=/usr \
                       --enable-grub-mkfont \
                       --bindir=/bin \
                       --sbindir=/sbin \
                       --mandir=/usr/share/man \
                       --infodir=/usr/share/info \
                       --sysconfdir=/etc
  echo
  
  ## What is the below line for?
  # sed -i 's|kernel_img_LDFLAGS = -lgcc|kernel_img_LDFLAGS = |g' ${srcdir}/${_gitname}_1/BUILD/Makefile
  
  make clean
  
  CFLAGS= make || return 1
  echo
  
  ./grub-mkfont --output=${srcdir}/unifont.pf2 /usr/share/fonts/misc/unifont.bdf || true
  ./grub-mkfont --ascii-bitmaps --output=${srcdir}/ascii.pf2 /usr/share/fonts/misc/unifont.bdf || true

}

package() {

  cd ${srcdir}/${_gitname}_1/BUILD
  make DESTDIR=${pkgdir} install || return 1

  ## install the unifont files
  install ${srcdir}/unifont.pf2 ${pkgdir}/etc/grub.d/unifont.pf2 || true
  install ${srcdir}/ascii.pf2 ${pkgdir}/etc/grub.d/ascii.pf2 || true
  
  ## install /etc/default/grub
  install -Dm644 ${srcdir}/grub.default ${pkgdir}/etc/default/grub

  ## install grub.cfg.example
  install -Dm644 ${srcdir}/grub.cfg.example ${pkgdir}/etc/grub.d/grub.cfg.example

  ## install memtest config detection
  install -Dm755 ${srcdir}/20_memtest86+ ${pkgdir}/etc/grub.d/20_memtest86+
  
  sed -i "s|^\(_trns_name\)=.*|\1=${pkgname}|" ${startdir}/${pkgname}.install
  
}
