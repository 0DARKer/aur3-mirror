diff -ur ecwolf.orig/src/g_mapinfo.cpp ecwolf/src/g_mapinfo.cpp
--- ecwolf.orig/src/g_mapinfo.cpp	2013-05-30 21:18:18.860579361 -0300
+++ ecwolf/src/g_mapinfo.cpp	2013-05-30 21:19:22.207254879 -0300
@@ -588,6 +588,9 @@
 		}
 		else if(key.CompareNoCase("signon") == 0)
 			ParseStringAssignment(gameinfo.SignonLump);
+		else if(key.CompareNoCase("signoncolors") == 0)
+			// Fill, Main, EMS, XMS
+			ParseColorArrayAssignment(gameinfo.SignonColors, 4);
 		else if(key.CompareNoCase("menufade") == 0)
 			ParseColorAssignment(gameinfo.MenuFadeColor);
 		else if(key.CompareNoCase("menucolors") == 0)
diff -ur ecwolf.orig/src/g_mapinfo.h ecwolf/src/g_mapinfo.h
--- ecwolf.orig/src/g_mapinfo.h	2013-05-30 21:18:18.860579361 -0300
+++ ecwolf/src/g_mapinfo.h	2013-05-30 21:19:22.207254879 -0300
@@ -45,6 +45,7 @@
 {
 public:
 	FString	SignonLump;
+	int		SignonColors[4];
 	int		MenuFadeColor;
 	int		MenuColors[6];
 	int		MessageColors[3];
diff -ur ecwolf.orig/src/id_vl.cpp ecwolf/src/id_vl.cpp
--- ecwolf.orig/src/id_vl.cpp	2013-05-30 21:18:18.867245677 -0300
+++ ecwolf/src/id_vl.cpp	2013-05-30 21:19:22.207254879 -0300
@@ -77,7 +77,7 @@
 =======================
 */
 
-void	VL_SetVGAPlaneMode (bool forSignon)
+void	VL_SetVGAPlaneMode (void)
 {
 #if SDL_VERSION_ATLEAST(2,0,0)
 #else
@@ -96,7 +96,7 @@
 	if(window) SDL_DestroyWindow(window);
 	window = SDL_CreateWindow("ECWolf", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED,
 		screenWidth, screenHeight,
-		(fullscreen && !forSignon ? SDL_WINDOW_FULLSCREEN_DESKTOP : 0)
+		(fullscreen ? SDL_WINDOW_FULLSCREEN_DESKTOP : 0)
 	);
 	if(screenRenderer) SDL_DestroyRenderer(screenRenderer);
 	screenRenderer = SDL_CreateRenderer(window, -1, 0);
@@ -124,7 +124,7 @@
 	screen = SDL_SetVideoMode(screenWidth, screenHeight, screenBits,
 		(usedoublebuffering ? SDL_HWSURFACE | SDL_DOUBLEBUF : 0) |
 		(screenBits == 8 ? SDL_HWPALETTE : 0) |
-		(fullscreen && !forSignon ? SDL_FULLSCREEN : 0));
+		(fullscreen ? SDL_FULLSCREEN : 0));
 	if(!screen)
 	{
 		printf("Unable to set %ix%ix%i video mode: %s\n", screenWidth,
@@ -138,7 +138,6 @@
 	SDL_SetColors(screen, pal, 0, 256);
 #endif
 
-	SDL_FreeSurface(screenBuffer);
 	screenBuffer = SDL_CreateRGBSurface(SDL_SWSURFACE, screenWidth,
 		screenHeight, 8, 0, 0, 0, 0);
 	if(!screenBuffer)
diff -ur ecwolf.orig/src/id_vl.h ecwolf/src/id_vl.h
--- ecwolf.orig/src/id_vl.h	2013-05-30 21:18:18.867245677 -0300
+++ ecwolf/src/id_vl.h	2013-05-30 21:19:22.207254879 -0300
@@ -36,7 +36,7 @@
 
 void VL_ReadPalette(const char* lump);
 
-void VL_SetVGAPlaneMode (bool forSignon=false);
+void VL_SetVGAPlaneMode (void);
 void VL_SetTextMode (void);
 
 void VL_SetBlend(uint8_t red, uint8_t green, uint8_t blue, int amount, bool forceupdate=false);
diff -ur ecwolf.orig/src/wl_inter.h ecwolf/src/wl_inter.h
--- ecwolf.orig/src/wl_inter.h	2013-05-30 21:18:18.867245677 -0300
+++ ecwolf/src/wl_inter.h	2013-05-30 21:19:22.207254879 -0300
@@ -18,6 +18,7 @@
 	unsigned int time;
 } LevelRatios;
 
+void IntroScreen (void);
 void DrawHighScores(void);
 void CheckHighScore (int32_t score,word other);
 void Victory (bool fromIntermission);
diff -ur ecwolf.orig/src/wl_main.cpp ecwolf/src/wl_main.cpp
--- ecwolf.orig/src/wl_main.cpp	2013-05-30 21:18:18.867245677 -0300
+++ ecwolf/src/wl_main.cpp	2013-05-30 21:19:22.207254879 -0300
@@ -40,7 +40,6 @@
 #include "wl_loadsave.h"
 #include "dobject.h"
 #include "colormatcher.h"
-#include "version.h"
 
 /*
 =============================================================================
@@ -287,6 +286,22 @@
 
 //===========================================================================
 
+/*
+==========================
+=
+= SignonScreen
+=
+==========================
+*/
+
+void SignonScreen (void)                        // VGA version
+{
+	VL_SetVGAPlaneMode ();
+	CA_CacheScreen(TexMan(gameinfo.SignonLump));
+}
+
+//===========================================================================
+
 Menu musicMenu(CTL_X, CTL_Y-6, 280, 32);
 static TArray<FString> songList;
 
@@ -348,19 +363,6 @@
 	GC::DelSoftRootHead();
 }
 
-static void DrawStartupConsole()
-{
-	static const char* const tempString = "          " GAMENAME " " DOTVERSIONSTR_NOREV "\n\n\nTo be replaced with console...\n\n  The memory thing was just\n     for show anyways.";
-
-	CA_CacheScreen(TexMan(gameinfo.SignonLump));
-
-	word width, height;
-	VW_MeasurePropString(ConFont, tempString, width, height);
-	px = 160-width/2;
-	py = 76+62-height/2;
-	VWB_DrawPropString(ConFont, tempString, CR_GRAY);
-}
-
 static void InitGame()
 {
 	// initialize SDL
@@ -410,9 +412,7 @@
 
 	BuildTables ();          // trig tables
 
-	// Setup a temporary window so if we have to terminate we don't do extra mode sets
-	VL_SetVGAPlaneMode (true);
-	DrawStartupConsole();
+	SignonScreen ();
 
 #if defined _WIN32
 	if(!fullscreen)
@@ -447,6 +447,11 @@
 	atterm(P_DeinitKeyMessages);
 
 //
+// draw intro screen stuff
+//
+	IntroScreen ();
+
+//
 // Finish with setting up through the config file.
 //
 	FinalReadConfig();
@@ -467,8 +472,6 @@
 //
 // Finish signon screen
 //
-	VL_SetVGAPlaneMode();
-	DrawStartupConsole();
 	VH_UpdateScreen();
 
 	if (!param_nowait)
diff -ur ecwolf.orig/src/wl_menu.cpp ecwolf/src/wl_menu.cpp
--- ecwolf.orig/src/wl_menu.cpp	2013-05-30 21:18:18.867245677 -0300
+++ ecwolf/src/wl_menu.cpp	2013-05-30 21:19:22.207254879 -0300
@@ -783,6 +783,68 @@
 }
 
 ////////////////////////////////////////////////////////////////////
+//
+// HANDLE INTRO SCREEN (SYSTEM CONFIG)
+//
+////////////////////////////////////////////////////////////////////
+static void IntroFill (int color, double x, double y, double w, double h)
+{
+	VirtualToRealCoords(x, y, w, h, 320, 200, false, true);
+	VWB_Clear (color, x, y, x+w, y+h);
+}
+static void MemeoryFill (int color, int basex, int basey)
+{
+	// To make color picking simple, pick the darkest color and then fill the
+	// value component of the color.  This isn't exactly equivalent, but it's
+	// good enough I think.
+
+	float r = RPART(color), g = GPART(color), b = BPART(color);
+	float h, s, v;
+
+	RGBtoHSV(r, g, b, &h, &s, &v);
+	float vstep = (255.0f - v)/10.0f;
+
+	for (int i = 0; i < 10; ++i)
+	{
+		HSVtoRGB(&r, &g, &b, h, s, v);
+		int pal = ColorMatcher.Pick(r, g, b);
+		IntroFill(pal, basex, basey - 8 * i, 6, 5);
+		v += vstep;
+	}
+}
+void IntroScreen (void)
+{
+	const int FILLCOLOR =
+		ColorMatcher.Pick(RPART(gameinfo.SignonColors[0]), GPART(gameinfo.SignonColors[0]), BPART(gameinfo.SignonColors[0]));
+
+	//
+	// DRAW MAIN MEMORY
+	//
+	MemeoryFill(gameinfo.SignonColors[1], 49, 163);
+	MemeoryFill(gameinfo.SignonColors[2], 89, 163);
+	MemeoryFill(gameinfo.SignonColors[3], 129, 163);
+
+
+	//
+	// FILL BOXES
+	//
+	if (MousePresent)
+		IntroFill(FILLCOLOR, 164, 82, 12, 2);
+
+	if (IN_JoyPresent())
+		IntroFill(FILLCOLOR, 164, 105, 12, 2);
+
+	if (AdLibPresent && !SoundBlasterPresent)
+		IntroFill(FILLCOLOR, 164, 128, 12, 2);
+
+	if (SoundBlasterPresent)
+		IntroFill(FILLCOLOR, 164, 151, 12, 2);
+
+//    if (SoundSourcePresent)
+//        VWB_Bar (164, 174, 12, 2, FILLCOLOR);
+}
+
+////////////////////////////////////////////////////////////////////
 ////////////////////////////////////////////////////////////////////
 //
 // SUPPORT ROUTINES
Only in ecwolf/src: wl_menu.cpp.orig
diff -ur ecwolf.orig/wadsrc/static/mapinfo/spear.txt ecwolf/wadsrc/static/mapinfo/spear.txt
--- ecwolf.orig/wadsrc/static/mapinfo/spear.txt	2013-05-30 21:18:18.873911994 -0300
+++ ecwolf/wadsrc/static/mapinfo/spear.txt	2013-05-30 21:20:17.964329944 -0300
@@ -172,6 +172,7 @@
 gameinfo
 {
 	signon = "SODSGNON"
+	signoncolors = "FC FC 54", "40 40 00", "40 40 00", "40 40 00"
 	menufade = "00 00 CE"
 	menucolors = "00 00 88", "00 00 D4", "00 00 7D", "00 00 58", "00 00 64", "00 00 00"
 	titlemusic = "XTOWER2"
diff -ur ecwolf.orig/wadsrc/static/mapinfo/wolf3d.txt ecwolf/wadsrc/static/mapinfo/wolf3d.txt
--- ecwolf.orig/wadsrc/static/mapinfo/wolf3d.txt	2013-05-30 21:18:18.873911994 -0300
+++ ecwolf/wadsrc/static/mapinfo/wolf3d.txt	2013-05-30 21:20:46.349508006 -0300
@@ -3,6 +3,7 @@
 gameinfo
 {
 	signon = "WLFSGNON"
+	signoncolors = "FC FC 54", "04 64 00", "04 64 00", "04 64 00"
 	menufade = "AE 00 00"
 	menucolors = "88 00 00", "D4 00 00", "7D 00 00", "58 00 00", "64 00 00", "00 00 00"
 	titlemusic = "NAZI_NOR"
