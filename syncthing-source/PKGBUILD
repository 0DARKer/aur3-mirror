# Maintainer : prurigro
# Contributor: sauyon
# Contributor: Martin Wimpress <code@flexion.org>

_pkgname=syncthing
pkgname=${_pkgname}-source
pkgver=0.8.11
pkgrel=1
pkgdesc="Open source continuous replication / cluster synchronization thing and discovey server (build from source)"
url="http://syncthing.net"
license=('MIT')
install=${pkgname}.install
depends=('glibc')
makedepends=('git' 'go' 'godep' 'mercurial')
arch=('i686' 'x86_64' 'armv6h' 'armv7h')
provides=('syncthing')
replaces=('syncthing')
conflicts=('syncthing')
sha512sums=('SKIP'
            '5ad1b9e67e718fc4f4a9205599316d555a558300622271f6bb27e9b0affec9d8316a251ebcabf551c2c84bf4e10e2dc89e132ca6fd2d142d989d0f42a7f25c92'
            '38c01db52c5802ffc0d4ec33ce19d44070cce8d55a8342fea06600aa0112f8b51a0d200f0b90494d0c5f86813321ba69b9d0c25c1fd4038154934345d32a0ede'
            'ba63aa6513b387fc28290d8ade603eea9b23c583c03e9353a226fc38ced8d43e4e00716bd59058407d686ee70fb7e5f4e849b844f15e74d3dd33937fd36af300')
source=("git://github.com/calmh/syncthing.git" "${_pkgname}@.service" "${_pkgname}-discosrv.service" "${_pkgname}.1")

_discosrv_ver=b783169

prepare() {
    export GOPATH="$srcdir"

    # Compress Manpage
    cat ${_pkgname}.1 | gzip > ${_pkgname}.1.gz

    # Remove Old Build Environment (if it exists)
    [[ -d src ]] && rm -rf src

    # Setup Build Environment
    install -d src/github.com/calmh
    mv ${_pkgname} src/github.com/calmh/
    cd src/github.com/calmh/${_pkgname}
    echo "Checking out v${pkgver}"
    git checkout v${pkgver} > /dev/null 2>&1
}

build() {
    export GOPATH="$srcdir"

    # Build Syncthing
    cd src/github.com/calmh/${_pkgname}
    echo "Building Syncthing"
    ./build.sh

    # Build Discovery Server
    echo "Building Syncthing discovery server dependencies"
    go get github.com/vitrun/qart/qr
    go get bitbucket.org/kardianos/osext
    go get code.google.com/p/go.crypto/bcrypt
    go get code.google.com/p/go.text/unicode/norm
    go get github.com/codegangsta/martini
    go get github.com/juju/ratelimit
    go get github.com/golang/groupcache/lru
    ./build.sh deps
    echo "Checking out $_discosrv_ver (most recent commit with a working Syncthing discovery server)"
    git checkout $_discosrv_ver > /dev/null 2>&1
    cd discover/cmd/discosrv
    echo "Building Syncthing discovery server"
    go build main.go
}

check() {
    cd src/github.com/calmh/${_pkgname}
    GOPATH="$srcdir" ./build.sh test
}

package() {
    install -Dm644 ${_pkgname}.1.gz "${pkgdir}/usr/share/man/man1/${_pkgname}.1.gz"
    install -Dm644 ${_pkgname}@.service "${pkgdir}/usr/lib/systemd/system/${_pkgname}@.service"
    install -Dm644 ${_pkgname}-discosrv.service "${pkgdir}/usr/lib/systemd/system/${_pkgname}-discosrv.service"

    cd src/github.com/calmh/${_pkgname}
    install -Dm755 $_pkgname "${pkgdir}/usr/bin/${_pkgname}"
    install -Dm755 discover/cmd/discosrv/main "${pkgdir}/usr/bin/${_pkgname}-discosrv"
    install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
}
