LPRng

LPRng is an alternative print spooler to Cups, designed as a dropin
replacement for the old Berkeley Unix LPR system.  It is mature and 
robust and it handles print filtering in a more transparent and
flexible manner than Cups.

Complete documentation on LPRng may be found in the reference manual:
   http://physics.nmt.edu/~raymond/software/lprng-doc/LPRng-Reference-Multipart/index.htm
This manual was rescued from the Debian lprng-doc package, as the
AstArt Technologies site that hosts the online reference manual
(http://www.lprng.org/â€Ž) has recently disappeared.  The man pages are
also a useful source of information.

INSTALLATION AND CONFIGURATION

If you are reading this README, you have already installed LPRng. :)
Configuration consists of the following steps:
1. Set up control files
2. Configure filters
3. Create a printcap file and spool directories
4. Enable and start the lpd daemon using systemctl

LPD CONTROL FILES

Two control files must be configured, lpd.conf and lpd.perms.  The
default configurations in /usr/share/doc/lprng are adequate for a
client computer printing to a remote printer.  Copy these to
/etc/lprng/lpd/.  For a server receiving requests across the internet,
uncomment the last line in lpd.conf and configure permissions as
documented in the comments in lpd.perms.  The files lpd.conf.sample
and lpd.perms.sample, located in /usr/share/doc/lprng, document more
complex situations.

CONFIGURE FILTERS

If you have a network postscript printer you are in luck.  The sample
postscript filter /usr/share/doc/lprng/psfilter converts pdf and text
files to postscript.  Other file types are rejected.  Copy this file
to /usr/lib/lprng/filters and rename it as desired.  Then edit it to
set your paper type and your choice of simplex/duplex printing.  If
you wish to have separate simplex and duplex print queues, make two
copies with different names and edit appropriately.

If you have a printer that has a ghostscript driver, copy and edit
gsfilter as above to set the appropriate driver and the paper type.
You can discover the drivers available in your version of ghostscript
by typing the command "gs -h".

Another mechanism for print filtering is via the foomatic system.
Unfortunately, foomatic-rip is no longer an independent package under
Arch, but instead is a part of Cups.  As Cups conflicts with LPRng, we
are faced with a Catch-22 situation.  Adding a stand-alone version
of foomatic-rip to the AUR would solve this problem.

Other print filtering mechanisms are available which I have not
explored -- input appreciated.

PRINTCAP FILE

The /etc/lprng/printcap file tells LPRng about the printers you have
and the print filters that need to be used.  The "printcap.sample"
file (in /usr/share/doc/lprng) provides a short tutorial as to how to
set up a printcap file.  The printcap fragments "printcap_server" and
"printcap_client" in this directory also provide information.
Generally, one computer should be designated as the server for one or
more printers.  Other client computers should send their print jobs to
the server rather than the printer directly.  The rather non-obvious
server setup in "printcap_server" is needed to make print filtering
work on network printers, as opposed to printers attached directly to
the server computer via, say, a USB port.  (See the reference manual.)

After creating the printcap file, run the command
   /usr/bin/checkpc -f
This will check your configuration and create spool directories
in /var/spool/lpd.  If checkpc complains about something, address
the issue and rerun.

START LPD DAEMON

LPRng runs a daemon in background called "lpd" to manage print
requests.  To start this daemon, type the two commands:
   systemctl enable lpd.service
   systemctl start lpd.service
If these complete without complaint, you should be good to go.  If
any configuration files are changed, one must restart the lpd daemon.
Do this with the command
   systemctl restart lpd.service
Note that this LPRng package assumes that systemd is running.  If
some alternate initialization package is used, one must devise an
alternate means of starting the lpd daemon.

USAGE

The "lpr" command is the printing tool in LPRng.  The general form
of use is
   lpr [options] [file_to_be_printed]
If no file is specified, input is accepted on the standard input.
The most useful options are "-P printer" and "-K number_of_copies".
In the absence of the printer option, the environment variable
"PRINTER=name_of_printer" will tell LPRng which printer to use.

Other useful commands are lpq (examine the print queue) and lprm
(remove a print job from the queue).  See the man pages for lpr,
lpq, and lprm.

CUPS AND LPRng

Cups may be used to access a printer on a server from a client machine
on which LPRng is not installed.  The trick is to configure Cups to
access the printer via the lpd protocol.  This is easy to do using the
web interface to Cups.  Also, since the server as set up here does all
necessary print filtering, tell Cups to use the "raw" filter.
Alternative divisions between filtering responsibilities can be devised,
depending on your needs.

PROBLEMS

A disadvantage of LPRng is that Gnome3/GTK3 (ncluding chrome and
chromium) and (apparently) KDE do not support lpr printing from their
GUI.  However, printing to a file and then using lpr works in these
cases.  Gnome2/GTK2 applications (including Firefox, Mate, LXDE, and
XFCE4) still support LPR printing.  To make this work, create the
file ".gtkrc-2.0" in your home directory containing a single line
   gtk-print-backends = "file,lpr"
LXDE may create its own .gtkrc-2.0 file if the look and feel of
the desktop are altered -- look in this file for instructions as to
how to proceed.

The filter "pdftops" from the xpdf package is used to create
postscript from PDF files in the print filters.  Occasionally, pdftops
produces bad or no output.  An alternative filter, "pdf2ps" from the
ghostscript package, can be substituted, but this filter has its own
problems.  For a one-shot case, just use pdf2ps or some other
converter to produce postscript and send that to the printer.

Duplex on postscript files is effected in psfilter by inserting a line
of postscript code right after the first line.  For some postscript
files, this doesn't work.  In this case, send the postscript file to a
simplex queue.  Such files are submitted to the printer with no
filtering in psfilter.
