LPRng

LPRng is an alternative print spooler to Cups, designed as a dropin
replacement for the old Berkeley Unix LPR system.  It is mature and 
robust and it handles print filtering in a more transparent and
flexible manner than Cups.  A disadvantage of LPRng is that
Gnome3/GTK3 (ncluding chrome and chromium) and (apparently) KDE do not
support lpr printing from their GUI.  However, printing to a file and
then using lpr works in these cases.  Gnome2/GTK2 applications
(including Firefox, Mate, LXDE, and XFCE4) still support LPR printing.
LPRng not only handles print requests from the computer hosting the
printer; it can also be set up to print jobs from other computers on
the network.

Complete documentation on LPRng may be found at
   http://www.lprng.org/â€Ž

INSTALLATION AND CONFIGURATION

If you are reading this README, you have already installed LPRng. :)
Configuration consists of the following steps:
0. Configure filters
1. Create a /etc/lprng/printcap file
2. Create lpd.conf, lpd.perms files in /etc/lprng/lpd
3. Create print queue directories in /var/spool/lpd
4. Run checkpc to be sure everything is in order
5. Enable and start lpd.service using systemctl

CONFIGURE FILTERS

If you have a network postscript printer you are in luck.  The sample
postscript filter /etc/lprng/lpd/psfilter converts pdf and text files
to postscript.  Other file types are rejected.  Edit this file to
set your paper type and simplex/duplex.  If you wish to have separate
simplex and duplex print queues, make a copy of psfilter (under a
different name) and edit appropriately.

If you have a printer that has a ghostscript driver, edit gsfilter
(also in /etc/lprng/lpd) to set the appropriate driver and the paper
type.  You can discover the drivers available in your version of
ghostscript by typing the command "gs -h".

Another mechanism for print filtering is via the foomatic system.
Unfortunately, foomatic-rip is no longer an independent package under
Arch, but instead is a part of Cups.  As Cups conflicts with LPRng, we
are faced with a Catch-22 situation.  Adding a stand-alone version
of foomatic-rip to the AUR would solve this problem.

Other print filtering mechanisms are available which I have not
explored -- input appreciated.

PRINTCAP FILE

The /etc/lprng/printcap file tells LPRng about the printers you have
and the print filters that need to be used.  The "printcap.sample"
file (in /etc/lprng) provides a tutorial of sorts as to how to set up
a printcap file.  The printcap fragments "printcap_server" and
"printcap_client" also provide information.  Generally, one computer
should be designated as the server for one or more printers.  Other
client computers should send their print jobs to the server rather
than the printer directly.  The rather non-obvious server setup in
"printcap_server" is needed to make print filtering work on network
printers, as opposed to printers attached directly to the server
computer via, say, a USB port.

LPD CONTROL FILES

Two files in /etc/lprng/lpd must now be configured, lpd.conf and
lpd.perms.  The ".sample" files are provided by the LPRng distribution
and are quite complex, with many choices.  For most setups, much
simpler versions are satisfactory.  For a client computer, just copy
"lpd.conf.simple" to "lpd.conf" and "lpd.perms.simple" to "lpd.perms".
For a print server which receives print requests from other systems,
uncomment the line "#lpd_listen_port=515" (by removing the "#") and
edit "lpd.perms" to allow access from the desired clients.  You can
either accept requests from a range of IP addresses or from individual
machines, or from a combination of these.  Any number of ACCEPT lines
can be used.

PRINT SPOOL QUEUES

The installation of LPRng creates a directory named "lpd" in /var/spool.
Change to this directory and create subdirectories named after each
of the print queues in the printcap file.  Give these subdirectories
the same owner, group, and permissions as the parent directory, i.e.,
"daemon", "lp", and "700".

SANITY CHECK

At this point run the command "checkpc".  This will do a minimal
sanity check on your configuration and spool queue files.  If it
completes without comment, you are good to go.  Otherwise, address the
issues it raises.

START LPD DAEMON

LPRng runs a daemon in background called "lpd" to manage print
requests.  To start this daemon, type two commands:
   systemctl enable lpd.service
   systemctl start lpd.service
If these complete without complaint, you should be good to go.  If
any configuration files are changed, one must restart the lpd daemon.
Do this with the command
   systemctl restart lpd.service
Note that this LPRng package assumes that systemd is running.  If
some alternate initialization package is used, one must devise an
alternate means of starting the lpd daemon.

USAGE

The "lpr" command is the printing tool in LPRng.  The general form
of use is
   lpr [options] [file_to_be_printed]
If no file is specified, input is accepted on the standard input.
The most useful options are "-P printer" and "-K number_of_copies".
In the absence of the printer option, the environment variable
"PRINTER=name_of_printer" will tell LPRng which printer to use.

Other useful commands are lpq (examine the print queue) and lprm
(remove a print job from the queue).  See the man pages for lpr,
lpq, and lprm.

CUPS AND LPRng

Cups may be used to access a printer on a server from a client machine
on which LPRng is not installed.  The trick is to configure Cups to
access the printer via the lpd protocol.  This is easy to do using the
web interface to Cups.  Also, since the server as set up here does all
necessary print filtering, tell Cups to use the "raw" filter.
Alternative divisions between filtering responsibilities can be devised,
depending on your needs.

PROBLEMS

The filter "pdftops" from the xpdf package is used to create
postscript from PDF files in the print filters.  Occasionally, pdftops
produces bad or no output.  An alternative filter, "pdf2ps" from the
ghostscript package, can be substituted, but this filter has its own
problems.  For a one-shot case, just use pdf2ps or some other
converter to produce postscript and send that to the printer.

Duplex on postscript files is effected in psfilter by inserting a line
of postscript code right after the first line.  For some postscript
files, this doesn't work.  In this case, send the postscript file to a
simplex queue.  Such files are submitted to the printer with no
filtering.
