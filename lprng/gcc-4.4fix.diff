--- src/common/lpd_dispatch.c~	2005-04-14 22:05:18.000000000 +0200
+++ src/common/lpd_dispatch.c	2009-05-09 00:28:56.588433281 +0200
@@ -157,9 +157,16 @@
 	int status;		/* status of operation */
 	int permission;
 	int port = 0;
-	struct sockaddr sinaddr;
+	union {
+		struct sockaddr_storage sa_stor;
+		struct sockaddr sinaddr;
+		struct sockaddr_in sa_in;
+#ifdef AF_INET6
+		struct sockaddr_in6 sa_in6;
+#endif
+	} s;
 
-	memset( &sinaddr, 0, sizeof(sinaddr) );
+	memset( &s, 0, sizeof(s) );
 	Name = "SERVER";
 	setproctitle( "lpd %s", Name );
 	(void) plp_signal (SIGHUP, cleanup );
@@ -182,8 +189,8 @@
 #else
 		int len;
 #endif
-		len = sizeof( sinaddr );
-		if( getpeername( talk, &sinaddr, &len ) ){
+		len = sizeof( s.sinaddr );
+		if( getpeername( talk, &s.sinaddr, &len ) ){
 			LOGERR_DIE(LOG_DEBUG) _("Service_connection: getpeername failed") );
 		}
 	}
@@ -195,7 +202,7 @@
 #ifdef AF_UNIX
 		"AF_UNIX %d"
 #endif
-	"%s" , sinaddr.sa_family,
+	"%s" , s.sinaddr.sa_family,
 #ifdef AF_LOCAL
 	AF_LOCAL,
 #endif
@@ -203,43 +210,43 @@
 	AF_UNIX,
 #endif
 	"");
-	if( sinaddr.sa_family == AF_INET ){
-		port = ((struct sockaddr_in *)&sinaddr)->sin_port;
+	if( s.sinaddr.sa_family == AF_INET ){
+		port = s.sa_in.sin_port;
 #if defined(IPV6)
-	} else if( sinaddr.sa_family == AF_INET6 ){
-		port = ((struct sockaddr_in6 * )&sinaddr)->sin6_port;
+	} else if( s.sinaddr.sa_family == AF_INET6 ){
+		port = s.sa_in6.sin6_port;
 #endif
-	} else if( sinaddr.sa_family == 0
+	} else if( s.sinaddr.sa_family == 0
 #if defined(AF_LOCAL)
-	 	|| sinaddr.sa_family == AF_LOCAL
+	 	|| s.sinaddr.sa_family == AF_LOCAL
 #endif
 #if defined(AF_UNIX)
-	 	|| sinaddr.sa_family == AF_UNIX
+	 	|| s.sinaddr.sa_family == AF_UNIX
 #endif
 		){
 		/* force the localhost address */
 		int len;
-		void *s, *addr;
-		memset( &sinaddr, 0, sizeof(sinaddr) );
+		void *s1, *addr;
+		memset( &s, 0, sizeof(s) );
 		Perm_check.unix_socket = 1;
-	 	sinaddr.sa_family = Localhost_IP.h_addrtype;
+	 	s.sinaddr.sa_family = Localhost_IP.h_addrtype;
 		len = Localhost_IP.h_length;
-		if( sinaddr.sa_family == AF_INET ){
-			addr = &(((struct sockaddr_in *)&sinaddr)->sin_addr);
+		if( s.sinaddr.sa_family == AF_INET ){
+			addr = (void *) &s.sa_in.sin_addr;
 #if defined(IPV6)
-		} else if( sinaddr.sa_family == AF_INET6 ){
-			addr = &(((struct sockaddr_in6 *)&sinaddr)->sin6_addr);
+		} else if( s.sinaddr.sa_family == AF_INET6 ){
+			addr = (void *) &s.sa_in6.sin6_addr;
 #endif
 		} else {
 			FATAL(LOG_INFO) _("Service_connection: BAD LocalHost_IP value"));
 			addr = 0;
 		}
-		s = Localhost_IP.h_addr_list.list[0];
-		memmove(addr,s,len);
+		s1 = Localhost_IP.h_addr_list.list[0];
+		memmove(addr,s1,len);
 	} else {
-		FATAL(LOG_INFO) _("Service_connection: bad protocol family '%d'"), sinaddr.sa_family );
+		FATAL(LOG_INFO) _("Service_connection: bad protocol family '%d'"), s.sinaddr.sa_family );
 	}
-	inet_ntop_sockaddr( &sinaddr, from_addr, sizeof(from_addr) );
+	inet_ntop_sockaddr( &s.sinaddr, from_addr, sizeof(from_addr) );
 	{
 		int len = strlen(from_addr);
 		SNPRINTF(from_addr+len,sizeof(from_addr)-len)" port %d", ntohs(port));
@@ -249,7 +256,7 @@
 
 	/* get the remote name and set up the various checks */
 
-	Get_remote_hostbyaddr( &RemoteHost_IP, &sinaddr, 0 );
+	Get_remote_hostbyaddr( &RemoteHost_IP, &s.sinaddr, 0 );
 	Perm_check.remotehost  =  &RemoteHost_IP;
 	Perm_check.host = &RemoteHost_IP;
 	Perm_check.port =  ntohs(port);
