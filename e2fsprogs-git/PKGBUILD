# Maintainer: Keshav P R <skodabenz aatt rocketmail ddoott ccoomm>
# Contributor: Matt Parnell <parwok aatt gmail ddoott ccoomm>
# Contributor: Ronald van Haren <ronald.archlinux.org> 
# Contributor: judd <jvinet@zeroflux.org>

_pkgname="e2fsprogs"
pkgname="${_pkgname}-git"
pkgver=20110614
pkgrel=1
pkgdesc="Ext2/3/4 filesystem utilities - GIT Version"
arch=('i686' 'x86_64')
license=('GPL' 'LGPL' 'MIT')
url="http://e2fsprogs.sourceforge.net"
groups=('base')
depends=('util-linux')
makedepends=('bc' 'util-linux')
conflicts=("${_pkgname}")
provides=("${_pkgname}")
backup=('etc/mke2fs.conf')
install="${_pkgname}.install"

source=('MIT-LICENSE'
		'mke2fs.conf')
sha256sums=('cc45386c1d71f438ad648fd7971e49e3074ad9dbacf9dd3a5b4cb61fd294ecbb'
			'9c464f161974e0049e31adf42d5d331817dc3a1ff30045bd15cfff8f06038a9d')

_gitroot="git://git.kernel.org/pub/scm/fs/ext2/${_pkgname}.git"
_gitname="${_pkgname}"

update_git() {
	
	cd "${srcdir}"
	
	msg "Connecting to GIT server...."
	
	if [ -d "${srcdir}/${_gitname}/" ]
	then
		cd "${srcdir}/${_gitname}/"
		git reset --hard
		git fetch
		git checkout master
		git merge remotes/origin/master
		msg "The local GIT repo has been updated."
	else
		git clone "${_gitroot}" "${_gitname}"
		msg "GIT checkout done or server timeout"
	fi
	
}

build() {
	
	update_git
	
	cd "${srcdir}/"
	
	rm -rf "${srcdir}/${_gitname}_build" || true
	
	cp -r "${srcdir}/${_gitname}" "${srcdir}/${_gitname}_build"
	cd "${srcdir}/${_gitname}_build"
	
	# Remove unnecessary init.d directory
	sed -i '/init\.d/s|^|#|' "${srcdir}/${_gitname}_build/misc/Makefile.in"
	
	./configure --prefix=/usr --with-root-prefix="" --enable-elf-shlibs \
		--disable-fsck --disable-uuidd \
		--disable-libuuid --disable-libblkid
	
	make
	
}

package() {
	
	cd "${srcdir}/${_gitname}_build"
	make DESTDIR="${pkgdir}" install install-libs
	
	sed -i -e 's/^AWK=.*/AWK=awk/' "${pkgdir}/usr/bin/compile_et"
	
	# remove references to build directory
	sed -i -e 's#^SS_DIR=.*#SS_DIR="/usr/share/ss"#' "${pkgdir}/usr/bin/mk_cmds"
	sed -i -e 's#^ET_DIR=.*#ET_DIR="/usr/share/et"#' "${pkgdir}/usr/bin/compile_et"
	
	# install MIT license
	install -Dm644 "${srcdir}/MIT-LICENSE" "${pkgdir}/usr/share/licenses/${_pkgname}/MIT-LICENSE"
	
}
