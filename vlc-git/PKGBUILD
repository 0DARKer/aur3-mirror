# Maintainer: heaven <vo.zaeb at gmail.com>
# Contributor: Arkham <arkham at archlinux dot us>
# Contributor: MacWolf <macwolf@archlinux.de>
pkgname='vlc-git'
pkgver=20100804
pkgrel=1
pkgdesc='VideoLAN Client is a multi-platform MPEG, VCD/DVD, and DivX player. Development GIT Version.'
arch=('i686' 'x86_64')
url='http://www.videolan.org/vlc/'
license=('GPL')

depends=('a52dec' 'faad2' 'ffmpeg' 'fluidsynth' 'fribidi' 'live-media' 'lua' 'ncurses' 'qt' 'sdl_image'
	'smbclient' 'sysfsutils' 'taglib' 'ttf-freefont' 'xdg-utils' 'zvbi' 'libdvbpsi' 'libdca' 'libproxy'
	'libdvdnav' 'libv4l' 'libmtp' 'libcddb' 'libmatroska' 'libmpcdec' 'libshout' 'libmad' 'libmpeg2'
	'libmodplug' 'libxv' 'libass' 'libcdio' 'libva')
makedepends=('alsa-lib' 'flac' 'git' 'jack' 'lirc-utils' 'libdc1394' 'libnotify' 'libxpm')
optdepends=('vdpau-video: VDPAU backend for VA API (for GPU accelereation on Nvidia cards)'
	'xvba-video:  XvBA backend for VA API (for GPU accelereation on Ati/AMD cards)')

options=('!libtool')
conflicts=('vlc')
provides=('vlc')
install=('vlc-git.install')

source=()
md5sums=()

_gitroot='git://git.videolan.org/vlc.git'
_gitname='vlc'
_buildir=${_gitname}-build

build() {
	cd ${srcdir}

	msg 'Connecting to GIT server...'

	if [ -d ${_gitname} ]; then
		cd ${_gitname} && git pull origin
		cd ..
	else
		git clone ${_gitroot}
	fi

	msg 'GIT checkout done or server timeout.'

	if [ -d ${_buildir} ]; then
		msg 'Cleaning previous build...'
		rm -rf ${_buildir}
	fi

	git clone ${_gitname} ${_buildir}
	cd ${_buildir}

	msg 'Generating necessary files...'

	./bootstrap

	msg 'Generating done.'
	msg 'Configuring VLC...'

	sed -i -e 's:truetype/freefont:TTF:g' modules/misc/freetype.c

	./configure --prefix=/usr \
		--disable-rpath \
		--enable-pvr \
		--enable-v4l \
		--enable-faad \
		--enable-lirc \
		--enable-ncurses \
		--enable-snapshot \
		--enable-realrtsp \
		--enable-dca \
		--enable-merge-ffmpeg \
		--enable-nls \
		--enable-dbus-control \
		--with-live555-tree=/usr/lib/live

	CFLAGS="$CFLAGS -fPIC"

	msg 'Starting make...'

	make || return 1
	make DESTDIR=${pkgdir} install || return 1

	rm -rf ${srcdir}/${_buildir}
}
