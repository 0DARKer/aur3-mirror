# Maintainer: heaven <aheaven87 at gmail dot com>
# Contributor: graysky <graysky at archlinux dot us>
# Contributor: Arkham <arkham at archlinux dot us>
# Contributor: MacWolf <macwolf at archlinux dot de>

pkgname='vlc-git'
pkgver=20130401
pkgrel=1
pkgdesc='A multi-platform MPEG, VCD/DVD, and DivX player. Development GIT Version.'
arch=('i686' 'x86_64')
url='http://www.videolan.org/vlc/'
license=('LGPL2.1' 'GPL2')
depends=('a52dec' 'libdvbpsi' 'libxpm' 'libdca' 'qt4' 'libproxy'
         'sdl_image' 'libdvdnav' 'libtiger' 'lua51' 'libmatroska'
         'zvbi' 'taglib' 'libmpcdec' 'ffmpeg' 'faad2' 'libupnp'
         'libshout' 'libmad' 'libmpeg2' 'libmodplug' 'libass'
         'xcb-util-keysyms')
makedepends=('live-media' 'libnotify' 'libbluray' 'flac' 'kdelibs'
             'fluidsynth' 'libdc1394' 'libavc1394' 'lirc-utils'
             'libcaca' 'librsvg' 'portaudio' 'libgme' 'xosd'
             'projectm' 'twolame' 'aalib' 'libmtp' 'libdvdcss'
             'gnome-vfs' 'libgoom2' 'libtar' 'vcdimager' 'opus' 'libssh2'
             'mesa' 'git' 'smbclient' 'libva')
optdepends=('avahi: for service discovery using bonjour protocol'
            'libnotify: for notification plugin'
            'ncurses: for ncurses interface support'
            'libdvdcss: for decoding encrypted DVDs'
            'lirc-utils: for lirc plugin'
            'libavc1394: for devices using the 1394ta AV/C'
            'libdc1394: for IEEE 1394 plugin'
            'kdelibs: KDE Solid hardware integration'
            'libva-vdpau-driver: vdpau back-end for nvidia'
            'libva-intel-driver: back-end for intel cards'
            'libbluray: for Blu-Ray support'
            'flac: for Free Lossless Audio Codec plugin'
            'portaudio: for portaudio support'
            'twolame: for TwoLAME mpeg2 encoder plugin'
            'projectm: for ProjectM visualisation plugin'
            'libcaca: for colored ASCII art video output'
            'libgme: for libgme plugin'
            'librsvg: for SVG plugin'
            'gnome-vfs: for GNOME Virtual File System support'
            'libgoom2: for libgoom plugin'
            'vcdimager: navigate VCD with libvcdinfo'
            'xosd: for xosd support'
            'aalib: for ASCII art plugin'
            'libmtp: for MTP devices support'
            'fluidsynth: for synthesizer MIDI FluidSynth'
            'smbclient: for SMB access plugin'
            'libcdio: for audio CD playback support'
            'ttf-freefont: for subtitle font '
            'ttf-dejavu: for subtitle font'
            'opus: for opus support'
            'libssh2: for sftp support')
conflicts=('vlc', 'vlc-stable-git')
provides='vlc'

backup=('usr/share/vlc/lua/http/.hosts'
        'usr/share/vlc/lua/http/dialogs/.hosts')

options=('!libtool' '!emptydirs')

install='vlc-git.install'

_gitroot='git://git.videolan.org/vlc.git'
_gitname='vlc'
_buildir=${_gitname}-build

build() {
  cd ${srcdir}

  msg 'Connecting to GIT server...'

  if [ -d ${_gitname} ]; then
    cd ${_gitname} && git pull origin
    cd ..
  else
    git clone ${_gitroot}
  fi

  msg 'GIT checkout done or server timeout.'

  if [ -d ${_buildir} ]; then
    msg 'Cleaning up previous build...'
    rm -rf ${_buildir}
  fi

  git clone ${_gitname} ${_buildir}
  cd ${_buildir}

  msg 'Generating necessary files...'

  sed -i -e 's:truetype/freefont:TTF:g' modules/text_renderer/freetype.c
  sed -i -e 's:truetype/ttf-dejavu:TTF:g' modules/visualization/projectm.cpp

  ./bootstrap

  msg 'Done. Configuring VLC...'

  ./configure --prefix=/usr \
              --sysconfdir=/etc \
              --enable-lirc \
              --enable-realrtsp \
              --enable-aa \
              --enable-vcdx \
              --enable-wma-fixed \
              --enable-merge-ffmpeg \
              --disable-rpath \
              --disable-lua \
              RCC=/usr/bin/rcc-qt4

              # LUAC=luac5.1 \

  msg 'Done. Starting make...'

  make CFLAGS="$CFLAGS -fPIC"
}

package() {
  cd ${_buildir}

  make CFLAGS="$CFLAGS -fPIC" DESTDIR="${pkgdir}" install

  rm -rf ${srcdir}/${_buildir}
}
