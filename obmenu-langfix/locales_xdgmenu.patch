reverted:
--- src-orig/obmenu-1.0/pipes/obm-xdg	2012-07-17 12:41:55.610235218 +0200
+++ src/obmenu-1.0/pipes/obm-xdg	2012-07-17 13:40:47.027770291 +0200
@@ -22,6 +22,44 @@
 #
 
 import xml.dom.minidom, obxml, os, sys, time
+class LocaleName:
+   MATCH_NONE=0
+   MATCH_LANG=1
+   MATCH_COUNTRY=2
+   MATCH_ENCODING=3
+   def __init__(self,string):
+      self.country=None
+      self.lang=None
+      self.encoding=None
+      if string == None:
+         return
+      lang=string.split('.')
+      if len(lang) == 2:
+         self.encoding=lang[1]
+         lang=lang[0]
+      elif len(lang) == 1:
+         lang=lang[0]
+      else:
+         return
+      lang=string.split('_')
+      if len(lang) == 2:
+         self.lang=lang[0]
+         self.country=lang[1]
+      elif len(lang) == 1:
+         self.lang=lang[0]
+      else:
+         return
+   def match_with(self,other):
+     if (self.lang == None) or self.lang==other.lang:
+        if (self.country == None) or self.country==other.country:
+           if (self.encoding == None) or self.encoding==other.encoding:
+              return LocaleName.MATCH_ENCODING
+           else:
+              return LocaleName.MATCH_COUNTRY
+        else:
+           return LocaleName.MATCH_LANG
+     else:
+        return LocaleName.MATCH_NONE
 
 class XdgMenu:
 	
@@ -185,20 +223,8 @@
 	
 	def parseDirectoryFile(self, filename, language):
 		title = ""
+		accuracy = 0 # 0=no match 1=any match 2=destination language is None 3=LANG 4=COUNTRY
+		wanted_locale=LocaleName(language)
-		accuracy = 0
-		
-		if language:
-			l = language.split(".")[0].split("_")
-			if len(l) == 2:
-				lang_major = l[0]
-				lang_minor = l[1]
-			else:
-				lang_major = l[0]
-				lang_minor = None
-		else:
-			lang_major = "en"
-			lang_minor = None
-
 		for line in open(filename):
 			i = line.split("=")[0].lower()
 			n = line.find("=")
@@ -209,16 +235,22 @@
 				else:
 					lang = None
 
+				if lang == None:
+					if accuracy< 2:
+						title=name
+						accuracy=2
+					else:
+						lang=LocaleName(lang)
+						match=wanted_locale.match_with(lang)
+						if (match==LocaleName.MATCH_LANG) and (accuracy<3):
+							title = name
+							accuracy = 3
+						elif ((match==LocaleName.MATCH_COUNTRY) or (match==LocaleName.MATCH_ENCODING)) and (accuracy<4):
+								title = name
+								accuracy = 4
+						elif (title == "") and (accuracy<1):
+								accuracy = 1
+								title = name
-				if lang:
-					if lang_major in lang and (title == "" or accuracy < 2):
-						title = name
-						accuracy = 2
-					if lang_minor and lang_major in lang and lang_minor in lang:
-						title = name
-						accuracy = 3
-				elif title == "":
-						accuracy = 1
-						title = name
 		return unicode(title.strip() ,"utf-8")
 	
 	def parseDesktopFile(self, filename, language):
@@ -228,16 +260,9 @@
 		accuracy = 0
 		
 		if language:
+			wanted_locale=LocaleName(language)
-			l = language.split(".")[0].split("_")
-			if len(l) == 2:
-				lang_major = l[0]
-				lang_minor = l[1]
-			else:
-				lang_major = l[0]
-				lang_minor = None
 		else:
+			wanted_locale=LocaleName("en")
-			lang_major = "en"
-			lang_minor = None
 
 		for line in open(filename):
 			i = line.split("=")[0].lower()
@@ -249,17 +274,22 @@
 				else:
 					lang = None
 
+				if lang == None:
+					if accuracy< 2:
+						title=name
+						accuracy=2
+					else:
+						lang=LocaleName(lang)
+						match=wanted_locale.match_with(lang)
+						if (match==LocaleName.MATCH_LANG) and (accuracy<3):
+							title = name
+							accuracy = 3
+						elif ((match==LocaleName.MATCH_COUNTRY) or (match==LocaleName.MATCH_ENCODING)) and (accuracy<4):
+								title = name
+								accuracy = 4
+						elif (title == "") and (accuracy<1):
+								accuracy = 1
+								title = name
-				if lang:
-					if lang_major in lang and (title == "" or accuracy < 2):
-						title = name
-						accuracy = 2
-					if lang_minor and lang_major in lang and lang_minor in lang:
-						title = name
-						accuracy = 3
-				elif title == "":
-						accuracy = 1
-						title = name
-
 			elif i == "exec":
 				exe = ""
 				jump = False
