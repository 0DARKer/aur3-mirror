# Maintainer: Michael Witten <mfwitten>

# The following revision compiles and works:
#   80d5d53f301e7a3c831418368b2ee1a6c20c3ce8

# The various phases of the build can be controlled
# with the following variables (use an empty value
# to mean false; if you're hacking on the source,
# I RECOMMEND skipping the _clean phase):

_source=yes
_clean=yes
_config=yes
_compile=yes
_test=yes
_install=yes
#_install=          # do not install

######################################################################

pkgname=bup-git
pkgver=20130106
pkgrel=1
pkgdesc="Backup tool (built from git repo); it handles many very large files"

arch=(i686 x86_64)
url=https://github.com/apenwarr/bup
license=(GPL)

provides=(bup)
conflicts=(bup)

depends=(

  git
  python2
  python2-fuse
  python2-pyxattr
  pylibacl

  par2cmdline

)

makedepends=(

  #pandoc Currrently the pre-generated docs are used.

)

options=('!strip')

_gitroot=https://github.com/bup/bup.git
_gitname=repo

build()
{
  #### Source ####

    if [[ $_source ]]; then

      msg "Preparing source ..."

      if [[ -d $srcdir/$_gitname ]]; then

        cd "$srcdir/$_gitname"
        git pull "$_gitroot"
        msg "The local files are updated."

      else

        cd "$srcdir"
        git clone "$_gitroot" "$_gitname"

      fi

    fi

  #### Clean ####

    if [[ $_clean ]]; then

      msg "Cleaning ..."
      cd "$srcdir/$_gitname"
      git reset --hard HEAD
      git clean -fdx

    fi

  #### Configure ####

    if [[ $_config ]]; then

      msg "Configuring ..."

      cd "$srcdir/$_gitname"

      find . -type f -exec sed -i -e '1s/env python\b/env python2/' {} +

      sed -i -e 's/acLookFor python\b/acLookFor python2/' \
             -e 's/MF_PATH_INCLUDE PYTHON python\b/MF_PATH_INCLUDE PYTHON python2/' \
             config/configure

      sed -i -e 's/PYTHON=python\b/PYTHON=python2/' -e '/docs-available/d' Makefile

      sed -i -e 's/python -c/python2 -c/' t/test-meta.sh

    fi

  #### Compile ####

    if [[ $_compile ]]; then
    
      msg "Compiling ..."
      cd "$srcdir/$_gitname"
      make all import-docs

    fi

  #### Test ####

    if [[ $_test ]]; then
    
      msg "Testing ..."
      cd "$srcdir/$_gitname"
      make test

    fi
}

package()
{
  #### Install  ####

    if [[ $_install ]]; then
    
      msg "Installing ..."
      cd "$srcdir/$_gitname"
      make DESTDIR="$pkgdir" install

    fi
}
