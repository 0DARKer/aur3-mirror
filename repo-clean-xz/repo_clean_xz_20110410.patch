diff -ur repo-clean-0.1.3.orig/Sconstruct repo-clean-0.1.3/Sconstruct
--- repo-clean-0.1.3.orig/Sconstruct	2009-06-03 23:19:34.000000000 +0600
+++ repo-clean-0.1.3/Sconstruct	2011-04-10 00:20:12.840000656 +0600
@@ -22,7 +22,7 @@
 else:
     ccflags += release_flags
 
-BuildDir('build', 'src', duplicate=0)
+VariantDir('build', 'src', duplicate=0)
 
 env = Environment()
 
diff -ur repo-clean-0.1.3.orig/src/repo-clean.cpp repo-clean-0.1.3/src/repo-clean.cpp
--- repo-clean-0.1.3.orig/src/repo-clean.cpp	2009-06-03 23:19:34.000000000 +0600
+++ repo-clean-0.1.3/src/repo-clean.cpp	2011-04-10 00:19:03.906667320 +0600
@@ -105,6 +105,7 @@
 #define BOOST_VERSION_SUBMINOR BOOST_VERSION % 100
 
 std::string package_suffix = ".pkg.tar.gz";
+std::string package_suffix2 = ".pkg.tar.xz";
 clean_mode mode = MODE_DRY;
 move_to_existig_mode move_mode = MODE_ERROR;
 messages_level msgs = MSG_VERBOSE;
@@ -619,9 +620,12 @@
 #if BOOST_VERSION_MAJOR <= 1 and BOOST_VERSION_MINOR < 36
                     string_list sublist = build_pkg_list(source_directory + "/" + dir_iter->leaf(),
                             recursive);
-#else
+#elseif BOOST_VERSION_MAJOR <= 1 and BOOST_VERSION_MINOR >= 36 and BOOST_VERSION_MINOR < 46
                     string_list sublist = build_pkg_list(source_directory + "/" + dir_iter->filename(),
                             recursive);
+#else //BOOST_VERSION_MAJOR <= 1 and BOOST_VERSION_MINOR >= 46
+                    string_list sublist = build_pkg_list(source_directory + "/" + dir_iter->path().filename().string(),
+                            recursive);
 #endif
                     list.insert(list.end(), sublist.begin(), sublist.end());
                 }
@@ -629,14 +633,23 @@
                 {
 #if BOOST_VERSION_MAJOR <= 1 and BOOST_VERSION_MINOR < 36
                     std::string name = dir_iter->leaf();
-#else
+#elseif BOOST_VERSION_MAJOR <= 1 and BOOST_VERSION_MINOR >= 36 and BOOST_VERSION_MINOR < 46
                     std::string name = dir_iter->filename();
+#else //BOOST_VERSION_MAJOR <= 1 and BOOST_VERSION_MINOR >= 46
+                    std::string name = dir_iter->path().filename().string();
 #endif
                     if ((int)name.find(package_suffix) > 0 && (name.length()
                             - name.find(package_suffix) == package_suffix.length()))
                     {
                         list.push_back(source_directory + "/" + name);
                     }
+
+                    if ((int)name.find(package_suffix2) > 0 && (name.length()
+                            - name.find(package_suffix2) == package_suffix.length()))
+                    {
+                        list.push_back(source_directory + "/" + name);
+                    }
+
                 }
             }
         }
