diff -crB nurbs++-3.0.11/nurbs/nurbsGL.cpp nurbs++-3.0.11-mod/nurbs/nurbsGL.cpp
*** nurbs++-3.0.11/nurbs/nurbsGL.cpp	2012-03-19 10:47:47.649219849 +0200
--- nurbs++-3.0.11-mod/nurbs/nurbsGL.cpp	2012-03-19 10:37:52.019113322 +0200
***************
*** 1465,1471 ****
    //  openByType = OPENCURVEARRAY ;      
    //}
    //else{
!   ext = strstr(filename,".n()c") ;
    if(ext){
      temp = new NurbsCurveGL ;
      if(temp->read(filename)){
--- 1465,1473 ----
    //  openByType = OPENCURVEARRAY ;      
    //}
    //else{
!   char* file;
!   file = const_cast<char*>(filename);
!   ext = strstr(file,".n()c") ;
    if(ext){
      temp = new NurbsCurveGL ;
      if(temp->read(filename)){
***************
*** 1476,1482 ****
        delete temp ;
    }
    else{
!     ext = strstr(filename,".n()s") ;
      if(ext){
        temp = new NurbsSurfaceGL ;
        if(temp->read(filename)){
--- 1478,1484 ----
        delete temp ;
    }
    else{
!     ext = strstr(file,".n()s") ;
      if(ext){
        temp = new NurbsSurfaceGL ;
        if(temp->read(filename)){
Only in nurbs++-3.0.11/nurbs: nurbs_global.h
diff -crB nurbs++-3.0.11/nurbs/nurbs.h nurbs++-3.0.11-mod/nurbs/nurbs.h
*** nurbs++-3.0.11/nurbs/nurbs.h	2002-05-14 00:07:46.000000000 +0300
--- nurbs++-3.0.11-mod/nurbs/nurbs.h	2012-03-19 10:37:54.102435369 +0200
***************
*** 105,112 ****
        
        // Basis functions
        T basisFun(T u, int i, int p=-1) const ;
!       void basisFuns(T u, int span, Vector<T>& N) const ;
!       void dersBasisFuns(int n,T u, int span, Matrix<T>& N) const;
        
        // Knot functions
        T minKnot() const //! the minimal value for the knot vector
--- 105,112 ----
        
        // Basis functions
        T basisFun(T u, int i, int p=-1) const ;
!       void basisFuns(T u, int span, Vector<T>& M) const ;
!       void dersBasisFuns(int n,T u, int span, Matrix<T>& M) const;
        
        // Knot functions
        T minKnot() const //! the minimal value for the knot vector
diff -crB nurbs++-3.0.11/nurbs/nurbsS.cpp nurbs++-3.0.11-mod/nurbs/nurbsS.cpp
*** nurbs++-3.0.11/nurbs/nurbsS.cpp	2012-03-19 10:47:47.629219958 +0200
--- nurbs++-3.0.11-mod/nurbs/nurbsS.cpp	2012-03-19 10:37:52.019113322 +0200
***************
*** 4082,4089 ****
  
    char front[1024] ;
  
!   char *ext ;
!   ext = strstr(filename,".rib") ;
    if(ext){
      for(i=0;i<1024;++i){
        if(&filename[i] == ext)
--- 4082,4090 ----
  
    char front[1024] ;
  
!   char *ext, *file;
!   file = const_cast<char*>(filename);
!   ext = strstr(file,".rib") ;
    if(ext){
      for(i=0;i<1024;++i){
        if(&filename[i] == ext)
diff -crB nurbs++-3.0.11/nurbs/nurbsS.h nurbs++-3.0.11-mod/nurbs/nurbsS.h
*** nurbs++-3.0.11/nurbs/nurbsS.h	2002-05-14 00:07:46.000000000 +0300
--- nurbs++-3.0.11-mod/nurbs/nurbsS.h	2012-03-19 10:37:54.102435369 +0200
***************
*** 99,106 ****
    virtual HPoint_nD<T,N> operator()(T u, T v) const ;
  
    void basisFuns(T u, T v, int spanU, int spanV, Vector<T>& Nu, Vector<T>& Nv) const ;
!   void basisFunsU(T u, int span, Vector<T>& N) const ;
!   void basisFunsV(T u, int span, Vector<T>& N) const ;
    void dersBasisFuns(T u, T v, int dU, int dV,int uspan, int vspan,Matrix<T> & Niku, Matrix<T>& Njkv ) const ; 
  
    // Derivative functions
--- 99,106 ----
    virtual HPoint_nD<T,N> operator()(T u, T v) const ;
  
    void basisFuns(T u, T v, int spanU, int spanV, Vector<T>& Nu, Vector<T>& Nv) const ;
!   void basisFunsU(T u, int span, Vector<T>& M) const ;
!   void basisFunsV(T u, int span, Vector<T>& M) const ;
    void dersBasisFuns(T u, T v, int dU, int dV,int uspan, int vspan,Matrix<T> & Niku, Matrix<T>& Njkv ) const ; 
  
    // Derivative functions
***************
*** 135,142 ****
    int skinU(NurbsCurveArray<T,N>& ca, int degU);
    void sweep(const NurbsCurve<T,N>& t, const NurbsCurve<T,N>& C, const NurbsCurve<T,N>& Sv, int K,int useAy=0, int invAz=0) ;
    void sweep(const NurbsCurve<T,N>& t, const NurbsCurve<T,N>& C, int K,int useAy=0, int invAz=0) ;
!   void makeFromRevolution(const NurbsCurve<T,N>& profile, const Point_nD<T,N>& S, const Point_nD<T,N>& T, double theta) ;
!   void makeFromRevolution(const NurbsCurve<T,N>& profile, const Point_nD<T,N>& S, const Point_nD<T,N>& T) ;
    void makeFromRevolution(const NurbsCurve<T,N>& profile) ;
  
    void makeSphere(const Point_nD<T,N>& O, T r) ; 
--- 135,142 ----
    int skinU(NurbsCurveArray<T,N>& ca, int degU);
    void sweep(const NurbsCurve<T,N>& t, const NurbsCurve<T,N>& C, const NurbsCurve<T,N>& Sv, int K,int useAy=0, int invAz=0) ;
    void sweep(const NurbsCurve<T,N>& t, const NurbsCurve<T,N>& C, int K,int useAy=0, int invAz=0) ;
!   void makeFromRevolution(const NurbsCurve<T,N>& profile, const Point_nD<T,N>& S, const Point_nD<T,N>& U, double theta) ;
!   void makeFromRevolution(const NurbsCurve<T,N>& profile, const Point_nD<T,N>& S, const Point_nD<T,N>& U) ;
    void makeFromRevolution(const NurbsCurve<T,N>& profile) ;
  
    void makeSphere(const Point_nD<T,N>& O, T r) ; 

