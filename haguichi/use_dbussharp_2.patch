diff -urB haguichi-1.0.26-dbus10/configure haguichi-1.0.26-dbus20/configure
--- haguichi-1.0.26-dbus10/configure	2015-03-18 20:48:52.000000000 +0100
+++ haguichi-1.0.26-dbus20/configure	2015-03-18 20:52:16.000000000 +0100
@@ -583,10 +583,10 @@
 
 ac_subst_vars='LTLIBOBJS
 LIBOBJS
-DBUS_SHARP_GLIB_10_LIBS
-DBUS_SHARP_GLIB_10_CFLAGS
-DBUS_SHARP_10_LIBS
-DBUS_SHARP_10_CFLAGS
+DBUS_SHARP_GLIB_20_LIBS
+DBUS_SHARP_GLIB_20_CFLAGS
+DBUS_SHARP_20_LIBS
+DBUS_SHARP_20_CFLAGS
 GLIB_SHARP_20_LIBS
 GLIB_SHARP_20_CFLAGS
 GCONF_SHARP_20_LIBS
@@ -696,10 +696,10 @@
 GCONF_SHARP_20_LIBS
 GLIB_SHARP_20_CFLAGS
 GLIB_SHARP_20_LIBS
-DBUS_SHARP_10_CFLAGS
-DBUS_SHARP_10_LIBS
-DBUS_SHARP_GLIB_10_CFLAGS
-DBUS_SHARP_GLIB_10_LIBS'
+DBUS_SHARP_20_CFLAGS
+DBUS_SHARP_20_LIBS
+DBUS_SHARP_GLIB_20_CFLAGS
+DBUS_SHARP_GLIB_20_LIBS'
 
 
 # Initialize some variables set by options.
@@ -1344,14 +1344,14 @@
               C compiler flags for GLIB_SHARP_20, overriding pkg-config
   GLIB_SHARP_20_LIBS
               linker flags for GLIB_SHARP_20, overriding pkg-config
-  DBUS_SHARP_10_CFLAGS
-              C compiler flags for DBUS_SHARP_10, overriding pkg-config
-  DBUS_SHARP_10_LIBS
-              linker flags for DBUS_SHARP_10, overriding pkg-config
-  DBUS_SHARP_GLIB_10_CFLAGS
-              C compiler flags for DBUS_SHARP_GLIB_10, overriding pkg-config
-  DBUS_SHARP_GLIB_10_LIBS
-              linker flags for DBUS_SHARP_GLIB_10, overriding pkg-config
+  DBUS_SHARP_20_CFLAGS
+              C compiler flags for DBUS_SHARP_20, overriding pkg-config
+  DBUS_SHARP_20_LIBS
+              linker flags for DBUS_SHARP_20, overriding pkg-config
+  DBUS_SHARP_GLIB_20_CFLAGS
+              C compiler flags for DBUS_SHARP_GLIB_20, overriding pkg-config
+  DBUS_SHARP_GLIB_20_LIBS
+              linker flags for DBUS_SHARP_GLIB_20, overriding pkg-config
 
 Use these variables to override the choices made by `configure' or to help
 it to find libraries and programs with nonstandard names/locations.
@@ -3088,19 +3088,19 @@
 fi
 
 pkg_failed=no
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for DBUS_SHARP_10" >&5
-$as_echo_n "checking for DBUS_SHARP_10... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for DBUS_SHARP_20" >&5
+$as_echo_n "checking for DBUS_SHARP_20... " >&6; }
 
-if test -n "$DBUS_SHARP_10_CFLAGS"; then
-    pkg_cv_DBUS_SHARP_10_CFLAGS="$DBUS_SHARP_10_CFLAGS"
+if test -n "$DBUS_SHARP_20_CFLAGS"; then
+    pkg_cv_DBUS_SHARP_20_CFLAGS="$DBUS_SHARP_20_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"dbus-sharp-1.0\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "dbus-sharp-1.0") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"dbus-sharp-2.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "dbus-sharp-2.0") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_DBUS_SHARP_10_CFLAGS=`$PKG_CONFIG --cflags "dbus-sharp-1.0" 2>/dev/null`
+  pkg_cv_DBUS_SHARP_20_CFLAGS=`$PKG_CONFIG --cflags "dbus-sharp-2.0" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -3108,16 +3108,16 @@
  else
     pkg_failed=untried
 fi
-if test -n "$DBUS_SHARP_10_LIBS"; then
-    pkg_cv_DBUS_SHARP_10_LIBS="$DBUS_SHARP_10_LIBS"
+if test -n "$DBUS_SHARP_20_LIBS"; then
+    pkg_cv_DBUS_SHARP_20_LIBS="$DBUS_SHARP_20_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"dbus-sharp-1.0\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "dbus-sharp-1.0") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"dbus-sharp-2.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "dbus-sharp-2.0") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_DBUS_SHARP_10_LIBS=`$PKG_CONFIG --libs "dbus-sharp-1.0" 2>/dev/null`
+  pkg_cv_DBUS_SHARP_20_LIBS=`$PKG_CONFIG --libs "dbus-sharp-2.0" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -3138,22 +3138,22 @@
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        DBUS_SHARP_10_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "dbus-sharp-1.0" 2>&1`
+	        DBUS_SHARP_20_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "dbus-sharp-2.0" 2>&1`
         else
-	        DBUS_SHARP_10_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "dbus-sharp-1.0" 2>&1`
+	        DBUS_SHARP_20_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "dbus-sharp-2.0" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
-	echo "$DBUS_SHARP_10_PKG_ERRORS" >&5
+	echo "$DBUS_SHARP_20_PKG_ERRORS" >&5
 
-	as_fn_error $? "Package requirements (dbus-sharp-1.0) were not met:
+	as_fn_error $? "Package requirements (dbus-sharp-2.0) were not met:
 
-$DBUS_SHARP_10_PKG_ERRORS
+$DBUS_SHARP_20_PKG_ERRORS
 
 Consider adjusting the PKG_CONFIG_PATH environment variable if you
 installed software in a non-standard prefix.
 
-Alternatively, you may set the environment variables DBUS_SHARP_10_CFLAGS
-and DBUS_SHARP_10_LIBS to avoid the need to call pkg-config.
+Alternatively, you may set the environment variables DBUS_SHARP_20_CFLAGS
+and DBUS_SHARP_20_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details." "$LINENO" 5
 elif test $pkg_failed = untried; then
      	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
@@ -3164,34 +3164,34 @@
 is in your PATH or set the PKG_CONFIG environment variable to the full
 path to pkg-config.
 
-Alternatively, you may set the environment variables DBUS_SHARP_10_CFLAGS
-and DBUS_SHARP_10_LIBS to avoid the need to call pkg-config.
+Alternatively, you may set the environment variables DBUS_SHARP_20_CFLAGS
+and DBUS_SHARP_20_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details.
 
 To get pkg-config, see <http://pkg-config.freedesktop.org/>.
 See \`config.log' for more details" "$LINENO" 5; }
 else
-	DBUS_SHARP_10_CFLAGS=$pkg_cv_DBUS_SHARP_10_CFLAGS
-	DBUS_SHARP_10_LIBS=$pkg_cv_DBUS_SHARP_10_LIBS
+	DBUS_SHARP_20_CFLAGS=$pkg_cv_DBUS_SHARP_20_CFLAGS
+	DBUS_SHARP_20_LIBS=$pkg_cv_DBUS_SHARP_20_LIBS
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
 fi
 
 pkg_failed=no
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for DBUS_SHARP_GLIB_10" >&5
-$as_echo_n "checking for DBUS_SHARP_GLIB_10... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for DBUS_SHARP_GLIB_20" >&5
+$as_echo_n "checking for DBUS_SHARP_GLIB_20... " >&6; }
 
-if test -n "$DBUS_SHARP_GLIB_10_CFLAGS"; then
-    pkg_cv_DBUS_SHARP_GLIB_10_CFLAGS="$DBUS_SHARP_GLIB_10_CFLAGS"
+if test -n "$DBUS_SHARP_GLIB_20_CFLAGS"; then
+    pkg_cv_DBUS_SHARP_GLIB_20_CFLAGS="$DBUS_SHARP_GLIB_20_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"dbus-sharp-glib-1.0\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "dbus-sharp-glib-1.0") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"dbus-sharp-glib-2.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "dbus-sharp-glib-2.0") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_DBUS_SHARP_GLIB_10_CFLAGS=`$PKG_CONFIG --cflags "dbus-sharp-glib-1.0" 2>/dev/null`
+  pkg_cv_DBUS_SHARP_GLIB_20_CFLAGS=`$PKG_CONFIG --cflags "dbus-sharp-glib-2.0" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -3199,16 +3199,16 @@
  else
     pkg_failed=untried
 fi
-if test -n "$DBUS_SHARP_GLIB_10_LIBS"; then
-    pkg_cv_DBUS_SHARP_GLIB_10_LIBS="$DBUS_SHARP_GLIB_10_LIBS"
+if test -n "$DBUS_SHARP_GLIB_20_LIBS"; then
+    pkg_cv_DBUS_SHARP_GLIB_20_LIBS="$DBUS_SHARP_GLIB_20_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"dbus-sharp-glib-1.0\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "dbus-sharp-glib-1.0") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"dbus-sharp-glib-2.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "dbus-sharp-glib-2.0") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_DBUS_SHARP_GLIB_10_LIBS=`$PKG_CONFIG --libs "dbus-sharp-glib-1.0" 2>/dev/null`
+  pkg_cv_DBUS_SHARP_GLIB_20_LIBS=`$PKG_CONFIG --libs "dbus-sharp-glib-2.0" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -3229,22 +3229,22 @@
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        DBUS_SHARP_GLIB_10_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "dbus-sharp-glib-1.0" 2>&1`
+	        DBUS_SHARP_GLIB_20_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "dbus-sharp-glib-2.0" 2>&1`
         else
-	        DBUS_SHARP_GLIB_10_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "dbus-sharp-glib-1.0" 2>&1`
+	        DBUS_SHARP_GLIB_20_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "dbus-sharp-glib-2.0" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
-	echo "$DBUS_SHARP_GLIB_10_PKG_ERRORS" >&5
+	echo "$DBUS_SHARP_GLIB_20_PKG_ERRORS" >&5
 
-	as_fn_error $? "Package requirements (dbus-sharp-glib-1.0) were not met:
+	as_fn_error $? "Package requirements (dbus-sharp-glib-2.0) were not met:
 
-$DBUS_SHARP_GLIB_10_PKG_ERRORS
+$DBUS_SHARP_GLIB_20_PKG_ERRORS
 
 Consider adjusting the PKG_CONFIG_PATH environment variable if you
 installed software in a non-standard prefix.
 
-Alternatively, you may set the environment variables DBUS_SHARP_GLIB_10_CFLAGS
-and DBUS_SHARP_GLIB_10_LIBS to avoid the need to call pkg-config.
+Alternatively, you may set the environment variables DBUS_SHARP_GLIB_20_CFLAGS
+and DBUS_SHARP_GLIB_20_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details." "$LINENO" 5
 elif test $pkg_failed = untried; then
      	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
@@ -3255,15 +3255,15 @@
 is in your PATH or set the PKG_CONFIG environment variable to the full
 path to pkg-config.
 
-Alternatively, you may set the environment variables DBUS_SHARP_GLIB_10_CFLAGS
-and DBUS_SHARP_GLIB_10_LIBS to avoid the need to call pkg-config.
+Alternatively, you may set the environment variables DBUS_SHARP_GLIB_20_CFLAGS
+and DBUS_SHARP_GLIB_20_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details.
 
 To get pkg-config, see <http://pkg-config.freedesktop.org/>.
 See \`config.log' for more details" "$LINENO" 5; }
 else
-	DBUS_SHARP_GLIB_10_CFLAGS=$pkg_cv_DBUS_SHARP_GLIB_10_CFLAGS
-	DBUS_SHARP_GLIB_10_LIBS=$pkg_cv_DBUS_SHARP_GLIB_10_LIBS
+	DBUS_SHARP_GLIB_20_CFLAGS=$pkg_cv_DBUS_SHARP_GLIB_20_CFLAGS
+	DBUS_SHARP_GLIB_20_LIBS=$pkg_cv_DBUS_SHARP_GLIB_20_LIBS
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
diff -urB haguichi-1.0.26-dbus10/configure.ac haguichi-1.0.26-dbus20/configure.ac
--- haguichi-1.0.26-dbus10/configure.ac	2015-03-18 20:48:50.000000000 +0100
+++ haguichi-1.0.26-dbus20/configure.ac	2015-03-18 20:52:15.000000000 +0100
@@ -50,8 +50,8 @@
 PKG_CHECK_MODULES([NOTIFY_SHARP], [notify-sharp])
 PKG_CHECK_MODULES([GCONF_SHARP_20], [gconf-sharp-2.0])
 PKG_CHECK_MODULES([GLIB_SHARP_20], [glib-sharp-2.0])
-PKG_CHECK_MODULES([DBUS_SHARP_10], [dbus-sharp-1.0])
-PKG_CHECK_MODULES([DBUS_SHARP_GLIB_10], [dbus-sharp-glib-1.0])
+PKG_CHECK_MODULES([DBUS_SHARP_20], [dbus-sharp-2.0])
+PKG_CHECK_MODULES([DBUS_SHARP_GLIB_20], [dbus-sharp-glib-2.0])
 
 dnl package checks, per config
 
diff -urB haguichi-1.0.26-dbus10/Haguichi.make haguichi-1.0.26-dbus20/Haguichi.make
--- haguichi-1.0.26-dbus10/Haguichi.make	2015-03-18 20:48:50.000000000 +0100
+++ haguichi-1.0.26-dbus20/Haguichi.make	2015-03-18 20:52:15.000000000 +0100
@@ -544,8 +544,8 @@
 	$(NOTIFY_SHARP_LIBS) \
 	$(GCONF_SHARP_20_LIBS) \
 	$(GLIB_SHARP_20_LIBS) \
-	$(DBUS_SHARP_10_LIBS) \
-	$(DBUS_SHARP_GLIB_10_LIBS)
+	$(DBUS_SHARP_20_LIBS) \
+	$(DBUS_SHARP_GLIB_20_LIBS)
 
 DLL_REFERENCES = 
 
diff -urB haguichi-1.0.26-dbus10/Makefile.in haguichi-1.0.26-dbus20/Makefile.in
--- haguichi-1.0.26-dbus10/Makefile.in	2015-03-18 20:48:52.000000000 +0100
+++ haguichi-1.0.26-dbus20/Makefile.in	2015-03-18 20:52:16.000000000 +0100
@@ -309,10 +309,10 @@
 AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CYGPATH_W = @CYGPATH_W@
-DBUS_SHARP_10_CFLAGS = @DBUS_SHARP_10_CFLAGS@
-DBUS_SHARP_10_LIBS = @DBUS_SHARP_10_LIBS@
-DBUS_SHARP_GLIB_10_CFLAGS = @DBUS_SHARP_GLIB_10_CFLAGS@
-DBUS_SHARP_GLIB_10_LIBS = @DBUS_SHARP_GLIB_10_LIBS@
+DBUS_SHARP_20_CFLAGS = @DBUS_SHARP_20_CFLAGS@
+DBUS_SHARP_20_LIBS = @DBUS_SHARP_20_LIBS@
+DBUS_SHARP_GLIB_20_CFLAGS = @DBUS_SHARP_GLIB_20_CFLAGS@
+DBUS_SHARP_GLIB_20_LIBS = @DBUS_SHARP_GLIB_20_LIBS@
 DEFS = @DEFS@
 DMCS = @DMCS@
 ECHO_C = @ECHO_C@
@@ -927,8 +927,8 @@
 	$(NOTIFY_SHARP_LIBS) \
 	$(GCONF_SHARP_20_LIBS) \
 	$(GLIB_SHARP_20_LIBS) \
-	$(DBUS_SHARP_10_LIBS) \
-	$(DBUS_SHARP_GLIB_10_LIBS)
+	$(DBUS_SHARP_20_LIBS) \
+	$(DBUS_SHARP_GLIB_20_LIBS)
 
 DLL_REFERENCES = 
 CLEANFILES = $(PROGRAMFILES) \
