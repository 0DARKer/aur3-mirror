# Maintainer: Benjamin Severs <benjaminsevers at gmail dot com>
pkgname=gitolite-git
pkgver=20111014
pkgrel=1
pkgdesc="A centralized git server, with very fine-grained access control and many powerful features."
arch=('any')
url="http://github.com/sitaramc/gitolite"
license=('GPL2')
depends=('perl' 'git')
provides=('gitolite')
conflicts=('gitolite')
backup=('etc/gitolite/example.conf'
        'etc/gitolite/example.gitolite.rc')
source=(configuration.patch)
md5sums=('b4603bb37d3a746a1508bd7528464ba4')
sha1sums=('e103e36f067a9f74a044a8cb6fc1fb32cf36a2f5')

_gitroot="http://github.com/sitaramc/gitolite.git"
_gitname="gitolite"
_gitbranch="master"

build() {
  cd "$srcdir"
  msg "Connecting to GIT server...."

  if [ -d $_gitname ] ; then
    cd $_gitname && git pull origin
    msg "The local files are updated."
  else
    git clone -b $_gitbranch $_gitroot $_gitname 
  fi

  msg "GIT checkout done or server timeout"

  rm -rf "$srcdir/$_gitname-build"
  git clone "$srcdir/$_gitname" "$srcdir/$_gitname-build"
  cd "$srcdir/$_gitname-build"

  git describe --tags --long > conf/VERSION
  patch -p1 < ${srcdir}/configuration.patch
}

package() {
  cd "$srcdir/$_gitname-build"

  install -d "${pkgdir}/usr/bin"
  install -d "${pkgdir}/etc/gitolite"
  install -d "${pkgdir}/usr/share/gitolite/hooks"
  install -d "${pkgdir}/usr/share/doc/gitolite"
  install -t "${pkgdir}/usr/bin" src/*
  install -t "${pkgdir}/etc/gitolite" conf/*
  cp -r hooks/* "${pkgdir}/usr/share/gitolite/hooks"
  cp doc/* "${pkgdir}/usr/share/doc/gitolite"
}

# vim:set ts=2 sw=2 et:
