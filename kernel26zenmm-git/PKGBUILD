# Contributor: james francis toy iv unk.nown [at] unix [dot] net
pkgname="kernel26zenmm-git"
pkgver=20080913
pkgrel="8"
pkgdesc="bleeding edge kernel summing zen and mm patches"
url="http://zen-sources.org"
arch=("i686" "x86_64")
license=("GPL2")
depends=("coreutils" "module-init-tools" "mkinitcpio>=0.5.15")
makedepends=("git")
conflicts=("kernel26zen-git")
backup=(boot/kconfig26zenmm
        etc/mkinitcpio.d/kernel26zenmm.preset)
install=kernel26zenmm.install
source=(config.i686
        config.x86_64
        kernel26zenmm.preset
        mkinitcpio-kernel26zenmm.conf)
md5sums=('44ff11a71a5881911666a5eb6ef82ede'
'4eea633e7dee9224d994da8b4e8e9c07'
'eff09e3782e975c23bcd8cc255556f65'
'36858bd6a0bca63d2aa901b2e42d4a05')

_gitroot="git://zen-sources.org/zen/kernel/zenmm.git"
_gitname="zenmm"

# Returns 1 if the current branch is a remote one
_is_remote() {
	if [ $# -eq 1 ]; then
		git-config --get branch.$1.remote > /dev/null 2>&1
		if [ $? -eq 0 ]; then
			return 0
		else
			return 1
		fi
	else
		return 1
	fi
}

# Pulls the source tree via GIT
_checkout() {
	msg "Fetching zen and mm kernel goodness..."

	if [ ! -d $_gitname ]; then
		warning "Do not delete src/ as it takes VERY long to clone zen sources via GIT"

		msg2 "Cloning the project..."
		git clone --depth=1 $_gitroot $_gitname
	else
		cd $startdir/src/$_gitname

		msg2 "Recreating master to make sure, there is always a working branch..."
		git branch -D master-new > /dev/null 2>&1

		if ! git-checkout -m -b master-new origin/master; then
			error "Failed..."
			warning "Trying git-checkout with -f flag instead..."
			warning "This will throw away local changes..."
			warning "Press ENTER to continue or CTRL+C to abort..."
			read

			git checkout -f -b master-new origin/master
		fi

		git branch -D master
		git branch -M master-new master

		msg2 "Updating branch: master..."
		git pull origin || return 1
	fi

	cd $startdir/src/$_gitname

	_local="$(echo $_object | cut -d' ' -f 1)"
	_remote="$(echo $_object | cut -d' ' -f 2)"
	[ "$_remote" = "" ] && _remote="$_local"

	_commit="$(git rev-parse $_remote)"
	if [ $? -ne 0 ]; then
		error "$_remote is not a valid object name"
		return 1
	fi

	if ! git branch | grep $_local > /dev/null; then
		msg2 "Creating branch: $_local based on $_remote..."
		git branch $_local $_remote || return 1
	fi

	msg2 "Switching to branch: $_local ($_commit)..."
	git checkout $_local || return 1

	# If on a remote branch, this will pull the last commit of that branch
	if _is_remote $_local; then
		msg2 "Updating branch: $_local..."
		git pull
	fi
}

# Generates the commit ChangeLog
_changelog() {
	msg "Generating commit ChangeLog..."
	git log "v2.6.26-rc8-zenmm1..$_local" \
	        --pretty="format:%ai %an <%ae>%n%n	* %H: %s%n%nBODY_START%n%b%nBODY_END" \
		| sed -r -e 's/^([0-9]{4}-[0-9]{2}-[0-9]{2}) [0-9]{2}:[0-9]{2}:[0-9]{2} [\+-][0-9]{4}/\1/' \
		         -e '/^BODY_START$/,/^BODY_END$/{/^(BODY_START|BODY_END|<unknown>)$/d;s/(.*)/	\1/g}'
}

# Build function called by makepkg
build() {
	_karch="x86"

	cd $startdir/src

	msg "Including package configuration..."
	. $startdir/CONFIG

	# Pull the kernel source
	_checkout || return 1

	if [ "$_generate_changelog" = "1" ]; then
		_changelog > $startdir/ChangeLog
	else
		cp $startdir/ChangeLog.package $startdir/ChangeLog
	fi
	
	msg "Testing if current kernel version is supported by this PKGBUILD..."
	vercmp "2.6.26" "$(make kernelversion)" > /dev/null
	if [ $? -eq 1 ]; then
		error "Failed"
		return 1
	fi

	msg "Loading configuration..."
	if [ -e $startdir/config.local ]; then
		msg2 "Using custom kernel config (config.local)..."
		cat $startdir/config.local > .config
	elif [ -e $startdir/config.saved.$CARCH ]; then
		msg2 "Using saved kernel config (config.saved.$CARCH)..."
		cat $startdir/config.saved.$CARCH > .config
	elif [ "$CARCH" = "x86_64" ]; then
		cat ../config.x86_64 > .config
	elif [ "$CARCH" = "i686" ]; then
		cat ../config.i686 > .config
	else
		error "Unsupported architecture: $CARCH"
		return 1
	fi

	if [ "$_date_localversion" = "1" ] && _is_remote $_local; then
		_localversion="$(sed -rn 's/^CONFIG_LOCALVERSION="([^"]*)"$/\1/p' .config)"
		[ -n "$_localversion" ] && msg2 "CONFIG_LOCALVERSION is set to: $_localversion"

		_date="-`date +'%G%m%d'`"
		msg2 "Appending $_date to CONFIG_LOCALVERSION..."
		sed -i "s/^CONFIG_LOCALVERSION=.*$/CONFIG_LOCALVERSION=\"$_localversion$_date\"/" \
			.config
	fi

	msg2 "Updating configuration..."
	yes "" | make config > /dev/null

	case "$_menu_method" in
		menuconfig|xconfig|gconfig)
			msg2 "Running make $_menu_method..."
			make $_menu_method
		;;
	esac

	msg2 "Determining whether UVesaFB is enabled..."
	if grep "^CONFIG_FB_UVESA=[ym]$" .config > /dev/null; then
		provides=("${provides[@]}" "kernel26zen-uvesafb")
	else
		warning "UVesaFB is disabled, framebuffer consoles and v86d won't work"
	fi

	if [ "$_save_config" = "1" ]; then
		msg "Saving configuration..."
		msg2 "Saving src/$_gitname/.config as config.saved.$CARCH"
		cp .config $startdir/config.saved.$CARCH

		if [ "$_date_localversion" = "1" ] && _is_remote $_local; then
			msg2 "Restoring CONFIG_LOCALVERSION..."
			sed -i "s/^CONFIG_LOCALVERSION=.*$/CONFIG_LOCALVERSION=\"$_localversion\"/" \
				$startdir/config.saved.$CARCH
		fi
	fi

	msg "Building kernel and modules..."
	if ! make V="$_verbose" bzImage modules; then
		error "Failed... Your source tree might be broken. Run 'make mrproper' in src/$_gitname to clean it up"
		return 1
	fi

	_kernver="$(make kernelrelease)"
	_basekernel="${_kernver/-*/}"

	if [ "$_kernel_pkgver" = "1" ]; then
		msg "Updating pkgver..."
		[ 1 ] && pkgver="${_kernver//-/.}"
	fi

	# <3 pacman 3.1.0
	msg "Updating provides array..."
	[ 1 ] && provides=("${provides[@]}" "kernel26zenmm=${_kernver//-/.}")

	msg "Installing kernel image..."
	install -D -m644 System.map                $startdir/pkg/boot/System.map26zenmm
	install -D -m644 arch/$_karch/boot/bzImage $startdir/pkg/boot/vmlinuz26zenmm
	install -D -m644 .config                   $startdir/pkg/boot/kconfig26zenmm

	msg "Installing kernel modules..."
	make INSTALL_MOD_PATH=$startdir/pkg modules_install

	# Install fake kernel source
	install -D -m644 Module.symvers  $startdir/pkg/usr/src/linux-$_kernver/Module.symvers
	install -D -m644 Makefile        $startdir/pkg/usr/src/linux-$_kernver/Makefile
	install -D -m644 kernel/Makefile $startdir/pkg/usr/src/linux-$_kernver/kernel/Makefile
	install -D -m644 .config         $startdir/pkg/usr/src/linux-$_kernver/.config
	install -D -m644 .config         $startdir/pkg/lib/modules/$_kernver/.config

	# Install scripts directory and fix permissions on it
	cp -a scripts $startdir/pkg/usr/src/linux-$_kernver
	chmod og-w -R $startdir/pkg/usr/src/linux-$_kernver

	# Install kernel headers
	msg "Installing kernel headers..."
	for i in acpi asm-{generic,x86} config linux math-emu media net pcmcia scsi sound video; do
		msg2 "$i"
		mkdir -p $startdir/pkg/usr/src/linux-$_kernver/include/$i
		cp -a include/$i $startdir/pkg/usr/src/linux-$_kernver/include
	done

	msg "Installing headers for lirc..."
	mkdir -p $startdir/pkg/usr/src/linux-$_kernver/drivers/media/video
	cp drivers/media/video/*.h $startdir/pkg/usr/src/linux-$_kernver/drivers/media/video/
	for i in bt8xx cpia2 cx25840 cx88 em28xx et61x251 pwc saa7134 sn9c102 usbvideo zc0301; do
		mkdir -p $startdir/pkg/usr/src/linux-$_kernver/drivers/media/video/$i
		cp -a drivers/media/video/$i/*.h $startdir/pkg/usr/src/linux-$_kernver/drivers/media/video/$i
	done
	
	msg "Installing dm headers..."
	mkdir -p $startdir/pkg/usr/src/linux-$_kernver/drivers/md
	cp drivers/md/*.h $startdir/pkg/usr/src/linux-$_kernver/drivers/md

	msg "Installing inotify.h..."
	mkdir -p $startdir/pkg/usr/src/linux-$_kernver/include/linux
	cp include/linux/inotify.h $startdir/pkg/usr/src/linux-$_kernver/include/linux/

	msg "Installing CLUSTERIP file for iptables..."
	mkdir -p $startdir/pkg/usr/src/linux-$_kernver/net/ipv4/netfilter/
	cp net/ipv4/netfilter/ipt_CLUSTERIP.c $startdir/pkg/usr/src/linux-$_kernver/net/ipv4/netfilter/

	msg "Installing wireless headers..."
	mkdir -p $startdir/pkg/usr/src/linux-$_kernver/net/mac80211/
	cp net/mac80211/*.h $startdir/pkg/usr/src/linux-$_kernver/net/mac80211/
	
	msg "Installing Kconfig files..."
	for i in `find . -name "Kconfig*"`; do
		mkdir -p $startdir/pkg/usr/src/linux-$_kernver/`echo $i | sed 's|/Kconfig.*||'`
		cp $i $startdir/pkg/usr/src/linux-$_kernver/$i
	done
	
	msg "Installing arch files..."
	mkdir -p $startdir/pkg/usr/src/linux-$_kernver/arch/$_karch/kernel
	cp arch/$_karch/kernel/asm-offsets.s $startdir/pkg/usr/src/linux-$_kernver/arch/$_karch/kernel

	cp arch/$_karch/Makefile* $startdir/pkg/usr/src/linux-$_kernver/arch/$_karch
	cp -r arch/$_karch/configs $startdir/pkg/usr/src/linux-$_kernver/arch/$_karch

	if [ "$CARCH" = "x86_64" ]; then
		(cd $startdir/pkg/usr/src/linux-$_kernver/arch && ln -s $_karch x86_64)
	else
		(cd $startdir/pkg/usr/src/linux-$_kernver/arch && ln -s $_karch i386)
	fi

	msg "Fixing permissions..."
	chown -R root:root $startdir/pkg/usr/src/linux-$_kernver
	find $startdir/pkg/usr/src/linux-$_kernver -type d -exec chmod 755 {} \;

	msg "Removing uneeded architectures..."
	cd $startdir/pkg/usr/src/linux-$_kernver/arch
	for i in *; do
		[ "$i" != "$_karch" ] && rm -rf $i
	done

	msg "Creating important symlinks..."
	cd $startdir/pkg/usr/src/linux-$_kernver/include
	ln -s asm-$_karch asm

	cd $startdir/pkg/lib/modules/$_kernver
	rm -rf source build
	ln -sf ../../../usr/src/linux-$_kernver build

	cd $startdir/pkg/usr/src
	ln -s linux-$_kernver linux-$_basekernel-zen

	cd $startdir/pkg/lib/modules
	ln -s $_kernver $_basekernel-zen

	msg "Installing fallback mkinitcpio.conf and preset file..."
	install -D -m644 $startdir/src/mkinitcpio-kernel26zenmm.conf \
		$startdir/pkg/etc/mkinitcpio.d/kernel26zenmm-fallback.conf

	install -D -m644 $startdir/src/kernel26zenmm.preset \
		$startdir/pkg/etc/mkinitcpio.d/kernel26zenmm.preset

	msg "Setting correct kernel version in install script..."
	sed -i "s/_kernel_version=.*/_kernel_version=$_kernver/g" \
		$startdir/kernel26zenmm.install

	msg "Generating kernel26zenmm.kver..."
	echo -e "# DO NOT EDIT THIS FILE\nALL_kver='$_kernver'" \
		> $startdir/pkg/etc/mkinitcpio.d/kernel26zenmm.kver
}
