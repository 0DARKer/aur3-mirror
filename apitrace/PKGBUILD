# Maintainer: Glaucous <glakke1 at gmail dot com>
pkgname=apitrace
pkgver=1.0
pkgrel=5
pkgdesc="Graphics API Tracing"
arch=('x86_64' 'i686')
url="https://github.com/apitrace/apitrace"
license=('BSD')
groups=()
depends=('python>=2.6' 'libgl')
makedepends=('cmake>=2.8' 'git')
optdepends=('qt: GUI support' 'qjson: GUI support')
provides=('apitrace')
conflicts=('apitrace-git')
replaces=()
backup=()
options=()
install=
changelog=
source=('LICENSE')
noextract=()
md5sums=('85536f1e169f24a548762a3cbbcd227c')

# Renamed so that makepkg doesn't think this is a -git package.
_thegitroot='git://github.com/apitrace/apitrace.git'
_thegitname='apitrace'
_branch='1.0'

build() {
	unset LDFLAGS

	cd ${srcdir}

	msg "Connecting to the GIT server.."
	if [[ -d ${srcdir}/${_thegitname} ]] ; then
		cd ${_thegitname}
		git pull origin
		msg "The local files are updated."
	else
		git clone ${_thegitroot}
	fi
    
	msg "GIT checkout done."
    
	if [[ -d ${srcdir}/${_thegitname}-build ]]; then
		msg "Cleaning the previous build directory.." 
		rm -rf ${srcdir}/${_thegitname}-build
	fi

	msg "Cloning git.."

	git clone ${srcdir}/${_thegitname} ${srcdir}/${_thegitname}-build
	msg "Checking out branch ${_branch}.."
	cd ${srcdir}/${_thegitname}-build
	git checkout ${_branch}

	msg "Running cmake and make.."
	cd ${srcdir}/${_thegitname}-build
	cmake -H. -Bbuild
	make -C build

	install -D "${srcdir}/${_thegitname}-build/build/glretrace" "${pkgdir}/usr/bin/glretrace"
	install -D "${srcdir}/${_thegitname}-build/build/tracedump" "${pkgdir}/usr/bin/tracedump"

	if [[ -f "${srcdir}/${_thegitname}-build/build/qapitrace" ]]; then
		msg "Installing GUI.."
		install -D "${srcdir}/${_thegitname}-build/build/qapitrace" "${pkgdir}/usr/bin/qapitrace"
	else
		msg "Optional GUI wasn't built."
	fi

	install -D "${srcdir}/${_thegitname}-build/build/glxtrace.so" "${pkgdir}/usr/lib/glxtrace.so"

	install -D -m644 "${srcdir}/LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"

	msg "Checking if there's a newer version available.."
	cd ${srcdir}/${_thegitname}-build
	_new=$(git describe $(git rev-list --tags --max-count=1) --tags)
	
	if [[ ! ${_new} = ${_branch} ]]; then
		msg "Newer version (might) be available: ${_new}. Please notify the maintainer by e-mail or AUR comment."
	else
		msg "..this version is up to date."
	fi
}
