diff -rup lcov-1.9.orig/bin/geninfo lcov-1.9.new/bin/geninfo
--- lcov-1.9.orig/bin/geninfo	2012-03-12 11:11:31.837992625 +0000
+++ lcov-1.9.new/bin/geninfo	2012-03-12 11:11:00.721000276 +0000
@@ -424,7 +424,7 @@ if (defined($output_filename) && ($outpu
 	# Initially create output filename, data is appended
 	# for each data file processed
 	local *DUMMY_HANDLE;
-	open(DUMMY_HANDLE, ">$output_filename")
+	open(DUMMY_HANDLE, ">", $output_filename)
 		or die("ERROR: cannot create $output_filename!\n");
 	close(DUMMY_HANDLE);
 
@@ -906,7 +906,7 @@ sub process_dafile($$)
 		else
 		{
 			# Append to output file
-			open(INFO_HANDLE, ">>$output_filename")
+			open(INFO_HANDLE, ">>", $output_filename)
 				or die("ERROR: cannot write to ".
 				       "$output_filename!\n");
 		}
@@ -914,7 +914,7 @@ sub process_dafile($$)
 	else
 	{
 		# Open .info file for output
-		open(INFO_HANDLE, ">$da_filename.info")
+		open(INFO_HANDLE, ">", "$da_filename.info")
 			or die("ERROR: cannot create $da_filename.info!\n");
 	}
 
@@ -1267,7 +1267,7 @@ sub solve_ambiguous_match($$$)
 	{
 
 		# Compare file contents
-		open(SOURCE, $filename)
+		open(SOURCE, "<", $filename)
 			or die("ERROR: cannot read $filename!\n");
 
 		$no_match = 0;
@@ -1337,7 +1337,7 @@ sub read_gcov_header($)
 	my $object;
 	local *INPUT;
 
-	if (!open(INPUT, $_[0]))
+	if (!open(INPUT, "<", $_[0]))
 	{
 		if ($ignore_errors[$ERROR_GCOV])
 		{
@@ -1489,7 +1489,7 @@ sub read_gcov_file($)
 	my $last_line = 0;
 	local *INPUT;
 
-	if (!open(INPUT, $filename)) {
+	if (!open(INPUT, "<", $filename)) {
 		if ($ignore_errors[$ERROR_GCOV])
 		{
 			warn("WARNING: cannot read $filename!\n");
@@ -1669,7 +1669,7 @@ sub get_gcov_version()
 	my $version_string;
 	my $result;
 
-	open(GCOV_PIPE, "$gcov_tool -v |")
+	open(GCOV_PIPE, "-|", "$gcov_tool -v")
 		or die("ERROR: cannot retrieve gcov version!\n");
 	$version_string = <GCOV_PIPE>;
 	close(GCOV_PIPE);
@@ -1757,12 +1757,12 @@ sub system_no_output($@)
 	local *OLD_STDOUT;
 
 	# Save old stdout and stderr handles
-	($mode & 1) && open(OLD_STDOUT, ">>&STDOUT");
-	($mode & 2) && open(OLD_STDERR, ">>&STDERR");
+	($mode & 1) && open(OLD_STDOUT, ">>&", "STDOUT");
+	($mode & 2) && open(OLD_STDERR, ">>&", "STDERR");
 
 	# Redirect to /dev/null
-	($mode & 1) && open(STDOUT, ">/dev/null");
-	($mode & 2) && open(STDERR, ">/dev/null");
+	($mode & 1) && open(STDOUT, ">", "/dev/null");
+	($mode & 2) && open(STDERR, ">", "/dev/null");
  
 	system(@_);
 	$result = $?;
@@ -1772,8 +1772,8 @@ sub system_no_output($@)
 	($mode & 2) && close(STDERR);
 
 	# Restore old handles
-	($mode & 1) && open(STDOUT, ">>&OLD_STDOUT");
-	($mode & 2) && open(STDERR, ">>&OLD_STDERR");
+	($mode & 1) && open(STDOUT, ">>&", "OLD_STDOUT");
+	($mode & 2) && open(STDERR, ">>&", "OLD_STDERR");
  
 	return $result;
 }
@@ -1794,7 +1794,7 @@ sub read_config($)
 	my $value;
 	local *HANDLE;
 
-	if (!open(HANDLE, "<$filename"))
+	if (!open(HANDLE, "<", $filename))
 	{
 		warn("WARNING: cannot read configuration file $filename\n");
 		return undef;
@@ -1866,7 +1866,7 @@ sub get_exclusion_data($)
 	my $flag = 0;
 	local *HANDLE;
 
-	if (!open(HANDLE, "<$filename")) {
+	if (!open(HANDLE, "<", $filename)) {
 		warn("WARNING: could not open $filename\n");
 		return undef;
 	}
@@ -2072,7 +2072,7 @@ sub process_graphfile($$)
 		else
 		{
 			# Append to output file
-			open(INFO_HANDLE, ">>$output_filename")
+			open(INFO_HANDLE, ">>", $output_filename)
 				or die("ERROR: cannot write to ".
 				       "$output_filename!\n");
 		}
@@ -2080,7 +2080,7 @@ sub process_graphfile($$)
 	else
 	{
 		# Open .info file for output
-		open(INFO_HANDLE, ">$graph_filename.info")
+		open(INFO_HANDLE, ">", "$graph_filename.info")
 			or die("ERROR: cannot create $graph_filename.info!\n");
 	}
 
@@ -2544,7 +2544,7 @@ sub read_bb($$)
 	my $graph;
 	local *HANDLE;
 
-	open(HANDLE, "<$bb_filename") or goto open_error;
+	open(HANDLE, "<", $bb_filename) or goto open_error;
 	binmode(HANDLE);
 	while (!eof(HANDLE)) {
 		$value = read_bb_value(*HANDLE, "data word");
@@ -2721,7 +2721,7 @@ sub read_bbg($$)
 	my $graph;
 	local *HANDLE;
 
-	open(HANDLE, "<$bbg_filename") or goto open_error;
+	open(HANDLE, "<", $bbg_filename) or goto open_error;
 	binmode(HANDLE);
 	# Read magic
 	$word = read_bbg_value(*HANDLE, "file magic");
@@ -2959,7 +2959,7 @@ sub read_gcno($$)
 	my $graph;
 	local *HANDLE;
 
-	open(HANDLE, "<$gcno_filename") or goto open_error;
+	open(HANDLE, "<", $gcno_filename) or goto open_error;
 	binmode(HANDLE);
 	# Read magic
 	$word = read_gcno_word(*HANDLE, "file magic");
