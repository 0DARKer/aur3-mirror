# Contributor: Kurt J. Bosch <kujub at quantentunnel dot de>
# Maintainer: Tobias Powalowski <tpowa@archlinux.org>
# Maintainer: Thomas Baechler <thomas@archlinux.org>
#pkgname=kernel26                # Build stock -ARCH kernel
pkgname=kernel26-image-ice       # Build kernel with a different name
_kernelname=${pkgname#kernel26}
_basekernel=2.6.30
pkgver=${_basekernel}.4
pkgrel=1
#pkgrel=0                         # Build kernel using vanilla patch
_patchname="patch-${pkgver}-${pkgrel}-ARCH"
pkgdesc="The Linux Kernel with TuxOnIce and Fbcondecor - using stock kernel modules"
arch=(i686 x86_64)
license=('GPL2')
#groups=('base')
url="http://www.kernel.org"
#backup=(etc/mkinitcpio.d/${pkgname}.preset)

_fbpatchname="fbcondecor-0.9.6-2.6.29.2.patch"
_tuxonice_patchname="current-tuxonice-for-2.6.30.patch-20090620-v1"

depends=("kernel26>=${_basekernel}" "kernel26<2.6.31")
replaces=()
install=
source=(ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-$_basekernel.tar.bz2
        ftp://ftp.archlinux.org/other/kernel26/${_patchname}.bz2
        # the main kernel config files - as found in abs/core/kernel26
        config config.x86_64
        # added patches
        http://dev.gentoo.org/~spock/projects/fbcondecor/archive/${_fbpatchname}
        http://www.tuxonice.net/downloads/all/${_tuxonice_patchname}.bz2
)
optdepends=()
md5sums=('7a80058a6382e5108cdb5554d1609615'
         'c819d48ba2d3940ee921c799fcb9253c'
         '4c642e4fc9e8dbf90276599cf7d39821'
         '8a7e6e4157d33bd34ba31049a55e9777'
         # added patches
         '432fe5ebfd878f9249cece640dda3fbd'
         'cb24f77d96cd2aa851169ef5489b559b'
)

if [ "${pkgrel}" = 0 ]; then
  _patchname="patch-${pkgver}"
  source[1]=ftp://ftp.kernel.org/pub/linux/kernel/v2.6/${_patchname}.bz2
  md5sums[1]='d0fc44b54ba5953140b3f2aa9a1f2580'
fi

#pkgrel=${pkgrel}.1

##  Don't extract the sources again if allready there
if [ -d ${srcdir}/linux-$_basekernel ]; then
  echo ">>>>> Linux source dir found - Skipping extraction"
  noextract=( linux-$_basekernel.tar.bz2 )
fi

build() {

  _patches=(
    ${_patchname}
    ${_fbpatchname}
    ${_tuxonice_patchname}
  )

  apply_patches()
  {
    local patch
    for patch in ${_patches[@]} ; do
      echo ">>>>> Applying $patch"
      patch -Np1 -i ${srcdir}/${patch} || return 1
    done
    ## The stock kernel doesn't use any EXTRAVERSION
    echo ">>>>> Stripping any EXTRAVERSION from Makefile"
    cp -p Makefile Makefile.bak &&
    sed -e 's,^EXTRAVERSION =.*,EXTRAVERSION =,' -i Makefile || return 1
  }

  revert_patches()
  (
    set +e
    cd ${srcdir}/linux-$_basekernel
    echo ">>>>> Restoring Makefile"
    mv Makefile.bak Makefile
    for ((i=${#_patches[@]}-1; i>=0; i--)) do
      echo ">>>>> Reverting ${_patches[i]}"
      patch -RE -s -Np1 -i ${srcdir}/${_patches[i]}
    done
    exit 0
  )

  _opts=(
    # enable Fbcondecor
    CONFIG_FB_CON_DECOR=y
    CONFIG_TOI=y
    CONFIG_TOI_REPLACE_SWSUSP=y
    # userui from tuxonice-userui initcpio hook
    'CONFIG_TOI_USERUI_DEFAULT_PATH="/sbin/suspend2ui"'
    # checksum pageset2 (at least recommended for XFS)
    CONFIG_TOI_CHECKSUM=y
    ## these are set automatically
    #CONFIG_CRYPTO_ALGAPI=y
    #CONFIG_CRYPTO_HASH=y
    #CONFIG_CRYPTO_MD4=y
  )

  make_config()
  (
    echo ">>>>> Updating config"
    # remove LOGO configuration
    sed -re 's,^CONFIG_LOGO_.*,,' -i .config
    # unset some options
    opts=(
      CONFIG_LOGO
      # these prevent Fbcondecor
      CONFIG_FB_TILEBLITTING
      CONFIG_FB_SVGALIB
      CONFIG_FB_S3
      CONFIG_FB_VT8623
    )
    for opt in "${opts[@]}"; do
      sed -re "s,^${opt}=.*,# ${opt} is not set," -i .config || exit 1
    done
    # add TuxOnIce defaults
    yes "" | make oldconfig || exit 1
    # set some options
    for opt in "${_opts[@]}" ; do
      opt_nam="${opt%%=*}"
      sed -re "s,^[# ]*${opt_nam}[= ].*,${opt}," -i .config || exit 1
    done
  )
  
  check_config()
  (
    retval=0
    for opt in "${_opts[@]}" ; do
      if ! grep -q "^${opt}" .config ; then
        echo "ERROR: Not found on .config: ${opt}" >&2
        retval=1
      fi
    done
    exit $retval
  )

  KARCH=x86

  cd ${srcdir}/linux-$_basekernel
  
  ## ensure we don't bring in any foreign/old Makefile
  rm -rf Makefile.bak
  ## revert the patches on exit to be able to reuse the src
  ## otherwise creating new files or applying a different patch will fail next time
  trap revert_patches EXIT

  # Add -ARCH patches
  # See http://projects.archlinux.org/git/?p=linux-2.6-ARCH.git;a=summary
#  patch -Np1 -i ${srcdir}/${_patchname} || return 1
  apply_patches || return 1
  
  if [ "$CARCH" = "x86_64" ]; then
    cat ../config.x86_64 >./.config
  else
    cat ../config >./.config
  fi
## don't change the LOCALVERSION
#  if [ "${_kernelname}" != "" ]; then
#    sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
#  fi
  
  make_config || return 1

  # get kernel version  
  make prepare
  _kernver="$(make kernelrelease)"
  # load configuration
  # Configure the kernel. Replace the line below with one of your choice.
  #make menuconfig # CLI menu for configuration
  #make xconfig # X-based configuration
  #make oldconfig # using old config from previous kernel version
  # ... or manually edit .config
  ####################
  # stop here
  # this is useful to configure the kernel
  #msg "Stopping build"
  #return 1
  ####################
## already did it above
#  yes "" | make config
  
  # ensure our options are still there
  check_config || return 1
  
  ## build without modules !
  make bzImage || return 1
  mkdir -p ${pkgdir}/boot
  
  cp System.map ${pkgdir}/boot/System.map26${_kernelname}
  cp arch/$KARCH/boot/bzImage ${pkgdir}/boot/vmlinuz26${_kernelname}
}

