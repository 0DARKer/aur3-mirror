# Contributor: Vojtech "kralyk" Kral

pkgname='libopencl'
pkgver=1.2
pkgrel=4
_appsdk_ver='2.9.1'

pkgdesc='OpenCL library and ICD loader'
arch=('i686' 'x86_64')
url="http://developer.amd.com/tools-and-sdks/opencl-zone/amd-accelerated-parallel-processing-app-sdk/"
license=("custom")
install='install'

provides=('libcl')
conflicts=('libcl' 'nvidia-utils')

_agr_url='http://developer.amd.com/amd-license-agreement-appsdk/'

#Architecture resolution

[ "$CARCH" = 'x86_64' ] && _file='QU1ELUFQUC1TREstbGludXgtdjIuOS0xLjU5OS4zODEtR0EteDY0LnRhci5iejI=' \
                        || _file='QU1ELUFQUC1TREstbGludXgtdjIuOS0xLjU5OS4zODEtR0EteDg2LnRhci5iejI='

_arch="${CARCH/i6/x}"
_bits="${_arch/x86/32}"
_bits="${_bits/32_/}"

_tarball="AMD-APP-SDK-${_appsdk_ver}-${CARCH}.tar.bz2"
_sfx="AMD-APP-SDK-v2.9-1.599.381-GA-linux${_bits}.sh"
_offset=9513
_inner='inner.tar.bz2'

_wget()
{
  wget -c -t 3 --waitretry=3 -O - $@
}

prepare()
{
  local nonce1 post_id nonce2 postdata1 postdata2

  echo 'To download AMD APP SDK you need to accept AMD APP SDK license agreement. (To view the license, visit AMD APP SDK website.)'   # IANAL
  read -p "Accept? [y/n] " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    msg 'Downloading AMD APP SDK...'

    echo -n '[nonce1] '
    _wget -nv "$url" > 'nonce1'
    nonce1=$(sed -n -e "/${_file}/s/.*_nonce\" value=\"\([[:alnum:]]*\)\".*/\1/p;" 'nonce1')
    post_id=$(sed -n -e "/post_id/s/.*value=\"\([[:alnum:]]*\)\".*/\1/p;" 'nonce1' | head -n 1)

    echo -n '[nonce2] '
    postdata1="amd_developer_central_downloads_page_nonce=${nonce1}&_wp_http_referer=%2Ftools-and-sdks%2Fopencl-zone%2Famd-accelerated-parallel-processing-app-sdk%2F&f=${_file/=/%3D}&post_id=${post_id}"
    nonce2=$(_wget -nv --post-data "${postdata1}" "${_agr_url}" | sed -n -e "/${_file}/s/.*_nonce\" value=\"\([[:alnum:]]*\)\".*/\1/p;")

    echo -n '[tarball] '
    postdata2="amd_developer_central_nonce=${nonce2}&_wp_http_referer=%2Famd-license-agreement-appsdk%2F&f=${_file/=/%3D}"
    _wget --post-data "${postdata2}" "${_agr_url}" -O "../${_tarball}"

    ln -sf "../${_tarball}" .
    msg "Extracting ${_tarball} ..."
    bsdtar -jxf "${_tarball}"
    dd ibs="${_offset}" skip=1 if="${_sfx}" of="${_inner}" 2> /dev/null
    bsdtar -jxf "${_inner}"
  else
    exit 1
  fi
}

package()
{
  #Install libOpenCL
  install -d -m 755 "${pkgdir}/usr/lib"
  install -m 755 "lib/${_arch}/libOpenCL.so.1" "${pkgdir}/usr/lib"
  ln -s 'libOpenCL.so.1' "${pkgdir}/usr/lib/libOpenCL.so"

  #Install license
  install -d -m 755 "${pkgdir}/usr/share/licenses/libopencl"
  install -m 644 'APPSDK-EULA-linux.txt' "${pkgdir}/usr/share/licenses/libopencl"
}
