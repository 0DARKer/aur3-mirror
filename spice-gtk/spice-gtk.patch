Solo in spice-gtk-0.10/: aclocal.m4
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729: autogen.sh
Solo in spice-gtk-0.10/build-aux: compile
Solo in spice-gtk-0.10/build-aux: config.guess
Solo in spice-gtk-0.10/build-aux: config.sub
Solo in spice-gtk-0.10/build-aux: depcomp
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/build-aux: gitlog-to-changelog
Solo in spice-gtk-0.10/build-aux: install-sh
Solo in spice-gtk-0.10/build-aux: ltmain.sh
Solo in spice-gtk-0.10/build-aux: missing
Solo in spice-gtk-0.10/: ChangeLog
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/common: .gitignore
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/common: glc.c.save
Solo in spice-gtk-0.10/common: Makefile.in
Solo in spice-gtk-0.10/: config.h.in
Solo in spice-gtk-0.10/: configure
diff -u -r spice-gtk-0.10/configure.ac spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/configure.ac
--- spice-gtk-0.10/configure.ac	2012-02-22 23:57:54.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/configure.ac	2012-02-29 17:32:47.000000000 +0100
@@ -384,6 +384,8 @@
   # Check for polkit_authority_get_sync()
   AC_CHECK_LIB([polkit-gobject-1], [polkit_authority_get_sync], ac_have_pk_auth_get_sync="1", ac_have_pk_auth_get_sync="0")
   AC_DEFINE_UNQUOTED(HAVE_POLKIT_AUTHORITY_GET_SYNC, $ac_have_pk_auth_get_sync, [Define if you have a polkit with polkit_authority_get_sync()])
+  AC_CHECK_LIB([polkit-gobject-1], [polkit_authorization_result_get_dismissed], ac_have_pk_authorization_result_get_dismissed="1", ac_have_pk_authorization_result_get_dismissed="0")
+  AC_DEFINE_UNQUOTED(HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED, $ac_have_pk_authorization_result_get_dismissed, [Define if you have a polkit with polkit_authorization_result_get_dismissed()])
 else
   AM_CONDITIONAL(WITH_POLKIT, false)
 fi
Solo in spice-gtk-0.10/data: Makefile.in
diff -u -r spice-gtk-0.10/data/spice-protocol.vapi spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/data/spice-protocol.vapi
--- spice-gtk-0.10/data/spice-protocol.vapi	2012-02-20 20:42:43.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/data/spice-protocol.vapi	2012-02-29 17:32:47.000000000 +0100
@@ -34,7 +34,7 @@
 
 		[CCode (cprefix = "CONTROLLER_")]
 		public enum MsgId {
-			//extrenal app -> spice client
+			//external app -> spice client
 			HOST,
 			PORT,
 			SPORT,
@@ -62,7 +62,7 @@
 
 			ENABLE_SMARTCARD,
 
-			//spice client -> extrenal app
+			//spice client -> external app
 			MENU_ITEM_CLICK,
 		}
 
@@ -107,4 +107,95 @@
 			GRAYED,
 		}
 	}
+
+    [CCode (cprefix = "FrgMenu", cheader_filename = "spice/foreign_menu_prot.h")]
+    namespace ForeignMenu {
+        [CCode (cname = "FOREIGN_MENU_MAGIC")]
+        public const uint32 MAGIC;
+        [CCode (cname = "FOREIGN_MENU_VERSION")]
+        public const int VERSION;
+
+        [Compact]
+        public struct InitHeader {
+            uint32 magic;
+            uint32 version;
+            uint32 size;
+        }
+
+        [Compact]
+        [CCode (has_destroy_function = false)]
+        public struct Init {
+            InitHeader base;
+            uint64 credentials;
+            string title; // utf8
+        }
+
+        [Compact]
+        public struct Msg {
+            uint32 id;
+            uint32 size;
+        }
+
+        [CCode (cprefix = "FOREIGN_MENU_", cname = "int")]
+        public enum MsgId {
+            //external app -> spice client
+            SET_TITLE,
+            ADD_ITEM,
+            MODIFY_ITEM,
+            REMOVE_ITEM,
+            CLEAR,
+
+            //spice client -> external app
+            ITEM_EVENT,
+            APP_ACTIVATED,
+            APP_DEACTIVATED,
+        }
+
+        [Compact]
+        [CCode (cname = "FrgMenuSetTitle")]
+        public struct SetTitle {
+            Msg base;
+            string string; // utf8
+        }
+
+        [CCode (cprefix = "FOREIGN_MENU_ITEM_TYPE_", cname = "unsigned int", has_type_id = false)]
+        [Flags]
+        public enum MenuFlags {
+            CHECKED,
+            DIM,
+            SEPARATOR
+        }
+
+        [Compact]
+        [CCode (cname = "FrgMenuAddItem")]
+        public struct AddItem {
+            Msg base;
+            uint32 id;
+            uint32 type;
+            uint32 position;
+            string string; // utf8
+        }
+
+        [Compact]
+        [CCode (cname = "FrgMenuRmItem")]
+        public struct RmItem {
+            Msg base;
+            uint32 id;
+        }
+
+        [CCode (cprefix = "FOREIGN_MENU_EVENT_", cname = "int")]
+        public enum EventType {
+            CLICK,
+            CHECKED,
+            UNCHECKED,
+        }
+
+        [Compact]
+        [CCode (cname = "FrgMenuEvent")]
+        public struct Event {
+            Msg base;
+            uint32 id;
+            uint32 action;
+        }
+    }
 }
Solo in spice-gtk-0.10/data: spicy.desktop.in
Solo in spice-gtk-0.10/data: spicy.nsis
Solo in spice-gtk-0.10/doc: Makefile.in
Solo in spice-gtk-0.10/doc/reference: html
Solo in spice-gtk-0.10/doc/reference: Makefile.in
Solo in spice-gtk-0.10/doc/reference: spice-gtk-overrides.txt
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729: git.mk
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729: .gitmodules
Solo in spice-gtk-0.10/gtk/controller: controller.c
Solo in spice-gtk-0.10/gtk/controller: controller.vala.stamp
diff -u -r spice-gtk-0.10/gtk/controller/custom.vapi spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/custom.vapi
--- spice-gtk-0.10/gtk/controller/custom.vapi	2012-02-20 20:42:43.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/custom.vapi	2012-02-29 17:32:47.000000000 +0100
@@ -16,4 +16,13 @@
 		[CCode (cname = "spice_controller_listener_accept_async", cheader_filename = "spice-controller-listener.h")]
 		public async unowned GLib.IOStream accept_async (GLib.Cancellable? cancellable = null, out GLib.Object? source_object = null) throws GLib.Error;
 	}
+
+	[CCode (cname = "GObject", ref_function = "g_object_ref", unref_function = "g_object_unref", free_function = "")]
+	class ForeignMenuListener {
+		[CCode (cname = "spice_foreign_menu_listener_new", cheader_filename = "spice-foreign-menu-listener.h")]
+		public static ForeignMenuListener new_listener (string addr) throws GLib.Error;
+
+		[CCode (cname = "spice_foreign_menu_listener_accept_async", cheader_filename = "spice-foreign-menu-listener.h")]
+		public async unowned GLib.IOStream accept_async (GLib.Cancellable? cancellable = null, out GLib.Object? source_object = null) throws GLib.Error;
+	}
 }
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller: dump.c
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller: foreign-menu.vala
diff -u -r spice-gtk-0.10/gtk/controller/Makefile.am spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/Makefile.am
--- spice-gtk-0.10/gtk/controller/Makefile.am	2012-02-20 20:42:43.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/Makefile.am	2012-02-29 17:32:47.000000000 +0100
@@ -1,6 +1,11 @@
 NULL =
 
-AM_CPPFLAGS = $(GIO_CFLAGS) $(PROTOCOL_CFLAGS)
+AM_CPPFLAGS =					\
+	-DG_LOG_DOMAIN=\"GSpiceController\"	\
+	$(GIO_CFLAGS)				\
+	$(PROTOCOL_CFLAGS)			\
+	$(NULL)
+
 # http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
 AM_LDFLAGS =					\
 	-no-undefined				\
@@ -15,18 +20,21 @@
 	$(NULL)
 
 lib_LTLIBRARIES = libspice-controller.la
-noinst_PROGRAMS = test-controller
+noinst_PROGRAMS = test-controller spice-controller-dump
 
 BUILT_SOURCES = controller.vala.stamp
 
 libspice_controller_la_VALASOURCES =		\
 	menu.vala				\
 	controller.vala				\
+	foreign-menu.vala			\
 	$(NULL)
 libspice_controller_la_SOURCES =		\
 	custom.h				\
 	spice-controller-listener.c		\
 	spice-controller-listener.h		\
+	spice-foreign-menu-listener.c		\
+	spice-foreign-menu-listener.h		\
 	$(libspice_controller_la_VALASOURCES:.vala=.c) \
 	$(NULL)
 
@@ -52,6 +60,9 @@
 test_controller_SOURCES = test.c
 test_controller_LDADD = libspice-controller.la
 
+spice_controller_dump_SOURCES = dump.c
+spice_controller_dump_LDADD = libspice-controller.la
+
 controller.vala.stamp: $(libspice_controller_la_VALASOURCES) custom.vapi
 	@if test -z "$(VALAC)"; then \
 		echo "" ; \
Solo in spice-gtk-0.10/gtk/controller: Makefile.in
Solo in spice-gtk-0.10/gtk/controller: menu.c
diff -u -r spice-gtk-0.10/gtk/controller/menu.vala spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/menu.vala
--- spice-gtk-0.10/gtk/controller/menu.vala	2012-02-20 19:10:00.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/menu.vala	2012-02-29 17:32:47.000000000 +0100
@@ -28,6 +28,12 @@
 	public string accel;
 	public SpiceProtocol.Controller.MenuFlags flags;
 
+	public MenuItem (int id, string text, SpiceProtocol.Controller.MenuFlags flags) {
+		this.id = id;
+		this.text = text;
+		this.flags = flags;
+	}
+
 	public MenuItem.from_string (string str) throws SpiceCtrl.Error {
 		var params = str.split (SpiceProtocol.Controller.MENU_PARAM_DELIMITER);
 		if (warn_if (params.length != 5))
diff -u -r spice-gtk-0.10/gtk/controller/namedpipelistener.c spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/namedpipelistener.c
--- spice-gtk-0.10/gtk/controller/namedpipelistener.c	2011-06-17 15:05:08.000000000 +0200
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/namedpipelistener.c	2012-02-29 17:32:47.000000000 +0100
@@ -39,7 +39,7 @@
   SpiceNamedPipeListener *listener = SPICE_NAMED_PIPE_LISTENER (object);
   SpiceNamedPipe *p;
 
-  while (p = g_queue_pop_head (&listener->priv->namedpipes))
+  while ((p = g_queue_pop_head (&listener->priv->namedpipes)) != NULL)
     g_object_unref (p);
 
   g_return_if_fail (g_queue_get_length (&listener->priv->namedpipes) == 0);
@@ -239,7 +239,6 @@
   GSimpleAsyncResult *simple;
   ConnectData *c;
   SpiceNamedPipeConnection *connection;
-  gboolean success;
 
   g_return_val_if_fail (SPICE_IS_NAMED_PIPE_LISTENER (listener), NULL);
   g_return_val_if_fail (G_IS_SIMPLE_ASYNC_RESULT (result), NULL);
Solo in spice-gtk-0.10/gtk/controller: spice-controller.h
diff -u -r spice-gtk-0.10/gtk/controller/spice-controller-listener.c spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/spice-controller-listener.c
--- spice-gtk-0.10/gtk/controller/spice-controller-listener.c	2012-01-31 19:43:45.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/spice-controller-listener.c	2012-02-29 17:32:47.000000000 +0100
@@ -63,7 +63,7 @@
     if (addr == NULL)
         addr = g_strdup (g_getenv ("SPICE_XPI_NAMEDPIPE"));
     if (addr == NULL)
-        addr = g_strdup_printf ("\\\\.\\pipe\\SpiceController-%lu", GetCurrentProcessId ());
+        addr = g_strdup_printf ("\\\\.\\pipe\\SpiceController-%" G_GUINT64_FORMAT, (guint64)GetCurrentProcessId ());
 #else
     if (addr == NULL)
         addr = g_strdup (g_getenv ("SPICE_XPI_SOCKET"));
@@ -142,8 +142,16 @@
     g_return_val_if_fail(G_IS_OBJECT(listener), NULL);
 
 #ifdef G_OS_WIN32
-    spice_named_pipe_listener_accept_finish (SPICE_NAMED_PIPE_LISTENER (listener), result, source_object, error);
+    SpiceNamedPipeConnection *np;
+    np = spice_named_pipe_listener_accept_finish (SPICE_NAMED_PIPE_LISTENER (listener), result, source_object, error);
+    if (np)
+        return G_IO_STREAM (np);
 #else
-    g_socket_listener_accept_finish (G_SOCKET_LISTENER (listener), result, source_object, error);
+    GSocketConnection *socket;
+    socket = g_socket_listener_accept_finish (G_SOCKET_LISTENER (listener), result, source_object, error);
+    if (socket)
+        return G_IO_STREAM (socket);
 #endif
+
+    return NULL;
 }
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller: spice-foreign-menu-listener.c
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller: spice-foreign-menu-listener.h
diff -u -r spice-gtk-0.10/gtk/controller/test.c spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/test.c
--- spice-gtk-0.10/gtk/controller/test.c	2012-02-22 12:34:54.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/controller/test.c	2012-02-29 17:32:47.000000000 +0100
@@ -174,9 +174,9 @@
       g_message ("notify::%s == ", pspec->name);
       while (*p)
         g_message ("%s", *p++);
-    } else if (pspec->value_type == G_TYPE_OBJECT) {
+    } else if (G_TYPE_IS_OBJECT(pspec->value_type)) {
       GObject *o = g_value_get_object (&value);
-      g_message ("notify::%s == %s", pspec->name, G_OBJECT_TYPE_NAME (o));
+      g_message ("notify::%s == %s", pspec->name, o ? G_OBJECT_TYPE_NAME (o) : "null");
     } else {
       g_value_transform (&value, &strvalue);
       g_message ("notify::%s  = %s", pspec->name, g_value_get_string (&strvalue));
@@ -186,6 +186,19 @@
     g_value_unset (&strvalue);
 }
 
+void connect_signals (gpointer obj)
+{
+    guint i, n_ids = 0;
+    guint *ids = NULL;
+    GType type = G_OBJECT_TYPE (obj);
+
+    ids = g_signal_list_ids (type, &n_ids);
+    for (i = 0; i < n_ids; i++) {
+        const gchar *name = g_signal_name (ids[i]);
+        g_signal_connect (obj, name, G_CALLBACK (signaled), (gpointer)name);
+    }
+}
+
 int main (int argc, char *argv[])
 {
     int spicec_pid = (argc > 1 ? atoi (argv[1]) : 0);
@@ -199,9 +212,7 @@
     ctrl = spice_ctrl_controller_new ();
     loop = g_main_loop_new (NULL, FALSE);
     g_signal_connect (ctrl, "notify", G_CALLBACK (notified), NULL);
-    g_signal_connect (ctrl, "show", G_CALLBACK (signaled), "show");
-    g_signal_connect (ctrl, "hide", G_CALLBACK (signaled), "hide");
-    g_signal_connect (ctrl, "do_connect", G_CALLBACK (signaled), "do_connect");
+    connect_signals (ctrl);
 
 #ifdef WIN32
     snprintf (pipe_name, PIPE_NAME_MAX_LEN, PIPE_NAME, spicec_pid);
Solo in spice-gtk-0.10/gtk: generated_demarshallers1.c
Solo in spice-gtk-0.10/gtk: generated_demarshallers.c
Solo in spice-gtk-0.10/gtk: generated_marshallers1.c
Solo in spice-gtk-0.10/gtk: generated_marshallers.c
diff -u -r spice-gtk-0.10/gtk/Makefile.am spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/Makefile.am
--- spice-gtk-0.10/gtk/Makefile.am	2012-02-23 18:09:59.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/Makefile.am	2012-02-29 17:32:47.000000000 +0100
@@ -102,7 +102,6 @@
 	$(NULL)
 
 SPICE_GTK_SOURCES_COMMON =		\
-	glib-compat.c			\
 	glib-compat.h			\
 	spice-gtk-session.c		\
 	spice-gtk-session-priv.h	\
Solo in spice-gtk-0.10/gtk: Makefile.in
diff -u -r spice-gtk-0.10/gtk/map-file spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/map-file
--- spice-gtk-0.10/gtk/map-file	2012-02-22 23:57:54.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/map-file	2012-02-29 17:32:47.000000000 +0100
@@ -27,6 +27,7 @@
 spice_display_paste_from_guest;
 spice_display_send_keys;
 spice_display_set_grab_keys;
+spice_error_get_type;
 spice_get_option_group;
 spice_grab_sequence_as_string;
 spice_grab_sequence_copy;
diff -u -r spice-gtk-0.10/gtk/spice-channel.c spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/spice-channel.c
--- spice-gtk-0.10/gtk/spice-channel.c	2012-02-22 12:37:09.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/spice-channel.c	2012-02-29 17:32:47.000000000 +0100
@@ -2302,10 +2302,14 @@
 /**
  * spice_channel_open_fd:
  * @channel:
- * @fd: a file descriptor (socket)
+ * @fd: a file descriptor (socket) or -1.
+ * request mechanism
  *
  * Connect the channel using @fd socket.
  *
+ * If @fd is -1, a valid fd will be requested later via the
+ * SpiceChannel::open-fd signal.
+ *
  * Returns: %TRUE on success.
  **/
 gboolean spice_channel_open_fd(SpiceChannel *channel, int fd)
@@ -2313,7 +2317,7 @@
     SpiceChannelPrivate *c = SPICE_CHANNEL_GET_PRIVATE(channel);
 
     g_return_val_if_fail(c != NULL, FALSE);
-    g_return_val_if_fail(fd >= 0, FALSE);
+    g_return_val_if_fail(fd >= -1, FALSE);
 
     c->fd = fd;
 
diff -u -r spice-gtk-0.10/gtk/spice-client-glib-usb-acl-helper.c spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/spice-client-glib-usb-acl-helper.c
--- spice-gtk-0.10/gtk/spice-client-glib-usb-acl-helper.c	2012-02-22 23:57:54.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/spice-client-glib-usb-acl-helper.c	2012-02-29 17:32:47.000000000 +0100
@@ -161,6 +161,25 @@
     g_main_loop_quit(loop);
 }
 
+/* Not available in polkit < 0.101 */
+#if !HAVE_POLKIT_AUTHORIZATION_RESULT_GET_DISMISSED
+static gboolean
+polkit_authorization_result_get_dismissed(PolkitAuthorizationResult *result)
+{
+    gboolean ret;
+    PolkitDetails *details;
+
+    g_return_val_if_fail(POLKIT_IS_AUTHORIZATION_RESULT(result), FALSE);
+
+    ret = FALSE;
+    details = polkit_authorization_result_get_details(result);
+    if (details != NULL && polkit_details_lookup(details, "polkit.dismissed"))
+        ret = TRUE;
+
+    return ret;
+}
+#endif
+
 static void check_authorization_cb(PolkitAuthority *authority,
                                    GAsyncResult *res, gpointer data)
 {
diff -u -r spice-gtk-0.10/gtk/spice-session.c spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/spice-session.c
--- spice-gtk-0.10/gtk/spice-session.c	2012-02-13 17:51:01.000000000 +0100
+++ spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729/gtk/spice-session.c	2012-02-29 17:32:47.000000000 +0100
@@ -1042,12 +1042,15 @@
 /**
  * spice_session_open_fd:
  * @session:
- * @fd: a file descriptor
+ * @fd: a file descriptor (socket) or -1
  *
  * Open the session using the provided @fd socket file
  * descriptor. This is useful if you create the fd yourself, for
  * example to setup a SSH tunnel.
  *
+ * If @fd is -1, a valid fd will be requested later via the
+ * SpiceChannel::open-fd signal.
+ *
  * Returns:
  **/
 gboolean spice_session_open_fd(SpiceSession *session, int fd)
@@ -1055,14 +1058,17 @@
     SpiceSessionPrivate *s = SPICE_SESSION_GET_PRIVATE(session);
 
     g_return_val_if_fail(s != NULL, FALSE);
-    g_return_val_if_fail(fd >= 0, FALSE);
+    g_return_val_if_fail(fd >= -1, FALSE);
 
     spice_session_disconnect(session);
+    s->disconnecting = FALSE;
 
     s->client_provided_sockets = TRUE;
 
     g_warn_if_fail(s->cmain == NULL);
     s->cmain = spice_channel_new(session, SPICE_CHANNEL_MAIN, 0);
+
+    glz_decoder_window_clear(s->glz_window);
     return spice_channel_open_fd(s->cmain, fd);
 }
 
Solo in spice-gtk-0.10/gtk: vncdisplaykeymap_osx2xtkbd.c
Solo in spice-gtk-0.10/gtk: vncdisplaykeymap_win322xtkbd.c
Solo in spice-gtk-0.10/gtk: vncdisplaykeymap_xorgevdev2xtkbd.c
Solo in spice-gtk-0.10/gtk: vncdisplaykeymap_xorgkbd2xtkbd.c
Solo in spice-gtk-0.10/gtk: vncdisplaykeymap_xorgxquartz2xtkbd.c
Solo in spice-gtk-0.10/gtk: vncdisplaykeymap_xorgxwin2xtkbd.c
Solo in spice-gtk-0.10/: gtk-doc.make
Solo in spice-gtk-0.10/: intltool-extract.in
Solo in spice-gtk-0.10/: intltool-merge.in
Solo in spice-gtk-0.10/: intltool-update.in
Solo in spice-gtk-0.10/m4: gtk-doc.m4
Solo in spice-gtk-0.10/m4: libtool.m4
Solo in spice-gtk-0.10/m4: lt~obsolete.m4
Solo in spice-gtk-0.10/m4: ltoptions.m4
Solo in spice-gtk-0.10/m4: ltsugar.m4
Solo in spice-gtk-0.10/m4: ltversion.m4
Solo in spice-gtk-9473c2607941b1e5032b01f1cb580fdf935e5729: .mailmap
Solo in spice-gtk-0.10/: Makefile.in
Solo in spice-gtk-0.10/po: Makefile.in.in
Solo in spice-gtk-0.10/python_modules: Makefile.in
Solo in spice-gtk-0.10/spice-protocol: aclocal.m4
Solo in spice-gtk-0.10/spice-protocol: AUTHORS
Solo in spice-gtk-0.10/spice-protocol: ChangeLog
Solo in spice-gtk-0.10/spice-protocol: config.h.in
Solo in spice-gtk-0.10/spice-protocol: configure
Solo in spice-gtk-0.10/spice-protocol: configure.ac
Solo in spice-gtk-0.10/spice-protocol: COPYING
Solo in spice-gtk-0.10/spice-protocol: INSTALL
Solo in spice-gtk-0.10/spice-protocol: install-sh
Solo in spice-gtk-0.10/spice-protocol: Makefile.am
Solo in spice-gtk-0.10/spice-protocol: Makefile.in
Solo in spice-gtk-0.10/spice-protocol: missing
Solo in spice-gtk-0.10/spice-protocol: NEWS
Solo in spice-gtk-0.10/spice-protocol: README
Solo in spice-gtk-0.10/spice-protocol: spice
Solo in spice-gtk-0.10/spice-protocol: spice-protocol.pc.in
Solo in spice-gtk-0.10/: .tarball-version
Solo in spice-gtk-0.10/vapi: Makefile.in
Solo in spice-gtk-0.10/: .version
