diff --git a/src/properties.vala b/src/properties.vala
index 5ae240f..7de9321 100644
--- a/src/properties.vala
+++ b/src/properties.vala
@@ -173,11 +173,8 @@ private class Boxes.Properties: Boxes.UI {
         toolbar_box.set_size_request (50, (int) Boxes.Topbar.height);
         toolbar_box.add (toolbar);
 
-        var box = new Gtk.HBox (false, 5);
-        box.add (new Gtk.Image.from_icon_name ("go-previous-symbolic", Gtk.IconSize.MENU));
         toolbar_label = new Gtk.Label ("label");
-        box.add (toolbar_label);
-        back = new ToolButton (box, null);
+        back = new ToolButton (toolbar_label, null);
         back.get_style_context ().add_class ("raised");
         back.clicked.connect ((button) => { app.ui_state = UIState.DISPLAY; });
         toolbar.insert (back, 0);
diff --git a/src/topbar.vala b/src/topbar.vala
index 044d1a4..40954a0 100644
--- a/src/topbar.vala
+++ b/src/topbar.vala
@@ -19,7 +19,7 @@ private class Boxes.Topbar: Boxes.UI {
     private GtkClutter.Actor gtk_actor; // the topbar box
     public Notebook notebook;
 
-    private Gtk.Spinner spinner;
+    private Gtk.Label spinner;
     private Gtk.ToggleToolButton select_btn;
     private Gtk.ToolButton cancel_btn;
     private Gtk.ToolButton spinner_btn;
@@ -81,8 +81,7 @@ private class Boxes.Topbar: Boxes.UI {
         toolbar_end.icon_size = Gtk.IconSize.MENU;
         toolbar_end.get_style_context ().add_class (Gtk.STYLE_CLASS_MENUBAR);
 
-        spinner = new Gtk.Spinner ();
-        spinner.start ();
+        spinner = new Gtk.Label ("...");
         spinner_btn = new Gtk.ToolButton (spinner, null);
         spinner_btn.valign = Gtk.Align.CENTER;
         spinner_btn.get_style_context ().add_class ("raised");
