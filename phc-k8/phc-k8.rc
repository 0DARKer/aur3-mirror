#!/bin/bash
shopt -s nullglob

if [ "$1" = set ]; then
	. /etc/conf.d/phc-k8
	if [ -n "$VIDS" ] && ! grep -wq nophc /proc/cmdline; then
		for i in /sys/devices/system/cpu/cpu*/cpufreq/phc_vids; do
			echo $VIDS > "$i"
		done
	fi
else

. /etc/rc.conf
. /etc/rc.d/functions

case "$1" in
    start)
	. /etc/conf.d/phc-k8
	if [ -z "$VIDS" ]; then
	    printhl 'Please edit /etc/conf.d/phc-k8'
	    exit 1
	fi
	stat_busy 'Setting PHC VIDs'
	for i in /sys/devices/system/cpu/cpu*/cpufreq/phc_vids; do
	    echo $VIDS > "$i"
	done && stat_done || stat_fail
	;;
    stop)
	stat_busy 'Resetting default PHC VIDs'
	for i in /sys/devices/system/cpu/cpu*/cpufreq; do
	    [ -e "$i/phc_default_vids" -a -e "$i/phc_vids" ] && cat "$i/phc_default_vids" > "$i/phc_vids"
	done && stat_done || stat_fail
	;;
    status)
	check_off () {
	    for i in /sys/devices/system/cpu/cpu*/cpufreq; do
		cmp -s "$i"/phc_{default_,}vids
		[ $? != 1 ] || return;
	    done
	}
	check_on () {
	    for i in /sys/devices/system/cpu/cpu*/cpufreq/phc_vids; do
		[ "$VIDS" = "$(< $i)" ] || return;
	    done
	}
	stat_busy 'PHC status'
	. /etc/conf.d/phc-intel
	if check_off; then
	    status_stopped
	elif check_on; then
	    status_started
	else
	    stat_fail
	fi
	;;
    setup)
	LOG='/var/log/phc-k8.log'
	fail () {
	    stat_fail
	    printhl "Look at $LOG to find out what went wrong"
	    exit 1
	}
	stat_busy 'Removing old phc-k8 modules'
	for i in /lib/modules/*; do
	    if [ -d "$i/updates/kernel/arch/x86/kernel/cpu/cpufreq/" -a ! -d "$i/kernel" ]; then
		rm -f "$i"/updates/kernel/arch/x86/kernel/cpu/cpufreq/{mperf,phc-k8}.ko
		rmdir -p --ignore-fail-on-non-empty "$i/updates/kernel/arch/x86/kernel/cpu/cpufreq/"
	    fi
	done
	stat_done
	stat_busy 'Compiling new phc-k8 module'
	cd /usr/src/phc-k8/
	make &>$LOG && stat_done || fail
	stat_busy 'Installing new phc-k8 module'
	make install &>>$LOG && stat_done || fail
	stat_busy 'Cleaning up'
	make clean &>>$LOG && stat_done || fail
	;;
    *)
	echo "usage: $0 {start|stop|status|setup|set}"
esac

fi
