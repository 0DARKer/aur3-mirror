# Maintainer: Christoph Vigano <mail at cvigano dot de>
# Contributor: Matthew Bauer <mjbauer95 at gmail dot com>
# Contributor: flamelab
# Contributor: Bernardo Barros <bernardobarros at NOSPAM dot gmail dot com>

pkgname=gnash-git
pkgver=20120122
pkgrel=1
pkgdesc="An open source flashplayer - git version"
arch=('i686' 'x86_64')
url="http://www.gnu.org/software/gnash/"
license=('GPL3')
depends=('agg' 'atk' 'libxml2' 'curl' 'libtool' 'ffmpeg' 'pango' 'libxi' 'libva' 'libdca' 'speex'  'gstreamer0.10-base' 'boost-libs' 'gtk2' 'giflib' 'hicolor-icon-theme' 'desktop-file-utils')
makedepends=('libldap' 'sdl' 'libjpeg' 'libpng'
             'fontconfig' 'libva' 'libxinerama'
             'libldap' 'xulrunner' 'git')
provides=('gnash-common' 'gnash-gtk')
conflicts=('gnash-common' 'gnash-gtk' 'gnash-bzr')
install='gnash-git.install'

_gitroot='git://git.savannah.gnu.org/gnash.git'
_gitname='gnash'

build() {
  msg "Connecting to GIT server...."

  if [ -d $_gitname ] ; then
    cd $_gitname && git pull origin
    msg "The local files are updated."
  else
    git clone $_gitroot $_gitname
  fi

  msg "GIT checkout done or server timeout"
  msg "Starting make..."

  rm -rf "$srcdir"/$_gitname-build
  mkdir "$srcdir"/$_gitname-build
  cd "$srcdir/"$_gitname && ls -A1 --indicator-style=none | grep -v "^.git" | xargs -d '\n' cp -r -t ../$_gitname-build # do not copy over the .git folder
  cd "$srcdir"/$_gitname-build

  sh autogen.sh 

  sed -i 's/liblibva/libva/g' configure
  # sed -i 's/use_libva=no/use_libva=yes/g' configure.ac
  # sed -i 's/use_vliba_x11=no/use_vliba_x11=yes/g' configure.ac
  LIBVA_CONFIG=/usr/include/va

  ./configure --prefix=/usr  --sysconfdir=/etc \
              --with-npapi-plugindir=/usr/lib/mozilla/plugins \
              --with-plugindir=/usr/lib/mozilla/plugins \
              --enable-gui=sdl,gtk \
              --enable-z \
              --enable-jpeg \
              --enable-renderer=agg \
              --enable-media=gst,ffmpeg \
              --enable-hwaccel=vaapi \
              --enable-write \
              --disable-kparts3 \
              --disable-kparts4 \
              --disable-cygnal \
                    
                    
}

package() {
  cd "$srcdir/$_gitname-build"
  
  make DESTDIR="$pkgdir" install 
  make DESTDIR="$pkgdir" install-plugins 
}

