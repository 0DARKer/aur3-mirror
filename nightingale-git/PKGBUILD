# Maintainer: Matt Parnell/ilikenwf
# Contributor: Matt Parnell/ilikenwf

# Note: the maintainer/contributor of this package is also the
# de-facto head developer of the nightingale project...
# this script thus gets some extra TLC since I use arch

# If you're reading this, WE NEED MORE DEVELOPERS!
# If you know C++, XUL, and are familiar with the mozilla SDK,
# contact parwok@gmail.com or join our irc on MozNet #nightingale
# or the forums at getnightingale.com/forum

pkgname=nightingale-git
pkgver=20130217
pkgrel=1
pkgdesc="Community port of Songbird to be more Linux native, up to date, and open."
arch=('i686' 'x86_64')
url="http://getnightingale.com/"
license=('GPL2' 'MPL' 'BSD')
makedepends=('git' 'subversion' 'python' 'unzip' 'libidl2' 'zip' 'glib2')
depends=('gstreamer0.10-base-plugins' 'gstreamer0.10' 'gstreamer0.10-base' 'gtk2' 'libxt' 'sqlite3' 'gstreamer0.10-good-plugins' 
		 'gstreamer0.10-bad-plugins' 'gstreamer0.10-ffmpeg' 'gstreamer0.10-ugly-plugins' 'taglib>=1.8')
optdepends=()
conflicts=()
provides=('nightingale' 'nightingale-git')
install=nightingale.install

if [ "$CARCH" = x86_64 ]; then
	source=('Nightingale.desktop' 
			'http://downloads.sourceforge.net/project/ngale/1.12-Build-Deps/linux-x86_64-1.12-20130101-release.tar.lzma' 
			'http://downloads.sourceforge.net/project/ngale/1.12-Build-Deps/vendor-1.12.zip')
	md5sums=('7741cc247648e95dd9dad8c953616757'
			 'cd11cba3d239f577520169e4b987258a'
			 '208c81bfd972ae4cb1f350688da304e6')
else
	source=('Nightingale.desktop'
			'http://downloads.sourceforge.net/project/ngale/1.12-Build-Deps/linux-i686-1.12-20130101-release.tar.lzma' 
			'http://downloads.sourceforge.net/project/ngale/1.12-Build-Deps/vendor-1.12.zip')
	md5sums=('7741cc247648e95dd9dad8c953616757'
			 '13c198824d32f7946d6190eff5d58d40'
			 '208c81bfd972ae4cb1f350688da304e6')

fi

_no_update=n
_gitroot="git://github.com/nightingale-media-player/nightingale-hacking.git"
_gitname="nightingale"
_branch="sb-trunk-oldxul"

fetch_sources() {
	
	# NOTE: master is in development, it WILL NOT BUILD
	if [ ! -d "$_gitname" ]; then
		cd "$srcdir"
		msg2 "Cloning initial copy of Nightingale sources..."
		warning "This may take some time depending on your available bandwidth."

		git clone "$_gitroot" "$_gitname"

		_no_update="y" # update is not necessary
	fi

	if [ "$_no_update" = "y" ]; then
		msg2 "Skipping tree update..."
	else
		cd "$srcdir/$_gitname"

		msg2 "Updating local tree..."
		if git fetch; then
			msg2 "Attempting to merge changes..."
			cd "$srcdir/$_gitname"
			git checkout -f "$_branch"
			git merge "origin/$_branch"
			
			msg2 "Fixing local repository..."
			git checkout -f "$_branch"
			git clean -xdf
			git reset --hard "origin/$_branch"
		else
			error "Update failed..."
		fi
					
		warning "Press ENTER if you want to continue or CTRL+C to abort..."
		read
	fi

	cd "$srcdir/$_gitname"
	git checkout -f "$_branch"
}

do_package() {
	mkdir -p ${pkgdir}/opt/nightingale/
	cd "${srcdir}/$_gitname/compiled/dist"
	cp -a * ${pkgdir}/opt/nightingale/

	install -d --group=users ${pkgdir}/opt/nightingale

	chmod 755 ${pkgdir}/opt/nightingale/nightingale
	chmod 755 ${pkgdir}/opt/nightingale/nightingale-bin
	chmod 755 ${pkgdir}/opt/nightingale/xulrunner/xulrunner
	chmod 755 ${pkgdir}/opt/nightingale/xulrunner/xulrunner-bin
	chmod -R a+r ${pkgdir}/opt/nightingale
	install -D "${srcdir}/$_gitname/compiled/dist"/chrome/icons/default/default.xpm \
		 ${pkgdir}/usr/share/pixmaps/nightingale.xpm
	install -D -m644 ${srcdir}/Nightingale.desktop \
		   ${pkgdir}/usr/share/applications/Nightingale.desktop
}

build() {
	# get the source
	fetch_sources
	
	cd "${srcdir}/nightingale/dependencies"
	
	# just in case we already have the symlinks there...to avoid errors
	rm -rf "linux-$CARCH" &> /dev/null
	rm -rf vendor &> /dev/null
	
	ln -s "${srcdir}/linux-$CARCH" ./
	ln -s "${srcdir}/vendor" ./
	
	cd "${srcdir}/$_gitname"

	# our gstreamer path, since we use system libs :)
	export GST_PLUGIN_PATH="/usr/lib/gstreamer-0.10"
	
	# use our own gstreamer libs
	echo 'ac_add_options --with-media-core=gstreamer-system' >> nightingale.config
	
	# gcc 4.7 fix - be permissive, for now...I guess we should fix
	# the actual code sometime...
	export CXXFLAGS="-fpermissive"

	# clobber just in case we're rebuilding, as we've probably pulled new code down
	make clobber
	
	# build it
	make

	# make the package
	do_package
	
	cd "${srcdir}/$_gitname"
	
	# copy the extensions first
	if [ -d ../xpi-stage ]; then
		rm -rf ../xpi-stage
	fi
	cp -a "${srcdir}/$_gitname/compiled/xpi-stage" "${srcdir}"
	
	# free up space
	make -f nightingale.mk clobber
	
	msg "Note that the last.FM addon is in $srcdir/xpi-stage/audioscrobbler."
	msg "If you want to use it, you'll need to install it manually after running Nightingale."
	msg "There are more addons at http://addons.getnightingale.com"
	msg "--------------------------------------------------------------"
	msg "If you have issues, drop by http://forum.getnightingale.com or"
	msg "#nightingale on MozNet IRC"
	
}
