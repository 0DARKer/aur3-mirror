# Maintainer: Matt Parnell/ilikenwf
# Contributor: Matt Parnell/ilikenwf

# Note: the maintainer/contributor of this package is also the
# de-facto head developer of the nightingale project...
# this script thus gets some extra TLC since I use arch

# If you're reading this, WE NEED MORE DEVELOPERS!
# If you know C++, XUL, and are familiar with the mozilla SDK,
# contact parwok@gmail.com or join our irc on MozNet #nightingale
# or the forums at getnightingale.com/forum

pkgname=nightingale-git
pkgver=20110927
pkgrel=1
pkgdesc="Community port of nightingale to be more Linux native. Working git version is nightingale 1.8 compatible."
arch=('i686' 'x86_64')
url="http://getnightingale.com/"
license=('GPL2' 'MPL' 'BSD')
makedepends=('git' 'bash' 'subversion' 'python2')
depends=('libxrender' 'libxext' 'libx11' 'libxmu' 'gstreamer0.10' 'gstreamer0.10-base' 'gtk2' 'libxt' 'sqlite3'
	 'nss' 'libidl2' 'gstreamer0.10-good-plugins' 'taglib')
optdepends=('gstreamer0.10-bad-plugins: support for more formats'
	    'gstreamer0.10-ffmpeg: support for more formats'
	    'gstreamer0.10-ugly-plugins: support for more formats')
conflicts=('nightingale' 'nightingale-auto-beta' 'nightingale-auto-nightly' 'nightingale-bin' 'nightingale-nightly' 'nightingale-nightly-bin'
	   'nightingale-nightly-latest' 'nightingale-stable-bin')
provides=('nightingale' 'nightingale-git')
install=nightingale.install
source=('proper_gst_path_archlinux.patch' 'Nightingale.desktop')
md5sums=('93d7e61400661def1957b3be9243f332'
         '7741cc247648e95dd9dad8c953616757')

_gitroot="git://github.com/ilikenwf/nightingale-hacking.git"
_gitname="nightingale"

fetch_sources() {
	# NOTE: master is in development, it WILL NOT BUILD
	if [ ! -d "$_gitname" ]; then
		cd "$srcdir"
		msg2 "Cloning initial copy of zen-sources..."
		warning "This may take some time depending on your available bandwidth."

		git clone --depth 1 "$_gitroot" "$_gitname"

		_no_update="y" # update is not necessary
	fi

	cd "$srcdir/$_gitname"

	msg2 "Updating local tree..."
	if git fetch; then
		msg2 "Attempting to merge changes..."

		if ! git merge origin/nightingale-1.8; then
			error "Merging failed..."

			msg2 "Fixing local repository..."
			git checkout -f "nightingale-1.8"
			git clean -xdf
			git reset --hard "origin/nightingale-1.8"
		fi
	else
		error "Update failed..."
	fi
	
	msg "Done doing all of the work with git..."
}

build() {
	
	# get the source
	fetch_sources
	
	cd "$srcdir/$_gitname"

	# I know this is lazy, but needing this svn stuff is temporary
	# The below if statement/block will be removed in the next version
	if [ ! -d dependencies/linux-"$(arch)" ] ; then
		msg "Grabbing a few Nightingale specific dependencies"
		msg "Don't worry, This won't be necessary with the next version, hopefully"
		msg "A lot of what we're grabbing here aren't even used..."
		
		cd dependencies
		
		# Seriously, songbird devs...you didn't have to make it use all this static crap for linux builds...
		# understandable for Mac and Windows...but I mean, come on...
		# as the dev of nightingale, I'm working to not need this cruft, since our system provides these pkgs
		
		svn co http://ngale.svn.sourceforge.net/svnroot/ngale/branches/dependencies/Nightingale1.8/linux-"$(arch)"
		cd "$srcdir/$_gitname"
	fi

	# our gstreamer path, since we use system libs :)
	export GST_PLUGIN_PATH="/usr/lib/gstreamer-0.10"
	
	# use our own gstreamer libs
	grep -sq gstreamer-system nightingale.config || ( echo 'ac_add_options --with-media-core=gstreamer-system'  nightingale.config )

	# force the buildscripts to use python2 to avoid breakage
	export PYTHON="/usr/bin/python2"

	# clobber just in case we're rebuilding, as we've probably pulled new code down
	make -f nightingale.mk clobber
	
	# build it
	make -f nightingale.mk

	# edit the launcher so it always uses the correct gstreamer path...
	# without this music playback wouldn't work
	# I'm using an arch specific patch so we don't have to use the generic one
	patch -Np0 -i ../proper_gst_path_archlinux.patch compiled-release-"$(arch)"/dist/nightingale


	# make the package
	package
}

package() {
  mkdir -p ${pkgdir}/opt/nightingale/
  cd "$srcdir/$_gitname/compiled-release-$(arch)/dist"
  cp -a * ${pkgdir}/opt/nightingale/

  install -d --group=users ${pkgdir}/opt/nightingale

  chmod 755 ${pkgdir}/opt/nightingale/nightingale
  chmod 755 ${pkgdir}/opt/nightingale/nightingale-bin
  chmod 755 ${pkgdir}/opt/nightingale/xulrunner/xulrunner
  chmod 755 ${pkgdir}/opt/nightingale/xulrunner/xulrunner-bin
  chmod -R a+r ${pkgdir}/opt/nightingale
  install -D "$srcdir/$_gitname/compiled-release-$(arch)/dist"/chrome/icons/default/default.xpm \
	     ${pkgdir}/usr/share/pixmaps/nightingale.xpm
  install -D -m644 ${srcdir}/Nightingale.desktop \
		   ${pkgdir}/usr/share/applications/Nightingale.desktop
}
