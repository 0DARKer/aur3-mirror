# PKGBUILD generated by pacpan
pkgname=perl-pod-abstract
_realname=Pod-Abstract
pkgver=0.19
pkgrel=1
pkgdesc="no description available"
arch=(i686 x86_64)
license=('unknown: check http://search.cpan.org/src/BLILBURNE/Pod-Abstract-0.19/README.txt')
url="http://search.cpan.org/~blilburne/Pod-Abstract"
options=(!emptydirs)

depends=('perl' 'perl-io-string' 'perl-task-weaken')

#provides=('Pod-Abstract')
provides=('pod-abstract=0.19' 'Pod::Abstract::Node=0.19' 'perl-pod-abstract-node=0.19' 'Pod::Abstract::Tree=0.19' 'perl-pod-abstract-tree=0.19' 'Pod::Abstract::Path=0.19' 'perl-pod-abstract-path=0.19' 'Pod::Abstract::Filter::find=0.19' 'perl-pod-abstract-filter-find=0.19' 'Pod::Abstract::Serial=0.19' 'perl-pod-abstract-serial=0.19' 'Pod::Abstract::Filter::overlay=0.19' 'perl-pod-abstract-filter-overlay=0.19' 'Pod::Abstract=0.19' 'perl-pod-abstract=0.19' 'Pod::Abstract::Parser=0.19' 'perl-pod-abstract-parser=0.19' 'Pod::Abstract::Filter::unoverlay=0.19' 'perl-pod-abstract-filter-unoverlay=0.19' 'Pod::Abstract::Filter::cut=0.19' 'perl-pod-abstract-filter-cut=0.19' 'Pod::Abstract::Filter::summary=0.19' 'perl-pod-abstract-filter-summary=0.19' 'Pod::Abstract::Filter=0.19' 'perl-pod-abstract-filter=0.19' 'Pod::Abstract::Filter::sort=0.19' 'perl-pod-abstract-filter-sort=0.19' 'Pod::Abstract::Filter::uncut=0.19' 'perl-pod-abstract-filter-uncut=0.19' 'Pod::Abstract::Filter::clear_podcmds=0.19' 'perl-pod-abstract-filter-clear_podcmds=0.19' 'Pod::Abstract::Filter::add_podcmds=0.19' 'perl-pod-abstract-filter-add_podcmds=0.19' 'Pod::Abstract::BuildNode=0.19' 'perl-pod-abstract-buildnode=0.19' 'Pod::Abstract::Filter::number_sections=0.19' 'perl-pod-abstract-filter-number_sections=0.19')

source=(http://search.cpan.org/CPAN/authors/id/B/BL/BLILBURNE/Pod-Abstract-0.19.tar.gz)
md5sums=('b7cfa947b219960e38699425d68a29d0')

build() {
  _expected_dir="${srcdir}/${_realname}-${pkgver}"
  if [ -d "$_expected_dir" ]; then
    cd "$_expected_dir"
  else
    _expected_dir="${srcdir}/$(bsdtar -t -f $(basename $source) | head -n1)"
    if [ -d "$_expected_dir" ]; then
      cd "$_expected_dir"
    else
      _makefile=$(find $srcdir -iname Makefile.PL)
      if [ ! -z "$_makefile" ]; then
        _expected_dir=$(dirname $_makefile)
        if [ -d "$_expected_dir" ]; then
          cd "$_expected_dir"
        else
          echo "[1;31mERROR[0m unable to detect source directory"
          echo "[1;34m-->[0m this is often due to CPAN's lack of standard naming conventions"
          echo "[1;34m-->[0m it may be possible to fix this by adjusting the build function in the PKGBUILD"
        fi
      fi
    fi
  fi
  # install module in vendor directories.
  PERL_MM_USE_DEFAULT=1 perl Makefile.PL INSTALLDIRS=vendor || return 1
  make  || return 1
  make install DESTDIR=${pkgdir} || return 1

  # remove perllocal.pod and .packlist
  find ${pkgdir} -name perllocal.pod -delete
  find ${pkgdir} -name .packlist -delete
}

# vim:set ts=2 sw=2 et:

