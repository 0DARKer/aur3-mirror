#!/bin/sh

#
# This script is based on the interactive modeller installer, 
# ant it's specialized for Arch Linux. 
#
# All questions are given default AL paths and values.
# 


# Function to guess Unix system architecture from 'uname' output
guess_arch () {
  U_M=`uname -m 2>/dev/null` || U_M=UNK
  U_S=`uname -s 2>/dev/null` || U_S=UNK
  U_P=`uname -p 2>/dev/null` || U_P=UNK

  MACHID=${U_M}:${U_S}:${U_P}

  DEFexectype=1
  case "${MACHID}" in
    i686:Linux:*)
      # Linux Pentium-class PC
      DEFexectype=1
      ;;
    ia64:Linux:*)
      # Linux Itanium-class (64-bit) PC
      DEFexectype=5
      ;;
    x86_64:Linux:*)
      # Linux Opteron or EM64T (64-bit) PC
      DEFexectype=6
      ;;
    alpha:*:alpha)
      # Alpha box
      DEFexectype=3
      ;;
    i386:*BSD:*)
      # Free/Net/Open BSD running on a PC - usually Linux-compatible
      DEFexectype=1
      ;;
    *:AIX:powerpc)
      # IBM AIX box
      DEFexectype=4
      ;;
    *:SunOS:sparc)
      # Sun Solaris running on the Sparc architecture
      DEFexectype=2
      ;;
  esac
}

# Arguments
pkgver=$1
pkgdir=$2

# Default Values
VER=${pkgver}
MOD="MODELLER ${VER}"
PROGRAM=mod${VER}
exectype1="i386-intel8"
exectype6="x86_64-intel8"
DEFmodinstall=/usr/share/modeller #${VER}

# Architecture
guess_arch
exectype=$DEFexectype
if [ $exectype = 1 ] ; then EXECUTABLE_TYPE=$exectype1 ; fi
if [ $exectype = 2 ] ; then EXECUTABLE_TYPE=$exectype2 ; fi
if [ $exectype = 3 ] ; then EXECUTABLE_TYPE=$exectype3 ; fi
if [ $exectype = 4 ] ; then EXECUTABLE_TYPE=$exectype4 ; fi
if [ $exectype = 5 ] ; then EXECUTABLE_TYPE=$exectype5 ; fi
if [ $exectype = 6 ] ; then EXECUTABLE_TYPE=$exectype6 ; fi
if [ $exectype = 7 ] ; then EXECUTABLE_TYPE=$exectype7 ; fi

# Path
MODINSTALL=$DEFmodinstall
pkgMODINSTALL=$pkgdir/$DEFmodinstall

# echo
# echo "Installing Modeller files ..."

mkdir -p "${pkgMODINSTALL}"
cp -pR README INSTALLATION doc examples modlib src "${pkgMODINSTALL}"
mkdir -p "${pkgMODINSTALL}/bin"
cp -pR bin/*.top bin/modslave.py bin/lib bin/${PROGRAM}_${EXECUTABLE_TYPE} \
    "${pkgMODINSTALL}/bin"
mkdir -p "${pkgMODINSTALL}/lib"
cp -pR lib/${EXECUTABLE_TYPE} "${pkgMODINSTALL}/lib"

# echo "Creating Modeller startup scripts ..."

sed -e "s;EXECUTABLE_TYPE${VER}=xxx;EXECUTABLE_TYPE${VER}=$EXECUTABLE_TYPE;" \
    -e "s;MODINSTALL${VER}=xxx;MODINSTALL${VER}=\"$MODINSTALL\";" \
    bin/modscript > "${pkgMODINSTALL}/bin/${PROGRAM}"
sed -e "s;@TOPDIR\@;\"$MODINSTALL\";" \
    -e "s;@EXETYPE\@;$EXECUTABLE_TYPE;" \
    bin/modpy.sh.in > "${pkgMODINSTALL}/bin/modpy.sh"
chmod a+x "${pkgMODINSTALL}/bin/${PROGRAM}" "${pkgMODINSTALL}/bin/modpy.sh"

# echo "Configuring install ..."
config="${pkgMODINSTALL}/modlib/modeller/config.py"
#echo "install_dir = r'${MODINSTALL}'" > ${config}
echo "license = ''" > ${config}

mkdir -p "${pkgdir}/usr/bin/"
ln -sf ${MODINSTALL}/bin/${PROGRAM} ${pkgdir}/usr/bin/modeller

# echo
# echo "Use the /usr/bin/${PROGRAM} script to run Modeller."
# echo
# echo "You can also use Modeller as a Python module, if you have Python"
# echo "installed. Do this using the script:"
# echo "${MODINSTALL}/bin/modpy.sh"
# echo "Simply add your regular Python command line after this script, e.g."
# echo "${MODINSTALL}/bin/modpy.sh python myscript.py"
# echo
# echo "Alternatively, you could ensure that the following directories containing"
# echo "Python modules are in your Python path:"
# echo "${MODINSTALL}/modlib"
# echo "${MODINSTALL}/lib/${EXECUTABLE_TYPE}"
# echo "(e.g. by setting the PYTHONPATH environment variable) and that the"
# echo "following directory containing dynamic libraries is in your dynamic"
# echo "library search path:"
# echo "${MODINSTALL}/lib/${EXECUTABLE_TYPE}"
# echo "(e.g. by setting the LD_LIBRARY_PATH variable (LIBPATH on AIX systems)."
# echo
# echo "Documentation in HTML format can be found in the"
# echo "$MODINSTALL/doc directory."
# echo
# echo "A simple homology modeling test case is in examples/automodel/."
# echo 
# echo
# echo "Happy modeling!"
# echo "MODELLER Team, 2010/04/21, r7145"
# echo
