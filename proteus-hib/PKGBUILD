# Maintainer: Sam S. <smls75@gmail.com>

pkgname=proteus-hib
pkgver=0_20130530
_hibver=05302013
pkgrel=1
pkgdesc='An audio-visual exploration game (Humble Bundle version)'
url='http://www.visitproteus.com/'
arch=('i686' 'x86_64')
license=('custom:commercial')
if [ $CARCH == i686 ]; then
  depends=('sdl' 'sdl_image' 'cairo' 'libogg' 'libvorbis' 'pixman' \
           'fontconfig' 'freetype2')
  optdepends=('sdl-nokeyboardgrab: support for alt-tabbing out of fullscreen')
else
  depends=('lib32-sdl' 'lib32-sdl_image' 'lib32-cairo' 'lib32-libogg' \
           'lib32-libvorbis' 'lib32-pixman' 'lib32-fontconfig' \
           'lib32-freetype2')
  optdepends=('lib32-sdl-nokeyboardgrab: support for alt-tabbing out of fullscreen')
fi
source=('proteus-hib.desktop')
md5sums=('4ddd7b894b490e3bbd32a83922e111b3')
options=('!strip' '!upx')
PKGEXT='.pkg.tar'

_installer="proteus-${_hibver}-bin"
_installer_md5='73bff459dd26ae1faa0c4e1f3f273831';

build() {
  cd $srcdir

  # Get installer
  _get_local_source "${_installer}" --md5 "${_installer_md5}" || {
    error "Unable to find the game installer. Please download it from your
           Humble Bundle page, and place it into one of the above locations."
    exit 1; }

  # Extract installer
  msg "Starting setup..."
  rm -rf data
  while read line; do echo -n '.'; done < <(  # show progress as dots
    bsdtar -xvf "${_installer}" data 2>&1
  ); echo

  # Remove bundled libraries (use distro versions instead)
  cd "data/lib"
  rm libogg.so.0 libvorbis.so.0 libvorbisfile.so.3 libSDL-1.2.so.0 \
     libSDL_image-1.2.so.0 libcairo.so.2 libpixman-1.so.0 \
     libfontconfig.so.1 libfreetype.so.6
}

package() {
  cd $srcdir
  _target="/opt/Proteus"

  # Install desktop entry
  install -Dm644 "${pkgname}.desktop" \
                 "${pkgdir}/usr/share/applications/${pkgname}.desktop"

  # Install icon
  install -Dm644 "data/Proteus.png" "${pkgdir}/usr/share/pixmaps/proteus.png"

  # Install game files
  mkdir -p "${pkgdir}${_target}"
  mv -T "data" "${pkgdir}${_target}"
  
  # Install launch script
  [ $CARCH == "i686" ] && _arch='x86' || _arch='x86_64'
  echo -e "#!/bin/sh\ncd ${_target} && ./Proteus" > "launcher.sh"
  install -Dm755 "launcher.sh" "${pkgdir}/usr/bin/proteus"
}


###### HELPER FUNCTIONS ######

# Locates a file or folder provided by the user, and symlinks it into $srcdir
_get_local_source() {
  msg "Looking for '$1'..."; rm -f "$srcdir/$1"
  declare -A _search=(['build dir']="$startdir"
                      ['$LOCAL_PACKAGE_SOURCES']="$LOCAL_PACKAGE_SOURCES")
  for _key in "${!_search[@]}"; do local _dir="${_search["$_key"]}"
    echo -n "    - in $_key [${_dir:-<undefined>}] ... ";
    if [[ -z "$_dir" || ! -e "$_dir/$1" ]]; then
      echo "NOT FOUND"
    elif [[ -n $2 && "$(${2#--}sum "$_dir/$1"|awk '{print $1}')" != $3 ]]; then
      echo "CHECKSUM FAILED";
    else
      echo "FOUND"; ln -sfT "$(readlink -f "$_dir/$1")" "$srcdir/$1"; break; fi
  done
  if [ ! -e "$srcdir/$1" ]; then return 1; fi
}
