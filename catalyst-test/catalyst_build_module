#!/bin/bash

kernver=${KERNVER:-$(uname -r)}
arch=${ARCH:-$(uname -m)}
arch=${arch/i686/i386}
catver=whatever



install_module(){
    echo ""
    echo -e '\E[37;44m'"\033[1mBuilding catalyst-${kernver} package for ${kernver} kernel ...\033[0m"
    echo "--------"
    if [ ! -d "/lib/modules/${kernver}/build" ]; then
      echo -e '\E[37;44m'"\033[1mKernel header files are absent: directory /lib/modules/${kernver}/build doesn't exist! Game over\033[0m"
      echo "--------"
      return 1
    fi
    workdir=$(mktemp -du /tmp/catalyst.XXXXXX)
#    set -x
    cp "/usr/share/ati/build_mod" "${workdir}" -R
    cd "$workdir"
    sed -i -e "s/_kernver=.*/_kernver=${kernver}/" PKGBUILD
    if [ "${LOGNAME}" = "root" ]; then
      if [ "${user}" = "root" ]; then
       /usr/bin/makepkg -c --asroot || return 1
     	 else	
    	   chown ${user}:video ${workdir}
    	   chown ${user}:video ${workdir}/* >> /dev/null 2>&1
    	   su - ${user} -c "cd ${workdir} && /usr/bin/makepkg -c" || return 1
      fi
      else
	 /usr/bin/makepkg -c || return 1
    fi
    echo -e '\E[37;44m'"\033[1mOk. catalyst-${kernver} package built succesfully. Installing ...\033[0m"
    echo -e '\E[37;44m'"\033[1mIf it's asking for password - type root password\033[0m"
    su - root -c "/usr/bin/pacman -Ud ${workdir}/catalyst-${kernver}-${catver}-$(uname -m).pkg" || return 1
    rm -rf "${workdir}"
#    set +x
    echo -e '\E[37;44m'"\033[1mDone.\033[0m"
}

build_all_modules(){
    if [ "${LOGNAME}" = "root" ]; then
      echo "Please specify your (unprivileged) user name:"
      read user
    fi
    for p in /lib/modules/*; do
     if [ -d $p/build ] && [ -d $p/kernel ]; then
      /usr/bin/catalyst_build_module ${p##*/lib/modules/} ${user}
     fi
    done
}

remove_module(){
    echo "Removing unused catalyst-{kernver} packages ..."
    for p in /lib/modules/*; do
	if [ ! -d $p/kernel ]; then
	    if [ -e $p/video/fglrx.ko ]; then
		  /usr/bin/pacman -Rd catalyst-${p##*/lib/modules/}
	    fi
	fi
    done
}

remove_all_modules(){
    for p in /lib/modules/*; do
	if [ -e $p/video/fglrx.ko ]; then
	      /usr/bin/pacman -Rd --noconfirm catalyst-${p##*/lib/modules/}
	fi
    done
}


case "$1" in
    help|--help)
        echo "usage: $0 {version|all|remove|remove_all|}"
        echo "- with no specified kernel version it will use the current kernel version to build module"
	echo "- all will try to build fglrx modules for all working system's kernels"
        echo "- remove is removing unused catalyst-{kernver} packages"
        echo "- remove_all is removing all catalyst-{kernver} packages"
        ;;
    all)
	build_all_modules
	;;
    remove)
        remove_module
        ;;
    remove_all)
        remove_all_modules
        ;;
    *)
        test "$1" != "" && kernver="$1"
	if [ "$2" != "" ]; then user="$2"
          elif [ "${LOGNAME}" = "root" ]; then
	      echo "Please specify your (unprivileged) user name:"
	      read user
	fi
        install_module
        ;;
esac

