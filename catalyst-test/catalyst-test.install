no_testing(){
echo "b67d452b67e1e4baee18b65de7643cc0:8e537c1d56ccd588de2c866886490df38148761a24cca5eea7388168d3560bf9:8e1870185082d5dedb2ed53e835104f8d21877485fd7d282d62e8264d7005af38e4c711350d7d5dbdc2cd53e865159a5d74a76135fd0d2828a2b836bd7065af9" > /etc/ati/signature
}

whisperer(){
    echo "----------------------------------------------------------------"
    echo "Automatic re-compilation is enabled now."
    echo "----------------------------------------------------------------"
    echo "Answer 'Yes' whenever pacman ask you about updating"
    echo "'linux-headers' in first place"
    echo "----------------------------------------------------------------"
    echo "Provide headers to your kernel ie:"
    echo "linux-headers if you are using linux."
    echo "Most of custom kernels provides own headers."
    echo "----------------------------------------------------------------"
    echo "Add nomodeset to your kernel line in /boot/grub/menu.lst , ie.:"
    echo "kernel /boot/vmlinuz-linux root=/dev/sda1 ro nomodeset"
    echo "----------------------------------------------------------------"
    echo "You can use the tool 'aticonfig' to generate an xorg.conf file."
    echo "--------------------- ^^^^^^^^^ --------------------------------"
    echo "For more info and troubleshooting visit:"
    echo "http://wiki.archlinux.org/index.php/ATI_Catalyst"
    echo "----------------------------------------------------------------"
}

captain_hook(){
    # add hook fglrx to mkiniticpio
    hooks=$(grep ^HOOKS etc/mkinitcpio.conf | grep fglrx)
    if [ "$hooks" = "" ]; then
        sed 's/^HOOKS="\([^"]*\)"/HOOKS="\1 fglrx"/' -i etc/mkinitcpio.conf
    fi
    #add linux-headers to SyncFirst array of pacman.conf
    heads=$(grep ^SyncFirst etc/pacman.conf | grep linux-headers)
    if [ "$heads" = "" ]; then
	sed '/^SyncFirst/s|$| linux-headers|' -i etc/pacman.conf
    fi
}

check_libdri_so(){
    if [ ! -e usr/lib/xorg/modules/extensions/libdri.so ]; then
        ln -sf usr/lib/xorg/modules/extensions/libdri.xorg usr/lib/xorg/modules/extensions/libdri.so
    fi
}

rm_pxp(){
  # removing pXp support garbage
    #remove /usr/lib/catalystpxp/libGL.so* symlinks and dir
    if [ -d usr/lib/catalystpxp ]; then
      rm usr/lib/catalystpxp/libGL.so* &>/dev/null
      rmdir -p "usr/lib/catalystpxp/" --ignore-fail-on-non-empty &>/dev/null
    fi
    #remove usr/lib/xorg/modules/updates/extensions/libglx.so symlink and dir
    if [ -d usr/lib/xorg/modules/updates ]; then
      rm usr/lib/xorg/modules/updates/extensions/libglx.so &>/dev/null
      rmdir -p "usr/lib/xorg/modules/updates/extensions" --ignore-fail-on-non-empty &>/dev/null
      rmdir -p "usr/lib/xorg/modules/updates" --ignore-fail-on-non-empty &>/dev/null
    fi
}

pre_install(){
    rm_pxp
}

pre_upgrade(){
    rm_pxp
}

post_install(){
    # remove older heads
    sed '/^SyncFirst/s/ *kernel26-headers//' -i etc/pacman.conf

    captain_hook
    usr/bin/catalyst_build_module
    check_libdri_so
    no_testing
    whisperer
}

post_upgrade(){
    captain_hook
    usr/bin/catalyst_build_module
    check_libdri_so
    no_testing
    whisperer
}

pre_remove(){
    usr/bin/catalyst_build_module remove_all
}

post_remove(){
    # If the symlink is dead, remove it
    check_libdri_so
    # remove hook fglrx
    sed '/^HOOKS/s/ *fglrx//' -i etc/mkinitcpio.conf
    # remove heads
    sed '/^SyncFirst/s/ *linux-headers//' -i etc/pacman.conf

    # remove log
    rm -f var/log/catalyst-install.log

    echo "----------------------------------------------------------------"
    echo " Don't forget to recover your original xorg.conf file."
    echo "----------------------------------------------------------------"
}
