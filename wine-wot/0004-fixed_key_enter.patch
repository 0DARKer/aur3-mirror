diff -Naur a/dlls/winex11.drv/keyboard.c b/dlls/winex11.drv/keyboard.c
--- a/dlls/winex11.drv/keyboard.c	2012-03-16 22:57:36.000000000 +0400
+++ b/dlls/winex11.drv/keyboard.c	2012-03-27 06:00:17.053321173 +0400
@@ -1176,31 +1176,6 @@
 }
 
 /***********************************************************************
- *           set_async_key_state
- */
-static void set_async_key_state( const BYTE state[256] )
-{
-    SERVER_START_REQ( set_key_state )
-    {
-        req->tid = GetCurrentThreadId();
-        req->async = 1;
-        wine_server_add_data( req, state, 256 );
-        wine_server_call( req );
-    }
-    SERVER_END_REQ;
-}
-
-static void update_key_state( BYTE *keystate, BYTE key, int down )
-{
-    if (down)
-    {
-        if (!(keystate[key] & 0x80)) keystate[key] ^= 0x01;
-        keystate[key] |= 0x80;
-    }
-    else keystate[key] &= ~0x80;
-}
-
-/***********************************************************************
  *           X11DRV_KeymapNotify
  *
  * Update modifiers state (Ctrl, Alt, Shift) when window is activated.
@@ -1212,11 +1187,12 @@
 void X11DRV_KeymapNotify( HWND hwnd, XEvent *event )
 {
     int i, j;
+    DWORD time = GetCurrentTime();
     BYTE keystate[256];
     WORD vkey;
-    BOOL changed = FALSE;
     struct {
         WORD vkey;
+        WORD scan;
         BOOL pressed;
     } modifiers[6]; /* VK_LSHIFT through VK_RMENU are contiguous */
 
@@ -1244,9 +1220,15 @@
             case VK_LSHIFT:
             case VK_RSHIFT:
                 m = (vkey & 0xff) - VK_LSHIFT;
-                /* Take the vkey from the first keycode we encounter for this modifier */
-                if (!modifiers[m].vkey) modifiers[m].vkey = vkey;
-                if (event->xkeymap.key_vector[i] & (1<<j)) modifiers[m].pressed = TRUE;
+                /* Take the vkey and scan from the first keycode we encounter
+                   for this modifier. */
+                if (!modifiers[m].vkey)
+                {
+                    modifiers[m].vkey = vkey;
+                    modifiers[m].scan = keyc2scan[(i * 8) + j];
+                }
+                if (event->xkeymap.key_vector[i] & (1<<j))
+                    modifiers[m].pressed = TRUE;
                 break;
             }
         }
@@ -1257,20 +1239,16 @@
         int m = vkey - VK_LSHIFT;
         if (modifiers[m].vkey && !(keystate[vkey] & 0x80) != !modifiers[m].pressed)
         {
+            DWORD flags = modifiers[m].vkey & 0x100 ? KEYEVENTF_EXTENDEDKEY : 0;
+            if (!modifiers[m].pressed) flags |= KEYEVENTF_KEYUP;
+
             TRACE( "Adjusting state for vkey %#.2x. State before %#.2x\n",
                    modifiers[m].vkey, keystate[vkey]);
 
-            update_key_state( keystate, vkey, modifiers[m].pressed );
-            changed = TRUE;
+            /* Fake key being pressed inside wine */
+            X11DRV_send_keyboard_input( hwnd, vkey, modifiers[m].scan & 0xff, flags, time );
         }
     }
-
-    if (!changed) return;
-
-    update_key_state( keystate, VK_CONTROL, (keystate[VK_LCONTROL] | keystate[VK_RCONTROL]) & 0x80 );
-    update_key_state( keystate, VK_MENU, (keystate[VK_LMENU] | keystate[VK_RMENU]) & 0x80 );
-    update_key_state( keystate, VK_SHIFT, (keystate[VK_LSHIFT] | keystate[VK_RSHIFT]) & 0x80 );
-    set_async_key_state( keystate );
 }
 
 static void update_lock_state( HWND hwnd, WORD vkey, UINT state, DWORD time )
diff -Naur a/include/wine/server_protocol.h b/include/wine/server_protocol.h
--- a/include/wine/server_protocol.h	2012-03-16 22:57:36.000000000 +0400
+++ b/include/wine/server_protocol.h	2012-03-27 06:00:17.053321173 +0400
@@ -3838,9 +3838,7 @@
 {
     struct request_header __header;
     thread_id_t    tid;
-    int            async;
     /* VARARG(keystate,bytes); */
-    char __pad_20[4];
 };
 struct set_key_state_reply
 {
diff -Naur a/server/protocol.def b/server/protocol.def
--- a/server/protocol.def	2012-03-16 22:57:36.000000000 +0400
+++ b/server/protocol.def	2012-03-27 06:00:17.056654507 +0400
@@ -2706,7 +2706,6 @@
 /* Set queue keyboard state for a given thread */
 @REQ(set_key_state)
     thread_id_t    tid;           /* id of thread */
-    int            async;         /* whether to change the async state too */
     VARARG(keystate,bytes);       /* state array for all the keys */
 @END
 
diff -Naur a/server/queue.c b/server/queue.c
--- a/server/queue.c	2012-03-16 22:57:36.000000000 +0400
+++ b/server/queue.c	2012-03-27 06:00:17.056654507 +0400
@@ -2724,11 +2724,6 @@
     {
         if (!(thread = get_thread_from_id( req->tid ))) return;
         if (thread->queue) memcpy( thread->queue->input->keystate, get_req_data(), size );
-        if (req->async && (desktop = get_thread_desktop( thread, 0 )))
-        {
-            memcpy( desktop->keystate, get_req_data(), size );
-            release_object( desktop );
-        }
         release_object( thread );
     }
 }
diff -Naur a/server/request.h b/server/request.h
--- a/server/request.h	2012-03-16 22:57:36.000000000 +0400
+++ b/server/request.h	2012-03-27 06:00:17.056654507 +0400
@@ -1756,8 +1756,7 @@
 C_ASSERT( FIELD_OFFSET(struct get_key_state_reply, state) == 8 );
 C_ASSERT( sizeof(struct get_key_state_reply) == 16 );
 C_ASSERT( FIELD_OFFSET(struct set_key_state_request, tid) == 12 );
-C_ASSERT( FIELD_OFFSET(struct set_key_state_request, async) == 16 );
-C_ASSERT( sizeof(struct set_key_state_request) == 24 );
+C_ASSERT( sizeof(struct set_key_state_request) == 16 );
 C_ASSERT( FIELD_OFFSET(struct set_foreground_window_request, handle) == 12 );
 C_ASSERT( sizeof(struct set_foreground_window_request) == 16 );
 C_ASSERT( FIELD_OFFSET(struct set_foreground_window_reply, previous) == 8 );
diff -Naur a/server/trace.c b/server/trace.c
--- a/server/trace.c	2012-03-16 22:57:36.000000000 +0400
+++ b/server/trace.c	2012-03-27 06:00:17.059987840 +0400
@@ -3162,7 +3162,6 @@
 static void dump_set_key_state_request( const struct set_key_state_request *req )
 {
     fprintf( stderr, " tid=%04x", req->tid );
-    fprintf( stderr, ", async=%d", req->async );
     dump_varargs_bytes( ", keystate=", cur_size );
 }
 
