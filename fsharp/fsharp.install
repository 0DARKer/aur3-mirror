FS_DIR=/opt/fsharp
FS_BDIR=${FS_DIR}/bin
FS_LDIR=${FS_DIR}/lib

post_install() {
        sn -q -R ${FS_BDIR}/FSharp.Core.dll ${FS_DIR}/mono.snk
	gacutil -i ${FS_BDIR}/FSharp.Core.dll

        # PowerPack
	gacutil -i ${FS_LDIR}/FSharp.Compiler.CodeDom.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Compatibility.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Linq.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Metadata.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Parallel.Seq.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Build.Tasks.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.dll

	cat <<-_EOF

	!NOTE!
	The tool names are in conflict with files from the scala build.
	Binaries fsi and fsc are now named fsharpi and fsharpc respectively.
	_EOF
}

pre_upgrade() {
	gacutil -u FSharp.Core
        # PowerPack
	gacutil -u FSharp.Compiler
	gacutil -u FSharp.Compiler.CodeDom
	gacutil -u FSharp.PowerPack.Compatibility
	gacutil -u FSharp.PowerPack.Linq
	gacutil -u FSharp.PowerPack.Metadata
	gacutil -u FSharp.PowerPack.Parallel.Seq
	gacutil -u FSharp.PowerPack
}

post_upgrade() {
        sn -q -R ${FS_BDIR}/FSharp.Core.dll ${FS_DIR}/mono.snk
	gacutil -i ${FS_BDIR}/FSharp.Core.dll
        # PowerPack
	gacutil -i ${FS_LDIR}/FSharp.Compiler.CodeDom.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Compatibility.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Linq.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Metadata.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.Parallel.Seq.dll
	gacutil -i ${FS_LDIR}/FSharp.PowerPack.dll

}

pre_remove() {
	gacutil -u FSharp.Core
        # PowerPack
	gacutil -u FSharp.Compiler
	gacutil -u FSharp.Compiler.CodeDom
	gacutil -u FSharp.PowerPack.Compatibility
	gacutil -u FSharp.PowerPack.Linq
	gacutil -u FSharp.PowerPack.Metadata
	gacutil -u FSharp.PowerPack.Parallel.Seq
	gacutil -u FSharp.PowerPack
}
