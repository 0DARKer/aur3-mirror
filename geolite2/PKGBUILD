# Maintainer: felix
pkgbase=geolite2
pkgname=(
	geolite2-country
	geolite2-city
)
epoch=
pkgver=20140710
pkgrel=1
pkgdesc="MaxMind GeoLite2 GeoIP database - split package"
license=('CCPL:cc-by-sa-3.0')
arch=(any)
url="http://dev.maxmind.com/geoip/geoip2/geolite2/"
depends=()
makedepends=()
checkdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
source=()
sha512sums=()
noextract=()

_wanted() {
	for _item in "${pkgname[@]}"; do
		[[ "$_item" = "$1" ]] && return 0
	done
	return 1
}

if _wanted geolite2-country; then
	source+=("https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz")
	sha512sums+=('6b12c7ca46b147582ddcaea73511b6e27c85218b8609163a743b029d665c23933419a61be823458b8f61228131584348f6f8d1f80e38d1eef67ca07cf344b1c8')
fi

if _wanted geolite2-city; then
	source+=("https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz")
	sha512sums+=('f945770709adffb3b99efd7978d7f64f697ffea5e416ac38f09ae26f79f0c3ffde4c5674b8c467803e72d45583d2ca54bdd86c7518b95ee58f75ca0d89a3bb1b')
fi

build() {
	: # nothing needed
}

check() {
	cd "$srcdir"
	if _wanted geolite2-country; then
		msg2 "Validating the GeoLite2 Country database"
		echo "$(curl https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.md5) GeoLite2-Country.mmdb" | md5sum -c
	fi

	if _wanted geolite2-city; then
		msg2 "Validating the GeoLite2 City database"
		echo "$(curl https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.md5) GeoLite2-City.mmdb" | md5sum -c
	fi
}

package_geolite2-country() {
	pkgdesc="MaxMindDB GeoLite2 Country GeoIP database"

	cd "$srcdir"
	install -D -m0644 GeoLite2-Country.mmdb \
		"$pkgdir/usr/share/GeoIP/GeoLite2-Country.mmdb"
}

package_geolite2-city() {
	pkgdesc="MaxMindDB GeoLite2 City GeoIP database"

	cd "$srcdir"
	install -D -m0644 GeoLite2-City.mmdb \
		"$pkgdir/usr/share/GeoIP/GeoLite2-City.mmdb"
}
