# Maintainer: felix (fstirlitz)
pkgbase=geolite2
pkgname=(
	geolite2-country
	geolite2-city
)
epoch=
pkgver=20140923
pkgrel=1
pkgdesc="MaxMind GeoLite2 GeoIP database - split package"
license=('CCPL:cc-by-sa-3.0')
arch=(any)
url="http://dev.maxmind.com/geoip/geoip2/downloadable/"
depends=()
makedepends=()
checkdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
source=()
sha512sums=()
noextract=()

_wanted() {
	for _item in "${pkgname[@]}"; do
		[[ "$_item" = "$1" ]] && return 0
	done
	return 1
}

if _wanted geolite2-country; then
	source+=("https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz")
	sha512sums+=('982566dd89470c9f51784523a50842c6d51ee60cd818d49ea91267ac85888d68b5563f0b59e9072907b65782d37ccc07c46b00e651d4280115cc4349a9d404f7')
fi

if _wanted geolite2-city; then
	source+=("https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz")
	sha512sums+=('f5277a154b5796d6aabfa0fa66e2864db0c2a5a9b283d6e2bbfabeb6319ef20d85a59765154eaefa86ea963d6a0bb18686e5480d914e162c6798de82fb0824a5')
fi

build() {
	: # nothing needed
}

check() {
	cd "$srcdir"
	if _wanted geolite2-country; then
		msg2 "Validating the GeoLite2 Country database"
		echo "$(curl https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.md5) GeoLite2-Country.mmdb" | md5sum -c
	fi

	if _wanted geolite2-city; then
		msg2 "Validating the GeoLite2 City database"
		echo "$(curl https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.md5) GeoLite2-City.mmdb" | md5sum -c
	fi
}

package_geolite2-country() {
	pkgdesc="MaxMindDB GeoLite2 Country GeoIP database"

	cd "$srcdir"
	install -D -m0644 GeoLite2-Country.mmdb \
		"$pkgdir/usr/share/GeoIP/GeoLite2-Country.mmdb"
}

package_geolite2-city() {
	pkgdesc="MaxMindDB GeoLite2 City GeoIP database"

	cd "$srcdir"
	install -D -m0644 GeoLite2-City.mmdb \
		"$pkgdir/usr/share/GeoIP/GeoLite2-City.mmdb"
}
