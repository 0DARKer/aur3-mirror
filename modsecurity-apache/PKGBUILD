# Maintainer: richiefrich <richiefrich AT penguinslair DOT org>
# Contributor: CRT <crt.011 AT gmail.com>
# Contributor: chiche <laguaza AT gmail.com>

pkgname=modsecurity-apache
pkgver=2.6.2
_pkgname=modsecurity-crs
_pkgver=2.2.2
pkgrel=1
pkgdesc="An open source web application firewall that runs as an Apache module.\
        Core Rule Set which provides critical protections against attacks across most every web architecture."
url="http://www.modsecurity.org \
        http://www.modsecurity.org/projects/rules/"
arch=(i686 x86_64)
license=('GPLv2')
depends=('apache>=2.0' 'apr' 'apr-util' 'pcre' 'libxml2')
optdepends=('lua>=5.1' 'curl>=7.15.1')
#backup=('/etc/httpd/conf/mod_security.conf' '/etc/httpd/conf/httpd.conf')
source=(http://softlayer.dl.sourceforge.net/sourceforge/mod-security/${pkgname}_${pkgver}.tar.gz
        http://voxel.dl.sourceforge.net/project/mod-security/${_pkgname}/0-CURRENT/${_pkgname}_${_pkgver}.tar.gz
        mod_security.conf)


build() {
	cd $startdir/src/${pkgname}_${pkgver}

	./configure --prefix=/usr --sysconfdir=/etc --with-apxs=/usr/sbin/apxs
	make || return 1
	make mlogc || return 1
	make DESTDIR=$startdir/pkg install || return 1

}


package() {
  cd ${srcdir}/${pkgname}_${pkgver}
  install -D -dm755 ${pkgdir}/etc/httpd/conf/crs/{base_rules,optional_rules,activated_rules,experimental_rules}
  install -m644 $startdir/mod_security.conf ${pkgdir}/etc/httpd/conf

  install -D -dm755 ${pkgdir}/usr/lib/httpd/modules
  mv -v ${pkgdir}/usr/lib/mod_security2.so ${pkgdir}/usr/lib/httpd/modules/mod_security2.so
#  install -D -m755 $startdir/src/${pkgname}_${pkgver}/apache2/.libs/mod_security2.so ${pkgdir}/usr/lib/httpd/modules/mod_security2.so

  install -D -dm755 ${pkgdir}/usr/share/licenses/${pkgname}
  install -m644 LICENSE ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE

  cd ${srcdir}/${_pkgname}_${_pkgver}
  install -D -m644 modsecurity_crs_10_config.conf.example ${pkgdir}/etc/httpd/conf/crs/modsecurity_crs_10_config.conf
  rsync -avP base_rules/ ${pkgdir}/etc/httpd/conf/crs/base_rules
  rsync -avP experimental_rules/ ${pkgdir}/etc/httpd/conf/crs/experimental_rules
  rsync -avP optional_rules/ ${pkgdir}/etc/httpd/conf/crs/optional_rules

echo
cat << ENDOFMESSAGE

   1) The modsecurity_crs_10_config.conf file includes management rules and directives
      that can control important CRS functions. Pay attention to
      the SecRuleEngine setting (On by default) and that the SecDefaultAction
      directive is set to "pass".  The 49 inbound blocking and 59 outbound blocking
      rules files use the "block" action which
      inherits this setting.  The effectively means that you can toggle the
      SecDefaultAction setting to decide if you would like to deny on an
      anomaly scoring/correlation match.
 
      Update the PARANOID_MODE variable setting if you want to become more 
      aggressive in your detection.  Caution - this will cause more false positives.
 
      Should also update the appropriate anomaly scoring levels that will be propagated
      to the inbound/outbound blocking files.

      Update the TX policy settings for allowed Request Methods, File Extensions, etc...

   2) Enable the CRS rules files you want to use by creating symlinks under the
      "activated_rules" directory location.  You will want to create symlinks for the
      following:

 ==>     $ cd /etc/httpd/conf/crs/
 ==>     $ for i in base_rules/* ; do ln -s $i activated_rules/$i ; done
 ==>     $ for i in $(ls optional_rules/ | grep comment_spam) ; do ln -s $i activated_rules/$i ; done


   3) Add the following line to your httpd.conf (assuming
      you've placed the rule files into conf/crs/):
 
         <IfModule security2_module>
                 Include conf/crs/modsecurity_crs_10_config.conf
                 Include conf/crs/activated_rules/*.conf
         </IfModule>
 
   4) Restart web server.

ENDOFMESSAGE
}

md5sums=('dfffdf21d15e8d0d300d970a74b02bd2'
         'a8d35ed2ff3f6f0224af912a79fb8b54'
         '84c4447c1e233974df74c9b64d27391f')
