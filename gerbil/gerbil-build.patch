diff -aur gerbil-0.3/CMakeModules/VoleAddExternalLibraries.cmake gerbil-0.3.patched/CMakeModules/VoleAddExternalLibraries.cmake
--- gerbil-0.3/CMakeModules/VoleAddExternalLibraries.cmake	2012-03-07 04:10:34.000000000 +0100
+++ gerbil-0.3.patched/CMakeModules/VoleAddExternalLibraries.cmake	2012-04-03 23:52:44.181558342 +0200
@@ -55,6 +55,15 @@
 	VoleList("VOLE_EXTERNAL_LINK_LIBS" "${VOLE_FFTW_LIB}" "append")
 endif (VoleList_ELEMENT)
 
+VoleList("VOLE_EXTERNAL_LIBS" VOLE_OPENGL)
+if (VoleList_ELEMENT)
+	find_library(VOLE_OPENGL_LIB GL DOC
+		"OpenGL library directory (enter full path)")
+	find_path(VOLE_OPENGL_INC GL/gl.h DOC
+		"OpenGL include directory (enter path to gl.h)")
+	VoleList("VOLE_EXTERNAL_LINK_LIBS" "${VOLE_OPENGL_LIB}" "append")
+endif (VoleList_ELEMENT)
+
 VoleList("VOLE_EXTERNAL_LIBS" VOLE_QGLVIEWER)
 if (VoleList_ELEMENT)
 	find_library(VOLE_QGLVIEWER_LIB QGLViewer DOC
diff -aur gerbil-0.3/configure.sh gerbil-0.3.patched/configure.sh
--- gerbil-0.3/configure.sh	2012-04-03 02:54:14.000000000 +0200
+++ gerbil-0.3.patched/configure.sh	2012-04-03 23:52:44.184891711 +0200
@@ -18,12 +18,14 @@
 -DVOLE_BUNDLE_CORE=on \
 -DVOLE_BUNDLE_GERBIL=on \
 -DCMAKE_BUILD_TYPE=Release \
+-DCMAKE_SKIP_RPATH=on \
 .
 cmake \
 -DGerbil_Viewer=on \
 -DGerbil_Edge_Detect=on \
 -DVole_Seg_Graphs=on \
 -DVOLE_SHELL=on \
+-DCMAKE_SKIP_RPATH=on \
 .
 if [ $? -ne 0 ]; then
 echo " *** Please use CMake to resolve configuration issues (e.g. 'ccmake .')."
diff -aur gerbil-0.3/gerbil-gui/BuildSettings.txt gerbil-0.3.patched/gerbil-gui/BuildSettings.txt
--- gerbil-0.3/gerbil-gui/BuildSettings.txt	2012-04-02 17:47:18.000000000 +0200
+++ gerbil-0.3.patched/gerbil-gui/BuildSettings.txt	2012-04-03 23:54:05.796153865 +0200
@@ -6,7 +6,7 @@
 set(this_build_executable "qgerbil")
 set(this_module_variable "Gerbil_Viewer")
 set(this_module_description "GUI for multispectral images")
-set(this_module_general_requirements "VOLE_BOOST" "VOLE_BOOST_PROGRAM_OPTIONS" "VOLE_QT" "VOLE_QT_OPENGL" "VOLE_OPENCV")
+set(this_module_general_requirements "VOLE_BOOST" "VOLE_BOOST_PROGRAM_OPTIONS" "VOLE_QT" "VOLE_QT_OPENGL" "VOLE_OPENCV" "VOLE_OPENGL")
 #set(this_module_general_requirements "VOLE_BOOST" "VOLE_BOOST_PROGRAM_OPTIONS" "VOLE_QT" "VOLE_QT_OPENGL" "VOLE_QGLVIEWER" "VOLE_OPENCV")
 
 VoleRequiredModules("gerbil_common" "seg_graphs")
diff -aur gerbil-0.3/similarity_measures/correlation_coefficient_histogram.h gerbil-0.3.patched/similarity_measures/correlation_coefficient_histogram.h
--- gerbil-0.3/similarity_measures/correlation_coefficient_histogram.h	2011-01-16 17:39:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/correlation_coefficient_histogram.h	2012-04-03 23:52:44.184891711 +0200
@@ -31,11 +31,11 @@
 template<typename T>
 inline double CorrelationCoefficientHistogram<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 
 	// image histograms
 	std::pair<cv::Mat_<float>, cv::Mat_<float> > hists =
-		hist(img1, img2, hbins, hrange);
+		this->hist(img1, img2, hbins, hrange);
 
 	// correlate histograms
 	return cv::compareHist(hists.first, hists.second, CV_COMP_CORREL);
diff -aur gerbil-0.3/similarity_measures/earth_movers_distance.h gerbil-0.3.patched/similarity_measures/earth_movers_distance.h
--- gerbil-0.3/similarity_measures/earth_movers_distance.h	2011-01-16 17:39:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/earth_movers_distance.h	2012-04-03 23:52:44.184891711 +0200
@@ -32,11 +32,11 @@
 template<typename T>
 inline double EarthMoversDistance<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 
 	// image histograms
 	std::pair<cv::Mat_<float>, cv::Mat_<float> > hists =
-		hist(img1, img2, hbins, hrange);
+		this->hist(img1, img2, hbins, hrange);
 
 	cv::Mat_<float> sig1(hbins, 2, 0.f);
 	cv::Mat_<float> sig2(hbins, 2, 0.f);
diff -aur gerbil-0.3/similarity_measures/gradient_difference.h gerbil-0.3.patched/similarity_measures/gradient_difference.h
--- gerbil-0.3/similarity_measures/gradient_difference.h	2012-02-03 19:00:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/gradient_difference.h	2012-04-03 23:52:44.184891711 +0200
@@ -31,7 +31,7 @@
 template<typename T>
 inline double GradientDifference<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 
 	cv::Mat_<float> G1x, G2x;
 	cv::Mat_<float> G1y, G2y;
diff -aur gerbil-0.3/similarity_measures/l_norm.h gerbil-0.3.patched/similarity_measures/l_norm.h
--- gerbil-0.3/similarity_measures/l_norm.h	2012-02-03 02:02:01.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/l_norm.h	2012-04-03 23:52:44.184891711 +0200
@@ -39,7 +39,7 @@
 template<typename T>
 inline double LNorm<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 
 	return cv::norm(img1, img2, normType);
 }
@@ -47,7 +47,7 @@
 template<typename T>
 inline double LNorm<T>::getSimilarity(const std::vector<T> &v1, const std::vector<T> &v2)
 {
-	check(v1, v2);
+	this->check(v1, v2);
 
 	double ret = 0.;
 	typename std::vector<T>::const_iterator it1 = v1.begin(), it2 = v2.begin();
diff -aur gerbil-0.3/similarity_measures/mean_reciprocal_square_difference.h gerbil-0.3.patched/similarity_measures/mean_reciprocal_square_difference.h
--- gerbil-0.3/similarity_measures/mean_reciprocal_square_difference.h	2011-01-16 17:39:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/mean_reciprocal_square_difference.h	2012-04-03 23:52:44.184891711 +0200
@@ -67,7 +67,7 @@
 template<typename T>
 inline double MeanReciprocalSquareDifference<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 
 	double ret = 0.;
 	cv::MatConstIterator_<T> it1 = img1.begin(), it2 = img2.begin();
@@ -85,7 +85,7 @@
 template<typename T>
 inline double MeanReciprocalSquareDifference<T>::getSimilarity(const std::vector<T> &v1, const std::vector<T> &v2)
 {
-	check(v1, v2);
+	this->check(v1, v2);
 
 	double ret = 0.;
 	typename std::vector<T>::const_iterator it1 = v1.begin(), it2 = v2.begin();
diff -aur gerbil-0.3/similarity_measures/mean_squares.h gerbil-0.3.patched/similarity_measures/mean_squares.h
--- gerbil-0.3/similarity_measures/mean_squares.h	2011-01-16 17:39:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/mean_squares.h	2012-04-03 23:52:44.188225095 +0200
@@ -48,7 +48,7 @@
 template<typename T>
 inline double MeanSquares<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 		
 	double ret = 0.;
 	cv::MatConstIterator_<T> it1 = img1.begin(), it2 = img2.begin();
@@ -65,7 +65,7 @@
 template<typename T>
 inline double MeanSquares<T>::getSimilarity(const std::vector<T> &v1, const std::vector<T> &v2)
 {
-	check(v1, v2);
+	this->check(v1, v2);
 
 	double ret = 0.;
 	typename std::vector<T>::const_iterator it1 = v1.begin(), it2 = v2.begin();
diff -aur gerbil-0.3/similarity_measures/mean_squares_histogram.h gerbil-0.3.patched/similarity_measures/mean_squares_histogram.h
--- gerbil-0.3/similarity_measures/mean_squares_histogram.h	2011-01-16 17:39:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/mean_squares_histogram.h	2012-04-03 23:52:44.188225095 +0200
@@ -59,13 +59,13 @@
 template<typename T>
 inline double MeanSquaresHistogram<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 
 	// image histograms
 	std::pair<cv::Mat_<float>, cv::Mat_<float> > hists =
-		hist(img1, img2, hbins, hrange);
+		this->hist(img1, img2, hbins, hrange);
 	// joint 2d histogram
-	cv::Mat_<float> joint_pdf = jointhist(img1, img2, hbins, hrange);
+	cv::Mat_<float> joint_pdf = this->jointhist(img1, img2, hbins, hrange);
 
 	double ret = 0., n = 0.;
 
diff -aur gerbil-0.3/similarity_measures/mutual_information_histogram.h gerbil-0.3.patched/similarity_measures/mutual_information_histogram.h
--- gerbil-0.3/similarity_measures/mutual_information_histogram.h	2011-01-16 17:39:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/mutual_information_histogram.h	2012-04-03 23:52:44.188225095 +0200
@@ -50,16 +50,16 @@
 template<typename T>
 inline double MutualInformationHistogram<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 	double pixels = img1.rows * img1.cols;
 
 	double entropy1 = 0., entropy2 = 0., entropy12 = 0.;
 
 	// image histograms
 	std::pair<cv::Mat_<float>, cv::Mat_<float> > hists =
-		hist(img1, img2, hbins, hrange);
+		this->hist(img1, img2, hbins, hrange);
 	// joint 2d histogram
-	cv::Mat_<float> joint_pdf = jointhist(img1, img2, hbins, hrange);
+	cv::Mat_<float> joint_pdf = this->jointhist(img1, img2, hbins, hrange);
 
 	// calculate single image entropies
 	for (int i = 0; i < hbins; i++) {
diff -aur gerbil-0.3/similarity_measures/normalized_cross_correlation.h gerbil-0.3.patched/similarity_measures/normalized_cross_correlation.h
--- gerbil-0.3/similarity_measures/normalized_cross_correlation.h	2011-01-16 17:39:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/normalized_cross_correlation.h	2012-04-03 23:52:44.188225095 +0200
@@ -48,7 +48,7 @@
 template<typename T>
 inline double NormalizedCrossCorrelation<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 
 	double corr1 = 0., corr2 = 0., crosscorr = 0.;
 	
@@ -68,7 +68,7 @@
 template<typename T>
 inline double NormalizedCrossCorrelation<T>::getSimilarity(const std::vector<T> &v1, const std::vector<T> &v2)
 {
-	check(v1, v2);
+	this->check(v1, v2);
 
 	double corr1 = 0., corr2 = 0., crosscorr = 0.;
 
diff -aur gerbil-0.3/similarity_measures/normalized_mutual_information.h gerbil-0.3.patched/similarity_measures/normalized_mutual_information.h
--- gerbil-0.3/similarity_measures/normalized_mutual_information.h	2011-01-16 17:39:37.000000000 +0100
+++ gerbil-0.3.patched/similarity_measures/normalized_mutual_information.h	2012-04-03 23:52:44.188225095 +0200
@@ -62,16 +62,16 @@
 template<typename T>
 inline double NormalizedMutualInformation<T>::getSimilarity(const cv::Mat_<T> &img1, const cv::Mat_<T> &img2)
 {
-	check(img1, img2);
+	this->check(img1, img2);
 	double pixels = img1.rows * img1.cols;
 
 	double entropy1 = 0., entropy2 = 0., entropy12 = 0.;
 
 	// image histograms
 	std::pair<cv::Mat_<float>, cv::Mat_<float> > hists =
-		hist(img1, img2, hbins, hrange);
+		this->hist(img1, img2, hbins, hrange);
 	// joint 2d histogram
-	cv::Mat_<float> joint_pdf = jointhist(img1, img2, hbins, hrange);
+	cv::Mat_<float> joint_pdf = this->jointhist(img1, img2, hbins, hrange);
 
 	// calculate single image entropies
 	for (int i = 0; i < hbins; i++) {
