#!/bin/sh
#
# foldingathome-gpu-wrapper: Start Folding@Home on a specific GPU slot.
#

# If something other than an integer was given, display usage and exit.
if ! [ $# -eq 1 -o "$1" -eq "$1" ] 2>/dev/null; then
	echo "Usage: foldingathome-gpu-wrapper gpu_slot"
	exit 1
fi

# Create a directory for Folding@Home work if it doesn't exist.
work_dir="/var/lib/foldingathome-gpu/work/$1"
if [ ! -d "$work_dir" ]; then
	mkdir "$work_dir" || exit 1
fi

if
	# Make new symlinks to be sure these are current.
	cd "$work_dir" && \
	ln -sf /etc/foldingathome-gpu/client.cfg && \
	ln -sf /opt/foldingathome-gpu/cudart.dll.so cudart32_30_14.dll && \
	ln -sf /opt/foldingathome-gpu/cufft.dll.so cufft32_30_14.dll
then
	# Prefix for Wine and path to CUDA libs.
	export WINEPREFIX="/var/lib/foldingathome-gpu/wine"
	export LD_LIBRARY_PATH="/opt/foldingathome-gpu:$LD_LIBRARY_PATH"

	# Disable temporary files to prevent machine ID conflicts.
	temp_dir="$WINEPREFIX/drive_c/users/$USER/Temp/fah"
	if [ ! -f "$temp_dir" ]; then
		install -Dm 644 /dev/null "$temp_dir" || exit 1
	fi

	# Source the conf.d file and run Folding@Home via Wine.
	. /etc/conf.d/foldingathome-gpu || exit 1
	/usr/bin/wine /opt/foldingathome-gpu/Folding@home-Win32-gpu.exe $FAH_GPU_FLAGS -gpu "$1"
else
	# Something went wrong.
	exit 1
fi
