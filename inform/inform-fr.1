.TH "INFORM" "1" "" "" ""
.SH "NOM"
inform \- compilateur pour les fictions interactives
.SH "SYNOPSIS"
\fB inform \fR[\-\fBacefhijklmnopqrstuwxyzDGMUX\fR] [\fB\-g\fR[\fB2\fR]]
[\fB\-v\fIversion\fR]   [\-F1] [\fB\-E\fIerror\-message\-style\fR] [+Language_name=french] aventure.inf
.SH "DESCRIPTION"
Inform est un compilateur pour créer des jeux d'aventures textuelles.

Il utilise en entrée un fichier ayant une syntaxe ressemblant un peu à du C, et produit en sortie un fichier compatible avec les machines virtuelles z\-machine ou glulx, qui sont lisibles dans le premier cas par des interpréteurs tels ceux d'infocom ou d'autres sources comme frotz, zip, zoom, et dans le second cas par l'interpréteur glulxe.
.SS OPTIONS
.TP 
.I "\-a"
Analyse en langage assembleur (sans les vidage hexadécimaux ; voir \-t) ; Ceci est
pour aider à l'entretien d'Inform, ou pour débogger des programmes en langage assemblé.
.TP 
.I "\-c"
Messages d'erreur plus concis : dans ce mode, Inform ne cite pas les lignes complètes de la source avec le message d'erreur.
.TP 
.I "\-d"
Contracte les espaces doubles après un point. Le texte sera converti vers le même texte avec seulement un espace simple après le point, ce qui évitera à un interpréteur d'afficher un espace parasite au début de la ligne lorsque un retour de ligne arrive juste après le point.
.TP 
.I "\-d2"
Contracte également les espaces doubles après un point d'exclamation ou d'interrogation.
.TP 
.I "\-e"
Mode économique (plus lent). Les abbréviations sont uniquement prises en compte via ce mode, car en général cette fonctionalité est rarement nécessaire et ralentit le compilateur de 10 % environ.
Le fichier généré ne sera pas joué différemment mais sera probablement plus petit, si vous avez bien choisi vos abbréviations.
.TP 
.I "\-f"
Analyse les occurences. Montre si les abbréviations sont utiles, et combien d'octets ont été économisés.
.TP 
.I "\-G"
Permet à la compilation de générer du code glulx au lieu de code zmachine. Produit un fichier avec l'extension .ulx au lieu de .z5
.TP 
.I "\-g"
Permet à Inform de compiler du code d'analyse à chaque appel de fonction. Durant le jeu cela va produire beaucoup de texte, mais cela peut être utile dans certains cas.
Ceci peut être appelé également sur les commandes individuelles en inscrivant * en tant que première variable locale, sans utiliser le commutateur \-g.
.TP 
.I "\-g2"
Analyse également les appels de fonction à l'intérieur des bibliothèques.
.TP 
.I "\-h"
Affiche un message général sur l'utilisation et quitte.
.TP 
.I "\-i"
Ignore les interrupteurs définis à l'intérieur du code source. Il est possible de définir des interrupteurs avec la commande "Switches" dans la source ; cette option les ignorera.
.TP 
.I "\-j"
Liste les objets au moment de leur construction, prouvant qu'Inform est en train de travailler. Utile sur les ordinateurs très lents.
.TP 
.I "\-k"
Ecrit un fichier de débogage pour utiliser avec le débogueur Infix.
.TP 
.I "\-l"
Liste chaque bibliothèque externe appelée puis fermé par Inform.
.TP 
.I "+Language_name=French"
Utilise la bibliothèque French.h pour la langue française au lieu de la version anglaise. Valable pour toute langue de la forme langue.h
.TP 
.I "\-m"
Indique comment la mémoire a été allouée.
.TP 
.I "\-n"
Affiche les valeurs attribuées aux propriétés, attributs et actions.
.TP 
.I "\-o"
Affiche les adresses de décalage.
.TP 
.I "\-p"
Donne l'analyse d'un fichier d'aventure selon certains découpages, en pourcentage (code zmachine, objets, textes, synonymes...) .
.TP 
.I "\-q"
Pas de notification d'utilisations obsolètes. Utile pour la compilation de vieux et longs programmes. 
.TP 
.I "\-r"
Enregistre tout le texte dans le fichier "gametext". Cela est fait pour la correction du texte du jeu par un logiciel tiers, en transcrivant tout le texte entre guillemets.
.TP 
.I "\-s"
Donne des statistiques (nombre d'objets, de classes, de verbes...). Cela est particulièrement utile pour se rendre compte du développement d'un jeu.
.TP 
.I "\-t"
Analyse en langage assembleur (avec les vidage hexadécimaux; voir \-a); Ceci est
pour aider à l'entretien d'Inform, ou pour débogger des programmes en langage assemblé.
.TP 
.I "\-u"
Etudie les abbréviations les plus utiles : essaye de trouver un échantillon d'abbréviations à déclarer pour votre jeu, mais ceci est lent et consomme de la mémoire.
.TP 
.I "\-v"
Choisit le format de jeu à compiler. v5 est la version par défaut, mais si un jeu dépasse la limite de ce format, essayez v8 à la place. Quelques interpréteurs préhistoriques nécessitent la version limitée v3.
.TP  
.I "\-w"
Elimine les messages d'alarme.
.TP 
.I "\-x"
Affiche un # pour chaque 100 lignes compilées, prouvant qu'Inform est encore en train de travailler. Utile sur les ordinateurs très lents.
.TP 
.I "\-y"
Analyse le système de liens, aide à l'entretien d'Inform.
.TP 
.I "\-z"
Affiche la carte mémoire de la z\-machine.
.TP 
.I "\-D"
Insère automatiquement 'Constant DEBUG;'. Inclut dans le jeu toutes les facilités de la bibliothèque de débogage. Cela évite de modifier la source à chaque fois pour changer ce paramètre. (voir \-X)
.TP 
.I "\-E"
Selectionne un format de message d'erreur, puisque différents formats vont mieux avec certains outils de débogage sur différentes machines. \-E0, par defaut, est de style Archimedes, \-E1 est de style Microsoft, \-E2 est de style Macintosh MPW.
.TP 
.I "\-F1"
Utilise des fichiers temporaires pour réduire la consommation mémoire.
.TP 
.I "\-M"
Compile en tant que module pour des liaisons ultérieures.
.TP 
.I "\-U"
Inclut automatiquement la directive 'Constant USE_MODULES' ce qui accélère la compilation en liant la bibliothèque au lieu de la recompiler. 
.TP 
.I "\-X"
Inclut automatiquement la bibliothèque de débogage Infix, qui est plus puissante que celle invoquée par le mode \-D. 
.SH "VOIR AUSSI"
Il existe une documentation plus complète sur le sujet dans le répertoire /usr/doc/inform
et dans le système d'info. Vous pouvez avoir besoin d'installer le paquet inform\-docs selon votre système, ce qui peut inclure de la documentation additionnelle ainsi que des exemples.

.SH "AUTEUR"
Graham Nelson est l'auteur du logiciel Inform.

Voir http://www.inform\-fiction.org/ pour plus d'information.

.SH "TRADUCTION"
Ce document est une traduction, réalisée par Eric Forgeot (http://esclinux.tk) en octobre 2005, à partir du travail de Mark Baker.

L'équipe de traduction a fait le maximum pour réaliser une adaptation française de qualité.

La version anglaise (pas forcément la plus à jour) de ce document est toujours consultable via la commande : export LANG=en && man inform

N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute erreur dans cette page de manuel. 
