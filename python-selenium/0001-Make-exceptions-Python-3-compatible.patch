From e68e73e20c292f0347cebb58de378f639d2e07a0 Mon Sep 17 00:00:00 2001
From: Andreas Tolfsen <ato@mozilla.com>
Date: Fri, 23 May 2014 12:56:33 +0100
Subject: [PATCH 1/6] Make exceptions Python 3 compatible

(Thanks to Andy Seit.)
---
 py/selenium/webdriver/firefox/firefox_profile.py | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/py/selenium/webdriver/firefox/firefox_profile.py b/py/selenium/webdriver/firefox/firefox_profile.py
index 4097382..7c8863a 100755
--- a/py/selenium/webdriver/firefox/firefox_profile.py
+++ b/py/selenium/webdriver/firefox/firefox_profile.py
@@ -1,3 +1,4 @@
+# Copyright 2014 Software Freedom Conservancy
 # Copyright 2008-2011 WebDriver committers
 # Copyright 2008-2011 Google Inc.
 #
@@ -340,8 +341,8 @@ class FirefoxProfile(object):
                     manifest = f.read()
             else:
                 raise IOError('Add-on path is neither an XPI nor a directory: %s' % addon_path)
-        except (IOError, KeyError), e:
-            raise AddonFormatError, str(e), sys.exc_info()[2]
+        except (IOError, KeyError) as e:
+            raise AddonFormatError(str(e), sys.exc_info()[2])
 
         try:
             doc = minidom.parseString(manifest)
@@ -356,8 +357,8 @@ class FirefoxProfile(object):
                 entry = node.nodeName.replace(em, "")
                 if entry in details.keys():
                     details.update({entry: get_text(node)})
-        except Exception, e:
-            raise AddonFormatError, str(e), sys.exc_info()[2]
+        except Exception as e:
+            raise AddonFormatError(str(e), sys.exc_info()[2])
 
         # turn unpack into a true/false value
         if isinstance(details['unpack'], basestring):
-- 
1.9.3

