# Maintainer: onny <onny@project-insanity.org>
# Contributor: onny <onny@project-insanity.org>

# ==== TODO: adding server to rc.conf, pacman -Sd nvidia, backup of files fails, check if nvidia km is modprobed, optirun should check if server is running https://github.com/MrMEEE/bumblebee/blob/70204ab8b7d1ccf063c37cae2cb5c3fbd7d481f5/install-files/optirun32.ubuntu, adjust included uninstall script, variable for nvidia driver version, blacklist nouveau https://github.com/MrMEEE/bumblebee/commit/dfeed19d4d03d1207e49a2dcd0587e7cbd6decb7, /etc/modules nvidia km, add script bumblebee-config, add support for acpi_call

pkgname=bumblebee-git
pkgver=20110513
pkgrel=1
pkgdesc="Optimus Support for Linux Through VirtualGL."
arch=('i686' 'x86_64')
makedepends=('git')
depends=('virtualgl-bin' 'dkms-nvidia')
url="https://github.com/MrMEEE/bumblebee/"
license="GPL3"
backup=('etc/bashrc' 'etc/modprobe.d/blacklist.conf' 'etc/modules' 'etc/X11/xorg.conf')
install=('bumblebee.install')

BUMBLEBEEVERSION="1.4.24"

case "$CARCH" in
	i686)
		_bldarch="x86"
		_bldarch2=""
		md5sums=('c167e32702f56599bd600add97943312');;
	x86_64)
		_bldarch="x86_64"
		_bldarch2="64"
		md5sums=('b84143ecb5c0511c5ef9e53e732d9136');
esac

source=("http://us.download.nvidia.com/XFree86/Linux-$_bldarch/270.41.19/NVIDIA-Linux-$_bldarch-270.41.19.run") 

noextract=("NVIDIA-Linux-$_bldarch-270.41.19.run")

_gitroot="https://github.com/MrMEEE/bumblebee.git"
_gitname="bumblebee"

build() {
  cd $srcdir/
  msg "Connecting to GIT server...."

  if [ -d $_gitname ] ; then
    cd $_gitname && git pull origin
    msg "The local files are updated."
  else
    git clone $_gitroot $_gitname
  fi

  msg "GIT checkout done or server timeout"
} 
package() {
  chmod a+x NVIDIA-Linux-$_bldarch-270.41.19.run
  ./NVIDIA-Linux-$_bldarch-270.41.19.run -x
  mkdir -p $pkgdir/usr/lib$_bldarch2/nvidia-current/xorg
  mkdir -p $pkgdir/etc/X11
  mkdir $pkgdir/etc/rc.d
  mkdir $pkgdir/etc/modprobe.d
  mkdir -p $pkgdir/usr/local/bin
  mkdir -p $pkgdir/usr/lib/nvidia-current
  mkdir $pkgdir/usr/bin
  mv $srcdir/NVIDIA-Linux-$_bldarch-270.41.19/* $pkgdir/usr/lib$_bldarch2/nvidia-current
	case "$CARCH" in
		x86_64)
		  ln -s $pkgdir/usr/lib64/nvidia-current/32 $pkgdir/usr/lib/nvidia-current
		  ln -s $pkgdir/usr/lib64/nvidia-current/xorg/ $pkgdir/usr/lib/nvidia-current/xorg
		  ln -s $pkgdir/usr/lib64/xorg/ $pkgdir/usr/lib/xorg
  		  echo " if [ \$(ps aux | grep vglclient | wc -l) == '2' ]; then echo \"vglclient already running ...\"; else vglclient -gl& fi; export VGL_DISPLAY=\":1.0\" vglrun -ld /usr/lib/nvidia-current -c $IMAGETRANSPORT " > $pkgdir/usr/bin/optirun;;
		i686)
		  echo " if [ \$(ps aux | grep vglclient | wc -l) == '2' ]; then echo \"vglclient already running ...\"; else vglclient -gl& fi; export VGL_DISPLAY=\":1.0\" vglrun -ld /usr/lib32/nvidia-current -c $IMAGETRANSPORT " > $pkgdir/usr/bin/optirun;
	esac
  ln -s $pkgdir/usr/lib$_bldarch2/nvidia-current/libglx.so.270.41.19 $pkgdir/usr/lib$_bldarch2/nvidia-current/xorg/libglx.so
  ln -s $pkgdir/usr/lib$_bldarch2/nvidia-current/nvidia_drv.so $pkgdir/usr/lib$_bldarch2/nvidia-current/xorg/nvidia_drv.so
  cp bumblebee/install-files/xorg.conf.intel $pkgdir/etc/X11/xorg.conf
  cp bumblebee/install-files/xorg.conf.nvidia $pkgdir/etc/X11/
  cp bumblebee/install-files/bumblebee.script.fedora $pkgdir/etc/rc.d/bumblebee
  cp bumblebee/install-files/virtualgl.conf $pkgdir/etc/modprobe.d/
  cp bumblebee/install-files/bumblebee-bugreport $pkgdir/usr/local/bin/
  cp bumblebee/install-files/bumblebee-uninstall $pkgdir/usr/local/bin/
  cp bumblebee/install-files/bumblebee-enablecard $pkgdir/usr/local/bin/
  cp bumblebee/install-files/bumblebee-disablecard $pkgdir/usr/local/bin/
  chmod +x $pkgdir/usr/local/bin/bumblebee-bugreport
  echo "Bumblebee Version: "$BUMBLEBEEVERSION > $pkgdir/etc/bumblebee
  echo "Setting up Enviroment variables .."
  echo
  IMAGETRANSPORT="UNDEFINED"
  while [ "$IMAGETRANSPORT" = "UNDEFINED" ]; do
  echo
  echo "The Image Transport is how the images are transferred from the"
  echo "nVidia card to the Intel card, people has different experiences of"
  echo "performance, but just select the default if you are in doubt"
  echo "1) YUV (default)"  
  echo "2) JPEG"     
  echo "3) PROXY"
  echo "4) XV"  
  echo
  read machine
  echo
  case "$machine" in
  1)
  IMAGETRANSPORT="yuv"
  ;;
  2)
  IMAGETRANSPORT="jpeg"
  ;;
  3)
  IMAGETRANSPORT="proxy"
  ;;
  4)
  IMAGETRANSPORT="xv"
  ;;
  *)
  echo
  echo "Please choose a valid option, Press any key to try again."
  read
  ;;
  esac
  done

  chmod +x $pkgdir/usr/bin/optirun
  echo
  msg "Changing Configuration to match your Machine."
  echo 
  INTELBUSID=`echo "PCI:"\`lspci |grep VGA |grep Intel |cut -f1 -d:\`":"\`lspci |grep VGA |grep Intel |cut -f2 -d: |cut -f1 -d.\`":"\`lspci |grep VGA |grep Intel |cut -f2 -d. |cut -f1 -d" "\``
  sed -i 's/REPLACEWITHBUSID/'$INTELBUSID'/g' $pkgdir/etc/X11/xorg.conf
  if [ `lspci |grep VGA |wc -l` -eq 2 ]; then
    NVIDIABUSID=`echo "PCI:"\`lspci |grep VGA |grep nVidia |cut -f1 -d:\`":"\`lspci |grep VGA |grep nVidia |cut -f2 -d: |cut -f1 -d.\`":"\`lspci |grep VGA |grep nVidia |cut -f2 -d. |cut -f1 -d" "\``
  elif [ `lspci |grep 3D |wc -l` -eq 1 ]; then
    NVIDIABUSID=`echo "PCI:"\`lspci |grep 3D |grep nVidia |cut -f1 -d:\`":"\`lspci |grep 3D |grep nVidia |cut -f2 -d: |cut -f1 -d.\`":"\`lspci |grep 3D |grep nVidia |cut -f2 -d. |cut -f1 -d" "\``
  else
    echo
    echo "The BusID of the nVidia card can't be determined"
    echo "You must correct this manually in /etc/X11/xorg.conf.nvidia"
    echo "Please report this problem.."
    echo
    echo "Press Any Key to continue"
    echo
    read 
  fi
  sed -i 's/REPLACEWITHBUSID/'$NVIDIABUSID'/g' $pkgdir/etc/X11/xorg.conf.nvidia
  CONNECTEDMONITOR="UNDEFINED"
  while [ "$CONNECTEDMONITOR" = "UNDEFINED" ]; do
    echo "Select your Laptop:"
    echo "1) Alienware M11X"
    echo "2) Dell XPS 15/17"
    echo "3) CLEVO W150HNQ"
    echo "4) Asus EeePC 1215N"
    echo "5) Acer Aspire 5745PG/5742G"
    echo "6) Dell Vostro 3300"
    echo "7) Dell Vostro 3400/3500"
    echo "8) Samsung RF511/RF711/QX410-J01"
    echo "9) Toshiba Satellite M645-SP4132L"
    echo "10) Asus U30J/U35J/U43JC/U35JC/U43JC/U53JC/P52JC/K52JC/X52JC/N53SV/N61JV/X64JV"
    echo "11) "
    echo "12) "
    echo "13) "
    echo
    echo "97) Manually Set Output to CRT-0"
    echo "98) Manually Set Output to DFP-0"
    echo "99) Manually Enter Output"
    echo
    read machine
    echo
    case "$machine" in
    1)
    CONNECTEDMONITOR="CRT-0"
    ;;
    2)
    CONNECTEDMONITOR="CRT-0"
    ;;
    3)
    CONNECTEDMONITOR="DFP-0"
    ;;
    4)
    CONNECTEDMONITOR="DFP-0"
    ;;
    5)
    CONNECTEDMONITOR="DFP-0"
    ;;
    6)
    CONNECTEDMONITOR="DFP-0"
    ;;
    7)
    CONNECTEDMONITOR="CRT-0"
    ;;
    8)
    CONNECTEDMONITOR="CRT-0"
    ;;
    9)
    CONNECTEDMONITOR="CRT-0"
    ;;
    10)
    CONNECTEDMONITOR="CRT-0"
    ;;
    11)
    CONNECTEDMONITOR=""
    ;;
    12)
    CONNECTEDMONITOR=""
    ;;
    13)
    CONNECTEDMONITOR=""
    ;;
    97)
    CONNECTEDMONITOR="CRT-0"
    ;;
    98)
    CONNECTEDMONITOR="DFP-0"
    ;;
    99)
    echo
    echo "Enter output device for nVidia Card"
    echo
    read manualinput
    CONNECTEDMONITOR=`echo $manualinput`
    ;;
    *)
    echo
    echo "Please choose a valid option, Press any key to try again."
    read
    clear
    ;;
    esac
  done
  echo "Setting output device to: $CONNECTEDMONITOR"
  echo
  sed -i 's/REPLACEWITHCONNECTEDMONITOR/'$CONNECTEDMONITOR'/g' $pkgdir/etc/X11/xorg.conf.nvidia
}
