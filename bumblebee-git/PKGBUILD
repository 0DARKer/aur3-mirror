# Maintaine:r onny <onny@project-insanity.org>
# Contributor: onny <onny@project-insanity.org>

pkgname=bumblebee-git
pkgver=20110509
pkgrel=1
pkgdesc="Optimus Support for Linux Through VirtualGL."
arch=('i686' 'x86_64')
#depends=('virtualgl-bin')
url="https://github.com/MrMEEE/bumblebee/"
license="GPL3"
backup=()

case "$CARCH" in
	i686)
		_bldarch="i386"
		_bldarch2="i686"
		_bldarch3="32"
		md5sums=('9aa48e7ddcdd412c3b25fb30dd3df0d6'
			 '4c28259cc89ad0b17355053743fe4ef8');; #deb
	x86_64)
		_bldarch="x86_64"
		_bldarch2="x86_64"
		_bldarch3="64"
		md5sums=('33f8e8fa3dff28e950a5d23db3945e4e'
			 '23dbf4900454ebdddc0d4293650565c7'); #deb
esac

source=("http://mirrors.kernel.org/archlinux/extra/os/$_bldarch2/nvidia-270.41.06-1-$_bldarch2.pkg.tar.xz"
        'http://mirror.pnl.gov/ubuntu//pool/restricted/n/nvidia-graphics-drivers/nvidia-current_270.41.06-0ubuntu1_'$_bldarch'.deb')

noextract=("nvidia-270.41.06-1-$_bldarch2.pkg.tar.xz"
	   'nvidia-current_270.41.06-0ubuntu1_'$_bldarch'.deb')

_gitroot="https://github.com/MrMEEE/bumblebee.git"
_gitname="bumblebee"

build() {
  cd $srcdir/
  msg "Connecting to GIT server...."

  if [ -d $_gitname ] ; then
    cd $_gitname && git pull origin
    msg "The local files are updated."
  else
    git clone $_gitroot $_gitname
  fi

  msg "GIT checkout done or server timeout"
} 
package() {
  mkdir -p $pkgdir/opt/bumblebee/lib64
  mkdir -p $pkgdir/opt/bumblebee/lib32
  mkdir -p $pkgdir/opt/bumblebee/driver
  mkdir nvidia
  tar xvf nvidia-270.41.06-1-$_bldarch2.pkg.tar.xz -C nvidia
  gunzip -c nvidia/lib/modules/2.6.38-ARCH/kernel/drivers/video/nvidia.ko.gz > $pkgdir/opt/bumblebee/driver/nvidia.ko
  ar vx 'nvidia-current_270.41.06-0ubuntu1_'$_bldarch'.deb'
  tar xvf data.tar.gz -C nvidia
  cp -a nvidia/usr/lib/nvidia-current/* $pkgdir/opt/bumblebee/lib$_bldarch3/

#echo "Backing up Configuration"
#if [ `cat /etc/bash.bashrc |grep VGL |wc -l` -ne 0 ]; then
#   cp /etc/bash.bashrc.optiorig /etc/bash.bashrc
#fi
#cp -n /etc/bash.bashrc /etc/bash.bashrc.optiorig
#cp -n /etc/modprobe.d/blacklist.conf /etc/modprobe.d/blacklist.conf.optiorig
#cp -n /etc/modules /etc/modules.optiorig
#cp -n /etc/X11/xorg.conf /etc/X11/xorg.conf.optiorig
#
#echo
#echo "Installing Optimus Configuration and files"
#cp install-files/xorg.conf.intel /etc/X11/xorg.conf
#cp install-files/xorg.conf.nvidia /etc/X11/
#rm -rf /etc/X11/xdm-optimus
#cp -a install-files/xdm-optimus /etc/X11/
#cp install-files/xdm-optimus.script /etc/init.d/xdm-optimus
#cp install-files/xdm-optimus.bin /usr/bin/xdm-optimus
#cp install-files/virtualgl.conf /etc/modprobe.d/
#cp install-files/optimusXserver /usr/local/bin/
#dpkg -i install-files/VirtualGL_amd64.deb
#chmod +x /etc/init.d/xdm-optimus
#chmod +x /usr/bin/xdm-optimus
#
#cp /opt/bumblebee/driver/nvidia-current.ko /lib/modules/`uname -r`/updates/dkms/
#depmod -a
#if [ "`cat /etc/modprobe.d/blacklist.conf |grep "blacklist nouveau" |wc -l`" -eq "0" ]; then
#echo "blacklist nouveau" >> /etc/modprobe.d/blacklist.conf
#fi
#
#if [ "`cat /etc/modules |grep "nvidia" |wc -l`" -eq "0" ]; then
#echo "nvidia" >> /etc/modules
#fi
#
#modprobe -r nouveau
#modprobe nvidia-current
#
#INTELBUSID=`echo "PCI:"\`lspci |grep VGA |grep Intel |cut -f1 -d:\`":"\`lspci |grep VGA |grep Intel |cut -f2 -d: |cut -f1 -d.\`":"\`lspci |grep VGA |grep Intel |cut -f2 -d. |cut -f1 -d" "\``
#NVIDIABUSID=`echo "PCI:"\`lspci |grep VGA |grep nVidia |cut -f1 -d:\`":"\`lspci |grep VGA |grep nVidia |cut -f2 -d: |cut -f1 -d.\`":"\`lspci |grep VGA |grep nVidia |cut -f2 -d. |cut -f1 -d" "\``
#echo
#echo "Changing Configuration to match your Machine"
#echo 
#
#sed -i 's/REPLACEWITHBUSID/'$INTELBUSID'/g' /etc/X11/xorg.conf
#sed -i 's/REPLACEWITHBUSID/'$NVIDIABUSID'/g' /etc/X11/xorg.conf.nvidia
#
#CONNECTEDMONITOR="UNDEFINED"
#
#while [ "$CONNECTEDMONITOR" = "UNDEFINED" ]; do
#
#clear
#echo
#echo "Select your Laptop:"
#echo "1) Alienware M11X"
#echo "2) Dell XPS 15"
#echo "3) Asus N61Jv (X64Jv)"
#echo "4) Asus EeePC 1215N"
#echo "5) Acer Aspire 5745PG"
#echo "6) Dell Vostro 3300"
#echo "7) Dell XPS 15 (L502x)"
#echo "8) Dell Vostro 3400"
#echo "9) Toshiba Satellite M645-SP4132L"
#echo
#echo "97) Manually Set Output to CRT-0"
#echo "98) Manually Set Output to DFP-0"
#echo "99) Manually Enter Output"
#
#echo
#read machine
#echo
#
#case "$machine" in
#
#1)
#CONNECTEDMONITOR="CRT-0"
#;;
#
#2)
#CONNECTEDMONITOR="CRT-0"
#;;
#
#3)
#CONNECTEDMONITOR="CRT-0"
#;;
#
#4)
#CONNECTEDMONITOR="DFP-0"
#;;
#
#5)
#CONNECTEDMONITOR="DFP-0"
#;;
#
#6)
#CONNECTEDMONITOR="DFP-0"
#;;
#
#7)
#CONNECTEDMONITOR="CRT-0"
#;;
#
#8)
#CONNECTEDMONITOR="CRT-0"
#;;
#
#9)
#CONNECTEDMONITOR="CRT-0"
#;;
#
#97)
#CONNECTEDMONITOR="CRT-0"
#;;
#
#98)
#CONNECTEDMONITOR="DFP-0"
#;;
#
#99)
#echo
#echo "Enter output device for nVidia Card"
#echo
#read manualinput
#CONNECTEDMONITOR=`echo $manualinput`
#;;
#
#
#*)
#echo
#echo "Please choose a valid option, Press any key to try again"
#read
#clear
#
#;;
#
#esac
#
#done
#
#echo
#echo "Setting output device to: $CONNECTEDMONITOR"
#echo
#
#sed -i 's/REPLACEWITHCONNECTEDMONITOR/'$CONNECTEDMONITOR'/g' /etc/X11/xorg.conf.nvidia
#
#echo
#echo "Enabling Optimus Service"
#update-rc.d xdm-optimus defaults
#
#echo
#echo "Setting up Enviroment variables"
#echo
#
#IMAGETRANSPORT="UNDEFINED"
#while [ "$IMAGETRANSPORT" = "UNDEFINED" ]; do
#
#clear
#
#echo
#echo "The Image Transport is how the images are transferred from the"
#echo "nVidia card to the Intel card, people has different experiences of"
#echo "performance, but just select the default if you are in doubt"
#echo "1) YUV (default)"  
#echo "2) JPEG"     
#echo "3) PROXY"
#echo "4) XV"  
#
#echo
#read machine
#echo
#
#case "$machine" in
#
#1)
#IMAGETRANSPORT="yuv"
#;;
#
#2)
#IMAGETRANSPORT="jpeg"
#;;
#
#3)
#IMAGETRANSPORT="proxy"
#;;
#
#4)
#IMAGETRANSPORT="xv"
#;;
#*)
#echo
#echo "Please choose a valid option, Press any key to try again"
#read
#clear
#
#;;
#
#esac
#done
#
#
#echo "VGL_DISPLAY=:1
#export VGL_DISPLAY
#VGL_COMPRESS=$IMAGETRANSPORT
#export VGL_COMPRESS
#VGL_READBACK=fbo
#export VGL_READBACK
#
#alias optirun32='vglrun -ld /opt/bumblebee/lib32'
#alias optirun64='vglrun -ld /opt/bumblebee/lib64'" >> /etc/bash.bashrc
#
#echo '#!/bin/sh' > /usr/bin/vglclient-service
#echo 'vglclient -gl' >> /usr/bin/vglclient-service
#chmod +x /usr/bin/vglclient-service
#if [ -d $HOME/.kde/Autostart ]; then
# ln -s /usr/bin/vglclient-service $HOME/.kde/Autostart/vglclient-service
#fi
#echo
#echo
#echo
#echo "Ok... Installation complete..."
#echo
#echo "Now you need to make sure that the command \"vglclient -gl\" is run after your Desktop Enviroment is started"
#echo
#echo "In KDE this is done by this script.. Thanks to Peter Liedler.."
#echo
#echo "In GNOME this is done by placing a shortcut in ~/.config/autostart/ or using the Adminstration->Sessions GUI"
#echo
#echo "After that you should be able to start applications with \"optirun32 <application>\" or \"optirun64 <application>\""
#echo "optirun32 can be used for legacy 32-bit applications and Wine Games.. Everything else should work on optirun64"
#echo "But... if one doesn't work... try the other"
#echo
#echo "Good luck... MrMEEE / Martin Juhl"
#echo
#echo "http://www.martin-juhl.dk, http://twitter.com/martinjuhl, https://github.com/MrMEEE/bumblebee"
#
#
#exit 0
}
