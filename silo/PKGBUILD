# Maintainer: eolianoe <eolianoe [at] gmail [DoT] com>
# Contributor: Carl Rogers <carl.rogers@gmail.com>
# Contributor: Jed Brown <jed@59A2.org>
pkgname=silo
pkgver=4.10
pkgrel=1
pkgdesc="A Mesh and Field I/O Library and Scientific Database"
url="https://wci.llnl.gov/simulation/computer-codes/silo"
arch=('i686' 'x86_64')

_enable_silex=1
_enable_hdf5=1
_enable_pythonmodule=1
_enable_szip=1
_bsd_source=0
_install_docs=1

[ ${_enable_silex} -eq 1 ]        && depends+=('qt4')
[ ${_enable_pythonmodule} -eq 1 ] && depends+=('python2')
[ ${_enable_szip} -eq 1 ]         && depends+=('szip')
[ ${_enable_hdf5} -eq 1 ]         && depends+=('hdf5')

makedepends=('gcc-fortran')

if [ ${_bsd_source} -eq 0 ] ; then
  source=(https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/${pkgname}/${pkgname}-${pkgver}/${pkgname}-${pkgver}.tar.gz)
  md5sums=('96f31f43cf9b436132a55967cee5398b')
  _lic=
else
  source=(https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/${pkgname}/${pkgname}-${pkgver}/${pkgname}-${pkgver}-bsd.tar.gz)
  md5sums=('c0f15ac15bd7ca42bdb7d58b2db4e553')
  _lic=-bsd
fi

license=('BSD' 'custom')

build() {
  cd ${srcdir}/${pkgname}-${pkgver}${_lic}

  if [ ${_enable_silex} -eq 1 ] ; then
    _confopts+=" --enable-silex"
    _confopts+=" --with-Qt-dir= --with-Qt-include-dir=/usr/include/qt4"
    _confopts+=" --with-Qt-bin-dir=/usr/lib/qt4/bin  --with-Qt-lib-dir=/usr/lib"
    _confopts+=" --with-Qt-lib={QtCore,QtGui}"
  fi

  if [ ${_enable_hdf5} -eq 1 ] ; then
    _confopts+=" --with-zlib=/usr/include,/usr/lib \
    --with-hdf5=/usr/include,/usr/lib"
  fi

  if [ ${_enable_pythonmodule} -eq 1 ] ; then
    export PYTHON=/usr/bin/python2
    _confopts+=" --enable-pythonmodule"
  fi

  if [ ${_enable_szip} -eq 1 ] ; then
    _confopts+=" --with-szlib=/usr/lib"
  fi

  if [ ${_bsd_source} -eq 0 ] ; then
    _confopts+=" --enable-hzip --enable-fpzip"
  fi

  ./configure --prefix=/usr LIBS='-lstdc++' \
    --enable-shared --enable-optimization \
    --enable-fortran --enable-browser \
    ${_confopts}

  make
}

check(){
  cd ${srcdir}/${pkgname}-${pkgver}${_lic}/tests

  # Quick test
  make testall
  ./testall

  # All tests, but tests 33 (rocket) and 46 (write objects) failed
  #make check PYTHON=/usr/bin/python2 BROWSER=${srcdir}/${pkgname}-${pkgver}/tools/browser

}

package(){
  cd ${srcdir}/${pkgname}-${pkgver}${_lic}

  make DESTDIR=${pkgdir} install
  install -Dm644 COPYRIGHT ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE
  install -Dm644 BSD_LICENSE_README ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE-BSD

  if [ ${_install_docs} -eq 1 ]
  then
    make DESTDIR=${pkgdir} install-html
    install -Dm644 docs/Silo.book.pdf ${pkgdir}/usr/share/doc/${pkgname}/Silo.book.pdf
  fi

}
