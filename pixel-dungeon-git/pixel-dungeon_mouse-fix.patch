From ab83d00660435b7fd8a4d0d35b11fd4dbcf0e704 Mon Sep 17 00:00:00 2001
From: Edu Garcia <arcnorj@gmail.com>
Date: Sat, 6 Sep 2014 10:29:04 +1000
Subject: [PATCH] Force mouse scroll to use integer values and added a
 threshold to avoid "jumps". Fixes #13

---
 .../watabou/pixeldungeon/scenes/CellSelector.java  | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

diff --git a/core/src/com/watabou/pixeldungeon/scenes/CellSelector.java b/core/src/com/watabou/pixeldungeon/scenes/CellSelector.java
index 0698517..3237f5b 100644
--- a/core/src/com/watabou/pixeldungeon/scenes/CellSelector.java
+++ b/core/src/com/watabou/pixeldungeon/scenes/CellSelector.java
@@ -19,7 +19,6 @@
 
 import com.badlogic.gdx.Input;
 import com.watabou.input.PDInputProcessor;
-import com.watabou.noosa.Camera;
 import com.watabou.noosa.TouchArea;
 import com.watabou.pixeldungeon.Dungeon;
 import com.watabou.pixeldungeon.DungeonTilemap;
@@ -32,6 +31,8 @@
 	public Listener listener = null;
 	
 	public boolean enabled;
+
+	private float mouseZoom;
 	
 	private float dragThreshold;
 	
@@ -61,10 +62,10 @@ public boolean onKeyDown(PDInputProcessor.Key key) {
 
         switch (key.code) {
         case Input.Keys.PLUS:
-            zoom( Camera.main.zoom + 1 );
+            zoom( camera.zoom + 1 );
             return true;
         case Input.Keys.MINUS:
-            zoom( Camera.main.zoom - 1 );
+            zoom( camera.zoom - 1 );
             return true;
         case Input.Keys.SLASH:
             zoom( PixelScene.defaultZoom );
@@ -126,7 +127,7 @@ public boolean onKeyDown(PDInputProcessor.Key key) {
     private void zoom( float value ) {
      //   value = Math.round( value );
         if (value >= PixelScene.minZoom && value <= PixelScene.maxZoom) {
-            Camera.main.zoom( value );
+            camera.zoom( value );
             PixelDungeon.zoom((int) (value - PixelScene.defaultZoom));
         }
     }
@@ -194,7 +195,18 @@ protected void onTouchUp( PDInputProcessor.Touch t ) {
 
 	@Override
 	public boolean onMouseScroll(int scroll) {
-		zoom( camera.zoom + scroll / 10f );
+		mouseZoom -= scroll / 10f;
+		if (mouseZoom < 0) {
+			do {
+				mouseZoom += 1;
+			} while (mouseZoom < 0);
+			zoom( camera.zoom - 1 );
+		} else if (mouseZoom > 1) {
+			do {
+				mouseZoom -= 1;
+			} while (mouseZoom > 1);
+			zoom( camera.zoom + 1 );
+		}
 		return true;
 	}
 
