--- netgen-code_org/libsrc/occ/Partition_Loop2d.cxx	2014-01-29 11:52:59.350387801 -0500
+++ netgen-code/libsrc/occ/Partition_Loop2d.cxx	2014-01-29 12:11:53.118144188 -0500
@@ -210,7 +210,7 @@
     Cc->D1(uc, PC, CTg1);
     if (!isForward) CTg1.Reverse();
 
-    Standard_Real anglemin = 3 * PI, tolAng = 1.e-8;
+    Standard_Real anglemin = 3 * M_PI, tolAng = 1.e-8;
 
     // select an edge whose first derivative is most left of CTg1
     // ie an angle between Tg1 and CTg1 is least
@@ -234,7 +234,7 @@
       // -PI < angle < PI
       Standard_Real angle = Tg1.Angle(CTg1);
 
-      if (PI - Abs(angle) <= tolAng)
+      if (M_PI - Abs(angle) <= tolAng)
       {
         // an angle is too close to PI; assure that an angle sign really
         // reflects an edge position: +PI - an edge is worst,
