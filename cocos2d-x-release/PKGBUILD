# Contributor: Miko≈Çaj Milej <mikolajmm at google mail>
# Contributor: Daniel T. Borelli <daltomi at aol com>
_major=2
_release=${_major}.2.2
_appname=cocos2d-x

pkgname=${_appname}-release
pkgver=${_release}
pkgrel=1
pkgdesc="Cocos2D-X is a game engine that supports multiple platforms such as iOS, Android, WinXP/7/8, WP8, BlackBerry, MeeGo, Marmelade, WebOS, Mac OS X"
arch=('i686' 'x86_64')
url="http://cdn.cocos2d-x.org/"
license=('MIT License')
depends=('glfw2' 'glew' 'glibc' 'fontconfig' 'libgl' 'curl' 'libx11' 'zlib')
makedepends=()
source=("${url}${_appname}-${_release}.zip"
        "cocos2dx.install"
        "cocos2dx.conf")
sha1sums=("4ca2ab22e28a7801992a80f8884f15580e22bfb6"
          "e4866806369ea5c7789a0e99f66b63d15b4bcb04"
          "49292c52c5a3080721247b2e5b8a816e23db9b5b")

_cocos2dx_mk="cocos2dx/proj.linux/cocos2dx.mk"

build() {
  _src_dir="${srcdir}/${_appname}-${_release}"
  cd ${_src_dir}
  #use glfw2 library
  sed -i 's/-lglfw /-lglfw2 /' ${_cocos2dx_mk}
  #fix build issues
  sed -i 's/-Werror / /' ${_cocos2dx_mk}

  #use gcc 4.8 debug optimizations
  sed -i 's/+= -g3 -O0/+= -g3 -Og/' ${_cocos2dx_mk}

  #make PLATFORM=linux DEBUG=1 all
  make PLATFORM=linux DEBUG=0 all
}

package() {
  _src_dir="${srcdir}/${_appname}-${_release}"
  _src_dir_external=${_src_dir}/external
  _lib_dir=${_src_dir}/lib/linux/release
  _include_dir=${_src_dir}/cocos2dx
  _dest_include_dir=$pkgdir/usr/include/cocos2dx

  ## library install
  install -d $pkgdir/usr/lib/cocos2dx
  install -Dm 644 ${_lib_dir}/*.so $pkgdir/usr/lib/cocos2dx
  install -Dm 644 ${_lib_dir}/*.a $pkgdir/usr/lib/cocos2dx
  install -d $pkgdir/etc/ld.so.conf.d
  install -Dm 644 ${startdir}/cocos2dx.conf $pkgdir/etc/ld.so.conf.d/
  
  ## step 1: install headers from cocos2dx/
  install -d $_dest_include_dir
  install -Dm 644 ${_include_dir}/*.h $_dest_include_dir/
  install -Dm 644 ${_include_dir}/include/*.h $_dest_include_dir/

  ## step 2: install headers from cocos2dx/sub-directories
  _dir_cocos2dx=("actions base_nodes cocoa draw_nodes effects kazmath/include/kazmath/ kazmath/include/kazmath/GL keypad_dispatcher label_nodes layers_scenes_transitions_nodes
       menu_nodes misc_nodes particle_nodes platform platform/linux script_support shaders sprite_nodes support support/component
       support/data_support support/image_support support/tinyxml2 support/user_default support/zip_support text_input_node textures
       tilemap_parallax_nodes touch_dispatcher ")

  for direc in ${_dir_cocos2dx}
  do
    install -d $_dest_include_dir/${direc}
    install -Dm 644 ${_include_dir}/${direc}/*h ${_dest_include_dir}/${direc}
  done

  ## step 3: install headers from extensions/
  _dir_extensions=("extensions extensions/AssetsManager extensions/CCBReader extensions/CocoStudio/Action extensions/CocoStudio/Armature extensions/CocoStudio/Armature/animation
       extensions/CocoStudio/Armature/datas extensions/CocoStudio/Armature/display extensions/CocoStudio/Armature/external_tool extensions/CocoStudio/Armature/physics
       extensions/CocoStudio/Armature/utils extensions/CocoStudio/Components extensions/CocoStudio/GUI/BaseClasses extensions/CocoStudio/GUI/Layouts extensions/CocoStudio/GUI/System
       extensions/CocoStudio/GUI/UIWidgets extensions/CocoStudio/GUI/UIWidgets/Compatible extensions/CocoStudio/GUI/UIWidgets/ScrollWidget extensions/CocoStudio/Json extensions/CocoStudio/Json/rapidjson
       extensions/CocoStudio/Json/rapidjson/internal extensions/CocoStudio/Reader extensions/CocoStudio/Trigger extensions/GUI/CCControlExtension extensions/GUI/CCEditBox extensions/GUI/CCScrollView
       extensions/network extensions/physics_nodes extensions/spine")

  for direc in ${_dir_extensions}
  do
    install -d $_dest_include_dir/${direc}
    install -Dm 644 ${_src_dir}/${direc}/*h ${_dest_include_dir}/${direc}
  done

  ## step 4: install headers from cocosdenshion
  install -d $_dest_include_dir/CocosDenshion
  install -Dm 644 ${_src_dir}/CocosDenshion/include/*.h ${_dest_include_dir}/CocosDenshion
  install -Dm 644 ${_src_dir}/CocosDenshion/linux/*.h ${_dest_include_dir}/CocosDenshion


  ## step 5: install headers from external/
  _dir_external=("external/Box2D external/Box2D/Collision external/Box2D/Collision/Shapes external/Box2D/Common external/Box2D/Dynamics external/Box2D/Dynamics/Contacts external/Box2D/Dynamics/Joints external/Box2D/Rope external/chipmunk/include/chipmunk external/chipmunk/include/chipmunk/constraints external/sqlite3/include")

  for direc in ${_dir_external}
  do
    install -d $_dest_include_dir/${direc}
    install -Dm 644 ${_src_dir}/${direc}/*h ${_dest_include_dir}/${direc}
  done

  ## step 6: install headers from scripting/lua
  install -d $_dest_include_dir/scripting/lua/script
  install -Dm 644 ${_src_dir}/scripting/lua/cocos2dx_support/*.h ${_dest_include_dir}/scripting/lua/ 
  install -Dm 644 ${_src_dir}/scripting/lua/script/*.lua ${_dest_include_dir}/scripting/lua/script 
}

# vim:set ts=2 sw=2 et:

