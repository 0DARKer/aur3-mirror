# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>

pkgname=lsi-msm
pkgver=14.08.01.02
pkgrel=1
pkgdesc="LSI Logic MegaRAID Storage Manager Suite"
arch=('i686' 'x86_64')
url="http://www.lsi.com/"
license=('custom:LSI')
depends=('libxtst' 'alsa-lib' 'libnet' 'unixodbc' 'net-snmp' 'xdg-utils')

rm token
source=("token::http://www.lsi.com/magic.axd?x=e&file=http%3A//www.lsi.com/downloads/Public/MegaRAID%2520Common%2520Files/${pkgver}_Linux_${_archq}_MSM.tar.gz")
sha1sums=('SKIP')

if [ "${CARCH}" = 'i686' ]; then
  _arch=x86
  _linux=Linux
  sha1sums+=('ff04dafe1d7bc19079b4a00c6ed1589ab538e681')
  depends+=('libxi' 'libxft' 'libpng12' 'libxinerama' 'libjpeg6' 'xerces-c')
elif [ "${CARCH}" = 'x86_64' ]; then
  _arch=x64
  _linux=Linux
  sha1sums+=('da77f7463fc656bec6b5506ccd4cb33d8c011e01')
  depends+=('lib32-libxi' 'lib32-libxft' 'lib32-libpng12' 'lib32-libxinerama' 'lib32-libjpeg6' 'lib32-xerces-c')
fi

source+=("http://www.lsi.com/downloads/Public/RAID%20Controllers/RAID%20Controllers%20Common%20Files/${pkgver}_${_linux}-${_arch}_MSM.tar.gz"
         'lsi_msm.service'
         'msm_profile.sh'
         'License.html'
         'LSI_StorSNMP.ini'
         'lsi_mrdsnmpd.service'
         'snmpd.conf')
sha1sums+=('1262c0bad8612d8bc4fded3320712621991c6f5d'
           '0e5d7b71435760e3ef7c1e132ba05145ccbd1268'
           '4243c765b47ecf525a91720fa6fe8d7f22dc988e'
           '0966ef683627585c54cf3ea7a56f5a20a0dbb7d6'
           'f421b4055cb619636d5894aa68da7222fa5c1919'
           'f612c3d1eacc4033d812b822bab4c15ededd0333')
install="lsi-msm.install"
backup=('etc/lsi_mrdsnmp/LSI_StorSNMP.ini'
        'etc/lsi_mrdsnmp/sas/sas_TrapDestination.conf'
        'etc/lsi_mrdsnmp/sas-ir/sas_ir_TrapDestination.conf'
        'etc/snmp/snmpd.conf')

create_links() {
  # create soname links
  for _lib in $(find "${pkgdir}" -not \( -path */MegaRAID_Storage_Manager/* -prune \) -name '*.so*'); do
    _soname=$(dirname "${_lib}")/$(readelf -d "${_lib}" | grep -Po 'SONAME.*: \[\K[^]]*' || true)
    _base=$(echo ${_soname} | sed -r 's/(.*).so.*/\1.so/')
    [[ -e "${_soname}" ]] || ln -s $(basename "${_lib}") "${_soname}"
    [[ -e "${_base}" ]] || ln -s $(basename "${_soname}") "${_base}"
  done
}

prepare() {
  rm -fr build
  cp -R disk build
}

package() {
  cd "${pkgdir}"

  # Uncompress RPM
  for i in $(find "${srcdir}/build" -type f -name '*.rpm'); do bsdtar -xf ${i}; done

  # Move to correct place
  mv "${pkgdir}/usr/local" "${pkgdir}/usr/share"
  mv "${pkgdir}/usr/share/MegaRAID Storage Manager" "${pkgdir}/usr/share/MegaRAID_Storage_Manager"
  [ "${CARCH}" = "x86_64" ] && mv "${pkgdir}/usr/lib64" "${pkgdir}/usr/lib"

  # setup shortcuts
  pushd "${pkgdir}/usr/share/MegaRAID_Storage_Manager" &> /dev/null
  install -Dm644 setdisp.png "${pkgdir}/usr/share/pixmaps/setdisp.png"
  install -Dm644 MSMHelp.desktop.SuSE "${pkgdir}/usr/share/applications/MSMHelp.desktop"
  install -Dm644 MSMStartupUI.desktop.SuSE "${pkgdir}/usr/share/applications/MSMStartupUI.desktop"
  popd &> /dev/null

  # Set correct path in launchers and fix entries
  sed -e 's|local/MegaRAID Storage Manager|share/MegaRAID_Storage_Manager|g' \
      -e 's|SystemSetup||g' \
      -i "${pkgdir}/usr/share/applications/"*.desktop
  sed '/SubstituteUID/d' -i "${pkgdir}/usr/share/applications/MSMHelp.desktop"

  # Remove leftover files
  find . -name '*.log' -delete
  rm -fr "${pkgdir}/etc/init.d" \
         "${pkgdir}/etc/lsi_mrdsnmp/"lsi_mrdsnmpd.{rh,suse} \
         "${pkgdir}/etc/lsi_mrdsnmp/"sas{,-ir}/{install,uninstall} \
         "${pkgdir}/usr/share/MegaRAID_Storage_Manager/"{*desktop.{SuSE,redhat},{uninstaller,pwd,.__uninst}.sh,vmware{35,40},installtype,setdisp.png.old}

  # Fix permisions
  find . -type d -not \( -path */jre/* -prune \) -print0 2>/dev/null | xargs -0r chmod 755
  find . -type f -not \( -path */jre/* -prune \) -print0 2>/dev/null | xargs -0r chmod 644
  for i in $(find . -type f -not \( -path */jre/* -prune \) -name '*.sh' -o -name 'popup_bin' -o -name 'popup' -o -name "add_entry" -o -name 'storcli64' -o -name 'mrmonitor' -o -name '*.so*'); do chmod +x ${i}; done
  for i in $(find etc/lsi_mrdsnmp -type f -name 'lsi_mrdsnmpagent' -o -name 'lsi_mrdsnmpmain'); do chmod +x ${i}; done

  # Make symlinks
  mkdir -p "${pkgdir}/usr/bin"
  ln -sf /etc/lsi_mrdsnmp/lsi_mrdsnmpagent "${pkgdir}/usr/bin/lsi_mrdsnmpagent"
  ln -sf /etc/lsi_mrdsnmp/lsi_mrdsnmpmain "${pkgdir}/usr/bin/lsi_mrdsnmpmain"

  # Create soname links
  create_links

  # Remove RH/Suse path remains and change '$MSM_HOME' variables to hardcoded path in scripts
  for i in "$(find . -type f -name '*.sh' -o -name 'popup')"; do sed -e '/msm_profile/d' -e 's|$MSM_HOME|/usr/share/MegaRAID_Storage_Manager|g' -i ${i}; done

  # Standarized /usr/share/MegaRAID_Storage_Manager/start{,monitor}help.sh whit xdg-open
  sed -e '13,20d' -e 's|mozilla|xdg-open|g' -e 's|/firefox||g' \
      -i "${pkgdir}/usr/share/MegaRAID_Storage_Manager/startmonitorhelp.sh"
  sed -e '28,35d' -e 's|mozilla|xdg-open|g' -e 's|/firefox||g' \
      -i "${pkgdir}/usr/share/MegaRAID_Storage_Manager/starthelp.sh"

  # Remove unused path in usr/share/MegaRAID_Storage_Manager/Framework/startup.sh
  sed -e 's|:/opt/lsi/Apache||g' -e 's|:/opt/lsi/openssl|:/usr/bin/openssl|g' -i "${pkgdir}/usr/share/MegaRAID_Storage_Manager/Framework/startup.sh"

  # Add missing #! in scripts
  sed '1i#!/usr/bin/sh' -i "${pkgdir}/usr/share/MegaRAID_Storage_Manager/startupui.sh" \
                    -i "${pkgdir}/usr/share/MegaRAID_Storage_Manager/startmonitorhelp.sh" \
                    -i "${pkgdir}/usr/share/MegaRAID_Storage_Manager/Framework/startup.sh" \
                    -i "${pkgdir}/usr/share/MegaRAID_Storage_Manager/Framework/shutdown.sh"

  # Install services and other files
  install -Dm644 "${srcdir}/lsi_msm.service" "${pkgdir}/usr/lib/systemd/system/lsi_msm.service"
  install -Dm644 "${srcdir}/lsi_mrdsnmpd.service" "${pkgdir}/usr/lib/systemd/system/lsi_mrdsnmpd.service"

  install -Dm755 "${srcdir}/msm_profile.sh" "${pkgdir}/etc/profile.d/msm.sh"

  install -Dm644 "${srcdir}/LSI_StorSNMP.ini"  "${pkgdir}/etc/lsi_mrdsnmp/LSI_StorSNMP.ini"
  install -Dm644 "${srcdir}/snmpd.conf" "${pkgdir}/etc/snmp/snmpd.conf"

  install -Dm644 "${srcdir}/License.html" "${pkgdir}/usr/share/licenses/${pkgname}/License.html"
}