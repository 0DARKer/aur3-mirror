# Maintainer: Sam S. <smls75@gmail.com>

pkgname=closure-hib
pkgver=1.1_20121228
_hibver=1.1-2012-12-28
pkgrel=2
pkgdesc='A puzzle platformer game that centers around light (Humble Bundle version)'
url='http://closuregame.com/'
arch=('i686' 'x86_64')
license=('custom:commercial')
depends=('libgl' 'sdl' 'nvidia-cg-toolkit' 'openal' 'freealut')
source=('closure-hib.desktop')
md5sums=('d691e2d56865f8331999374684bdf354')
options=('!strip' '!upx')
PKGEXT='.pkg.tar'

_installer="Closure-Linux-${_hibver}.sh"
_installer_md5='a7c2f7fe17ff67f376da70611abdce97';


package() {
  cd $srcdir
  [ $CARCH == "i686" ] && _arch='x86' || _arch='x86_64'
  _target="${pkgdir}/opt/Closure"

  # Get installer
  _get_local_source "${_installer}" --md5 "${_installer_md5}" || {
    error "Unable to find the game installer. Please download it from your
           Humble Bundle page, and place it into one of the above locations."
    exit 1; }

  # Extract installer
  msg "Starting setup..."
  [[ -d archive ]] && rm -r archive; mkdir archive; mkdir -p ${_target}
  while read line; do echo -n '.'; done < <(  # show progress as dots
    sh "${_installer}" --tar xvf -C archive/
    lzma -d < archive/instarchive_linux_${_arch} | tar xvf - -C "${_target}"
    lzma -d < archive/instarchive_all | tar xvf - -C "${_target}"
  ); echo

  # Remove unused files with encoding problems
  rm -r "${_target}/resources/textures/ui/temp/"

  # Install desktop entry
  install -Dm644 "${pkgname}.desktop" \
                 "${pkgdir}/usr/share/applications/${pkgname}.desktop"

  # Install icon
  install -Dm644 "${_target}/Closure.png" \
                 "${pkgdir}/usr/share/pixmaps/closure.png"

  # Install launch script
  install -d "${pkgdir}/usr/bin"
  ln -s "/opt/Closure/Closure.bin.${_arch}" "${pkgdir}/usr/bin/closure"
}


###### HELPER FUNCTIONS ######

# Locates a file or folder provided by the user, and symlinks it into $srcdir
_get_local_source() {
  msg "Looking for '$1'..."; rm -f "$srcdir/$1"
  declare -A _search=(['build dir']="$startdir"
                      ['$LOCAL_PACKAGE_SOURCES']="$LOCAL_PACKAGE_SOURCES")
  for _key in "${!_search[@]}"; do local _dir="${_search["$_key"]}"
    echo -n "    - in $_key [${_dir:-<undefined>}] ... ";
    if [[ -z "$_dir" || ! -e "$_dir/$1" ]]; then
      echo "NOT FOUND"
    elif [[ -n $2 && "$(${2#--}sum "$_dir/$1"|awk '{print $1}')" != $3 ]]; then
      echo "CHECKSUM FAILED";
    else
      echo "FOUND"; ln -sfT "$(readlink -f "$_dir/$1")" "$srcdir/$1"; break; fi
  done
  if [ ! -e "$srcdir/$1" ]; then return 1; fi
}
