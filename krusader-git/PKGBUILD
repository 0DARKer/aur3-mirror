# Contributor: CtHx

pkgname=krusader-git
pkgver=20130405
pkgrel=1
pkgdesc="Advanced twin panel file manager for KDE - git version"
arch=('i686' 'x86_64')
url="http://www.krusader.org/"
license=('GPL')
depends=('kdelibs>=4.3.0' 'kdebase-runtime>=4.3.0')
makedepends=('cmake' 'automoc4' 'git')
provides=('krusader')
conflicts=('krusader' 'krusader-kde4-svn' 'krusader-svn')
replaces=('krusader' 'krusader-kde4-svn' 'krusader-svn' )
source=('git://anongit.kde.org/krusader')
md5sums=('SKIP')

_gitname="krusader"

pkgver() {
  cd ${srcdir}/${_gitname}
  git log -1 --format="%cd" --date=short | tr -d '-'
}

build() {

  cd ${srcdir}/${_gitname}

  msg "l10n..."
  _svnroot=svn://anonsvn.kde.org/home/kde/trunk
  wget -q -O "subdirs" "http://websvn.kde.org/*checkout*/trunk/l10n-kde4/subdirs"
  _i18nlangs=`cat subdirs`
  rm subdirs
  _i18nlangs=`echo $_i18nlangs|sed 's/x-test //'`
  ## custom langs:
  #_i18nlangs="ru"
  #_i18nlangs="de fr"

  mkdir -p po
  echo -n "">po/CMakeLists.txt
  echo -n "Downloading l10n files: "
  for _lang in ${_i18nlangs} ; do
    _dest=po/${_lang}
    mkdir -p ${_dest}
    wget -q -O ${_dest}/krusader.po "http://websvn.kde.org/*checkout*/trunk/l10n-kde4/${_lang}/messages/extragear-utils/krusader.po" || true
    
    if [ -s ${_dest}/krusader.po ] ; then
      echo -n "${_lang} "

      echo "add_subdirectory( ${_lang} )">>po/CMakeLists.txt

      echo "file(GLOB _po_files *.po)">${_dest}/CMakeLists.txt
      echo "GETTEXT_PROCESS_PO_FILES( ${_lang} ALL INSTALL_DESTINATION \${LOCALE_INSTALL_DIR} \${_po_files} )">>${_dest}/CMakeLists.txt
    else
      rm -rf ${_dest}
    fi
  done
  echo ""

  
  echo "find_package(Msgfmt REQUIRED)" >> CMakeLists.txt
  echo "find_package(Gettext REQUIRED)" >> CMakeLists.txt
  echo "add_subdirectory( po )" >> CMakeLists.txt

  msg "Starting make..."

  rm -rf build
  mkdir -p build
  cd build
  cmake .. \
  -DCMAKE_INSTALL_PREFIX=`kde4-config --prefix` \
  -DCMAKE_BUILD_TYPE=Release \
  -DQT_QMAKE_EXECUTABLE=qmake-qt4
  make  || return 1 
}

package() {
  cd ${srcdir}/${_gitname}/build
  make DESTDIR=${pkgdir} install || return 1
  cd .. && rm -rf build
  #rewrite changes
  git reset --hard

}