diff --git a/external/google-closure-library/closure/bin/build/source.py b/external/google-closure-library/closure/bin/build/source.py
index c2ee1fb..1d22af5 100755
--- a/external/google-closure-library/closure/bin/build/source.py
+++ b/external/google-closure-library/closure/bin/build/source.py
@@ -21,6 +21,7 @@ Simple class to scan a JavaScript file and express its dependencies.
 __author__ = 'nnaze@google.com'
 
 
+import io
 import re
 
 _BASE_REGEX_STRING = '^\s*goog\.%s\(\s*[\'"](.+)[\'"]\s*\)'
@@ -107,7 +108,7 @@ def GetFileContents(path):
     IOError: An error occurred opening or reading the file.
 
   """
-  fileobj = open(path)
+  fileobj = io.open(path, encoding='utf-8')
   try:
     return fileobj.read()
   finally:
diff --git a/docs/rql/scripts/json_convert.py b/docs/rql/scripts/json_convert.py
index af15196..d07341c 100644
--- a/docs/rql/scripts/json_convert.py
+++ b/docs/rql/scripts/json_convert.py
@@ -20,7 +20,7 @@ commands = []
 # Walk the src files to compile all sections and commands
 for root, dirs, file_names in os.walk(src_dir):
     for file_name in file_names:
-        docs = yaml.load(file(os.path.join(root, file_name)))
+        docs = yaml.load(open(os.path.join(root, file_name)))
 
         if 'sections' in docs:
             sections.extend(docs['sections'])
@@ -128,7 +128,14 @@ for section in sections:
                             out_lang['name2'] = override['name2']
 
                         if 'examples' in override:
-                            for example_num, example_override in override['examples'].iteritems():
+                            example_dict = override['examples']
+                            try:
+                                # python3
+                                iteritems = example_dict.iteritems()
+                            except AttributeError:
+                                # python 2
+                                iteritems = example_dict.items()
+                            for example_num, example_override in iteritems:
                                 if len(example_override) == 0:
                                     del out_examples[int(example_num)]
                                 else:
@@ -153,8 +160,8 @@ for section in sections:
 out_obj['sections'].sort(key=lambda section: section['order'])
 
 # And add header information
-out_obj = dict(json.load(open(header_file, "r")).items() + out_obj.items())
+out_obj.update(json.load(open(header_file, "r")))
 
 # Serialize and write the output
-out_file = file(dest_file, 'w')
+out_file = open(dest_file, 'w')
 json.dump(out_obj, out_file)
