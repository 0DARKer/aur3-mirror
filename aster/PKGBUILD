# Maintainer: Michele Mocciola <mickele>
pkgname=aster
pkgver=11.3.0
pkgrel=1
pkgdesc="Code-Aster"
url="http://www.code-aster.org/"
license="GPL"
depends=('python2' 'astk>=1.11.0' 'metis4' 'med>=3.0.6')
makedepends=()
install="${pkgname}.install"
arch=('i686' 'x86_64')
source=('http://www.code-aster.org/FICHIERS/aster-full-src-11.3.0-3.noarch.tar.gz')
options=(!strip)

build() {
    cd "${srcdir}/aster-full-src-${pkgver}"

    # sed -e "s|nodebug|debug|" -i products.py

    sed -e "s|should_continue()|# should_continue()|g" -i setup.py
    sed -e "s|'metis'|'metis-4'|g" \
    	-e "s|-lmetis|-lmetis-4|g" \
	-e "s|metis.h|metis-4/metis.h|g" \
	-i products.py
    sed -e "s|'metis'|'metis-4'|g" -i products_versions.py

    sed -e "s|PREFER_SHARED_LIBS=False|PREFER_SHARED_LIBS=True|" -i setup.cfg
    echo "HOME_METIS='/usr'" >> setup.cfg
    echo "HOME_MED='/usr'" >> setup.cfg
    echo "HOME_HDF='/usr'" >> setup.cfg

    if [ "$CARCH" = "x86_64" ]; then
        echo "FFLAGS='-ffixed-line-length-0 -fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 -fno-aggressive-loop-optimizations $FFLAGS'" >> setup.cfg
        echo "FFLAGS_DBG='-g -ffixed-line-length-0 -fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 -fno-aggressive-loop-optimizations $FFLAGS'" >> setup.cfg
        echo "F90FLAGS='-ffixed-line-length-0 -x f77-cpp-input -fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 -fno-aggressive-loop-optimizations $FFLAGS'" >> setup.cfg
        echo "F90FLAGS_DBG='-g -ffixed-line-length-0 -x f77-cpp-input -fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 -fno-aggressive-loop-optimizations $FFLAGS'" >> setup.cfg
    else # i686
        echo "FFLAGS='-ffixed-line-length-0 -fno-aggressive-loop-optimizations $FFLAGS'" >> setup.cfg
        echo "FFLAGS_DBG='-g -ffixed-line-length-0 -fno-aggressive-loop-optimizations $FFLAGS'" >> setup.cfg
        echo "F90FLAGS='-ffixed-line-length-0 -fno-aggressive-loop-optimizations $FFLAGS'" >> setup.cfg
        echo "F90FLAGS_DBG='-g -ffixed-line-length-0  -fno-aggressive-loop-optimizations $FFLAGS'" >> setup.cfg
    fi
}

package() {
    install -d -m 755 "${pkgdir}/opt/aster/bin"
    cp -f /opt/aster/bin/as_run "${pkgdir}/opt/aster/bin"

    install -d -m 755 "${pkgdir}/opt/aster/lib"
    cp -rf /opt/aster/lib/* "${pkgdir}/opt/aster/lib"

    install -d -m755 "${pkgdir}/opt/aster/etc"
    cp -rf /opt/aster/etc/codeaster "${pkgdir}/opt/aster/etc"

    install -d -m755 "${pkgdir}/opt/aster/ASTK/ASTK_SERV"
    cp -rf /opt/aster/ASTK/ASTK_SERV/* "${pkgdir}/opt/aster/ASTK/ASTK_SERV"

    mkdir -p "${pkgdir}/opt/aster/outils/"
    for _FILEMETIS in onmetis kmetis pmetis
    do
        ln -s /usr/bin/${_FILEMETIS}-4 "${pkgdir}/opt/aster/outils/${_FILEMETIS}"
    done

    cd "${srcdir}/aster-full-src-${pkgver}"

    python2 setup.py install --prefix="${pkgdir}/opt/aster" aster

    rm -rf "${pkgdir}/opt/aster/bin"
    rm -rf "${pkgdir}/opt/aster/lib"
    rm -rf "${pkgdir}/opt/aster/etc"
    rm -rf "${pkgdir}/opt/aster/ASTK"
}
md5sums=('d97475885b54a4e514c486da83cfeca6')
