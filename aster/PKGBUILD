# Maintainer: Michele Mocciola <mickele>
# Contributor: Brice Méalier <mealier_brice@yahoo.fr>

pkgname=aster
pkgver=10.1.0
pkgrel=4
pkgdesc="Code-Aster provides a complete serie of analysis and multiphysics modelling methods"
url="http://www.code-aster.org/index.php"
license="GPL"
depends=('python' 'python-numeric' 'blas' 'lapack' 'tcl' 'tk' 'scotch>5.1.7' 'hdf5>=1.8.0' 'med>=2.3.6' 'metis-edf>=4.1' 'astk>=1.8.0-3')
makedepends=('sed' 'coreutils' 'patch' 'binutils' 'libarchive')
optdepends=('homard>=9.5: to refine and de-refine meshes')
conflicts=()
replaces=()
backup=()
arch=('i686' 'x86_64')
install=(aster.install)
source=(http://www.code-aster.org/V2/UPLOAD/DOC/Telechargement/$pkgname-full-src-$pkgver-4.noarch.tar.gz)
option=('!strip')

_pkgvershort=${pkgver:0:4}
_installdir=/opt/aster
_astkdir=${_installdir}/ASTK
_pythonver=2.6

build() {

  cd ${srcdir}/${pkgname}-full-src-${pkgver}/SRC || return 1
  
  cp -rf /opt/metis-edf/ ${srcdir} || return 1
  rm -rf ${srcdir}/metis-edf/lib/*.so* || return 1
  
  # Modify aster source because of an issue in the last scotch
  bsdtar -xf aster-src-10.1.0-1.noarch.tar.gz
  rm -rf aster-src-10.1.0-1.noarch.tar.gz || return 1
  sed -e "s|#include \"common.h\"|/\*#include \"common.h\"\*/|" \
      -i STA${pkgver:0:4}/bibc/scotch/fetsco.c
  tar czf aster-src-10.1.0-1.noarch.tar.gz STA${pkgver:0:4}

  msg "-- Sets configuration variables --"

  cd ${srcdir}/${pkgname}-full-src-${pkgver} || return 1

  # *** Modifies setup.py and check_compilers.py: no question to stop compilation ***
  sed -e "s|should_continue()|#should_continue()|g" \
      -i setup.py
  sed -e "s|rep = should_continue()|#rep = should_continue()|" \
      -i check_compilers.py

  # *** Modifies products.py because version of scotch on AUR is more recent than the one code-aster expects ***
  sed -e "s|, 'scotcherrcom'||" \
      -e "s|'common',||" \
      -e "s|?ASTER_ROOT?|${pkgdir}${_installdir}|" \
      -i products.py

  # *** Modifies setup.cfg ***
  sed -e "s|/opt/aster|${pkgdir}${_installdir}|" \
      -e "s|#CC='/usr/bin/gcc'|CC='/usr/bin/gcc'|" \
      -e "s|#CXX='/usr/bin/g++'|CXX='/usr/bin/g++'|" \
      -e "s|#F77='/usr/bin/g77'|F77='/usr/bin/gfortran'|" \
      -e "s|#F90='/usr/bin/gfortran'|F90='/usr/bin/gfortran'|" \
      -e "s|#LD=F77|LD='LD=F77'|" \
      -e "s|PREFER_SHARED_LIBS=False|PREFER_SHARED_LIBS=True|" \
      -e "s|_install_omniORB   = True|#_install_omniORB   = True|" \
      -e "s|_install_omniORBpy = True|#_install_omniORBpy = True|" \
      -e "s|_install_pylotage  = True|#_install_pylotage  = True|" \
      -i setup.cfg

  echo "_install_hdf5 = False" >> setup.cfg
  echo "HOME_HDF='/usr'" >> setup.cfg
  echo "_install_med = False" >> setup.cfg
  echo "HOME_MED='/usr'" >> setup.cfg
  echo "_install_tcl = False" >> setup.cfg
  echo "_install_tk  = False" >> setup.cfg
  echo "HOME_TCL_TK='/usr'" >> setup.cfg
  echo "_install_Pmw = False" >> setup.cfg
  echo "_install_Numeric = False" >> setup.cfg
  echo "HOME_NUMERIC='/usr'" >> setup.cfg
  echo "_install_gmsh = False" >> setup.cfg
  echo "_install_gmsh2 = False" >> setup.cfg
  echo "_install_gibi = False" >> setup.cfg
  echo "_install_grace = False" >> setup.cfg
  echo "XMGRACE = 'xmgrace'" >> setup.cfg
  echo "_install_homard = False" >> setup.cfg
  echo "_install_eficas = False" >> setup.cfg
  echo "_install_astk = False" >> setup.cfg
  echo "_install_astk_serv = False" >> setup.cfg
  echo "_install_metis = False" >> setup.cfg
  echo "HOME_METIS='${srcdir}/metis-edf'" >> setup.cfg
  echo "_install_mumps = False" >> setup.cfg
  echo "HOME_MUMPS = ''" >> setup.cfg
  echo "_install_omniORB = False" >> setup.cfg
  echo "_install_omniORBpy = False" >> setup.cfg
  echo "_install_pylotage = False" >> setup.cfg
  echo "_install_crpcrs = False" >> setup.cfg
  echo "_install_aster_Linux = False" >> setup.cfg
  echo "_install_scotch  = False" >> setup.cfg
  echo "OPT_ENV = 'verbose=True'" >> setup.cfg
  echo "HOME_SCOTCH = '/usr'" >> setup.cfg
  echo "HOME_ZMAT = ''" >> setup.cfg
  echo "HOME_MPI = ''" >> setup.cfg
  echo "BLASLIB='/usr'" >> setup.cfg
  echo "LAPACKLIB='/usr'" >> setup.cfg
  echo "GZIP='/bin/gzip'" >> setup.cfg
  echo "SHELL_EXECUTION='/bin/sh'" >> setup.cfg
  echo "TERMINAL='xterm'" 
  echo "LDFLAGS='-lstdc++ $LDFLAGS'" >> setup.cfg
  if [ "$CARCH" = "x86_64" ]; then
    echo "FFLAGS='-ffixed-line-length-0 -fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 $FFLAGS'" >> setup.cfg
    echo "FFLAGS_DBG='-g -ffixed-line-length-0 -fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 $FFLAGS'" >> setup.cfg
    echo "F90FLAGS='-ffixed-line-length-0 -x f77-cpp-input -fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 $FFLAGS'" >> setup.cfg
    echo "F90FLAGS_DBG='-g -ffixed-line-length-0 -x f77-cpp-input -fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 $FFLAGS'" >> setup.cfg
  else # i686
    echo "FFLAGS='-ffixed-line-length-0 $FFLAGS'" >> setup.cfg
    echo "FFLAGS_DBG='-g -ffixed-line-length-0 $FFLAGS'" >> setup.cfg
    echo "F90FLAGS='-ffixed-line-length-0 -x f77-cpp-input -I/usr/include $FFLAGS'" >> setup.cfg
    echo "F90FLAGS_DBG='-g -ffixed-line-length-0  -x f77-cpp-input -I/usr/include $FFLAGS'" >> setup.cfg
  fi
  echo "CFLAGS='-fno-stack-protector -DH5_USE_16_API $CFLAGS'" >> setup.cfg
  echo "CFLAGS_DBG='-g -fno-stack-protector -DH5_USE_16_API $CFLAGS'" >> setup.cfg
  echo "CPPFLAGS='-DH5_USE_16_API $CPPFLAGS'" >> setup.cfg
  echo "CXXFLAGS='-DH5_USE_16_API $CXXFLAGS'" >> setup.cfg
  echo "MATH_LIST = ['blas', 'lapack', 'gfortran']">> setup.cfg

  # *** Compiles .py files to improve compilation speed ***
  /usr/bin/python /usr/lib/python$_pythonver/compileall.py ./
  /usr/bin/python -O /usr/lib/python$_pythonver/compileall.py ./

  # *** copies and modifies some files from astk necessary to build code-aster ***
  mkdir -p ${pkgdir}${_installdir}/etc/codeaster || return 1
  cp -rf ${_installdir}/etc/codeaster/*  ${pkgdir}${_installdir}/etc/codeaster || return 1
  cp -rf ${_installdir}/bin \
     	 ${pkgdir}${_installdir} || return 1
  mkdir -p ${pkgdir}${_installdir}/lib/python${_pythonver}/site-packages || return 1
  cp -rf ${_installdir}/lib/python${_pythonver}/site-packages/asrun \
     	 ${pkgdir}${_installdir}/lib/python${_pythonver}/site-packages  || return 1
  sed -e "s|${_installdir}|${pkgdir}${_installdir}|g" \
      -i ${pkgdir}${_installdir}/bin/as_run
  for _FILE in etc/codeaster/profile.sh lib/python${_pythonver}/site-packages/asrun/installation.py
  do
	sed -e "s|${_installdir}|${pkgdir}${_installdir}|g" \
	    -e "s|/ASTK/ASTK_SERV||" \
      	    -i ${pkgdir}${_installdir}/${_FILE}
  done


  msg "--- Builds Code_Aster ---"

  python setup.pyo --prefix=${pkgdir}${_installdir} install aster | tee ${srcdir}/build.log
}

package() {

  msg "--- Modifies some files in the installation dir ---"

  # *** set HDF5_DISABLE_VERSION_CHECK variable because of problem with HDF5 versioning ***
  echo "" >> ${pkgdir}${_installdir}/STA${_pkgvershort}/profile.sh
  echo "# Added by Archlinux maintainer" >> ${pkgdir}${_installdir}/STA${_pkgvershort}/profile.sh
  echo "export HDF5_DISABLE_VERSION_CHECK=2" >> ${pkgdir}${_installdir}/STA${_pkgvershort}/profile.sh

  # *** removes links to the building dir ***
  for _FILE in Makefile Makefile.asrun config.txt profile.sh astout.export config.txt forma01a.export
  do
    sed -e "s|${pkgdir}||g" \
        -i ${pkgdir}${_installdir}/STA${_pkgvershort}/${_FILE}
  done

  # *** I took these from freebsd maintainer: they should be usefull ;-) ***
  chmod -x ${pkgdir}${_installdir}/STA${_pkgvershort}/materiau/A42_REF_A.NOMI || return 1
  for _FILE in astout.export config.txt forma01a.export
  do
    sed -e "s|^F list|@F list|" \
	-e "s|^#F list|F list|" \
	-e "s|^@F list|#F list|" \
	-e "s|P mode astout|P mode interactif|" \
	-e "s|P mode forma01a|P mode interactif|" \
	-e "s|R resu_test ${_installdir}|R resu_test /tmp|" \
        -i ${pkgdir}${_installdir}/STA${_pkgvershort}/${_FILE}
  done
  sed -e "s|cat ./fort.15 ./ficode|cat ./ficode|"	\
      -i ${pkgdir}${_installdir}/STA${_pkgvershort}/bibpyt/Execution/E_SUPERV.py

  # *** Compiles .py files to improve execution speed ***
  for _FILE in bibpyt commande
  do
    python /usr/lib/python$_pythonver/compileall.py -f ${pkgdir}${_installdir}/STA${_pkgvershort}/${_FILE}
    python -O /usr/lib/python$_pythonver/compileall.py -f ${pkgdir}${_installdir}/STA${_pkgvershort}/${_FILE}
  done 

  touch ${pkgdir}${_installdir}/STA${_pkgvershort}/etude/forma01a.17 || return 1

  
  msg "--- Removes unnecessary files and symbols ---"

  # *** Remove unnecessary files ***
  # Files contained in astk
  rm -rf ${pkgdir}${_installdir}/{.postinst,bin,etc,lib} || return 1
  # Object files
  rm -rf ${pkgdir}${_installdir}/STA${_pkgvershort}/obj || return 1
  for _FILE in `find $pkgdir -name "*.o"`
  do
    rm -f ${_FILE} || return 1
  done

  # *** Remove unnecessary symbols ***
  for _FILE in \
      ${pkgdir}${_installdir}/STA${_pkgvershort}/asteru \
      ${pkgdir}${_installdir}/STA${_pkgvershort}/lib/libaster.a \
      ${pkgdir}${_installdir}/STA${_pkgvershort}/lib/libferm.a; 
  do
    strip --strip-debug ${_FILE} || return 1
  done
  for _FILE in \
      ${pkgdir}${_installdir}/STA${_pkgvershort}/asteru;
  do
    strip --strip-unneeded ${_FILE} || return 1
  done
}

md5sums=('49fe55a0a46491124c16965a2db59c5e')
