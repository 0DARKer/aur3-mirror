# Maintainer: <maxroder@web.de>

pkgname=jaolt-svn
pkgver=1018
pkgrel=1
pkgdesc="java auction management tool for ebay, auvito and hood"
arch=('any')
url="http://code.google.com/p/jaolt/"
license=('LGPL' 'CDDL'  'APACHE' 'BSD' 'CCPL:by' 'custom:H2' 'custom:jdom' 'custom:jgoodies')
depends=('java-runtime')
makedepends=('apache-ant')
provides=('jaolt')
conflicts=('jaolt')
source=('jaolt-svn.sh')
md5sums=('c50ddad7404b6f36a03aa9fa4491dede')

_svntrunk='http://jaolt.googlecode.com/svn/trunk'
_svnmod='jaolt'

build() {
	cd ${srcdir}

	msg "Connecting to SVN server...."

	if [ -d ${_svnmod}/.svn ]; then
		(cd ${_svnmod} && svn up -r $pkgver)
	else
		svn co ${_svntrunk} --config-dir ./ -r $pkgver ${_svnmod}
	fi

	msg "SVN checkout done or server timeout"
	msg "Starting build..."

	# Remove old source files first, if present
	rm -rf ${_svnmod}-build
	svn export ${_svnmod} ${_svnmod}-build
	cd ${_svnmod}-build

	# Compile using apache-ant
	/usr/share/java/apache-ant/bin/ant
}

package() {
	cd ${_svnmod}-build	

	# Remove unnecessary files
	rm -rf data/auctionplatforms

	# Remove .svn directories
	rm -rf `find . -type d -name .svn`

	# License stuff
	install -d ${pkgdir}/usr/share/licenses/jaolt
	cp h2.txt ${pkgdir}/usr/share/licenses/jaolt/LICENSE.h2
	cp jdom.txt ${pkgdir}/usr/share/licenses/jaolt/LICENSE.jdom
	cp jgoodies-uiflite.txt ${pkgdir}/usr/share/licenses/jaolt/LICENSE.jgoodies
	cp license-instructions.txt ${pkgdir}/usr/share/licenses/jaolt/readme

	# Copy files
	install -d ${pkgdir}/usr/share/java/jaolt/ ${pkgdir}/usr/share/applications/ ${pkgdir}/usr/share/pixmaps/
	mv jaolt.desktop ${pkgdir}/usr/share/applications/
	mv jaolt.xpm ${pkgdir}/usr/share/pixmaps/

	# Remove unnecessary files, copy anything else
	rm -rf bin/ build* changelog.txt images/ jaolt jaolt.ico lgpl.txt other.txt packages/ release/ screenshots/ src/ sun.txt
	cp -r * ${pkgdir}/usr/share/java/jaolt/

	# Install wrapper script
	install -Dm 755 ${srcdir}/${pkgname}.sh ${pkgdir}/usr/bin/jaolt

	# Clean up
	cd .. && rm -rf ${srcdir}/${_svnmod}-build
}
