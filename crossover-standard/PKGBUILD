# Contributor: Det <nimetonmaili@gmail.com>
# Contributor: adamruss
# Contributor: LTSmash <lord.ltsmash@gmail.com>

pkgname=crossover-standard
pkgver=9.1.0
pkgrel=1
pkgdesc="Play Windows Games on Linux (non-free Wine)"
arch=('i686' 'x86_64')
url="http://www.codeweavers.com"
replaces=('crossover')
conflicts=('crossover' 'crossover-pro')
provides=('crossover')
makedepends=('deb2targz')

if [ "$CARCH" = "i686" ]; then

    depends=('libsm' 'libxext' 'libxrandr' 'libice' 'pygtk')
    optdepends=('alsa-lib: enables sound through ALSA'
		'libxcursor: coloured mouse pointer support'
		'libxi: enables joystick and tablet support'
		'libxinerama: enables spanning multiple screens'
		'libpng: enable PNG images'
		'libjpeg: enable JPEG images'
		'openssl:  support for secure Internet communication'
		'libcups: printing support'
		'libxxf86vm: perform gamma adjustments'
		'hal: automatically detect CD-ROMs, DVDs, and USB keys'
		'fontconfig: enables access to TrueType fonts'
		'unzip: required to install Guild Wars, automatic installer extraction')

elif [ "$CARCH" = "x86_64" ]; then

    depends=('lib32-glibc' 'lib32-libsm' 'lib32-libxext' 'lib32-zlib' 'lib32-gcc-libs' 'lib32-libxrandr' 'lib32-libice' 'lib32-util-linux-ng' 'lib32-e2fsprogs' 'pygtk')
    optdepends=('lib32-nvidia-utils: enables 3D under nvidia cards'
		'lib32-catalyst-utils:enables 3D under ati cards'
		'lib32-alsa-lib: enables sound through ALSA'
		'lib32-libxcursor: coloured mouse pointer support'
		'lib32-libxinerama: enables spanning multiple screens'
		'lib32-openssl:  support for secure Internet communication'
		'lib32-libcups: printing support'
		'lib32-libxxf86vm: perform gamma adjustments'
		'lib32-libxi: enables joystick and tablet support'
		'lib32-libpng: enable PNG images'
		'lib32-libjpeg: enable JPEG images'
		'lib32-hal: automatically detect CD-ROMs, DVDs, and USB keys'
		'lib32-fontconfig: enables access to TrueType fonts'
		'unzip: required to install Guild Wars, automatic installer extraction')

fi

license=('custom')
install=${pkgname}.install
source=("http://media.codeweavers.com/pub/crossover/cxlinux/demo/${pkgname}-demo_${pkgver}-1_i386.deb")
md5sums=('90c77ac30b68fd3e6f6dd5e99890fcad')

build() {
	cd "${srcdir}"
	deb2targz crossover-standard-demo_${pkgver}-1_i386.deb
	tar xf crossover-standard-demo_${pkgver}-1_i386.tar.gz -C "${pkgdir}"
	rm "${pkgdir}"/opt/cxoffice/doc # remove symbolic link
	mkdir "${pkgdir}"/opt/cxoffice/doc # create real directory
	mv "${pkgdir}"/usr/share/doc/crossover-standard-demo/* "${pkgdir}"/opt/cxoffice/doc
	gzip -d "${pkgdir}"/opt/cxoffice/doc/license.txt.gz
	install -m 644 -D "${pkgdir}"/opt/cxoffice/doc/license.txt "${pkgdir}"/usr/share/licenses/crossover-standard/license
	sed s/\;\;"\"MenuRoot\" = \"\""/"MenuRoot = Windows Games/" -i "${pkgdir}"/opt/cxoffice/share/crossover/bottle_data/cxbottle.conf
	sed s/\;\;"\"MenuStrip\" = \"\""/"MenuStrip = 1/" -i "${pkgdir}"/opt/cxoffice/share/crossover/bottle_data/cxbottle.conf
	rm -rf "${pkgdir}"/usr
}