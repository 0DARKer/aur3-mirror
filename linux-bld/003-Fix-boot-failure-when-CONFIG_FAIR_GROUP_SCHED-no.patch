From 3e0ca1f1c437c160349a724b869ce0005814d690 Mon Sep 17 00:00:00 2001
From: rakib <rakib.mullick@gmail.com>
Date: Thu, 5 Jun 2014 18:26:42 +0600
Subject: [PATCH]  Fix boot failure when CONFIG_FAIR_GROUP_SCHED=n.

Recently noticed a boot failure when CONFIG_FAIR_GROUP_SCHED=n. Fix
it.
---
 kernel/sched/bld.h | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/bld.h b/kernel/sched/bld.h
index ad251d5..965ec1d 100644
--- a/kernel/sched/bld.h
+++ b/kernel/sched/bld.h
@@ -4,7 +4,7 @@ static DEFINE_RWLOCK(rt_list_lock);
 static LIST_HEAD(rt_rq_head);
 static LIST_HEAD(cfs_rq_head);
 static DEFINE_RWLOCK(cfs_list_lock);
-
+#ifdef	CONFIG_FAIR_GROUP_SCHED
 static inline struct rq *rq_of_rt(struct rt_rq *rt_rq)
 {
 	return rt_rq->rq;
@@ -14,6 +14,17 @@ static inline struct rq *rq_of_cfs(struct cfs_rq *cfs_rq)
 {
 	return cfs_rq->rq;
 }
+#else
+static inline struct rq *rq_of_cfs(struct cfs_rq *cfs_rq)
+{
+	return container_of(cfs_rq, struct rq, cfs);
+}
+
+static inline struct rq *rq_of_rt(struct rt_rq *rt_rq)
+{
+	return container_of(rt_rq, struct rq, rt);
+}
+#endif
 
 static int select_cpu_for_wakeup(int task_type, struct cpumask *mask)
 {
-- 
1.9.3

