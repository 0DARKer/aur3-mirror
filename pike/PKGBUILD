# Contributor: Christoph Zeiler <rabyte*gmail>
# Contributor: Rickard Gustafsson <rickard@allyourbase.se>
# Contributor: Nathan Owe <ndowens04 at gmail>
# Contributor:  Stefan Husmann <stefan-husmann@t-online.de>
# Maintainer: Alexej Magura <agm2819*gmail*>

pkgname=pike
pkgver=7.8.700
pkgrel=5
pkgdesc="A general purpose, dynamic programming language with a syntax similar to Java and C"
arch=('i686' 'x86_64')
url="http://pike.lysator.liu.se/"
license=('GPL2' 'LGPL' 'MPL')
depends=('gtksourceview2' 'sane' 'libzip' 'libmysqlclient' 'gtkglarea1')
#depends=('librsvg' 'gtksourceview2' 'libgnomeui' 'libxmu' \
#  'ffmpeg' 'unixodbc' 'gtk' 'postgresql-libs' 'fuse' 'freeglut' \
#  'sdl_mixer' 'libffi' 'perl')
makedepends=('ico2xpm') # just run:
		    # $ packer -S rpl && makepkg 
		    # instead of just:
		    # $ makepkg
source=("http://${pkgname}.ida.liu.se/pub/$pkgname/latest-stable/Pike-v${pkgver}.tar.gz" "pike.plx")
md5sums=('9f758c484e55f0660e956823cbf13c7e' '5f1188a4dfdc16e91ff68d53433100f0')


build() {
    
    cd "$srcdir/Pike-v$pkgver"
    
    # using rpl here, we remove the '-r' in the OS=`` thing so that you won't have to rebuild pike every single time
    # you build a new kernel. 


    rpl 'OS=`if [ -n \"$$PIKE_BUILD_OS\" ]; then echo \"$$PIKE_BUILD_OS\"; else uname -s -r -m|sed \"s/ /-/g\"|tr \"[A-Z]\" \"[a-z]\"|tr \"/()\" \"___\"; fi`' 'OS=`if [ -n \"$$PIKE_BUILD_OS\" ]; then echo \"$$PIKE_BUILD_OS\"; else uname -s -m|sed \"s/ /-/g\"|tr \"[A-Z]\" \"[a-z]\"|tr \"/()\" \"___\"; fi`' "Makefile"
    export _USER=`echo -n $USER`

    # build fails unless you run make as the current user--that is, running make as root causes make to, lol,
    # break.  
    
    sudo -u $_USER make prefix="$pkgdir/usr" buildroot="$pkgdir/" \
	exec_prefix="$pkgdir/usr/bin" \
	man_prefix="$pkgdir/usr/share/man" \
	INSTALLARGS=--traditional compile # install doesn't work --> leads to dumping of master.pike.in, I think.   
    
    # convert the windows icon (it looks better than the debian one) to an xpm

    if [[ -f "$srcdir/Pike-v$pkgver/packaging/windows/pike.xpm" ]] && [[ -f "$srcdir/Pike-v$pkgver/packaging/windows/pike_2.xpm" ]]; then
	true;
    else 
	cd "$srcdir/Pike-v$pkgver/packaging/windows/"
	ico2xpm -t pike.ico
    fi
}
  

package() {
    
    # install the stand-in perl script that points to where pike really is.  
    cd "$srcdir/"
    install -m 755 -D "pike.plx" "$pkgdir/usr/bin/pike"
    
    # install documentation 
    cd "$srcdir/Pike-v$pkgver/"
    install -m 644 -D "CHANGES" "$pkgdir/usr/share/doc/$pkgname/CHANGES"
    install -m 644 -D "COMMITTERS" "$pkgdir/usr/share/doc/$pkgname/COMMITTERS"
    install -m 644 -D "COPYRIGHT" "$pkgdir/usr/share/doc/$pkgname/COPYRIGHT"
    install -m 644 -D "COPYING" "$pkgdir/usr/share/doc/$pkgname/COPYING"
    install -m 644 -D "README" "$pkgdir/usr/share/doc/$pkgname/README"
    install -m 644 -D "README-CVS" "$pkgdir/usr/share/doc/$pkgname/README-CVS"
    install -m 644 -D "ANNOUNCE" "$pkgdir/usr/share/doc/$pkgname/ANNOUNCE"

    cd "$srcdir/Pike-v$pkgver/man"
    install -m 644 -D "pike.1" "$pkgdir/usr/share/man/man1/pike.1"

    cd "$srcdir/Pike-v$pkgver/packaging/windows"
    install -m 644 -D "pike.xpm" "$pkgdir/usr/share/pixmaps/pike.xpm"

    # install the pike libaries/binaries 

	# binaries


        cd "$srcdir/Pike-v$pkgver"

	tar -czf build.tar.gz build/

	install -D "build.tar.gz" "$pkgdir/usr/lib/$pkgname/$pkgver/build.tar.gz"

	cd "$pkgdir/usr/lib/$pkgname/$pkgver/"

	tar -xzf build.tar.gz

	rm -f build.tar.gz

	chown -R root build && chgrp -R root build

	# libraries


	cd "$srcdir/Pike-v$pkgver/"

	    ################################################################################
	    # the following seemed like the only SANE thing to do.
	    # BELIEVE ME, I tried doing it file by file, and 
	    # I will not do that at all--it took freaking forever just to get halfway!
	    ################################################################################

	tar -czf lib.tar.gz lib/ 

	install -D "lib.tar.gz" "$pkgdir/usr/lib/$pkgname/$pkgver/lib.tar.gz"

	cd "$pkgdir/usr/lib/$pkgname/$pkgver/"

	tar -xzf lib.tar.gz

	rm -f lib.tar.gz 

	chown -R root lib && chgrp -R root lib


    # install the emacs pike.el file 

    cd "$srcdir/Pike-v$pkgver/tools"

    install -m 644 -D "pike.el" "$pkgdir/usr/share/emacs/24.2/lisp/progmodes/pike.el"


}
