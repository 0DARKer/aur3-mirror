diff -U 3 -H -d -r -N -- src/cython/vapoursynth.pyx src/cython/vapoursynth.pyx
--- src/cython/vapoursynth.pyx	2012-12-16 16:18:35.675478017 +0100
+++ src/cython/vapoursynth.pyx	2012-12-23 01:15:18.753063050 +0100
@@ -15,9 +15,9 @@
 #//  You should have received a copy of the GNU Lesser General Public
 #//  License along with VapourSynth; if not, write to the Free Software
 #//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
-"""
-This is the VapourSynth module implementing the Python bindings.
-"""
+#//
+#//  This is the VapourSynth module implementing the Python bindings.
+#//
 
 #ifdef _WIN32
 cimport windows
@@ -401,7 +401,7 @@
 
     def __str__(self):
         cdef dict color_stuff = dict({GRAY:'Gray', RGB:'RGB', YUV:'YUV', YCOCG:'YCoCg', COMPAT:'Compat'})
-        cdef str s = ''
+        cdef str s = ' '
         s += 'Format Descriptor\n'
         s += '\tId: ' + str(self.id) + '\n'
         s += '\tName: ' + self.name + '\n'
@@ -631,8 +631,8 @@
         if (self.format is None or (self.format.color_family != YUV and self.format.color_family != GRAY)) and y4m:
             raise Error('Can only apply y4m headers to YUV and Gray format clips')
 
-        y4mformat = ''
-        numbits = ''
+        y4mformat = ' '
+        numbits = ' '
 
         if y4m:
             if self.format.color_family == GRAY:
@@ -860,7 +860,7 @@
         cdef VSMap *m = self.funcs.getPlugins(self.core)
         cdef VSMap *n
         cdef bytes b
-        cdef str sout = ''
+        cdef str sout = ' '
 
         for i in range(self.funcs.propNumKeys(m)):
             a = self.funcs.propGetData(m, self.funcs.propGetKey(m, i), 0, NULL)
@@ -946,7 +946,7 @@
     def list_functions(self):
         cdef VSMap *n
         cdef bytes b
-        cdef str sout = ''
+        cdef str sout = ' '
 
         n = self.funcs.getFunctions(self.plugin)
 
@@ -1001,7 +1001,7 @@
         sigs = self.signature.split(';')
         
         for sig in sigs:
-            if sig == '':
+            if sig == ' ':
                 continue
             parts = sig.split(':')
             #// store away the types for later use
