--- os/linux/pci_main_dev.c.orig	2013-02-22 04:06:42.639684471 +0100
+++ os/linux/pci_main_dev.c	2013-02-22 04:11:01.776444816 +0100
@@ -40,8 +40,13 @@
 /*extern int rt28xx_close(IN struct net_device *net_dev); */
 /*extern int rt28xx_open(struct net_device *net_dev); */
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 static VOID __devexit rt2860_remove_one(struct pci_dev *pci_dev);
 static INT __devinit rt2860_probe(struct pci_dev *pci_dev, const struct pci_device_id  *ent);
+#else
+static VOID rt2860_remove_one(struct pci_dev *pci_dev);
+static INT rt2860_probe(struct pci_dev *pci_dev, const struct pci_device_id  *ent);
+#endif
 static void __exit rt2860_cleanup_module(void);
 static int __init rt2860_init_module(void);
 
@@ -60,7 +65,11 @@
 /* */
 /* Ralink PCI device table, include all supported chipsets */
 /* */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 static struct pci_device_id rt2860_pci_tbl[] __devinitdata =
+#else
+static struct pci_device_id rt2860_pci_tbl[] =
+#endif
 {
 #ifdef RT3290
 	{PCI_DEVICE(NIC_PCI_VENDOR_ID, NIC3290_PCIe_DEVICE_ID)},
@@ -86,9 +95,17 @@
     id_table:   rt2860_pci_tbl,
     probe:      rt2860_probe,
 #if LINUX_VERSION_CODE >= 0x20412
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
     remove:     __devexit_p(rt2860_remove_one),
 #else
+    remove:     rt2860_remove_one,
+#endif
+#else
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
     remove:     __devexit(rt2860_remove_one),
+#else
+    remove:     rt2860_remove_one,
+#endif
 #endif
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,0)
@@ -290,7 +307,11 @@
 /* */
 /* PCI device probe & initialization function */
 /* */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 static INT __devinit   rt2860_probe(
+#else
+static INT rt2860_probe(
+#endif
     IN  struct pci_dev              *pci_dev, 
     IN  const struct pci_device_id  *pci_id)
 {
@@ -461,7 +482,11 @@
 }
 
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 static VOID __devexit rt2860_remove_one(
+#else
+static VOID rt2860_remove_one(
+#endif
     IN  struct pci_dev  *pci_dev)
 {
 	PNET_DEV	net_dev = pci_get_drvdata(pci_dev);
