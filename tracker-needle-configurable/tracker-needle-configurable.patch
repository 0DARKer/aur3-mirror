--- src/tracker-needle/tracker-needle.vala	2013-03-14 18:25:30.000000000 +0100
+++ src2/tracker-needle/tracker-needle.vala	2013-05-10 17:26:46.140679926 +0200
@@ -25,6 +25,8 @@ extern static const string UIDIR;
 [CCode (cname = "SRCDIR")]
 extern static const string SRCDIR;
 
+extern void exit(int exit_code);
+
 public class Tracker.Needle {
 	private const string UI_FILE = "tracker-needle.ui";
 	private History history;
@@ -55,7 +57,7 @@ public class Tracker.Needle {
 	private int size_small = 0;
 	private int size_medium = 0;
 	private int size_big = 0;
-	private uint limit = 500;
+	private uint limit = max_limit;
 	static bool current_find_in_filelist = true;
 	static bool current_find_in_icons = true;
 
@@ -67,8 +69,9 @@ public class Tracker.Needle {
 
 	private void result_overflow () {
 		string str = "%s\n<small>%s</small>".printf (_("Search criteria was too generic"),
-		                                             _("Only the first 500 items will be displayed"));
-		show_info_message (str, MessageType.INFO);
+		                                             _("Only the first items are be displayed"));
+		if (!no_warning)
+		    show_info_message (str, MessageType.INFO);
 	}
 
 	private void create_models () {
@@ -354,7 +357,10 @@ public class Tracker.Needle {
 		tags_view.hide_label ();
 		paned.pack2 (tags_view, false, false);
 
-		view_categories.set_active (true);
+		if (default_files)
+		    view_filelist.set_active (true);
+		else
+		    view_categories.set_active (true);
 	}
 
 	private bool window_key_press_event (Gtk.Widget widget, Gdk.EventKey event) {
@@ -371,7 +377,7 @@ public class Tracker.Needle {
 			Source.remove (last_search_id);
 		}
 
-		last_search_id = Timeout.add_seconds (1, search_run);
+		last_search_id = Timeout.add_seconds (wait_time, search_run);
 	}
 
 	private void search_activated (Entry entry) {
@@ -498,7 +504,10 @@ public class Tracker.Needle {
 		if (store != null) {
 			// We can set tags to search by but we don't anymore
 			store.search_tags = null;
-			store.search_term = search.get_text ();
+			if (replace_spaces)
+			    store.search_term = search.get_text ().replace(" ", "*") + "*";
+		    else
+		        store.search_term = search.get_text ();
 		}
 
 		return false;
@@ -583,11 +592,15 @@ public class Tracker.Needle {
 	private void view_row_activated (TreeView view, TreePath path, TreeViewColumn column) {
 		var model = view.get_model ();
 		tracker_model_launch_selected (model, path, 1);
+		if (exit_on_launch)
+		    exit(1);
 	}
 
 	private void icon_item_activated (IconView view, TreePath path) {
 		var model = view.get_model ();
 		tracker_model_launch_selected (model, path, 1);
+		if (exit_on_launch)
+		    exit(1);
 	}
 
 	private void view_row_selected (TreeSelection selection) {
@@ -681,6 +694,13 @@ public class Tracker.Needle {
 static bool print_version = false;
 [CCode (array_length = false, array_null_terminated = true)]
 static string[] search_criteria = null;
+static int max_limit = 500;
+static int wait_time = 1;
+static bool default_files = false;
+static bool replace_spaces = false;
+static bool no_warning = false;
+static bool exit_on_launch = false;
+
 
 const OptionEntry[] options = {
 	{ "version",
@@ -690,6 +710,48 @@ const OptionEntry[] options = {
 	  ref print_version,
 	  N_("Print version"),
 	  null },
+	{ "limit",
+	  'l',
+	  0,
+	  OptionArg.INT,
+	  ref max_limit,
+	  N_("Max number of results to be presented"),
+	  null },
+	{ "wait",
+	  'w',
+	  0,
+	  OptionArg.INT,
+	  ref wait_time,
+	  N_("Seconds to wait to perform autosearch"),
+	  null },
+	{ "files",
+	  'f',
+	  0,
+	  OptionArg.NONE,
+	  ref default_files,
+	  N_("Make files view enabled by default"),
+	  null },
+	{ "star",
+	  's',
+	  0,
+	  OptionArg.NONE,
+	  ref replace_spaces,
+	  N_("Replace spaces with '*'"),
+	  null },
+	{ "no-warning",
+	  'n',
+	  0,
+	  OptionArg.NONE,
+	  ref no_warning,
+	  N_("Do not show warning message when results exceed the limit"),
+	  null },
+	{ "exit",
+	  'e',
+	  0,
+	  OptionArg.NONE,
+	  ref exit_on_launch,
+	  N_("Exit after open file or directory"),
+	  null },
 	{ "", // G_OPTION_REMAINING
 	  0,
 	  0,
