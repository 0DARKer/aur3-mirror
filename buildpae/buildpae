#!/bin/bash

#
# :: buildpae ::
#
# Modifies the stock 'kernel26' PKGBUILD and its supporting files from ABS.
# Builds 'kernel26-pae' and 'kernel26-pae-headers' binary packages.
# Creates source PKG for AUR.
#
# Tom Wizetek <tom@wizetek.com>
#
# update 8: 2010-12-11
# update 7: 2010-11-28
# update 6: 2010-11-26
# update 5: 2010-09-30
# update 4: 2010-06-03
# update 3: 2010-03-28
# update 2: 2010-03-21
# update 1: 2010-02-10
# original: 2010-01-30
#

# where to build packages:
##########################
_BUILDPATH=~/builds
##########################

kernelver() {
  _kverinst=$(pacman -Q kernel26 2>/dev/null | awk '{print $2}')
  _kverpae=$(pacman -Q kernel26-pae 2>/dev/null | awk '{print $2}')

  _pbcore=/var/abs/core/kernel26/PKGBUILD
  _pbtesting=/var/abs/testing/kernel26/PKGBUILD
  _kvercore=$(grep '_basekernel=' ${_pbcore} 2>/dev/null | cut -d'=' -f2)
  _kvercore=${_kvercore}$(grep 'pkgver=' ${_pbcore} 2>/dev/null | cut -d'}' -f2)
  _kvercore=${_kvercore}-$(grep 'pkgrel=' ${_pbcore} 2>/dev/null | cut -d'=' -f2)
  _kvertesting=$(grep '_basekernel=' ${_pbtesting} 2>/dev/null | cut -d'=' -f2)
  _kvertesting=${_kvertesting}$(grep 'pkgver=' ${_pbtesting} 2>/dev/null | cut -d'}' -f2)
  _kvertesting=${_kvertesting}-$(grep 'pkgrel=' ${_pbtesting} 2>/dev/null | cut -d'=' -f2)
  echo -e "\nKernel version info:\n\ninstalled stock ARCH\t${_kverinst}\ninstalled PAE\t\t${_kverpae}\navailable ABS core\t${_kvercore}\navailable ABS testing\t${_kvertesting}\n"
}
kernelver

syncabs() {
  echo -en "Sync 'kernel26' from ABS repo: [c]ore, [t]esting or [B]oth?  [s]kip, [q]uit =>"
  read -n 1 _syncabs
  [[ ${_syncabs} ]] && echo
  case ${_syncabs} in
    c|C) abs core/kernel26 || sudo abs core/kernel26 && kernelver ;;
    t|T) abs testing/kernel26 || sudo abs testing/kernel26 && kernelver ;;
    b|B|'') abs core/kernel26 && abs testing/kernel26 || sudo abs core/kernel26 && sudo abs testing/kernel26 && kernelver ;;
    s|S) echo ;;
    q|Q) echo -e "\nQuit!\n" ; exit 1 ;;
    *) syncabs ;;
  esac
}
[[ ${_syncabs} ]] || syncabs

absrepo() {
  echo -en "Build from ABS repo: [C]ore or [t]esting?  [q]uit =>"
  read -n 1 _absrepo
  [[ ${_absrepo} ]] && echo
  case ${_absrepo} in
    c|C|'') _repo='core' ;;
    t|T) _repo='testing' ;;
    q|Q) echo -e "\nQuit!\n" ; exit 1 ;;
    *) absrepo ;;
  esac
}
[[ ${_absrepo} ]] || absrepo

_PKGBUILD=/var/abs/${_repo}/kernel26/PKGBUILD
[[ ! -e ${_PKGBUILD} ]] && echo -e "\nCould not find ${_PKGBUILD}\nSync ABS later again before building package.\n" && exit 1

_basekernel=$(sed -n 's/^_basekernel=//p' ${_PKGBUILD})
pkgver=$(sed -n 's/^pkgver=${_basekernel}//p' ${_PKGBUILD})
pkgrel=$(sed -n 's/^pkgrel=//p' ${_PKGBUILD})
_path=${_BUILDPATH}/kernel26-pae-${_basekernel}${pkgver}-${pkgrel}
echo -e "\nBuild directory: ${_path}\n"
mkdir -p ${_path}
cd ${_path}
cp /var/abs/${_repo}/kernel26/* .
cp PKGBUILD PKGBUILD.orig
cp config config.orig
cp kernel26.preset kernel26.preset.orig
cp kernel26.install kernel26.install.orig

#
# config
#
sed -i 's/CONFIG_HIGHMEM4G=y/# CONFIG_HIGHMEM4G is not set/' config
sed -i 's/# CONFIG_HIGHMEM64G is not set/CONFIG_HIGHMEM64G=y/' config
sed -i '$a\
\
# Tom Wizetek: settings not included in stock config (set to default)\
CONFIG_XEN=n\
CONFIG_I2O_EXT_ADAPTEC_DMA64=y' config

#
# PKGBUILD
#
sed -i '/^pkgbase=/i\# Contributor: Tom Wizetek <tom@wizetek.com>' PKGBUILD
sed -i 's/^pkgbase="kernel26/&-pae/' PKGBUILD

splitpkg() {
  echo -en "Package(s) to build: [k]ernel only or [B]oth kernel and headers?  [q]uit =>"
  read -n 1 _splitpkg
  [[ ${_splitpkg} ]] && echo
  case ${_splitpkg} in
    k|K) sed -i '/^pkgname=/ s/(.*/kernel26-pae/' PKGBUILD ;;
    b|B|'') sed -i "/^pkgname=/ s/' .*/-pae' 'kernel26-pae-headers')/" PKGBUILD ;;
    q|Q) echo -e "\nQuit!\n" ; exit 1 ;;
    *) splitpkg ;;
  esac
}
[[ ${_splitpkg} ]] || splitpkg

sed -i '/^# pkgname=/d' PKGBUILD
sed -i '/^makedepends=/d' PKGBUILD
sed -i '/^arch=/ s/ x86_64//' PKGBUILD
sed -i 's/ config.x86_64$//' PKGBUILD
sed -i 's/package_kernel26/&-pae/' PKGBUILD
sed -i 's/and modules/& with PAE support (HIGHMEM64G)/' PKGBUILD
sed -i 's/modules for kernel26/&-pae/' PKGBUILD

#sed -i '/^package_kernel26-manpages()/,/^}/d' PKGBUILD
#sed -i '/^package_kernel26-docs()/,/^}/d' PKGBUILD
sed -i '/^package_kernel26-docs()/,/^}/ s/^/#&/' PKGBUILD

sed -i '$a\
\
# workaround for AUR split package upload\
pkgname=kernel26-pae\
pkgdesc="The Linux Kernel and modules with PAE support (HIGHMEM64G)"' PKGBUILD

#sed -i -e :a -e '/^\n*$/{$d;N;ba' -e '}' PKGBUILD

#
# kernel26.preset
#
sed -i 's/kernel26/&-pae/' kernel26.preset

#
# kernel26.install
#
sed -i 's/^KERNEL_NAME=/&-pae/' kernel26.install
sed -i 's/-ARCH/-pae/' kernel26.install

#
# Generate and replace MD5 checksums.
#
makepkg -g > buildpae.tmp
sed -i '/md5sums=(/,/)/d' PKGBUILD
sed -i '/kernel26.preset)$/r buildpae.tmp' PKGBUILD

#
# Clean up.
#
rm buildpae.tmp
rm config.x86_64

#
# Build bin & src PKGs.
#
buildnow() {
  echo -en "Modifications completed. Build package now? [Y/n/q] =>"
  read -n 1 _buildnow
  [[ ${_buildnow} ]] && echo
  case ${_buildnow} in
    y|Y|'') ;;
    n|N|q|Q) echo -e "\nTo build package(s) later using current configuration, run: makepkg\n" ; exit 1 ;;
    *) buildnow
  esac
}
[[ ${_buildnow} ]] || buildnow

makepkg -L || makepkg -LRf || (rm -r ${_path}/{src,pkg} ; makepkg -L)
[[ $? = 0 ]] && makepkg --source -f

#
# Install bin PKG(s).
#

pacman -U ${_path}/kernel26-pae-*${_basekernel}${pkgver}-${pkgrel}-*.pkg.* ||\
sudo pacman -U ${_path}/kernel26-pae-*${_basekernel}${pkgver}-${pkgrel}-*.pkg.*

# EoF
