--- ./src/outputs.c.orig	2011-04-25 23:08:44.458018522 -0400
+++ ./src/outputs.c	2011-04-25 23:19:23.677844161 -0400
@@ -59,7 +59,7 @@
  * Parse an integer (current_workspace or the rect)
  *
  */
-static int outputs_integer_cb(void *params_, long val) {
+static int outputs_integer_cb(void *params_, long long val) {
     struct outputs_json_params *params = (struct outputs_json_params*) params_;
 
     if (!strcmp(params->cur_key, "current_workspace")) {
@@ -99,7 +99,7 @@
  * Parse a string (name)
  *
  */
-static int outputs_string_cb(void *params_, const unsigned char *val, unsigned int len) {
+static int outputs_string_cb(void *params_, const unsigned char *val, size_t len) {
     struct outputs_json_params *params = (struct outputs_json_params*) params_;
 
     if (strcmp(params->cur_key, "name")) {
@@ -169,7 +169,7 @@
  * Essentially we just save it in the parsing-state
  *
  */
-static int outputs_map_key_cb(void *params_, const unsigned char *keyVal, unsigned int keyLen) {
+static int outputs_map_key_cb(void *params_, const unsigned char *keyVal, size_t keyLen) {
     struct outputs_json_params *params = (struct outputs_json_params*) params_;
     FREE(params->cur_key);
 
@@ -216,10 +216,9 @@
     params.json = json;
 
     yajl_handle handle;
-    yajl_parser_config parse_conf = { 0, 0 };
     yajl_status state;
 
-    handle = yajl_alloc(&outputs_callbacks, &parse_conf, NULL, (void*) &params);
+    handle = yajl_alloc(&outputs_callbacks, NULL, (void*) &params);
 
     state = yajl_parse(handle, (const unsigned char*) json, strlen(json));
 
@@ -228,7 +227,6 @@
         case yajl_status_ok:
             break;
         case yajl_status_client_canceled:
-        case yajl_status_insufficient_data:
         case yajl_status_error:
             ELOG("Could not parse outputs-reply!\n");
             exit(EXIT_FAILURE);
--- ./src/workspaces.c.orig	2010-12-23 10:39:53.000000000 -0500
+++ ./src/workspaces.c	2011-04-25 23:20:15.217561340 -0400
@@ -57,7 +57,7 @@
  * Parse an integer (num or the rect)
  *
  */
-static int workspaces_integer_cb(void *params_, long val) {
+static int workspaces_integer_cb(void *params_, long long val) {
     struct workspaces_json_params *params = (struct workspaces_json_params*) params_;
 
     if (!strcmp(params->cur_key, "num")) {
@@ -98,7 +98,7 @@
  * Parse a string (name, output)
  *
  */
-static int workspaces_string_cb(void *params_, const unsigned char *val, unsigned int len) {
+static int workspaces_string_cb(void *params_, const unsigned char *val, size_t len) {
 
         struct workspaces_json_params *params = (struct workspaces_json_params*) params_;
 
@@ -178,7 +178,7 @@
  * Essentially we just save it in the parsing-state
  *
  */
-static int workspaces_map_key_cb(void *params_, const unsigned char *keyVal, unsigned int keyLen) {
+static int workspaces_map_key_cb(void *params_, const unsigned char *keyVal, size_t keyLen) {
     struct workspaces_json_params *params = (struct workspaces_json_params*) params_;
     FREE(params->cur_key);
 
@@ -224,10 +224,9 @@
     params.json = json;
 
     yajl_handle handle;
-    yajl_parser_config parse_conf = { 0, 0 };
     yajl_status state;
 
-    handle = yajl_alloc(&workspaces_callbacks, &parse_conf, NULL, (void*) &params);
+    handle = yajl_alloc(&workspaces_callbacks, NULL, (void*) &params);
 
     state = yajl_parse(handle, (const unsigned char*) json, strlen(json));
 
@@ -236,7 +235,6 @@
         case yajl_status_ok:
             break;
         case yajl_status_client_canceled:
-        case yajl_status_insufficient_data:
         case yajl_status_error:
             ELOG("Could not parse workspaces-reply!\n");
             exit(EXIT_FAILURE);