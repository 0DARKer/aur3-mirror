diff --git a/module/ffdecode.c b/module/ffdecode.c
index 377b886..47c5614 100644
--- a/module/ffdecode.c
+++ b/module/ffdecode.c
@@ -194,7 +194,7 @@ typedef struct VideoState {
 
     //    QETimer *video_timer;
     SDL_RWops *rwops;
-    ByteIOContext *io_context;
+    AVIOContext *io_context;
     
     int width, height, xleft, ytop;
 
@@ -242,7 +242,7 @@ static int idct = FF_IDCT_AUTO;
 static enum AVDiscard skip_frame= AVDISCARD_DEFAULT;
 static enum AVDiscard skip_idct= AVDISCARD_DEFAULT;
 static enum AVDiscard skip_loop_filter= AVDISCARD_DEFAULT;
-static int error_recognition = FF_ER_CAREFUL;
+//static int error_recognition = FF_ER_COMPLIANT;
 static int error_concealment = 3;
 static int decoder_reorder_pts= 0;
 
@@ -255,7 +255,7 @@ static AVPacket flush_pkt;
 // The rate that audio will be resampled to.
 static int audio_sample_rate;
 
-/* ByteIOContext <-> SDL_RWops mapping. */
+/* AVIOContext <-> SDL_RWops mapping. */
 static int rwops_read(void *opaque, uint8_t *buf, int buf_size) {
     SDL_RWops *rw = (SDL_RWops *) opaque;    
 
@@ -284,10 +284,10 @@ static int64_t rwops_seek(void *opaque, int64_t offset, int whence) {
 
 #define RWOPS_BUFFER 65536
 
-static ByteIOContext *rwops_open(SDL_RWops *rw) {
+static AVIOContext *rwops_open(SDL_RWops *rw) {
 
     unsigned char *buffer = av_malloc(RWOPS_BUFFER);
-    ByteIOContext *rv = av_alloc_put_byte(
+    AVIOContext *rv = avio_alloc_context(
         buffer,
         RWOPS_BUFFER,
         0,
@@ -1558,7 +1558,7 @@ static int audio_decode_frame(VideoState *is, double *pts_ptr)
                 continue;
 
             if (!is->reformat_ctx &&
-                (dec->channels != 2 || dec->sample_fmt != SAMPLE_FMT_S16)) {
+                (dec->channels != 2 || dec->sample_fmt != AV_SAMPLE_FMT_S16)) {
 
                 is->reformat_ctx = av_audio_resample_init(
                     2,
@@ -1566,7 +1566,7 @@ static int audio_decode_frame(VideoState *is, double *pts_ptr)
                     // audio_sample_rate,
                     dec->sample_rate,
                     dec->sample_rate,
-                    SAMPLE_FMT_S16,
+                    AV_SAMPLE_FMT_S16,
                     dec->sample_fmt,
                     1, 0, 0, 1.0);
 
@@ -1581,7 +1581,7 @@ static int audio_decode_frame(VideoState *is, double *pts_ptr)
 
             if (is->reformat_ctx) {
                 
-                int len = data_size / (av_get_bits_per_sample_format(dec->sample_fmt) / 8);
+                int len = data_size / (av_get_bits_per_sample_fmt((enum AVSampleFormat)(dec->sample_fmt) / 8));
                 len /= dec->channels;
 
                 len = audio_resample(is->reformat_ctx, (short *) is->audio_buf2, (short *) is->audio_buf1, len);
@@ -1816,7 +1816,7 @@ static int stream_component_open(VideoState *is, int stream_index)
     enc->skip_frame= skip_frame;
     enc->skip_idct= skip_idct;
     enc->skip_loop_filter= skip_loop_filter;
-    enc->error_recognition= error_recognition;
+//    enc->error_recognition= error_recognition;
     enc->error_concealment= error_concealment;
 
 //    set_context_opts(enc, avctx_opts[enc->codec_type], 0);
@@ -1833,8 +1833,8 @@ static int stream_component_open(VideoState *is, int stream_index)
     
     is->audio_hw_buf_size = 2048;
     
-    if(thread_count>1)
-        avcodec_thread_init(enc, thread_count);
+//    if(thread_count>1)
+//        avcodec_thread_init(enc, thread_count);
     enc->thread_count= thread_count;
     ic->streams[stream_index]->discard = AVDISCARD_DEFAULT;
     switch(enc->codec_type) {
@@ -1953,8 +1953,8 @@ static void stream_component_close(VideoState *is, int stream_index)
 
 static void dump_stream_info(const AVFormatContext *s)
 {
-    AVMetadataTag *tag = NULL;
-    while ((tag=av_metadata_get(s->metadata,"",tag,AV_METADATA_IGNORE_SUFFIX)))
+    AVDictionaryEntry *tag = NULL;
+    while ((tag=av_dict_get(s->metadata,"",tag,AV_DICT_IGNORE_SUFFIX)))
         fprintf(stderr, "%s: %s\n", tag->key, tag->value);
 }
 
@@ -1968,11 +1968,12 @@ static int decode_thread(void *arg)
     AVFormatContext *ic;
     int err, i, ret, video_index, audio_index, subtitle_index;
     AVPacket pkt1, *pkt = &pkt1;
-    AVFormatParameters params, *ap = &params;
+//    AVFormatParameters params, *ap = &params;
+	 AVDictionary *format_opts;
     AVProbeData probe_data, *pd = &probe_data;
     int probe_size;
     AVInputFormat *fmt = NULL;
-    ByteIOContext *pb;
+    AVIOContext *pb;
     int signalled_start = 0;
     int codecs_locked = 0;
     
@@ -1989,14 +1990,14 @@ static int decode_thread(void *arg)
     is->video_stream = -1;
     is->audio_stream = -1;
     is->subtitle_stream = -1;
-
+#if 0
     memset(ap, 0, sizeof(*ap));
 
     ap->width = frame_width;
     ap->height= frame_height;
     ap->time_base= (AVRational){1, 25};
     ap->pix_fmt = frame_pix_fmt;
-
+#endif
     pb = is->io_context = rwops_open(is->rwops);
 
     codecs_locked = 1;
@@ -2007,11 +2008,11 @@ static int decode_thread(void *arg)
 
             /* read probe data */
             pd->buf= av_realloc(pd->buf, probe_size + AVPROBE_PADDING_SIZE);
-            pd->buf_size = get_buffer(pb, pd->buf, probe_size);
+            pd->buf_size = avio_read(pb, pd->buf, probe_size);
             memset(pd->buf+pd->buf_size, 0, AVPROBE_PADDING_SIZE);
 
             /* Seek back to start. */
-            if (url_fseek(pb, 0, SEEK_SET) < 0) {
+            if (avio_seek(pb, 0, SEEK_SET) < 0) {
                 fprintf(stderr, "Could not seek in file.\n");
                 goto fail;
             }
@@ -2028,14 +2029,20 @@ static int decode_thread(void *arg)
     }
         
     // err = av_open_input_file(&ic, "test.mkv", is->iformat, 0, ap);
-
+#if 0
     err = av_open_input_stream(
         &ic,
         is->io_context,
         is->filename,
         fmt,
         ap);
-
+#else
+    err = avformat_open_input(
+        &ic,
+        is->filename,
+        fmt,
+        &format_opts);
+#endif
     // printf("Format name: %s\n", fmt->name);
     
     is->ic = ic;
@@ -2101,7 +2108,7 @@ static int decode_thread(void *arg)
 
     
     if (show_status) {
-        dump_format(ic, 0, is->filename, 0);
+        av_dump_format(ic, 0, is->filename, 0);
         dump_stream_info(ic);
     }
 
@@ -2270,7 +2277,7 @@ fail:
         stream_component_close(is, is->subtitle_stream);
 
     if (is->ic) {
-        av_close_input_stream(is->ic);
+        avformat_close_input(&is->ic);
         is->ic = NULL; /* safety */
     }
         
