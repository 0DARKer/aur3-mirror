# Maintainer: Det <nimetonmaili at gmail a-dot com>

pkgname=lastpass
pkgver=3.0.10
_chromver=3.0.19-1  # The actual extensions' versions
_ffver=3.0.12-1
_opver=3.0.23-1
pkgrel=7
pkgdesc="The Universal LastPass installer for Firefox, Chrome, and Opera"
arch=('any')
url="https://lastpass.com"
license=('custom')
optdepends=('chromium: for Chromium'
            'chromium-dev: for Chromium (Dev Channel) (AUR)'
            'firefox: for Mozilla Firefox'
            'firefox-beta-bin: for Mozilla Firefox (Beta) (AUR)'
            'firefox-nightly: for Mozilla Firefox (Nightly) (AUR)'
            'google-chrome: for Google Chrome (AUR)'
            'google-chrome-beta: for Google Chrome (Beta Channel) (AUR)'
            'google-chrome-dev: for Google Chrome (Dev Channel) (AUR)'
            'opera: for Opera'
            'opera-next: for Opera Next (AUR)')
conflicts=('lastpass-plugin-opera')
install=$pkgname.install
#source=("$url/lplinux.tar.bz2") # Let's do this a bit more efficiently for now
source=(# Chrome
        "lpchrome_linux_$_chromver.crx::$url/lpchrome_linux.crx"
        # Firefox
        "lp_linux_$_ffver.xpi::$url/lp_linux.xpi"
        'profiles.ini'
        # Opera
        "lastpass-$_opver.oex::$url/lpopera.oex"
        'prefs.dat'
        'widgets.dat')
noextract=("lp_linux_$_ffver.xpi" "lastpass-$_opver.oex")
md5sums=('c5afe9406eb3c0ad77f722f9a191b329'
         'a2946ca4e4998331a03dd5cefb99d5cb'
         'd0f555a644484baccf649f7969794ece'
         '5e9ad673c95d22425d2da8817c88f06b'
         'c373651995c0f8ef332439f2ed3b0670'
         '1a6927e679ac378ea0583662d41f6c46')

_note() {
    printf "${BLUE}==>${ALL_OFF}${YELLOW} NOTE: ${1}${ALL_OFF}\n"
}

_read_msg2() {
    read -p "${BOLD}${BLUE}  ->${YELLOW} ${1} ${ALL_OFF}"
}

prepare() {
    # Since we're installing to $HOME in .install, we need checks such as this to
    # see whether some clever guy is building with --asroot
    if [ $USER = root ]; then
        _note "Makepkg is running as root. The extensions will not be available for a regular user."
        _read_msg2 "Continue? (Y/n)"

        if [[ $REPLY != [yY] ]]; then
            error "Aborted by user! Exiting..."
            exit 1
        fi
    fi

    # Write the extension versions and user variables to the .install
    sed -e "s/_ffver= *[^ ]*/_ffver=$_ffver/" \
        -e "s/_opver= *[^ ]*/_opver=$_opver/" \
        -e "s/_user= *[^ ]*/_user=$USER/" \
        -e "s,_HOME= *[^ ]*,_HOME=/home/$USER/," \
        -i "$startdir"/$pkgname.install

    # The Firefox profile(s) might not exist
    _ffprofile=$(sed -n 's/^Path=//p' ~/.mozilla/firefox/profiles.ini |& grep default || true) # Don't fail on
    if [ -f ~/.mozilla/firefox/profiles.ini ]; then                                            # empty values
        if [ $_ffprofile ]; then
            sed "s,_mozilla= *[^ ]*,_mozilla=/home/$USER/.mozilla/firefox/$_ffprofile/," \
                -i "$startdir"/$pkgname.install
        else
            sed "s,_mozilla= *[^ ]*,_mozilla=/home/$USER/.mozilla/firefox/lastpass.default/," \
                -i "$startdir"/$pkgname.install
        fi
    else
        sed "s/_mozilla= *[^ ]*/_mozilla=-/" \
            -i "$startdir"/$pkgname.install
    fi
}

_chrome_package() {
    # Install to a single place and just link it for everybody else
    CRX=/usr/share/lastpass/lpchrome_linux_$_chromver.crx
    echo "{ \"external_crx\": \"$CRX\", \"external_version\": \"${_chromver/-*}\" }" > hdokiejnpimakedhajhdlcegeplioahd.json
    for i in opt/google/chrome usr/share/chromium usr/share/chromium-dev; do
        install -Dm644 hdokiejnpimakedhajhdlcegeplioahd.json "$pkgdir"/$i/extensions/hdokiejnpimakedhajhdlcegeplioahd.json
    done
    install -Dm644 lpchrome_linux_$_chromver.crx "$pkgdir"/$CRX

    # Allow silent installation since Chrome 21: http://www.chromium.org/administrators/policy-list-3#ExtensionInstallSources
    echo "{ \"ExtensionInstallSources\": [\"$url/*\", \"https://*.lastpass.com/*\", \"https://*.cloudfront.net/lastpass/*\"] }" > lastpass_policy.json
    for i in opt/chrome chromium chromium-dev; do
        install -Dm644 lastpass_policy.json "$pkgdir"/etc/$i/policies/managed/lastpass_policy.json
    done
}

_firefox_package() {
    # The extension and the profiles.ini go to $HOME so do this in the .install
    for i in lp_linux_$_ffver.xpi profiles.ini; do
        install -Dm644 $i "$pkgdir"/usr/share/lastpass/$i
    done

    # The binary plugin
    [ "$CARCH" = 'x86_64' ] && _64=64
    for i in opera opera-next; do
        install -Dm644 libnplastpass$_64.so "$pkgdir"/usr/lib/mozilla/plugins/libnplastpass$_64.so
    done
}

_opera_package() {
    # Same for Operas and their settings
    install -m644 lastpass-$_opver.oex {pref,widget}s.dat "$pkgdir"/usr/share/lastpass/

    # The binary plugin
    [ "$CARCH" = 'x86_64' ] && _64=64
    for i in opera opera-next; do
        install -Dm644 libnplastpass$_64.so "$pkgdir"/usr/lib/$i/plugins/libnplastpass$_64.so
    done
}

package() {
    msg2 "Installing for Google Chromes/Chromiums"
    _chrome_package

    msg2 "Installing for Mozilla Firefoxes"
    _firefox_package

    msg2 "Installing for Operas"
    _opera_package
}
