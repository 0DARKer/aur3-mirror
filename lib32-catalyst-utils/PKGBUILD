# Maintainer: Vi0L0 <vi0l093@gmail.com>
# Partly based on original PKGBUILD by Mikko Seppala <t-r-a-y@mbnet.fi>
# Contributor: Manuel Gaul <inkaine@hotmail.com>
# Contributor: Enverex & kidoz
# Contributor: zoopp

_pkgsourcename=catalyst-utils
pkgname=lib32-$_pkgsourcename
pkgver=13.12
pkgrel=3
_betano=1
_amdver=13.251
pkgdesc="AMD/ATI catalyst driver utilities and libraries. (32-bit)"
url="http://www.amd.com"
arch=(x86_64)
license=('custom')
options=('staticlibs' 'libtool' '!strip' '!upx')
groups=('lib32')
depends=('lib32-libxext' 'lib32-libdrm' 'catalyst-utils' 'lib32-libxinerama' 'lib32-mesa')
conflicts=('lib32-libgl' 'lib32-nvidia-utils' 'lib32-ati-dri' 'lib32-catalyst-utils-pxp' 'lib32-libcl')
provides=('lib32-libgl' 'lib32-dri' 'lib32-libtxc_dxtn' 'lib32-libcl')
source=(
     http://www2.ati.com/drivers/linux/amd-catalyst-${pkgver}-linux-x86.x86_64.zip
    lib32-catalyst.sh)
md5sums=('6b16cad1acf7aa4851fa00e43b9e3c1f' 'af7fb8ee4fc96fd54c5b483e33dc71c4')
install=${pkgname}.install

url_ref="http://support.amd.com/en-us/download/desktop?os=Linux+x86"
DLAGENTS="http::/usr/bin/curl --referer ${url_ref} -o %o %u"

build() {
      /bin/sh ./amd-catalyst-${pkgver}-linux-x86.x86_64.run --extract archive_files
}

package() {
      cd ${srcdir}
      install -D -m755 lib32-catalyst.sh ${pkgdir}/etc/profile.d/lib32-catalyst.sh
      cd ${srcdir}/archive_files/arch/x86/usr
      install -dm755 ${pkgdir}/usr/lib32
      install -dm755 ${pkgdir}/usr/lib32/fglrx
      install -dm755 ${pkgdir}/usr/lib32/hsa
      install -dm755 ${pkgdir}/usr/lib32/xorg/modules/dri
      install -m755 lib/*.so* ${pkgdir}/usr/lib32
      install -m755 lib/hsa/* ${pkgdir}/usr/lib32/hsa
      install -m755 X11R6/lib/fglrx/fglrx-libGL.so.1.2 ${pkgdir}/usr/lib32/fglrx
      ln -sf /usr/lib32/fglrx/fglrx-libGL.so.1.2 ${pkgdir}/usr/lib32/fglrx/libGL.so.1.2
      ln -sf /usr/lib32/fglrx/fglrx-libGL.so.1.2 ${pkgdir}/usr/lib32/fglrx-libGL.so.1.2
      ln -sf /usr/lib32/fglrx/fglrx-libGL.so.1.2 ${pkgdir}/usr/lib32/libGL.so.1.2
      ln -sf /usr/lib32/fglrx/fglrx-libGL.so.1.2 ${pkgdir}/usr/lib32/libGL.so.1
      ln -sf /usr/lib32/fglrx/fglrx-libGL.so.1.2 ${pkgdir}/usr/lib32/libGL.so
      install -m755 X11R6/lib/libAMDXvBA.so.1.0 ${pkgdir}/usr/lib32
      install -m755 X11R6/lib/libatiadlxx.so ${pkgdir}/usr/lib32
      install -m755 X11R6/lib/libfglrx_dm.so.1.0 ${pkgdir}/usr/lib32
      install -m755 X11R6/lib/libXvBAW.so.1.0 ${pkgdir}/usr/lib32
      install -m755 X11R6/lib/modules/dri/*.so ${pkgdir}/usr/lib32/xorg/modules/dri
      ln -snf /usr/lib32/xorg/modules/dri ${pkgdir}/usr/lib32/dri

      cd $pkgdir/usr/lib32
      ln -sf libfglrx_dm.so.1.0 libfglrx_dm.so.1
      ln -sf libAMDXvBA.so.1.0 libAMDXvBA.so.1
      ln -sf libAMDXvBA.so.1.0 libAMDXvBA.so
      ln -sf libXvBAW.so.1.0 libXvBAW.so.1
      ln -sf libXvBAW.so.1.0 libXvBAW.so
      ln -sf libatiuki.so.1.0 libatiuki.so.1
      ln -sf libatiuki.so.1.0 libatiuki.so
      ln -sf libOpenCL.so.1 libOpenCL.so

      # We have to provide symlinks to lib32-mesa, as catalyst doesn't ship them
      ln -s mesa-libEGL.so.1.0.0        ${pkgdir}/usr/lib32/libEGL.so
      ln -s mesa-libEGL.so.1.0.0        ${pkgdir}/usr/lib32/libEGL.so.1
      ln -s mesa-libEGL.so.1.0.0        ${pkgdir}/usr/lib32/libEGL.so.1.0.0
      ln -s mesa-libGLESv1_CM.so.1.1.0  ${pkgdir}/usr/lib32/libGLESv1_CM.so
      ln -s mesa-libGLESv1_CM.so.1.1.0  ${pkgdir}/usr/lib32/libGLESv1_CM.so.1
      ln -s mesa-libGLESv1_CM.so.1.1.0  ${pkgdir}/usr/lib32/libGLESv1_CM.so.1.1.0
      ln -s mesa-libGLESv2.so.2.0.0     ${pkgdir}/usr/lib32/libGLESv2.so
      ln -s mesa-libGLESv2.so.2.0.0     ${pkgdir}/usr/lib32/libGLESv2.so.2
      ln -s mesa-libGLESv2.so.2.0.0     ${pkgdir}/usr/lib32/libGLESv2.so.2.0.0

      # OpenCL
      install -m755 -d ${pkgdir}/etc/OpenCL/vendors
      install -m644 ${srcdir}/archive_files/arch/x86/etc/OpenCL/vendors/amdocl32.icd ${pkgdir}/etc/OpenCL/vendors

      # License
      install -m755 -d ${pkgdir}/usr/share/licenses/${pkgname}
      install -m644 ${srcdir}/archive_files/LICENSE.TXT ${pkgdir}/usr/share/licenses/${pkgname}
}