diff -ur 38/rtl2832u_audio.c 37/rtl2832u_audio.c
--- 38/rtl2832u_audio.c	2013-01-28 22:47:33.586326711 +0000
+++ 37/rtl2832u_audio.c	2013-01-28 22:47:26.636430117 +0000
@@ -786,7 +786,7 @@
 			p_state->rtl2832_audio_video_mode = RTK_VIDEO;
 			return 1;//break;
 
-		case CR_D:
+		case CR_D_:
 
 			deb_info("CR_d\n");
 
@@ -805,7 +805,7 @@
 			deb_info("CR_d done\n");
 			return 1;
 
-		case CR_A:
+		case CR_A_:
 
 			deb_info("CR_a\n");
 
diff -ur 38/rtl2832u_audio.h 37/rtl2832u_audio.h
--- 38/rtl2832u_audio.h	2013-01-28 22:47:33.586326711 +0000
+++ 37/rtl2832u_audio.h	2013-01-28 22:47:26.636430117 +0000
@@ -17,7 +17,7 @@
 #define V4L2_REFACTORED_MFE_CODE
 #endif
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,8,0)) || (defined V4L2_VERSION)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,7,0)) || (defined V4L2_VERSION)
 #define NO_FE_IOCTL_OVERRIDE
 #endif
 
@@ -40,9 +40,9 @@
 {
 	FE_ENABLE_FM=0,
 	FE_DISABLE_FM,
-	CR_D,
-	CR_A,
-	CR_S,
+	CR_D_,
+	CR_A_,
+	CR_S_,
 	READ_BYTE,
 	WRITE_BYTE,
 	FE_ENABLE_DAB,
diff -ur 38/rtl2832u_fe.c 37/rtl2832u_fe.c
--- 38/rtl2832u_fe.c	2013-01-28 22:47:33.596326562 +0000
+++ 37/rtl2832u_fe.c	2013-01-28 22:47:26.646429968 +0000
@@ -2481,6 +2481,7 @@
 	struct dvb_frontend_parameters*	param)
 {
 	struct rtl2832_state* p_state = fe->demodulator_priv;
+	struct dvb_ofdm_parameters*	p_ofdm_param= &param->u.ofdm;
 	unsigned long					frequency = param->frequency;
 	int							bandwidth_mode;
 	int	int_data;
@@ -2502,7 +2503,7 @@
 
 	if( mutex_lock_interruptible(&p_state->i2c_repeater_mutex) )	goto mutex_error;
 	
-	deb_info(" +%s frequency = %lu , bandwidth = %u\n", __FUNCTION__, frequency ,param->u.ofdm.bandwidth);
+	deb_info(" +%s frequency = %lu , bandwidth = %u\n", __FUNCTION__, frequency ,p_ofdm_param->bandwidth);
 
 	if(p_state->demod_type == RTL2832)
 	{
@@ -2626,7 +2627,7 @@
 //#endif
 	
 	//p_state->current_frequency = frequency;	
-	//p_state->current_bandwidth = param->u.ofdm.bandwidth;	
+	//p_state->current_bandwidth = p_ofdm_param->bandwidth;	
 
 	deb_info(" -%s \n", __FUNCTION__);
 
