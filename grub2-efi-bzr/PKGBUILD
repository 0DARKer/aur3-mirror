# Maintainer : Keshav P R <(the.ridikulus.rat) (aatt) (gemmaeiil) (ddoott) (ccoomm)>

_pkgname="grub2-efi-bzr"

pkgname="${_pkgname}"                   ## Dummy pkgname for AUR interface

# pkgname="grub2-efi-x86_64-bzr"        ## Uncomment for grub2 BZR Main Trunk for x86_64-UEFI
# pkgname="grub2-efi-x86_64-bzr-exp"    ## Uncomment for grub2 BZR Experimental Branch for x86_64-UEFI
# pkgname="grub2-efi-i386-bzr"          ## Uncomment for grub2 BZR Main Trunk for i386-UEFI
# pkgname="grub2-efi-i386-bzr-exp"      ## Uncomment for grub2 BZR Experimental Branch for i386-UEFI

pkgver="3856"
url="http://www.gnu.org/software/grub/"
arch=('i686' 'x86_64')
license=('GPL3')

makedepends=('bzr' 'rsync' 'xz' 'bdf-unifont' 'python2' 'autogen' 'texinfo' 'help2man' 'gettext' 'device-mapper' 'fuse')
depends=('xz' 'freetype2' 'device-mapper' 'fuse' 'gettext' 'dosfstools' 'efibootmgr' 'sh')
optdepends=('libisoburn: provides xorriso for generating grub2 rescue iso using grub-mkrescue'
            'mtools: for manipulating FAT fs image files')

install="${_pkgname}.install"
backup=('etc/default/grub' 'etc/grub.d/40_custom')
conflicts=('grub2-common')

source=('grub.default'
        'grub.cfg.uefi.example'
        'archlinux_grub2_mkconfig_fixes.patch'
        'grub-mkconfig-Use_outside_GRUB_PREFIX_if_defined.patch'
        'grub_prefix_platform_subdir_fixes.patch'
        'mjg_grub2_linux_loader_fixes.patch'
        'mjg_grub2_relocator_fixes.patch'
        'mjg_grub2_update_linux_boot_protocol.patch')

sha256sums=('4f895edb21c59ceae02b55d7a5c1d6881e0d0a229f00e4339f4326b5dfffaf3f'
            '9d2cdb4ca04b6a8ace90f279e4ad52136d12faae881c07152f2871474d0ecbab'
            '29428e5db35b8e29cb8107d1b8b05e5a6f0101a403fb93c9ed20d0782dbf9d85'
            '4dc36eb3540bbfea7f856ae2b06e82a9bb5eda35af0c0f77e3cb58e742df4bdd'
            '9d4361bacdfa4a732efce0440977588c8f3deb99f70dceff3984b35cda51d582'
            '8e88cb6a4c5cff8879ffc7bb3b4d1bcedd642de7dc0e29e67d3f014b89371776'
            'd2989cb83b10aa286c7f29c60eed10833fb68d35658e150b9d14e42e0ce8e08c'
            'd23f44dcbfd70c98ac6cd7e81a22afe17b517b68b59b5811f97716b61f98fb1f')


case "${pkgname}" in
	grub2-efi-x86_64-bzr )
		pkgdesc="The GNU GRand Unified Bootloader version 2 - x86_64 UEFI - BZR Main Trunk with grub-extras"
		pkgrel="1"
		conflicts+=('grub2-efi-x86_64')
		provides=('grub2-efi-x86_64')
		_UEFI_ARCH="x86_64"
		_trns_name="grub2_efi_x86_64_bzr"
		_bzrtrunk="bzr://bzr.savannah.gnu.org/grub/trunk/grub/"
		# _bzrtrunk="lp:grub/grub2"
		_bzrmod="grub2"
	;;
	grub2-efi-x86_64-bzr-exp )
		pkgdesc="The GNU GRand Unified Bootloader version 2 - x86_64 UEFI - BZR Experimental branch with grub-extras"
		pkgrel="1"
		conflicts+=('grub2-efi-x86_64')
		provides=('grub2-efi-x86_64')
		_UEFI_ARCH="x86_64"
		_trns_name="grub2_efi_x86_64_bzr_exp"
		_bzrtrunk="bzr://bzr.savannah.gnu.org/grub/branches/experimental/"
		# _bzrtrunk="lp:~the-ridikulus-rat/grub/grub2-bzr-exp"
		_bzrmod="grub2_exp"
	;;
	grub2-efi-i386-bzr )
		pkgdesc="The GNU GRand Unified Bootloader version 2 - i386 UEFI - BZR Main Trunk with grub-extras"
		pkgrel="1"
		conflicts+=('grub2-efi-i386')
		provides=('grub2-efi-i386')
		_UEFI_ARCH="i386"
		_trns_name="grub2_efi_i386_bzr"
		_bzrtrunk="bzr://bzr.savannah.gnu.org/grub/trunk/grub/"
		# _bzrtrunk="lp:grub/grub2"
		_bzrmod="grub2"
	;;
	grub2-efi-i386-bzr-exp )
		pkgdesc="The GNU GRand Unified Bootloader version 2 - i386 UEFI - BZR Experimental branch with grub-extras"
		pkgrel="1"
		conflicts+=('grub2-efi-i386')
		provides=('grub2-efi-i386')
		_UEFI_ARCH="i386"
		_trns_name="grub2_efi_i386_bzr_exp"
		_bzrtrunk="bzr://bzr.savannah.gnu.org/grub/branches/experimental/"
		# _bzrtrunk="lp:~the-ridikulus-rat/grub/grub2-bzr-exp"
		_bzrmod="grub2_exp"
	;;
	grub2-efi-bzr )
		pkgdesc="The GNU GRand Unified Bootloader version 2 for UEFI systems - BZR Development Version with grub-extras - Dummy pkgname - Edit PKGBUILD for actual pkgname"
		pkgrel="1"
		_UEFI_ARCH="NULL"
		_trns_name="NULL"
	;;
esac


case "${CARCH}" in
	i686 )
		if [[ "${_UEFI_ARCH}" == 'x86_64' ]]; then
			echo "${pkgname} package can be built only in a x86_64 system. Exiting."
			exit 1
		fi
	;;
	x86_64 )
		if [[ "${_UEFI_ARCH}" == 'i386' ]]; then
			# makedepends+=('gcc-multilib' 'gcc-libs-multilib' 'binutils-multilib' 'libtool-multilib')
			
			echo
		fi
	;;
esac


## grub2-extras bzr repo locations

_bzrtrunk_lua="bzr://bzr.savannah.gnu.org/grub-extras/lua/"
# _bzrtrunk_lua="lp:~the-ridikulus-rat/grub/grub2-extras-lua"

_bzrtrunk_gpxe="bzr://bzr.savannah.gnu.org/grub-extras/gpxe/"
# _bzrtrunk_gpxe="lp:~the-ridikulus-rat/grub/grub2-extras-gpxe"


_update_bzr() {
	
	msg "Connecting to BZR server..."
	
	if [[ -d "${srcdir}/${_bzrmod}" ]]; then
		cd "${srcdir}/${_bzrmod}"
		bzr pull "${_bzrtrunk}"
		msg "GRUB2 BZR Local repository updated."
	else
		cd "${srcdir}/"
		bzr branch "${_bzrtrunk}" "${_bzrmod}"
		msg "GRUB2 BZR repository cloned."
	fi
	
	if [[ -d "${srcdir}/${_bzrmod}/grub2-extras" ]]; then
		cd "${srcdir}/${_bzrmod}/grub2-extras/"
		
		if [[ -d "${srcdir}/${_bzrmod}/grub2-extras/lua" ]]; then
			cd "${srcdir}/${_bzrmod}/grub2-extras/lua"
			bzr pull "${_bzrtrunk_lua}"
			echo
		else
			bzr branch "${_bzrtrunk_lua}" lua
			echo
		fi
		
		if [[ -d "${srcdir}/${_bzrmod}/grub2-extras/gpxe" ]]; then
			cd "${srcdir}/${_bzrmod}/grub2-extras/gpxe"
			bzr pull "${_bzrtrunk_gpxe}"
			echo
		else
			bzr branch "${_bzrtrunk_gpxe}" gpxe
			echo
		fi
	else
		mkdir -p "${srcdir}/${_bzrmod}/grub2-extras/"
		cd "${srcdir}/${_bzrmod}/grub2-extras/"
		
		bzr branch "${_bzrtrunk_lua}" lua
		echo
		bzr branch "${_bzrtrunk_gpxe}" gpxe
		echo
	fi
	
	cd "${srcdir}/${_bzrmod}/"
	rsync -Lrtvz translationproject.org::tp/latest/grub/ "${srcdir}/${_bzrmod}/po" || true
	(cd "${srcdir}/${_bzrmod}/po" && ls *.po | cut -d. -f1 | xargs) > "${srcdir}/${_bzrmod}/po/LINGUAS"
	
}


build() {
	
	if [[ "${pkgname}" == "${_pkgname}" ]]; then
		echo "Please edit the PKGBUILD and uncomment the appropriate pkgname as per your UEFI arch and the grub2 bzr branch you want to compile."
		exit 1
	else
		_update_bzr
	fi
	
	rm -rf "${srcdir}/${_bzrmod}_build" || true
	
	cp -r "${srcdir}/${_bzrmod}" "${srcdir}/${_bzrmod}_build"
	cd "${srcdir}/${_bzrmod}_build"
	
	patch -Np1 -i "${srcdir}/grub_prefix_platform_subdir_fixes.patch"
	echo
	
	## Matthew Garrett [PATCH V2 1/3] Update the Linux boot protocol - https://lists.gnu.org/archive/html/grub-devel/2012-02/msg00046.html
	patch -Np1 -i "${srcdir}/mjg_grub2_update_linux_boot_protocol.patch"
	echo
	
	## Matthew Garrett [PATCH V2 2/3] Add support for avoiding firmware in relocations - https://lists.gnu.org/archive/html/grub-devel/2012-02/msg00047.html
	patch -Np1 -i "${srcdir}/mjg_grub2_relocator_fixes.patch"
	echo
	
	## Matthew Garrett [PATCH V2 3/3] Update Linux loader to follow the kernel's preferences - https://lists.gnu.org/archive/html/grub-devel/2012-02/msg00048.html
	patch -Np1 -i "${srcdir}/mjg_grub2_linux_loader_fixes.patch"
	echo
	
	patch -Np1 -i "${srcdir}/grub-mkconfig-Use_outside_GRUB_PREFIX_if_defined.patch"
	echo
	
	patch -Np1 -i "${srcdir}/archlinux_grub2_mkconfig_fixes.patch"
	echo
	
	rm -rf "${srcdir}/${_bzrmod}_build/grub2-extras/zfs" || true
	
	export GRUB_CONTRIB="${srcdir}/${_bzrmod}_build/grub2-extras/"
	
	## The below step is not required as the script now executes with python3, hence makedepends change from python2 to python pkg
	## Seems like python2 is required again - as on 04-JAN-2012 - grub2 bzr mainline rev 3732
	install -D -m0755 "${srcdir}/${_bzrmod}_build/autogen.sh" "${srcdir}/${_bzrmod}_build/autogen_unmodified.sh"
	sed 's|python |python2 |g' -i "${srcdir}/${_bzrmod}_build/autogen.sh"
	echo
	
	"${srcdir}/${_bzrmod}_build/autogen.sh"
	echo
	
	## fix unifont.bdf location so grub-mkfont can create *.pf2 files
	sed 's|/usr/share/fonts/unifont|/usr/share/fonts/misc|g' -i "${srcdir}/${_bzrmod}_build/configure"
	
	mkdir -p "${srcdir}/${_bzrmod}_build/BUILD_UEFI_${_UEFI_ARCH}"
	cd "${srcdir}/${_bzrmod}_build/BUILD_UEFI_${_UEFI_ARCH}"
	
	CFLAGS="" ../configure \
		--with-platform="efi" \
		--target="${_UEFI_ARCH}" \
		--host="${CARCH}-unknown-linux-gnu" \
		--program-transform-name="s,grub,${_trns_name}," \
		--enable-mm-debug \
		--enable-device-mapper \
		--enable-cache-stats \
		--enable-grub-mkfont \
		--enable-grub-mount \
		--enable-nls \
		--disable-efiemu \
		--prefix="/usr" \
		--bindir="/usr/bin" \
		--sbindir="/usr/sbin" \
		--mandir="/usr/share/man" \
		--infodir="/usr/share/info" \
		--datarootdir="/usr/share" \
		--sysconfdir="/etc" \
		--program-prefix="" \
		--disable-werror
	echo
	
	CFLAGS="" make
	echo
	
}


package() {
	
	cd "${srcdir}/${_bzrmod}_build/BUILD_UEFI_${_UEFI_ARCH}"
	make DESTDIR="${pkgdir}/" install
	echo
	
	## install /etc/default/grub
	install -D -m0644 "${srcdir}/grub.default" "${pkgdir}/etc/default/grub"
	
	## install example grub2 config file
	install -D -m0644 "${srcdir}/grub.cfg.uefi.example" "${pkgdir}/usr/share/${_trns_name}/grub.cfg.uefi.example"
	
	sed "s|^\(_UEFI_ARCH\)=.*|\1=${_UEFI_ARCH}|g" -i "${startdir}/${_pkgname}.install"
	sed "s|^\(_trns_name\)=.*|\1=${_trns_name}|g" -i "${startdir}/${_pkgname}.install"
	
}
