# Maintainer : Alucryd <alucryd at gmail dot com>

pkgbase=higan
pkgname=higan
_higver=092
_purver=03
_anaver=01
_higrel=10
_purrel=2
_anarel=9
arch=('i686' 'x86_64')
url="http://code.google.com/p/higan/"
license=('GPL3')
source=("http://higan.googlecode.com/files/higan_v${_higver}-source.tar.xz" "http://higan.googlecode.com/files/purify_v${_purver}-source.tar.xz" 'higan' 'higan.desktop' 'purify.desktop')
sha1sums=('a205005f118f6e138065af6e0d14ed990b8f1ce1'
          '2aa16f492c879d2cc1d4ffa28f4729a5ed5bb1c3'
          '931baedc3bbdd343d2decda72c13b7d0efdcba3c'
          '55f4de0a65d6428840d013f9b003d88158c131c7'
          '093643998a2fb676d795c316e35d49cf6293ce86')

# UI (only one can be set to true)
_gtk=true
_qt=false
# Profile (all can be set to true)
_accuracy=false
_balanced=true
_performance=false

true && pkgname=('higan' 'higan-common')
makedepends=('libpulse' 'libao' 'libxv' 'libgl' 'openal' 'sdl')

if [ "$_gtk" == true ] ; then
  makedepends+=('gtk2')
  pkgname+=('libananke-gtk' 'purify-gtk')
  [ "$_accuracy" == true ] && pkgname+=('higan-gtk-accuracy')
  [ "$_balanced" == true ] && pkgname+=('higan-gtk-balanced')
  [ "$_performance" == true ] && pkgname+=('higan-gtk-performance')
fi

if [ "$_qt" == true ] ; then
  makedepends+=('qt>=4.7.0')
  pkgname+=('libananke-qt' 'purify-qt')
  [ "$_accuracy" == true ] && pkgname+=('higan-qt-accuracy')
  [ "$_balanced" == true ] && pkgname+=('higan-qt-balanced')
  [ "$_performance" == true ] && pkgname+=('higan-qt-performance')
fi

buildana() {
  make compiler=gcc platform=x phoenix=$1
  mv libananke.so libananke-$1.so
  rm obj/ananke.o
}

installana() {
  cd "${srcdir}/purify_v${_purver}-source/ananke"
  install -dm 755 "${pkgdir}/usr/lib"
  install -dm 755 "${pkgdir}/usr/lib"
  install -Dm 644 libananke-$1.so "${pkgdir}/usr/lib/libananke.so.1"
  ln -s /usr/lib/libananke.so.1 "${pkgdir}/usr/lib/libananke.so"
}

buildpur() {
  make compiler=gcc platform=x link='-s -lX11 -ldl -export-dynamic' phoenix=$1
  mv purify purify-$1
  make clean
}

installpur() {
  cd "${srcdir}/purify_v${_purver}-source/purify"
  install -Dm 755 purify-$1 "${pkgdir}/usr/bin/purify"
  install -dm 755 "${pkgdir}/usr/share/applications"
  install -m 644 "${srcdir}/purify.desktop" "${pkgdir}/usr/share/applications/purify.desktop"
}

buildhig() {
  msg "Building $3 profile"
  make compiler=gcc platform=x target=$1 phoenix=$2 profile=$3
  mv out/higan "out/higan-$2-$3"
  make clean
}

installhig() {
  cd "${srcdir}/higan_v${_higver}-source/higan"
  install -dm 755 "${pkgdir}/usr/bin"
  install -m 755 "out/higan-$2-$3" "${pkgdir}/usr/bin/higan-$3"
}

qtfix() {
  if [ "$_qt" == true ] ; then
    moc -i -Iphoenix/qt/ -o phoenix/qt/platform.moc phoenix/qt/platform.moc.hpp
  fi
}

build() {
# Warn user about the default settings
  msg "The script defaults to a balanced build using a GTK GUI. Please edit to suit your needs."

  cd "${srcdir}/purify_v${_purver}-source/ananke"

# QT 4.8.0 fix
  qtfix

# Compile libananke GTK
  if [ "$_gtk" == true ] ; then
    msg "Building libananke GTK"
    buildana gtk
  fi

# Compile libananke QT
  if [ "$_qt" == true ] ; then
    msg "Building libananke QT"
    buildana qt
  fi

  cd "${srcdir}/purify_v${_purver}-source/purify"

# QT 4.8.0 fix
  qtfix

# Compile purify GTK
  if [ "$_gtk" == true ] ; then
    msg "Building purify GTK"
    buildpur gtk
  fi

# Compile purify QT
  if [ "$_qt" == true ] ; then
    msg "Building purify QT"
    buildpur qt
  fi


  cd "${srcdir}/higan_v${_higver}-source/higan"

# QT 4.8.0 fix
  qtfix

# Compile higan GTK GUI
  if [ "$_gtk" == true ] ; then
    msg "Building GTK GUI"
    if [ "$_accuracy" == true ] ; then
      buildhig ethos gtk accuracy
    fi
    if [ "$_balanced" == true ] ; then
      buildhig ethos gtk balanced
    fi
    if [ "$_performance" == true ] ; then
      buildhig ethos gtk performance
    fi
  fi

# Compile higan QT GUI
  if [ "$_qt" == true ] ; then
    msg "Building QT GUI"
    if [ "$_accuracy" == true ] ; then
      buildhig ethos qt accuracy
    fi
    if [ "$_balanced" == true ] ; then
      buildhig ethos qt balanced
    fi
    if [ "$_performance" == true ] ; then
      buildhig ethos qt performance
    fi
  fi
}

package_higan-common() {
  pkgdesc="Nintendo multi-system emulator - Common files"
  arch=('any')
  depends=('xdialog')

  cd "${srcdir}/higan_v${_higver}-source/higan"

  mkdir -p "${pkgdir}/usr/bin"
  cp "${srcdir}/higan" "${pkgdir}/usr/bin/"

  mkdir -p "${pkgdir}/usr/share/applications"
  cp "${srcdir}/higan.desktop" "${pkgdir}/usr/share/applications"

  mkdir -p "${pkgdir}/usr/share/higan"
  cp -R profile/* "${pkgdir}/usr/share/higan/"
  cp data/cheats.bml "${pkgdir}/usr/share/higan/"

  mkdir "${pkgdir}/usr/share/pixmaps"
  cp data/higan.png "${pkgdir}/usr/share/pixmaps/"

  cd "${srcdir}/higan_v${pkgver}-source/shaders"
  mkdir "${pkgdir}/usr/share/higan/Video Shaders"
  cp *.shader "${pkgdir}/usr/share/higan/Video Shaders/"

# Fix permissions
  find "${pkgdir}" -type d -print0 | xargs -0 chmod 755
  find "${pkgdir}" -type f -print0 | xargs -0 chmod 644
  chmod -R 755 "${pkgdir}/usr/bin"
}

package_libananke-gtk() {
  pkgver=${_anaver}
  pkgrel=${_anarel}
  pkgdesc="ROM library for the higan emulator - GTK GUI"
  depends=('gtk2')
  provides=('libananke')
  conflicts=('libananke-qt')

  installana gtk
}

package_libananke-qt() {
  pkgver=${_anaver}
  pkgrel=${_anarel}
  pkgdesc="ROM library for the higan emulator - QT GUI"
  depends=('qt>=4.7.0')
  provides=('libananke')
  conflicts=('libananke-gtk')

  installana qt
}

package_purify-gtk() {
  pkgver=${_purver}
  pkgrel=${_purrel}
  pkgdesc="ROM purifier for the higan emulator - GTK GUI"
  depends=('gtk2' 'libananke')
  provides=("purify")
  conflicts=('purify-qt')

  installpur gtk
}

package_purify-qt() {
  pkgver=${_purver}
  pkgrel=${_purrel}
  pkgdesc="ROM purifier for the higan emulator - QT GUI"
  depends=('qt>=4.7.0' 'libananke')
  provides=("purify")
  conflicts=('purify-gtk')

  installpur qt
}

package_higan-gtk-accuracy() {
  pkgdesc="Nintendo multi-system emulator - GTK GUI - Accuracy profile"
  depends=("higan-common>=${pkgver}" 'libananke-gtk' 'libpulse' 'libao' 'libxv' 'libgl' 'openal' 'sdl')
  provides=("higan-ui=${pkgver}-${pkgrel}")
  conflicts=('higan-qt-accuracy')

  installhig ethos gtk accuracy
}

package_higan-gtk-balanced() {
  pkgdesc="Nintendo multi-system emulator - GTK GUI - Balanced profile"
  depends=("higan-common>=${pkgver}" 'libananke-gtk' 'libpulse' 'libao' 'libxv' 'libgl' 'openal' 'sdl')
  provides=("higan-ui=${pkgver}-${pkgrel}")
  conflicts=('higan-qt-balanced')

  installhig ethos gtk balanced
}

package_higan-gtk-performance() {
  pkgdesc="Nintendo multi-system emulator - GTK GUI - Performance profile"
  depends=("higan-common>=${pkgver}" 'libananke-gtk' 'libpulse' 'libao' 'libxv' 'libgl' 'openal' 'sdl')
  provides=("higan-ui=${pkgver}-${pkgrel}")
  conflicts=('higan-qt-performance')

  installhig ethos gtk performance
}

package_higan-qt-accuracy() {
  pkgdesc="Nintendo multi-system emulator - QT GUI - Accuracy profile"
  depends=("higan-common>=${pkgver}" 'libananke-qt' 'libpulse' 'libao' 'libxv' 'libgl' 'openal' 'sdl')
  provides=("higan-ui=${pkgver}-${pkgrel}")
  conflicts=('higan-gtk-accuracy')

  installhig ethos qt accuracy
}

package_higan-qt-balanced() {
  pkgdesc="Nintendo multi-system emulator - QT GUI - Balanced profile"
  depends=("higan-common>=${pkgver}" 'libananke-qt' 'libpulse' 'libao' 'libxv' 'libgl' 'openal' 'sdl')
  provides=("higan-ui=${pkgver}-${pkgrel}")
  conflicts=('higan-gtk-balanced')

  installhig ethos qt balanced
}

package_higan-qt-performance() {
  pkgdesc="Nintendo multi-system emulator - QT GUI - Performance profile"
  depends=("higan-common>=${pkgver}" 'libananke-qt' 'libpulse' 'libao' 'libxv' 'libgl' 'openal' 'sdl')
  provides=("higan-ui=${pkgver}-${pkgrel}")
  conflicts=('higan-gtk-performance')

  installhig ethos qt performance
}

package_higan() {
  pkgdesc="Nintendo multi-system emulator - Dummy package for AUR helpers"
  arch=('any')
  depends=("higan-ui>=${pkgver}-${pkgrel}")
  install=${pkgname}.install
  optdepends=('purify: ROM purifier'
              'beat: Delta patcher')
}

# Force AUR to display the right info
pkgver=${_higver}
pkgrel=${_higrel}
pkgdesc="Nintendo multi-system emulator"
depends=()

# vim: ts=2 sw=2 et :
