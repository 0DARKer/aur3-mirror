# Maintainer : Alucryd <alucryd at gmail dot com>

pkgname=higan
pkgver=091
pkgrel=1
pkgdesc="Nintendo multi-system emulator"
arch=('i686' 'x86_64')
url="http://code.google.com/p/higan/"
license=('GPL3')
makedepends=('mesa')
source=("http://higan.googlecode.com/files/higan_v${pkgver}.tar.xz" "higan.sh")
sha1sums=('0e650a4045c2c67dc7ecfd6bcf6bc81bb0d39f25'
          '8b7aac6efce90c963fa07fe4c46812ca4384658b')
conflicts=('bsnes' 'bsnes-aio' 'snesfilter')
optdepends=('purify: ROM cleaning utility'
            'beat: ROM patching utility')

# By default, the script will compile an accuracy build using a GTK interface without the debugger. Comment/uncomment the following variables to suit your preferences.
# NOTE: The debugger does not work yet, enabling it will cause this script to fail. Also, there is no purify nor shaders and filters in this pre-release.

# Profiles: Accuracy (slower), Compatibility, or Performance (faster)
_profile=accuracy
#_profile=compatibility
#_profile=performance

# Interface: GTK or QT
depends=('gtk2' 'libpulse' 'libao' 'libgl' 'libxv' 'openal' 'sdl')
_interface=gtk
#depends=('qt>=4.7.0' 'libpulse' 'libao' 'libgl' 'libxv' 'openal' 'sdl')
#_interface=qt

# Debugger
#_debug=true
#_debug=false

build() {
# QT 4.8.0 fix
  if [ $_interface == "qt" ]
  then
    cd "${srcdir}"
    moc -i -Iphoenix/qt/ -o phoenix/qt/platform.moc phoenix/qt/platform.moc.hpp
  fi

# Compile laevateinn
#  if [ $_debug == "true" ]
#  then
#    cd "${srcdir}"
#    mkdir laevateinn
#    cd laevateinn
#    tar -xf "../higan_v${pkgver}.tar.xz"
#    make compiler=gcc platform=x phoenix=$_interface profile=accuracy target=laevateinn
#  fi    

# Compile higan
  cd "${srcdir}"
  make compiler=gcc platform=x phoenix=$_interface profile=$_profile target=ethos

# Compile purify
#  cd "${srcdir}/bsnes_v$pkgver-source/purify"
#  sed -i 's|gtk+-2.0|gtk+-2.0 x11|g' phoenix/Makefile
#  make compiler=gcc platform=x phoenix=$_interface

# Compile filters
#  cd "${srcdir}/bsnes_v$pkgver-source/snesfilter"
#  make compiler=gcc platform=x
}

package() {
  cd "${srcdir}"
  sed -i 's/~\/.config/$(DESTDIR)$(prefix)\/share/g' target-ethos/Makefile
  sed -i 's|sudo install|install|g' target-ethos/Makefile
  make target=ethos install DESTDIR="${pkgdir}" prefix=/usr

#  if [ $_debug == "true" ]
#  then
#    cd "${srcdir}/laevateinn"
#    sed -i 's/~\/.config/$(DESTDIR)$(prefix)\/share/g' target-laevateinn/Makefile
#    sed -i 's|sudo install|install|g' target-laevateinn/Makefile
#    make target=laevateinn install DESTDIR="${pkgdir}" prefix=/usr
#    rm -rf "${pkgdir}/usr/share/laevateinn"
#    ln -s  "${pkgdir}/usr/share/higan" "${pkgdir}/usr/share/laevateinn"
#  fi
    
#  cd "${srcdir}/bsnes_v$pkgver-source/purify"
#  install -Dm755 purify "${pkgdir}/usr/bin/purify"
    
#  cd "${srcdir}/bsnes_v$pkgver-source/snesfilter"
#  sed -i 's/~\/.config/$(DESTDIR)$(prefix)\/share/g' Makefile
#  make install DESTDIR="${pkgdir}" prefix=/usr

#  cd "${srcdir}/bsnes_v$pkgver-source/shaders"
#  sed -i 's/~\/.config/$(DESTDIR)$(prefix)\/share/g' Makefile
#  make install DESTDIR="${pkgdir}" prefix=/usr

# Tweak to copy shares to ~./config
  install -Dm755 "${srcdir}/higan.sh" "${pkgdir}/usr/bin/higan.sh"
#  install -Dm755 "${srcdir}/purify.sh" "${pkgdir}/usr/bin/purify.sh"
#  install -Dm755 "${srcdir}/purify.desktop" "${pkgdir}/usr/share/applications/purify.desktop"
  sed -i 's|Exec=higan|Exec=/usr/bin/higan.sh|g' "${pkgdir}/usr/share/applications/higan.desktop"
}
