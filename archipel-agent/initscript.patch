--- ArchipelAgent/archipel-agent/install/bin/archipel-initinstall	2012-02-19 16:12:56.000000000 +0100
+++ ArchipelAgent/archipel-agent/install/bin/archipel-initinstall	2012-07-23 14:01:35.014689521 +0200
@@ -114,8 +114,8 @@ def clean_installation(prefix=""):
 
         warn("Ok. you have been warned...")
         msg("cleaning old existing files")
-        msg("cleaning init script from %s/etc/init.d/archipel" % prefix)
-        os.system("rm -rf %s/etc/init.d/archipel" % prefix)
+        msg("cleaning init script from %s/etc/rc.d/archipel" % prefix)
+        os.system("rm -rf %s/etc/rc.d/archipel" % prefix)
         msg("Cleaning library folders from %s/var/lib/archipel" % prefix)
         os.system("rm -rf %s/var/lib/archipel" % prefix)
         msg("Cleaning configuration file from %s/etc/archipel" % prefix)
@@ -135,16 +135,16 @@ def install_init_script(prefix, init_scr
     @type init_script: string
     @param init_script: origin path of the init script
     """
-    msg("Installing init script to %s/etc/init.d/archipel" % prefix)
+    msg("Installing init script to %s/etc/rc.d/archipel" % prefix)
 
-    if os.path.exists("%s/etc/init.d/archipel" % prefix):
+    if os.path.exists("%s/etc/rc.d/archipel" % prefix):
         warn("Init script already exists. Leaving as it is.")
         return
-    if os.system("cp '%s' '%s/etc/init.d/archipel'" % (init_script, prefix)) == 0:
+    if os.system("cp '%s' '%s/etc/rc.d/archipel'" % (init_script, prefix)) == 0:
         success("Init script installed")
     else:
         error("Unable to copy the init script. Please install it by yourself", exit=False)
-    if os.system("chmod 755 '%s/etc/init.d/archipel'" % prefix) == 0:
+    if os.system("chmod 755 '%s/etc/rc.d/archipel'" % prefix) == 0:
         success("Init script chmoded")
     else:
         error("Unable to chmod the init script", exit=False)
@@ -227,9 +227,9 @@ def get_data_files(prefix):
     @type prefix: string
     @param prefix: the installation prefix
     """
-    init_script = resource_filename(Requirement.parse("archipel-agent"),"install/etc/init.d/archipel")
-    conf_folder = resource_filename(Requirement.parse("archipel-agent"),"install/etc/archipel")
-    lib_folder = resource_filename(Requirement.parse("archipel-agent"),"install/var/lib/archipel")
+    init_script = "/usr/share/archipel/install/etc/init.d/archipel"
+    conf_folder = "/usr/share/archipel/install/etc/archipel"
+    lib_folder = "/usr/share/archipel/install/var/lib/archipel"
 
     # we are in the case of RPM installation
     if not os.path.exists(init_script):
--- ArchipelAgent/archipel-agent/install/etc/init.d/archipel	2012-02-19 16:12:56.000000000 +0100
+++ ArchipelAgent/archipel-agent/install/etc/init.d/archipel	2012-07-23 14:01:35.014689521 +0200
@@ -13,75 +13,50 @@
 # the following is the LSB init header see
 # http://www.linux-foundation.org/spec//booksets/LSB-Core-generic/LSB-Core-generic.html#INITSCRCOMCONV
 #
-### BEGIN INIT INFO
-# Provides: archipel
-# Required-Start: $network libvirtd
-# Required-Stop: $network
-# Should-Stop: libvirtd
-# Default-Start: 3 4 5
-# Default-Stop: 0 1 6
-# Short-Description:  daemon for archipel orchestrator suite
-# Description: This is a daemon for managing hypervisor
-#              thru libvirtd. The agent is a bridge between libvirtd and
-#              xmpp server.
-### END INIT INFO
+
+. /etc/rc.conf
+. /etc/rc.d/functions
+daemon_name=archipel
 
 ARCHIPEL=`which runarchipel`
-if [ $? -eq 1 ]; then
-  ARCHIPEL=/usr/local/bin/runarchipel
-  if [ ! -e "$ARCHIPEL" ]; then
-    echo 'Archipel exe not found !'
-    exit 1
-  fi
-fi
 PROG=$(basename $ARCHIPEL)
-PROGNAME="Archipel"
+PROGNAME="Archipel Agent"
 ARCHIPEL_CONF_FILE="/etc/archipel/archipel.conf"
-
-if [[ -d /var/lock/subsys ]]; then
-    lockfile=/var/lock/subsys/archipel
-elif [[ -d /var/lock/ ]]; then
-    lockfile=/var/lock/archipel
-else
-    lockfile=/tmp/.lock-archipel
-fi
+lockfile="/var/run/$daemon_name"
 
 start() {
-    [[ -x $ARCHIPEL ]] || exit 5
+    stat_busy "Starting $PROGNAME"
 
-    if [[ -f $lockfile ]]; then
-        echo -ne " * $PROGNAME already running: \\033[31m[ERROR]\\033[0m\\n"
-        exit 6
+    if [[ $(get_ppid) = $(get_fpid) ]]; then
+        stat_append "[Already Running]"
+        stat_fail
+        return 1
     fi
 
-    echo -ne " * Starting $PROGNAME:\\r"
-    $ARCHIPEL --config="$ARCHIPEL_CONF_FILE" >> /var/log/archipel-startup.log 2>&1
-    retval=$?
-
-    if [[ $retval == 0 ]]; then
-        touch $lockfile
-        echo $! > $lockfile
-        echo -ne " * Starting $PROGNAME: \\033[32m[OK]\\033[0m\\n"
+    if $ARCHIPEL --config="$ARCHIPEL_CONF_FILE" &>/dev/null; then
+        get_ppid > $lockfile
+        add_daemon $daemon_name
+        stat_done
     else
-        echo -ne " * Starting $PROGNAME: \\033[31m[ERROR]\\033[0m\\n"
+        stat_fail
+        return 1
     fi
-
-    return $retval
 }
 
 stop() {
-    if [[ ! -f $lockfile ]]; then
-        echo -ne " * $PROGNAME is not running: \\033[31m[ERROR]\\033[0m\\n"
-        return 6
+    stat_busy "Stopping $PROGNAME"
+    if [[ -z $(get_ppid) ]]; then
+        stat_append "[Not Running]"
+    fi
+    if killall -9 $PROG &> /dev/null; then
+        rm_daemon $daemon_name
+        stat_done
+    else
+        stat_fail
+        return 1
     fi
 
-    echo -ne " * Stopping $PROGNAME:\\r"
-    killall -9 $PROG
-    retval=$?
-    rm -f $lockfile
-    echo -ne " * Stopping $PROGNAME: \\033[32m[OK]\\033[0m\\n"
 
-    return $retval
 }
 
 restart() {
@@ -90,16 +65,21 @@ restart() {
 }
 
 status() {
-    if [[ -f $lockfile ]]; then
-        echo -ne " * $PROGNAME state: \\033[32m[RUNNING]\\033[0m\\n"
-        exit 0
-    else
-        echo -ne " * $PROGNAME state: \\033[31m[STOPPED]\\033[0m\\n"
-        exit 0
-    fi
+    stat_busy "Checking $PROGNAME"
+    [[ $(get_ppid) = $(get_fpid) ]] && status_started || status_stopped
+}
 
+get_fpid() {
+    read pid &> /dev/null < $lockfile
+    [[ -n $pid ]] && echo $pid || echo -1
 }
 
+get_ppid() {
+    pid=$(ps -C runarchipel -o pid=)
+    [[ -n $pid ]] && echo $pid || echo -2
+}
+
+
 
 case "$1" in
     start)
