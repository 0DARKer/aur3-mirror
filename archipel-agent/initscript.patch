--- ArchipelAgent/archipel-agent/install/etc/init.d/archipel
+++ ArchipelAgent/archipel-agent/install/etc/init.d/archipel
@@ -26,62 +26,49 @@
 #              xmpp server.
 ### END INIT INFO
 
+. /etc/rc.conf
+. /etc/rc.d/functions
+daemon_name=archipel
+
 ARCHIPEL=`which runarchipel`
-if [ $? -eq 1 ]; then
-  ARCHIPEL=/usr/local/bin/runarchipel
-  if [ ! -e "$ARCHIPEL" ]; then
-    echo 'Archipel exe not found !'
-    exit 1
-  fi
-fi
 PROG=$(basename $ARCHIPEL)
-PROGNAME="Archipel"
+PROGNAME="Archipel Agent"
 ARCHIPEL_CONF_FILE="/etc/archipel/archipel.conf"
 
-if [[ -d /var/lock/subsys ]]; then
-    lockfile=/var/lock/subsys/archipel
-elif [[ -d /var/lock/ ]]; then
-    lockfile=/var/lock/archipel
-else
-    lockfile=/tmp/.lock-archipel
-fi
+lockfile=/run/$daemon_name.pid
 
 start() {
-    [[ -x $ARCHIPEL ]] || exit 5
-
-    if [[ -f $lockfile ]]; then
-        echo -ne " * $PROGNAME already running: \\033[31m[ERROR]\\033[0m\\n"
-        exit 6
+    stat_busy "Starting $PROGNAME"
+    
+    if [[ $(get_ppid) = $(get_fpid) ]]; then
+        stat_append "[Already Running]"
+        stat_fail
+        return 1
     fi
-
-    echo -ne " * Starting $PROGNAME:\\r"
-    $ARCHIPEL --config="$ARCHIPEL_CONF_FILE" > /dev/null 2>&1
-    retval=$?
-
-    if [[ $retval == 0 ]]; then
-        touch $lockfile
-        echo $! > $lockfile
-        echo -ne " * Starting $PROGNAME: \\033[32m[OK]\\033[0m\\n"
+    
+    if $ARCHIPEL --config="$ARCHIPEL_CONF_FILE" &>/dev/null; then
+        get_ppid > $lockfile
+        add_daemon $daemon_name
+        stat_done
     else
-        echo -ne " * Starting $PROGNAME: \\033[31m[ERROR]\\033[0m\\n"
+        stat_fail
+        return 1
     fi
-
-    return $retval
 }
 
 stop() {
-    if [[ ! -f $lockfile ]]; then
-        echo -ne " * $PROGNAME is not running: \\033[31m[ERROR]\\033[0m\\n"
-        return 6
+    stat_busy "Stopping $PROGNAME"
+    if [[ -z $(get_ppid) ]]; then
+        stat_append "[Not Running]"
     fi
-
-    echo -ne " * Stopping $PROGNAME:\\r"
-    killall -9 $PROG
-    retval=$?
     rm -f $lockfile
-    echo -ne " * Stopping $PROGNAME: \\033[32m[OK]\\033[0m\\n"
-
-    return $retval
+    if killall -9 $PROG &> /dev/null; then
+        rm_daemon $daemon_name
+        stat_done
+    else
+        stat_fail
+        return 1
+    fi
 }
 
 restart() {
@@ -90,16 +77,19 @@
 }
 
 status() {
-    if [[ -f $lockfile ]]; then
-        echo -ne " * $PROGNAME state: \\033[32m[RUNNING]\\033[0m\\n"
-        exit 0
-    else
-        echo -ne " * $PROGNAME state: \\033[31m[STOPPED]\\033[0m\\n"
-        exit 0
-    fi
-
+    stat_busy "Checking $PROGNAME"
+    [[ $(get_ppid) = $(get_fpid) ]] && status_started || status_stopped
 }
 
+get_fpid() {
+    read pid &> /dev/null < $lockfile
+    [[ -n $pid ]] && echo $pid || echo -1
+}
+
+get_ppid() {
+    pid=$(ps -C runarchipel -o pid=)
+    [[ -n $pid ]] && echo $pid || echo -2
+}
 
 case "$1" in
     start)
--- ArchipelAgent/archipel-agent/install/bin/archipel-initinstall
+++ ArchipelAgent/archipel-agent/install/bin/archipel-initinstall
@@ -31,9 +31,9 @@
 def prepare_environment(prefix="", force=False, xmpp_server="auto", hypervisor_name="auto"):
     from pkg_resources import Requirement, resource_filename
     import errno
-    init_script     = resource_filename(Requirement.parse("archipel-agent"),"install/etc/init.d/archipel")
-    conf_folder     = resource_filename(Requirement.parse("archipel-agent"),"install/etc/archipel")
-    lib_folder      = resource_filename(Requirement.parse("archipel-agent"),"install/var/lib/archipel")
+    init_script     = "/usr/share/archipel/install/etc/init.d/archipel"
+    conf_folder     = "/usr/share/archipel/install/etc/archipel"
+    lib_folder      = "/usr/share/archipel/install/var/lib/archipel"
 
     print init_script
 
@@ -53,8 +53,8 @@
                 return
             print "ok. you have been warned...\033[0m"
             print "# cleaning old existing files"
-            print " - cleaning init script from %s/etc/init.d/archipel" % prefix
-            os.system("rm -rf %s/etc/init.d/archipel" % prefix)
+            print " - cleaning init script from %s/etc/rc.d/archipel" % prefix
+            os.system("rm -rf %s/etc/rc.d/archipel" % prefix)
             print " - cleaning library folders from %s/var/lib/archipel" % prefix
             os.system("rm -rf %s/var/lib/archipel" % prefix)
             print " - cleaning configuration file from %s/etc/archipel" % prefix
@@ -68,14 +68,14 @@
 
     print "# Installation initialization started"
     try:
-        sys.stdout.write(" - installing init script to %s/etc/init.d/archipel: " % prefix)
-        shutil.copyfile(init_script, "%s/etc/init.d/archipel" % prefix)
-        os.system("chmod 755 %s/etc/init.d/archipel" % prefix)
+        sys.stdout.write(" - installing init script to %s/etc/rc.d/archipel: " % prefix)
+        shutil.copyfile(init_script, "%s/etc/rc.d/archipel" % prefix)
+        os.system("chmod 755 %s/etc/rc.d/archipel" % prefix)
         print "\033[32m[OK]\033[0m"
     except IOError as (n, strerror):
         if n == errno.ENOENT:
             print "\033[31m[ERROR]\033[0m\n"
-            print "  %s/etc/init.d doesn't exist. You mostly are on a non-supported platform." % prefix
+            print "  %s/etc/rc.d doesn't exist. You mostly are on a non-supported platform." % prefix
             sys.exit(2)
         if n == errno.EEXIST:
             print  "\033[33m[WARNING]"

