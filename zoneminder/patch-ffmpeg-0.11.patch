diff --git a/src/zm_ffmpeg_camera.cpp b/src/zm_ffmpeg_camera.cpp
index 42927f6..61df606 100644
--- a/src/zm_ffmpeg_camera.cpp
+++ b/src/zm_ffmpeg_camera.cpp
@@ -91,7 +91,7 @@ int FfmpegCamera::PrimeCapture()
     Info( "Priming capture from %s", mPath.c_str() );
 
     // Open the input, not necessarily a file
-    if ( av_open_input_file( &mFormatContext, mPath.c_str(), NULL, 0, NULL ) !=0 )
+    if ( avformat_open_input( &mFormatContext, mPath.c_str(), NULL, NULL ) !=0 )
         Fatal( "Unable to open input %s due to: %s", mPath.c_str(), strerror(errno) );
 
     // Locate stream info from input
@@ -122,7 +122,7 @@ int FfmpegCamera::PrimeCapture()
         Fatal( "Can't find codec for video stream from %s", mPath.c_str() );
 
     // Open the codec
-    if ( avcodec_open( mCodecContext, mCodec ) < 0 )
+    if ( avcodec_open2( mCodecContext, mCodec, NULL ) < 0 )
         Fatal( "Unable to open codec for video stream from %s", mPath.c_str() );
 
     // Allocate space for the native video frame

diff --git a/src/zm_mpeg.cpp b/src/zm_mpeg.cpp
index f5de2a4..d614346 100644
--- a/src/zm_mpeg.cpp
+++ b/src/zm_mpeg.cpp
@@ -130,10 +130,12 @@ void VideoStream::SetParameters()
 {
 	/* set the output parameters (must be done even if no
 	   parameters). */
-	if ( av_set_parameters(ofc, NULL) < 0 )
+	/*
+     * Removed in last ffmpeg
+     * if ( av_set_parameters(ofc, NULL) < 0 )
 	{
 		Panic( "Invalid output format parameters" );
-	}
+	}*/
 	//dump_format(ofc, 0, filename, 1);
 }
 
@@ -222,7 +224,7 @@ void VideoStream::OpenStream()
 	if ( !(of->flags & AVFMT_NOFILE) )
 	{
 #if LIBAVUTIL_VERSION_INT >= AV_VERSION_INT(51,2,1)
-		if ( avio_open(&ofc->pb, filename, URL_WRONLY) < 0 )
+		if ( avio_open(&ofc->pb, filename, AVIO_FLAG_WRITE) < 0 )
 #else
 		if ( url_fopen(&ofc->pb, filename, URL_WRONLY) < 0 )
 #endif
@@ -241,7 +243,7 @@ void VideoStream::OpenStream()
 	}
 
 	/* write the stream header, if any */
-	av_write_header(ofc);
+	avformat_write_header(ofc, NULL);
 }
 
 VideoStream::VideoStream( const char *filename, const char *format, int bitrate, double frame_rate, int colours, int subpixelorder, int width, int height )
