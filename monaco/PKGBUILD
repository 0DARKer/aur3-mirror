# Maintainer: Alex Szczuczko <alex at szc dot ca>
# Contributor: Niluge_KiWi <kiwiiii@gmail.com>

pkgname=monaco
_hibver=02142014
pkgver=20140214
pkgrel=1
pkgdesc="Assemble a crack team of thieves and execute the perfect crime"
arch=('i686' 'x86_64')
url="http://www.monacoismine.com/"
license=('custom:commercial')
depends=()
source=("$pkgname.desktop"
        "${pkgname}_linux_${_hibver}.sh::hib://${pkgname}_linux_${_hibver}.sh")
noextract=("${pkgname}_linux_${_hibver}.sh")
sha256sums=('15cecfd329598bfaf053d2178cb8168489490e08f493fe563940172395dbcc33'
            '2e32d391afbc0928972eb89a33570b63d9e36d960721382010297daa43c7d7e2')

# hib scheme catch-all
DLAGENTS+=('hib::/usr/bin/echo "Could not find %u. Manually download it to \"$(pwd)\", or set up a hib:// DLAGENT in /etc/makepkg.conf."; exit 1')

# Modify depends for the arch type
if [ "$CARCH" = "x86_64" ]
then
    depends+=('lib32-glibc' 'lib32-sdl2' 'lib32-libgl' 'lib32-zlib' 'lib32-gcc-libs' 'lib32-libx11' 'lib32-libxext' 'lib32-libxcb' 'lib32-libxau' 'lib32-libxdmcp')
elif [ "$CARCH" = "i686" ]
then
    depends+=('glibc' 'sdl2' 'libgl' 'zlib' 'gcc-libs' 'libx11' 'libxext' 'libxcb' 'libxau' 'libxdmcp')
fi

# Disable compression of the package
PKGEXT='.tar'

package() {
    cd "$srcdir/"

    #
    # Extract data
    #

    mkdir -p "$pkgname"
    # Try and avoid extracting all the cruft in the installer
    bsdtar -Ox -f "${pkgname}_linux_${_hibver}.sh" "data/${pkgname^}Linux.zip" | bsdtar -x -C "$pkgname" -f -

    cd "$pkgname"

    #
    # Create /opt/$pkgname directory
    #

    # Binaries
    install -m755 -d "$pkgdir/opt/$pkgname/"
    install -m755 -t "$pkgdir/opt/$pkgname/" "x86/${pkgname^}.bin.x86"

    install -m755 -d "$pkgdir/opt/$pkgname/lib/"
    install -m644 -t "$pkgdir/opt/$pkgname/lib/" "x86/lib/libsteam_api.so" "x86/lib/libfmodex-4.44.20.so"

    cd "noarch"

    # Non-executable gameroot files
    install -m644 -t "$pkgdir/opt/$pkgname/" "${pkgname^}.png" "project.ini" "README.linux"

    # Fonts
    install -m755 -d "$pkgdir/opt/$pkgname/Fonts/"
    find "Fonts/" -maxdepth 1 -type f -print0 | \
        xargs -0 install -m644 -t "$pkgdir/opt/$pkgname/Fonts/"

    # Lang
    install -m755 -d "$pkgdir/opt/$pkgname/Lang/"
    find "Lang/" -maxdepth 1 -mindepth 1 -type d -print0 | \
        while read -r -d $'\0' dir
        do
            install -m755 -d "$pkgdir/opt/$pkgname/$dir/Strings/"
            find "$dir/Strings/" -maxdepth 1 -type f -print0 | \
                xargs -0 install -m644 -t "$pkgdir/opt/$pkgname/$dir/Strings/"
        done

    # Images
    install -m755 -d "$pkgdir/opt/$pkgname/Images/"
    find "Images/" -type f -name '*.bmp' -print0 | \
        xargs -0 install -m644 -t "$pkgdir/opt/$pkgname/Images/"

    # Mag
    install -m755 -d "$pkgdir/opt/$pkgname/Mag/"
    find "Mag/" -type f -not -name '.DS_Store' -print0 | \
        xargs -0 install -m644 -t "$pkgdir/opt/$pkgname/Mag/"

    # Scripts
    install -m755 -d "$pkgdir/opt/$pkgname/Scripts/"
    find "Scripts/" -maxdepth 1 -type f -print0 | \
        xargs -0 install -m644 -t "$pkgdir/opt/$pkgname/Scripts/"

    # Shaders
    install -m755 -d "$pkgdir/opt/$pkgname/Shaders/"
    find "Shaders/" -maxdepth 1 -type f -print0 | \
        xargs -0 install -m644 -t "$pkgdir/opt/$pkgname/Shaders/"

    # Textures
    install -m755 -d "$pkgdir/opt/$pkgname/Textures/"
    find "Textures/" -maxdepth 1 -mindepth 1 -not -name '.DS_Store' -print0 | \
        xargs -0 cp -R -t "$pkgdir/opt/$pkgname/Textures/"

    #
    # System integration
    #

    # /bin
    install -m755 -d "$pkgdir/usr/bin/"
    ln -s "/opt/$pkgname/${pkgname^}.bin.x86" "$pkgdir/usr/bin/$pkgname"

    # License
    #install -m755 -d "$pkgdir/usr/share/licenses/$pkgname/"
    #ln -s "/opt/$pkgname/LICENSE" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"

    # Icon
    install -m755 -d "$pkgdir/usr/share/icons/"
    ln -s "/opt/$pkgname/${pkgname^}.png" "$pkgdir/usr/share/icons/$pkgname.png"

    # .desktop File
    install -m755 -d "$pkgdir/usr/share/applications/"
    install -m644 -t "$pkgdir/usr/share/applications/" "$srcdir/$pkgname.desktop"
}
