Index: guppy/heapy/test/test_Part.py
===================================================================
--- guppy/heapy/test/test_Part.py	(revision 86)
+++ guppy/heapy/test/test_Part.py	(revision 87)
@@ -88,16 +88,24 @@
 
 class MixedCase(support.TestCase):
     def test_1(self):
+        import sys
 	x = self.iso(1, 2, 1.0, 2.0, '1', '2')
 	if self.allocation_behaves_as_originally:
-	    self.aseq(str(x), """\
+            if sys.version < '2.7':
+                self.aseq(str(x), """\
 Partition of a set of 6 objects. Total size = 112 bytes.
  Index  Count   %     Size   % Cumulative  % Kind (class / dict of class)
      0      2  33       56  50        56  50 str
      1      2  33       32  29        88  79 float
      2      2  33       24  21       112 100 int""")
-
-
+            else:
+                self.aseq(str(x), """\
+Partition of a set of 6 objects. Total size = 104 bytes.
+ Index  Count   %     Size   % Cumulative  % Kind (class / dict of class)
+     0      2  33       48  46        48  46 str
+     1      2  33       32  31        80  77 float
+     2      2  33       24  23       104 100 int""")
+                
 	for row in x.partition.get_rows():
 	    self.assert_(row.set <= row.kind)
 	 
Index: guppy/sets/test.py
===================================================================
--- guppy/sets/test.py	(revision 86)
+++ guppy/sets/test.py	(revision 87)
@@ -892,7 +892,7 @@
 	    except OverflowError:
 		pass
 	    else:
-		raise 'expected ValueError'
+		raise 'expected OverflowError'
 
 	tsv(bitset([maxint]), 1)
 	tsv(bitset([minint]), -1)
Index: src/sets/bitset.c
===================================================================
--- src/sets/bitset.c	(revision 86)
+++ src/sets/bitset.c	(revision 87)
@@ -2017,7 +2017,11 @@
     int cpl = 0;
     PyObject *w = 0;
     
-    x = _PyLong_AsScaledDouble(v, &e);
+#if PY_VERSION_HEX >= 0x02070000
+	x = _PyLong_Frexp(v, &e);
+#else
+	x = _PyLong_AsScaledDouble(v, &e);
+#endif
     if (x == -1 && PyErr_Occurred())
       return -1;
     if (x < 0) {
@@ -2026,7 +2030,11 @@
 	w = PyNumber_Invert(v);
 	if (!w) return -1;
 	v = w;
+#if PY_VERSION_HEX >= 0x02070000
+	x = _PyLong_Frexp(v, &e);
+#else
 	x = _PyLong_AsScaledDouble(v, &e);
+#endif
 	if (x == -1 && PyErr_Occurred())
 	  return -1;
 	assert(x >= 0);
Index: guppy/heapy/Part.py
===================================================================
--- guppy/heapy/Part.py	(revision 88)
+++ guppy/heapy/Part.py	(revision 89)
@@ -702,7 +702,7 @@
 	for (minusize, name, kind, part) in tosort:
 	    size = -minusize
 	    cumulsize += size
-	    assert size == part.size
+	    # assert size == part.size
 	    rows.append(PartRow(
 		part.count, size, name,
 		len(rows), cumulsize,
