# Maintainer: Thomas Jost <schnouki@schnouki.net>

# This should be a splitted PKGBUILD, but stupid AUR does not support that yet...
#pkgname=('nvidia-cuda' 'nvidia-cuda-utils')
pkgname='nvidia-cuda'
pkgver=260.24
_kernver='2.6.35-ARCH'
pkgrel=3
pkgdesc="NVIDIA drivers for kernel26 -- version needed for CUDA 3.2."
arch=('i686' 'x86_64')
url="http://www.nvidia.com/"
depends=('kernel26>=2.6.35' 'kernel26<2.6.36')
makedepends=('kernel26-headers>=2.6.35' 'kernel26-headers<2.6.36')
optdepends=('gtk2: nvidia-settings GUI'
            'libxvmc: XvMC support')
provides=("libgl" "nvidia-utils=${pkgver}" "nvidia=${pkgver}")
conflicts=('nvidia-utils' 'nvidia-utils-beta'
           'nvidia' 'nvidia-beta' 'nvidia-96xx' 'nvidia-173xx')
license=('custom')
install=nvidia-common.install

if [[ "$CARCH" == "i686" ]]; then
  _arch='x86'
  _bits=32
  md5sums=('12db5db60e47cd19cf8a59d052574887' '541cb36684b6764ccba73d7afe268bf5')
else
  _arch='x86_64'
  _bits=64
  md5sums=('1ec3fed2751cfa0fd47b36f55bf69d85' '541cb36684b6764ccba73d7afe268bf5')
  optdepends=("${optdepends[@]}"
      'lib32-libxext: 32 bit CUDA support'
      'lib32-zlib: 32 bit CUDA support' 
      'gcc-libs-multilib: 32 bit CUDA support')
  provides=(${provides[@]} 'lib32-libgl' "lib32-nvidia-utils=${pkgver}")
  conflicts=(${conflicts[@]} 'lib32-nvidia-utils' 'lib32-nvidia-utils-beta')
fi
source=("http://developer.download.nvidia.com/compute/cuda/3_2/drivers/devdriver_3.2_linux_${_bits}_${pkgver}.run"
        "20-nvidia.conf")
_pkg="NVIDIA-Linux-${_arch}-${pkgver}"

build() {
  cd $srcdir
  rm -rf ${_pkg}
  sh devdriver_3.2_linux_${_bits}_$pkgver.run --extract-only

  cd ${_pkg}/kernel
  make SYSSRC=/lib/modules/${_kernver}/build module
}

package() {
  cd $srcdir/${_pkg}

  # Driver
  install -Dm644 $srcdir/${_pkg}/kernel/nvidia.ko \
    $pkgdir/lib/modules/${_kernver}/kernel/drivers/video/nvidia.ko
  install -d -m755 $pkgdir/etc/modprobe.d
  echo "blacklist nouveau" >> $pkgdir/etc/modprobe.d/nouveau_blacklist.conf
  sed -i -e "s/KERNEL_VERSION='.*'/KERNEL_VERSION='${_kernver}'/" $startdir/nvidia-common.install

  # Utils
  # Xorg modules
  install -Dm755 nvidia_drv.so $pkgdir/usr/lib/xorg/modules/drivers/nvidia_drv.so
  install -Dm755 libglx.so.$pkgver $pkgdir/usr/lib/xorg/modules/extensions/libglx.so.$pkgver
  ln -s libglx.so.$pkgver $pkgdir/usr/lib/xorg/modules/extensions/libglx.so       # X doesn't find glx otherwise

  # Libraries
  install -Dm644 libXvMCNVIDIA.a $pkgdir/usr/lib/libXvMCNVIDIA.a
  install -Dm755 libOpenCL.so.1.0.0 $pkgdir/usr/lib/libOpenCL.so.1.0.0
  [[ -e 32/libOpenCL.so.1.0.0 ]] && install -Dm755 32/libOpenCL.so.1.0.0 $pkgdir/usr/lib32/libOpenCL.so.1.0.0

  for _lib in cuda GL nvidia-cfg nvidia-compiler nvidia-glcore nvidia-tls nvidia-wfb \
              vdpau_nvidia vdpau_trace XvMCNVIDIA; do
    _libname="lib${_lib}.so.$pkgver"
    install -Dm755 ${_libname} $pkgdir/usr/lib/${_libname}
    [[ -e 32/${_libname} ]] && install -Dm755 32/${_libname} $pkgdir/usr/lib32/${_libname}
  done
  
  for _lib in $(find $pkgdir -name '*.so*'); do
    _soname="$(dirname ${_lib})/$(readelf -d "$_lib" | sed -nr 's/.*Library soname: \[(.*)\].*/\1/p')"
    if [ ! -e "${_soname}" ]; then
      ln -s "$(basename ${_lib})" "${_soname}"
      ln -s "$(basename ${_soname})" "${_soname/.[0-9]*/}"
    fi
  done

  # Headers
  for _hdr in cuda cudaGL cudaVDPAU cuviddec nvcuvid; do
    install -Dm644 ${_hdr}.h $pkgdir/usr/include/cuda/${_hdr}.h
  done
  for _hdr in cl cl_gl cl_platform; do
    install -Dm644 ${_hdr}.h $pkgdir/usr/include/CL/${_hdr}.h
  done

  # Binaries
  install -Dm755 nvidia-xconfig $pkgdir/usr/bin/nvidia-xconfig
  install -Dm755 nvidia-settings $pkgdir/usr/bin/nvidia-settings
  install -Dm755 nvidia-bug-report.sh $pkgdir/usr/bin/nvidia-bug-report.sh
  install -Dm755 nvidia-smi $pkgdir/usr/bin/nvidia-smi

  # Man pages & other doc
  install -Dm644 nvidia-xconfig.1.gz $pkgdir/usr/share/man/man1/nvidia-xconfig.1.gz
  install -Dm644 nvidia-settings.1.gz $pkgdir/usr/share/man/man1/nvidia-settings.1.gz
  install -Dm644 nvidia-smi.1.gz $pkgdir/usr/share/man/man1/nvidia-smi.1.gz
  install -Dm644 LICENSE $pkgdir/usr/share/licenses/nvidia-cuda/LICENSE
  install -Dm644 README.txt $pkgdir/usr/share/doc/nvidia-cuda/README
  install -Dm644 NVIDIA_Changelog $pkgdir/usr/share/doc/nvidia-cuda/NVIDIA_Changelog

  # Icons and desktop files
  install -Dm644 nvidia-settings.desktop $pkgdir/usr/share/applications/nvidia-settings.desktop
  install -Dm644 nvidia-settings.png $pkgdir/usr/share/pixmaps/nvidia-settings.png
  sed -e 's:__UTILS_PATH__:/usr/bin:' -e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' -i $pkgdir/usr/share/applications/nvidia-settings.desktop

  # Configuration files
  install -Dm644 $srcdir/20-nvidia.conf $pkgdir/etc/X11/xorg.conf.d/20-nvidia.conf
  install -Dm644 nvidia.icd $pkgdir/etc/OpenCL/vendors/nvidia.icd
}

# Local Variables:
# pkgbuild-update-sums-on-save: nil
# End:
