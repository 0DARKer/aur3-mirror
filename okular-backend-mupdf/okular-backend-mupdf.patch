diff -bruN mupdf.orig/cmake/modules/FindOpenJPEG.cmake mupdf.patched/cmake/modules/FindOpenJPEG.cmake
--- mupdf.orig/cmake/modules/FindOpenJPEG.cmake	1970-01-01 09:00:00.000000000 +0900
+++ mupdf.patched/cmake/modules/FindOpenJPEG.cmake	2013-07-02 00:09:32.235998747 +0900
@@ -0,0 +1,47 @@
+# - Find OpenJPEG
+# This module can be used to find OpenJPEG include and library.
+#
+# Typical usage could be something like:
+#    find_package( OpenJPEG REQUIRED )
+#    add_executable( myexe main.cpp )
+#    target_link_libraries( myexe ${OPENJPEG_LIBRARIES} )
+#
+# This module defines:
+#
+#    OPENJPEG_INCLUDE_DIR	Path to "openjpeg.h"
+#    OPENJPEG_LIBRARY           Path to the OpenJPEG library
+#
+#    OPENJPEG_FOUND             True if OpenJPEG was found.
+#
+# Author: Mauro Toffanin <toffanin.mauro@gmail.com>
+
+FIND_PATH(OPENJPEG_INCLUDE_DIR openjpeg.h
+	PATH_SUFFIXES include/openjpeg openjpeg-1.0 openjpeg-1.5
+	PATH
+	/Library/Frameworks  # On OS X it's preferable the Framework version (if found) over others
+	~/Library/Frameworks
+	#	/usr
+	#/usr/local
+	/opt
+)
+
+FIND_LIBRARY(OPENJPEG_LIBRARY
+	NAMES openjpeg
+	PATH_SUFFIXES lib libs64 libs/Win32 libs/Win64
+	PATHS
+	/Library/Frameworks  # On OS X it's preferable the Framework version (if found) over others
+	~/Library/Frameworks
+	#/usr
+	#/usr/local
+	/opt
+)
+
+# handle the QUIETLY and REQUIRED arguments and set OPENJPEG_FOUND to TRUE if
+# all listed variables are TRUE
+INCLUDE(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(OpenJPEG DEFAULT_MSG OPENJPEG_LIBRARY OPENJPEG_INCLUDE_DIR)
+
+MARK_AS_ADVANCED(
+	OPENJPEG_LIBRARY
+	OPENJPEG_INCLUDE_DIR
+)
diff -bruN mupdf.orig/CMakeLists-fitz.txt mupdf.patched/CMakeLists-fitz.txt
--- mupdf.orig/CMakeLists-fitz.txt	2013-01-08 21:29:35.788524000 +0900
+++ mupdf.patched/CMakeLists-fitz.txt	2013-07-02 00:28:03.109298713 +0900
@@ -5,7 +5,7 @@
 find_package(ZLIB REQUIRED)
 find_package(Freetype REQUIRED)
 find_package(JPEG REQUIRED)
-find_package(LIBOPENJPEG REQUIRED)
+find_package(OpenJPEG REQUIRED)
 find_package(jbig2dec REQUIRED)
 
 macro(MUPDF_GENERATE_CMAP depends destsource)
@@ -61,7 +61,7 @@
   ${ZLIB_INCLUDE_DIR}
   ${FREETYPE_INCLUDE_DIRS}
   ${JPEG_INCLUDE_DIR}
-  ${LIBOPENJPEG_INCLUDE_DIRS}
+  ${OPENJPEG_INCLUDE_DIR}
   ${JBIG2DEC_INCLUDE_DIRS}
 )
 
@@ -104,6 +104,7 @@
   fitz/dev_null.c
   fitz/dev_text.c
   fitz/dev_trace.c
+  fitz/doc_interactive.c
   fitz/doc_link.c
   fitz/doc_outline.c
   fitz/doc_search.c
@@ -133,6 +134,7 @@
   fitz/stm_buffer.c
   fitz/stm_comp_buf.c
   fitz/stm_open.c
+  fitz/stm_output.c
   fitz/stm_read.c
   pdf/pdf_annot.c
   pdf/pdf_cmap.c
@@ -141,6 +143,7 @@
   pdf/pdf_cmap_table.c
   pdf/pdf_colorspace.c
   pdf/pdf_crypt.c
+  pdf/pdf_device.c
   pdf/pdf_encoding.c
   pdf/pdf_event.c
   pdf/pdf_font.c
@@ -166,8 +169,8 @@
   pdf/pdf_unicode.c
   pdf/pdf_write.c
   pdf/pdf_xobject.c
-  pdf/pdf_xref_aux.c
   pdf/pdf_xref.c
+  pdf/pdf_xref_aux.c
   ${extra_sources}
 )
 mupdf_generate_cmap_glob(mupdf_DEPS cmap_cns.h cmaps/cns/*)
@@ -180,7 +183,7 @@
 add_custom_target(depsources DEPENDS ${mupdf_DEPS})
 
 add_library(mupdf-okular SHARED ${mupdf_SRCS})
-target_link_libraries(mupdf-okular ${ZLIB_LIBRARIES} ${FREETYPE_LIBRARIES} ${JPEG_LIBRARIES} ${LIBOPENJPEG_LIBRARIES} ${JBIG2DEC_LIBRARIES} ${extra_libraries})
+target_link_libraries(mupdf-okular ${ZLIB_LIBRARIES} ${FREETYPE_LIBRARIES} ${JPEG_LIBRARIES} ${OPENJPEG_LIBRARY} ${JBIG2DEC_LIBRARIES} ${extra_libraries})
 if (NOT MSVC)
   target_link_libraries(mupdf-okular m)
 endif (NOT MSVC)
diff -bruN mupdf.orig/get-mupdf.sh mupdf.patched/get-mupdf.sh
--- mupdf.orig/get-mupdf.sh	2012-12-12 20:55:24.974995000 +0900
+++ mupdf.patched/get-mupdf.sh	2013-07-02 00:49:25.872593515 +0900
@@ -1,13 +1,14 @@
 #!/bin/sh
-if [ -d mupdf/.git ]; then
-  (cd mupdf ; git pull)
-else
-  git clone git://git.ghostscript.com/mupdf.git
+
+if [ ! -d mupdf ]; then
+  curl -o mupdf-source.zip http://mupdf.googlecode.com/files/mupdf-1.2-source.zip
+  unzip mupdf-source.zip
+  mv mupdf-1.2-source mupdf
 fi
 if [ ! -L mupdf/CMakeLists.txt ]; then
-  ln -s ../CMakeLists-fitz.txt mupdf/CMakeLists.txt
+  ln -s CMakeLists-fitz.txt mupdf/CMakeLists.txt
 fi
 if [ ! -L mupdf/cmake ]; then
-  ln -s ../cmake mupdf/
+  ln -s cmake mupdf/cmake
 fi
 
Binary files mupdf.orig/mupdf-source.zip and mupdf.patched/mupdf-source.zip differ
diff -bruN mupdf.orig/qmupdf.cpp mupdf.patched/qmupdf.cpp
--- mupdf.orig/qmupdf.cpp	2012-12-12 23:20:58.245276000 +0900
+++ mupdf.patched/qmupdf.cpp	2013-07-01 23:59:13.342684005 +0900
@@ -334,7 +334,8 @@
 
 QSizeF Page::size() const
 {
-    return convert_fz_rect(pdf_bound_page(d->doc->xref, d->page)).size();
+	fz_rect rect;
+	return convert_fz_rect(*pdf_bound_page(d->doc->xref, d->page, &rect)).size();
 }
 
 qreal Page::duration() const
@@ -348,15 +349,15 @@
 {
     const QSizeF s = size();
 
-    fz_matrix ctm;
+	fz_matrix ctm, tmp;
     ctm = fz_identity;
-    ctm = fz_concat(ctm, fz_scale(width / s.width(), height / s.height()));
+	fz_concat(&ctm, &ctm, fz_scale(&tmp, width / s.width(), height / s.height()));
 
     fz_cookie cookie = { 0, 0, 0, 0 };
     fz_pixmap *image = fz_new_pixmap(d->doc->ctxt, fz_device_rgb, width, height);
     fz_clear_pixmap_with_value(d->doc->ctxt, image, 0xff);
     fz_device *device = fz_new_draw_device(d->doc->ctxt, image);
-    pdf_run_page(d->doc->xref, d->page, device, ctm, &cookie);
+	pdf_run_page(d->doc->xref, d->page, device, &ctm, &cookie);
     fz_free_device(device);
 
     QImage img;
@@ -374,10 +375,11 @@
     fz_matrix ctm;
     ctm = fz_identity;
     fz_cookie cookie = { 0, 0, 0, 0 };
-    fz_text_page *page = fz_new_text_page(d->doc->ctxt, pdf_bound_page(d->doc->xref, d->page));
+	fz_rect rect;
+	fz_text_page *page = fz_new_text_page(d->doc->ctxt, pdf_bound_page(d->doc->xref, d->page, &rect));
     fz_text_sheet *sheet = fz_new_text_sheet(d->doc->ctxt);
     fz_device *device = fz_new_text_device(d->doc->ctxt, sheet, page);
-    pdf_run_page(d->doc->xref, d->page, device, ctm, &cookie);
+	pdf_run_page(d->doc->xref, d->page, device, &ctm, &cookie);
     fz_free_device(device);
     if (cookie.errors) {
         fz_free_text_page(d->doc->ctxt, page);
