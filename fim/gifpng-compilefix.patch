Index: src/FbiStuffGif.cpp
===================================================================
--- src/FbiStuffGif.cpp	(revision 587)
+++ src/FbiStuffGif.cpp	(working copy)
@@ -37,6 +37,16 @@
 {
 
 
+static void
+printgiferror(int ErrCode)
+{
+    char *Err = GifErrorString(ErrCode);
+    if (Err)
+	fprintf(stderr, "\nGIF-LIB error: %s.\n", Err);
+    else
+	fprintf(stderr, "\nGIF-LIB undefined error %d.\n", ErrCode);
+}
+
 struct gif_state {
     FILE         *infile;
     GifFileType  *gif;
@@ -57,7 +67,7 @@
 	if (GIF_ERROR == DGifGetRecordType(h->gif,&RecordType)) {
 	    if (FbiStuff::fim_filereading_debug())
 		FIM_FBI_PRINTF("gif: DGifGetRecordType failed\n");
-	    PrintGifError();
+	    printgiferror(h->gif->Error);
 	    return (GifRecordType)-1;
 	}
 	switch (RecordType) {
@@ -74,7 +84,7 @@
 		if (rc == GIF_ERROR) {
 		    if (FbiStuff::fim_filereading_debug())
 			FIM_FBI_PRINTF("gif: DGifGetExtension failed\n");
-		    PrintGifError();
+		    printgiferror(h->gif->Error);
 		    return (GifRecordType)-1;
 		}
 		if (FbiStuff::fim_filereading_debug()) {
@@ -131,7 +141,7 @@
     fim_bzero(h,sizeof(*h));
 
     h->infile = fp;
-    h->gif = DGifOpenFileHandle(fileno(fp));
+    h->gif = DGifOpenFileHandle(fileno(fp), NULL);
     if(!h->gif)goto oops; /* opening gifs from stdin seems to cause DGifOpenFileHandle=NULL */
     h->row = (GifPixelType*)fim_malloc(h->gif->SWidth * sizeof(GifPixelType));
     if(!h->row)goto oops;
@@ -143,7 +153,7 @@
 	    if (GIF_ERROR == DGifGetImageDesc(h->gif)) {
 		if (FbiStuff::fim_filereading_debug())
 		    FIM_FBI_PRINTF("gif: DGifGetImageDesc failed\n");
-		PrintGifError();
+		printgiferror(h->gif->Error);
 	    }
 	    if (NULL == h->gif->SColorMap &&
 		NULL == h->gif->Image.ColorMap) {
Index: src/FbiStuffPng.cpp
===================================================================
--- src/FbiStuffPng.cpp	(revision 587)
+++ src/FbiStuffPng.cpp	(working copy)
@@ -97,7 +97,7 @@
 	goto oops;
 
     fim_png_fp=fp;
-    h->png->read_data_fn=&fim_png_rw_ptr;
+    png_set_read_fn(h->png, png_get_io_ptr(h->png), &fim_png_rw_ptr);
     png_init_io(h->png, h->infile);
     png_read_info(h->png, h->info);
     png_get_IHDR(h->png, h->info, &h->w, &h->h,
