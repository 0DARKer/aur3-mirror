diff -ru sources.bak/configure sources/configure
--- sources.bak/configure	2011-10-24 10:54:05.231857726 +0200
+++ sources/configure	2011-10-24 10:54:42.516955556 +0200
@@ -17552,13 +17552,13 @@
 
 
 # Boost.Regex
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lboost_regex-mt" >&5
-$as_echo_n "checking for main in -lboost_regex-mt... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lboost_regex" >&5
+$as_echo_n "checking for main in -lboost_regex... " >&6; }
 if test "${ac_cv_lib_boost_regex_mt_main+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lboost_regex-mt  $LIBS"
+LIBS="-lboost_regex  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -17583,7 +17583,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_boost_regex_mt_main" >&5
 $as_echo "$ac_cv_lib_boost_regex_mt_main" >&6; }
 if test "x$ac_cv_lib_boost_regex_mt_main" = x""yes; then :
-  REGEX_LIBS='-lboost_regex-mt'
+  REGEX_LIBS='-lboost_regex'
 else
   as_fn_error $? "Boost.Regex not found" "$LINENO" 5
 fi
@@ -17591,13 +17591,13 @@
 
 
 # Boost.Filesystem
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lboost_filesystem-mt" >&5
-$as_echo_n "checking for main in -lboost_filesystem-mt... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lboost_filesystem" >&5
+$as_echo_n "checking for main in -lboost_filesystem... " >&6; }
 if test "${ac_cv_lib_boost_filesystem_mt_main+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lboost_filesystem-mt  $LIBS"
+LIBS="-lboost_filesystem  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -17622,7 +17622,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_boost_filesystem_mt_main" >&5
 $as_echo "$ac_cv_lib_boost_filesystem_mt_main" >&6; }
 if test "x$ac_cv_lib_boost_filesystem_mt_main" = x""yes; then :
-  BOOST_FILESYSTEM_LIBS='-lboost_filesystem-mt'
+  BOOST_FILESYSTEM_LIBS='-lboost_filesystem'
 else
   as_fn_error $? "Boost.Filesystem not found" "$LINENO" 5
 fi
@@ -17630,13 +17630,13 @@
 
 
 # Boost.System
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lboost_system-mt" >&5
-$as_echo_n "checking for main in -lboost_system-mt... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lboost_system" >&5
+$as_echo_n "checking for main in -lboost_system... " >&6; }
 if test "${ac_cv_lib_boost_system_mt_main+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lboost_system-mt  $LIBS"
+LIBS="-lboost_system  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -17661,7 +17661,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_boost_system_mt_main" >&5
 $as_echo "$ac_cv_lib_boost_system_mt_main" >&6; }
 if test "x$ac_cv_lib_boost_system_mt_main" = x""yes; then :
-  BOOST_SYSTEM_LIBS='-lboost_system-mt'
+  BOOST_SYSTEM_LIBS='-lboost_system'
 else
   as_fn_error $? "Boost.System not found" "$LINENO" 5
 fi
@@ -17764,17 +17764,17 @@
 fi
 
 
-    # Also check boost_python-mt since apparently it seems to randomly change on
+    # Also check boost_python since apparently it seems to randomly change on
     # different Ubuntu distributions.
     if test -z "$BOOST_PYTHON_LIBS"
     then
-        { $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lboost_python-mt" >&5
-$as_echo_n "checking for main in -lboost_python-mt... " >&6; }
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lboost_python" >&5
+$as_echo_n "checking for main in -lboost_python... " >&6; }
 if test "${ac_cv_lib_boost_python_mt_main+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lboost_python-mt  $LIBS"
+LIBS="-lboost_python  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -17799,7 +17799,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_boost_python_mt_main" >&5
 $as_echo "$ac_cv_lib_boost_python_mt_main" >&6; }
 if test "x$ac_cv_lib_boost_python_mt_main" = x""yes; then :
-  BOOST_PYTHON_LIBS='-lboost_python-mt'
+  BOOST_PYTHON_LIBS='-lboost_python'
 else
   script_module=''
 fi
diff -ru sources.bak/configure.ac sources/configure.ac
--- sources.bak/configure.ac	2011-10-24 10:54:05.205192181 +0200
+++ sources/configure.ac	2011-10-24 10:54:42.520288749 +0200
@@ -100,20 +100,20 @@
 AC_SUBST([GLU_LIBS])
 
 # Boost.Regex
-AC_CHECK_LIB([boost_regex-mt], [main],
-             [REGEX_LIBS='-lboost_regex-mt'],
+AC_CHECK_LIB([boost_regex], [main],
+             [REGEX_LIBS='-lboost_regex'],
              [AC_MSG_ERROR([Boost.Regex not found])])
 AC_SUBST([REGEX_LIBS])
 
 # Boost.Filesystem
-AC_CHECK_LIB([boost_filesystem-mt], [main],
-             [BOOST_FILESYSTEM_LIBS='-lboost_filesystem-mt'],
+AC_CHECK_LIB([boost_filesystem], [main],
+             [BOOST_FILESYSTEM_LIBS='-lboost_filesystem'],
              [AC_MSG_ERROR([Boost.Filesystem not found])])
 AC_SUBST([BOOST_FILESYSTEM_LIBS])
 
 # Boost.System
-AC_CHECK_LIB([boost_system-mt], [main],
-             [BOOST_SYSTEM_LIBS='-lboost_system-mt'],
+AC_CHECK_LIB([boost_system], [main],
+             [BOOST_SYSTEM_LIBS='-lboost_system'],
              [AC_MSG_ERROR([Boost.System not found])])
 AC_SUBST([BOOST_SYSTEM_LIBS])
 
@@ -136,12 +136,12 @@
                  [BOOST_PYTHON_LIBS='-lboost_python'],
                  [])
 
-    # Also check boost_python-mt since apparently it seems to randomly change on
+    # Also check boost_python since apparently it seems to randomly change on
     # different Ubuntu distributions.
     if test -z "$BOOST_PYTHON_LIBS"
     then
-        AC_CHECK_LIB([boost_python-mt], [main],
-                     [BOOST_PYTHON_LIBS='-lboost_python-mt'],
+        AC_CHECK_LIB([boost_python], [main],
+                     [BOOST_PYTHON_LIBS='-lboost_python'],
                      [script_module=''])
     fi
 
diff -ru sources.bak/plugins/dm.conversation/CommandArgumentItem.cpp sources/plugins/dm.conversation/CommandArgumentItem.cpp
--- sources.bak/plugins/dm.conversation/CommandArgumentItem.cpp	2011-10-24 10:54:05.221858145 +0200
+++ sources/plugins/dm.conversation/CommandArgumentItem.cpp	2011-10-24 10:54:42.510289170 +0200
@@ -99,7 +99,7 @@
 	_actorStore(actorStore)
 {
 	// Cast the helper class onto a ListStore and create a new treeview
-	_comboBox = Gtk::manage(new Gtk::ComboBox(_actorStore));
+	_comboBox = Gtk::manage(new Gtk::ComboBox(Glib::RefPtr<Gtk::TreeModel>(_actorStore)));
 
 	// Add the cellrenderer for the name
 	Gtk::CellRendererText* nameRenderer = Gtk::manage(new Gtk::CellRendererText);
diff -ru sources.bak/plugins/dm.conversation/CommandEditor.cpp sources/plugins/dm.conversation/CommandEditor.cpp
--- sources.bak/plugins/dm.conversation/CommandEditor.cpp	2011-10-24 10:54:05.221858145 +0200
+++ sources/plugins/dm.conversation/CommandEditor.cpp	2011-10-24 10:54:42.510289170 +0200
@@ -188,7 +188,7 @@
 		false, false, 0);
 
 	// Create the actor dropdown box
-	_actorDropDown = Gtk::manage(new Gtk::ComboBox(_actorStore));
+	_actorDropDown = Gtk::manage(new Gtk::ComboBox(Glib::RefPtr<Gtk::TreeModel>(_actorStore)));
 
 	// Add the cellrenderer for the name
 	Gtk::CellRendererText* nameRenderer = Gtk::manage(new Gtk::CellRendererText);
@@ -203,7 +203,7 @@
 		*Gtk::manage(new gtkutil::LeftAlignedLabel(std::string("<b>") + _("Command") + "</b>")),
 		false, false, 0);
 
-	_commandDropDown = Gtk::manage(new Gtk::ComboBox(_commandStore));
+	_commandDropDown = Gtk::manage(new Gtk::ComboBox(Glib::RefPtr<Gtk::TreeModel>(_commandStore)));
 
 	// Connect the signal to get notified of further changes
 	_commandDropDown->signal_changed().connect(sigc::mem_fun(*this, &CommandEditor::onCommandTypeChange));
diff -ru sources.bak/plugins/dm.difficulty/DifficultyEditor.cpp sources/plugins/dm.difficulty/DifficultyEditor.cpp
--- sources.bak/plugins/dm.difficulty/DifficultyEditor.cpp	2011-10-24 10:54:05.211858566 +0200
+++ sources/plugins/dm.difficulty/DifficultyEditor.cpp	2011-10-24 10:54:42.513622363 +0200
@@ -184,7 +184,7 @@
 	Gtk::Label* argumentLabel = Gtk::manage(new gtkutil::LeftAlignedLabel(_("Argument:")));
 
 	// The appType chooser
-	_appTypeCombo = Gtk::manage(new Gtk::ComboBox(difficulty::Setting::getAppTypeStore()));
+	_appTypeCombo = Gtk::manage(new Gtk::ComboBox(Glib::RefPtr<Gtk::TreeModel>(difficulty::Setting::getAppTypeStore())));
 	_appTypeCombo->signal_changed().connect(sigc::mem_fun(*this, &DifficultyEditor::onAppTypeChange));
 
 	// Add the cellrenderer for the apptype text
diff -ru sources.bak/plugins/dm.stimresponse/ClassEditor.cpp sources/plugins/dm.stimresponse/ClassEditor.cpp
--- sources.bak/plugins/dm.stimresponse/ClassEditor.cpp	2011-10-24 10:54:05.215191758 +0200
+++ sources/plugins/dm.stimresponse/ClassEditor.cpp	2011-10-24 10:54:42.513622363 +0200
@@ -153,7 +153,7 @@
 	widgets.label = Gtk::manage(new gtkutil::LeftAlignedLabel(_("Type:")));
 
 	// Cast the helper class onto a ListStore and create a new treeview
-	widgets.list = Gtk::manage(new Gtk::ComboBox(_stimTypes.getListStore()));
+	widgets.list = Gtk::manage(new Gtk::ComboBox(Glib::RefPtr<Gtk::TreeModel>(_stimTypes.getListStore())));
 	widgets.list->set_size_request(-1, -1);
 
 	// Add the cellrenderer for the name
diff -ru sources.bak/plugins/dm.stimresponse/EffectArgumentItem.cpp sources/plugins/dm.stimresponse/EffectArgumentItem.cpp
--- sources.bak/plugins/dm.stimresponse/EffectArgumentItem.cpp	2011-10-24 10:54:05.215191758 +0200
+++ sources/plugins/dm.stimresponse/EffectArgumentItem.cpp	2011-10-24 10:54:42.513622363 +0200
@@ -139,7 +139,7 @@
 	_stimTypes(stimTypes)
 {
 	// Cast the helper class onto a ListStore and create a new treeview
-	_comboBox = Gtk::manage(new Gtk::ComboBox(_stimTypes.getListStore()));
+	_comboBox = Gtk::manage(new Gtk::ComboBox(Glib::RefPtr<Gtk::TreeModel>(_stimTypes.getListStore())));
 
 	// Add the cellrenderer for the name
 	Gtk::CellRendererText* nameRenderer = Gtk::manage(new Gtk::CellRendererText);
diff -ru sources.bak/plugins/dm.stimresponse/EffectEditor.cpp sources/plugins/dm.stimresponse/EffectEditor.cpp
--- sources.bak/plugins/dm.stimresponse/EffectEditor.cpp	2011-10-24 10:54:05.215191758 +0200
+++ sources/plugins/dm.stimresponse/EffectEditor.cpp	2011-10-24 10:54:42.513622363 +0200
@@ -105,7 +105,7 @@
 
 	Gtk::HBox* effectHBox = Gtk::manage(new Gtk::HBox(false, 0));
 
-	_effectTypeCombo = Gtk::manage(new Gtk::ComboBox(_effectStore));
+	_effectTypeCombo = Gtk::manage(new Gtk::ComboBox(Glib::RefPtr<Gtk::TreeModel>(_effectStore)));
 
 	// Add the cellrenderer for the caption
 	Gtk::CellRendererText* captionRenderer = Gtk::manage(new Gtk::CellRendererText);
diff -ru sources.bak/plugins/particles/ParticleRenderInfo.h sources/plugins/particles/ParticleRenderInfo.h
--- sources.bak/plugins/particles/ParticleRenderInfo.h	2011-10-24 10:54:05.215191758 +0200
+++ sources/plugins/particles/ParticleRenderInfo.h	2011-10-24 10:55:29.184989961 +0200
@@ -59,11 +59,11 @@
 		tWidth(1)
 	{
 		// Generate five random numbers for path calcs, this is needed in calculateOrigin
-		rand[0] = static_cast<float>(random()) / boost::rand48::max_value;
-		rand[1] = static_cast<float>(random()) / boost::rand48::max_value;
-		rand[2] = static_cast<float>(random()) / boost::rand48::max_value;
-		rand[3] = static_cast<float>(random()) / boost::rand48::max_value;
-		rand[4] = static_cast<float>(random()) / boost::rand48::max_value;
+		rand[0] = static_cast<float>(random()) / boost::rand48::max();
+		rand[1] = static_cast<float>(random()) / boost::rand48::max();
+		rand[2] = static_cast<float>(random()) / boost::rand48::max();
+		rand[3] = static_cast<float>(random()) / boost::rand48::max();
+		rand[4] = static_cast<float>(random()) / boost::rand48::max();
 	}
 };
 
diff -ru sources.bak/plugins/particles/RenderableParticleBunch.cpp sources/plugins/particles/RenderableParticleBunch.cpp
--- sources.bak/plugins/particles/RenderableParticleBunch.cpp	2011-10-24 10:54:05.215191758 +0200
+++ sources/plugins/particles/RenderableParticleBunch.cpp	2011-10-24 10:55:02.159461825 +0200
@@ -76,7 +76,7 @@
 		if (particle.angle == 0)
 		{
 			// Use random angle
-			particle.angle = 360 * static_cast<float>(_random()) / boost::rand48::max_value;
+			particle.angle = 360 * static_cast<float>(_random()) / boost::rand48::max();
 		}
 
 		// Past this point, no more "randomness" is required, so let's check if we still need
