# Contributor: Abdallah Aly  < l3thal8 @gmail.com>
# Contributor: Maik Beckmann < Beckmann.Maik @googlemail.com>
pkgname=falcon-svn
pkgver=1301
pkgrel=1
pkgdesc="an Open Source, simple, fast and powerful programming language"
license=('custom:"GPLv2 or Falcon Programming Language License"')
url="http://www.falconpl.org"
arch=(i686 x86_64)
makedepends=('cmake' 'subversion')
depends=('zlib' 'pcre' 'readline')
provides=('falcon')
conflicts=('falcon-beta' 'falcon-bin' 'falcon')

_svntrunk=svn://falconpl.org/falcon/core/trunk/
_svnmod=core

_svntrunk_modules=svn://falconpl.org/falcon/modules/feathers/trunk/
_svnmod_modules=modules/feathers

_svntrunk_docs=svn://falconpl.org/falcon/docs/trunk/
_svnmod_docs=docs

build() {

  cd "$srcdir"
  if [ -d falcon ] ; then
  rm -r falcon || return 1
  fi
  mkdir falcon || retuen 1
  cd falcon

#########################
#     Get SVN repos	#
#########################

  cd $srcdir/falcon
  if [ -d $_svnmod/.svn ]; then
    msg "updating core from svn"
    (cd $_svnmod && svn up)
  else
    msg "getting core from svn"
    svn co $_svntrunk --config-dir ./  $_svnmod
  fi

  cd $srcdir/falcon
  if [ -d $_svnmod_modules/.svn ]; then
    msg "updating modules/feathers from svn"
    (cd $_svnmod_modules && svn up )
  else
    msg "getting modules/feathers from svn"
    svn co $_svntrunk_modules --config-dir ./  $_svnmod_modules
  fi

  cd $srcdir/falcon
  if [ -d $_svnmod_docs/.svn ]; then
    msg "updating docs from svn"
    (cd $_svnmod_docs && svn up )
  else
    msg "getting docs from svn"
    svn co $_svntrunk_docs --config-dir ./  $_svnmod_docs
  fi


  msg "SVN checkout done or server timeout"
  msg "Starting make..."

  # Build type: Debug, RelWithDebInfo, Release or MinSizeRel
  build_type=Release


##############################
#     Building the repos     #
##############################

  cd $srcdir
  if [ -d build-core ] ; then
  rm -rf build-core || return 1
  fi
  mkdir build-core || return 1
  cd build-core
  msg "building Falcon core"
  cmake -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=$build_type \
    -DFALCON_WITHOUT_READLINE=off \
     -DFALCON_WITH_GPL_READLINE=on \
    $srcdir/falcon/core || return 1

  make DESTDIR=$pkgdir install || return 1


  # As core isn't installed to /usr yet, we have to show remaining
  # builds where to find it: 
  export CMAKE_PREFIX_PATH=$pkgdir/usr

  cd $srcdir
  if [ -d build-feathers ] ; then
  rm -rf build-feathers || return 1
  fi
  mkdir build-feathers || retuen 1
  cd build-feathers
  msg "building Falcon feather modules"
  cmake -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=$build_type \
    $srcdir/falcon/modules/feathers || return 1

  make DESTDIR=$pkgdir install || return 1

  cd $srcdir
  if [ -d build-docs ] ; then
  rm -rf build-docs || return 1
  fi
  mkdir build-docs || return 1
  cd build-docs
  msg "building Falcon docs"
  cmake -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_BUILD_TYPE=$build_type \
  $srcdir/falcon/docs/manpages/man1 || return 1

  make DESTDIR=$pkgdir install || return 1

####################
#     Clean up     #
####################

cd $srcdir/falcon
rm -rf $srcdir/falcon/devel || return 1
 

##########################
#     Falcon license     #
##########################

mkdir -p $startdir/pkg/usr/share/licenses/falcon || return 1
cp $_svnmod/LICENSE $startdir/pkg/usr/share/licenses/falcon || return 1

}
