--- applet.js.old	2012-08-02 13:52:07.000000000 +0200
+++ applet.js	2012-09-09 17:29:21.198556633 +0200
@@ -90,10 +90,16 @@
 }
 
 function init(metadata) {
-    let schemaSource = Gio.SettingsSchemaSource.new_from_directory(metadata.path,
-	    Gio.SettingsSchemaSource.get_default(), false);
-    let schema = schemaSource.lookup('org.cinnamon.applets.system-monitor', false);
-    Schema = new Gio.Settings({ settings_schema: schema });
+	const LIST_SCHEMAS = "org.cinnamon.applets.system-monitor";
+	if (Gio.Settings.list_schemas().indexOf(LIST_SCHEMAS) != -1)
+		{ GOOD_SCHEMA = LIST_SCHEMAS;}
+	else
+		{
+		 let schemaSource = Gio.SettingsSchemaSource.new_from_directory(metadata.path,
+			Gio.SettingsSchemaSource.get_default(), false);
+		 let GOOD_SCHEMA = schemaSource.lookup(LIST_SCHEMAS, false);
+		}
+	Schema = new Gio.Settings({schema: GOOD_SCHEMA});
     
     Background = new Clutter.Color();
     Background.from_string(Schema.get_string('background'));
@@ -373,17 +379,7 @@
     },
 
     get_cores: function(){
-        // Getting xcpu_total makes gjs 1.29.18 segfault
-        // works with gjs 1.32.0 on fedora 17
-        let cores = 0;
-        GTop.glibtop_get_cpu(this.gtop);
-        let gtop_total = this.gtop.xcpu_total
-        for (let i = 0; i < gtop_total.length;i++){
-            if (gtop_total[i] > 0)
-                cores++;
-        }
-        return cores;
-        //return 1;
+        return 1;
     },
     create_text_items: function() {
         return [new St.Label({ style_class: "sm-status-value"}),
@@ -1055,7 +1051,7 @@
 
             item = new PopupMenu.PopupMenuItem(_("Preferences"));
             item.connect('activate', function () {
-                GLib.spawn_command_line_async('python ' + metadata.path + '/config.py');
+                GLib.spawn_command_line_async('python2 ' + metadata.path + '/config.py');
             });
             this.menu.addMenuItem(item);
 
@@ -1112,4 +1108,3 @@
     let myApplet = new MyApplet(metadata, orientation);
     return myApplet;
 }
-
