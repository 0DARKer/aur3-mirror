commit a8c9fe1ae3d7d90f0d5f0cd6b81a58f25b429255
Author: Bertram Felgenhauer <int-e@gmx.de>
Date:   Fri May 16 22:45:20 2008 +0200

    tune bfd hash to use less memory. it's still fast.

diff --git a/bfd/hash.c b/bfd/hash.c
index 5edccac..90b5069 100644
--- a/bfd/hash.c
+++ b/bfd/hash.c
@@ -299,7 +299,7 @@ SUBSUBSECTION
 */
 
 /* The default number of entries to use when creating a hash table.  */
-#define DEFAULT_SIZE 4051
+#define DEFAULT_SIZE 31
 
 /* The following function returns a nearest prime number which is
    greater than N, and near a power of two.  Copied from libiberty.
@@ -311,8 +311,16 @@ higher_prime_number (unsigned long n)
   /* These are primes that are near, but slightly smaller than, a
      power of two.  */
   static const unsigned long primes[] = {
+    (unsigned long) 31,
+    (unsigned long) 61,
     (unsigned long) 127,
+    (unsigned long) 251,
+    (unsigned long) 509,
+    (unsigned long) 1021,
     (unsigned long) 2039,
+    (unsigned long) 4093,
+    (unsigned long) 8191,
+    (unsigned long) 16381,
     (unsigned long) 32749,
     (unsigned long) 65521,
     (unsigned long) 131071,
@@ -593,7 +601,7 @@ bfd_hash_set_default_size (bfd_size_type hash_size)
   /* Extend this prime list if you want more granularity of hash table size.  */
   static const bfd_size_type hash_size_primes[] =
     {
-      251, 509, 1021, 2039, 4051, 8599, 16699, 32749
+      31, 61, 127, 251, 509, 1021, 2039, 4091, 8191, 16381, 32749
     };
   size_t index;
 
