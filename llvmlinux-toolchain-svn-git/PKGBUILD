# Maintainer: Jens Staal <staal1978@gmail.com>

pkgname=llvmlinux-toolchain-svn-git
pkgver=20120708
pkgrel=1
pkgdesc="a bundle of LLVM, libc++, compiler-rt and clang patched to compile Linux"
url="http://llvm.linuxfoundation.org/index.php/Main_Page"
arch=('x86_64')
license=('UIUC' 'MIT')
depends=('libc++-svn')
makedepends=('subversion' 'git' 'cmake' 'python2' 'libffi' 'clang')
provides=('llvm' 'compiler-rt' 'clang')
replaces=('llvm' 'clang')
conflicts=('llvm' 'clang')

#this checkout contain LLVM-specific patches
_llvm_gitroot=('http://git.linuxfoundation.org/llvm-setup.git')
_llvm_gitname=('llvm-setup')

build(){
    cd ${srcdir}
    
    msg "checking out LLVM-specific linux patches and config(s)"
    if [ -d $_llvm_gitname ] ; then
	cd $_llvm_gitname && git pull $_llvm_gitroot
	msg2 "The local files are updated."
    else
	git clone $_llvm_gitroot $_llvm_gitname
    fi
	msg2 "done"
    
    msg "setting up llvm source code tree"
    if [ -d llvm-svn/.svn ]; then
	(cd llvm-svn && svn up)
    else
      svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm-svn
    fi
    msg2 "done"
    
    msg "setting up clang source code tree"
    cd ${srcdir}/llvm-svn/tools
    if [ -d clang/.svn ]; then
	(cd clang && svn up)
    else
      svn co http://llvm.org/svn/llvm-project/cfe/trunk clang
    fi
    msg2 "done"
        
    cd $srcdir/llvm-svn/projects
    msg "setting up compiler-rt sources"
    if [ -d compiler-rt/.svn ]; then
        (cd compiler-rt && svn up)
    else
        svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt
    fi

    msg "SVN checkout done or server timeout"
    
    msg "setting up build directory sources and patching"
    rm -rf ${srcdir}/llvm #start fresh
    cp -ar ${srcdir}/llvm-svn ${srcdir}/llvm
    msg2 "patching..."
    cd ${srcdir}
    _patchdir="${srcdir}/llvm-setup/toolchain/clang/patches"
    for i in ${_patchdir}/*.patch; do
      msg "applying $i"
      patch -p1 < ${i}
    done
    msg2 "done"
    
    msg "setting up clang as default compiler"
    export CC=clang
    export CXX="clang++ -stdlib=libc++" 
    CFLAGS="$CFLAGS -I${srcdir}/llvm/include"
    
    # Use Python 2
    rm -rf  "$srcdir/python2-path" # start fresh
    mkdir -p "$srcdir/python2-path"
    ln -s /usr/bin/python2 "$srcdir/python2-path/python"
    export PATH="$srcdir/python2-path:$PATH"
    CMAKE_INCLUDE_PATH="$CMAKE_INCLUDE_PATH"
    
  
    msg "Starting make..."
    
    rm -rf ${srcdir}/build # start fresh
    mkdir ${srcdir}/build
    cd ${srcdir}/build
    ../llvm/configure \
    --prefix=/usr \
    --libdir=/usr/lib/llvm \
    --sysconfdir=/etc \
    --enable-shared \
    --enable-libffi \
    --enable-targets=all \
    --disable-expensive-checks \
    --disable-debug-runtime \
    --disable-assertions \
    --with-binutils-include=/usr/include
    
    make || return 1
    make DESTDIR=${pkgdir} install || return 1 
   
}