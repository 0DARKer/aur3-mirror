# Maintainer: Jens Staal <staal1978@gmail.com>

pkgname=llvmlinux-toolchain-svn-git
pkgver=20120708
pkgrel=1
pkgdesc="a bundle of LLVM, compiler-rt and clang patched to compile Linux"
url="http://llvm.linuxfoundation.org/index.php/Main_Page"
arch=('x86_64')
license=('UIUC' 'MIT')
depends=('libc++-svn')
makedepends=('subversion' 'git' 'cmake' 'python2' 'libffi') #I want to add clang here...
provides=('llvm' 'compiler-rt' 'clang' 'llvm-ocaml')
replaces=('llvm' 'clang' 'llvm-ocaml')
conflicts=('llvm' 'clang' 'llvm-ocaml')

#this checkout contain LLVM-specific patches
_llvm_gitroot=('http://git.linuxfoundation.org/llvm-setup.git')
_llvm_gitname=('llvm-setup')

build(){
    cd ${srcdir}
    
    msg "checking out LLVM-specific linux patches and config(s)"
    if [ -d $_llvm_gitname ] ; then
	cd $_llvm_gitname && git pull $_llvm_gitroot
	msg2 "The local files are updated."
    else
	git clone $_llvm_gitroot $_llvm_gitname
    fi
	msg2 "done"
    
    msg "setting up llvm source code tree"
    if [ -d llvm-svn/.svn ]; then
	(cd llvm-svn && svn up)
    else
      svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm-svn
    fi
    msg2 "done"
    
    msg "setting up clang source code tree"
    cd ${srcdir}/llvm-svn/tools
    if [ -d clang/.svn ]; then
	(cd clang && svn up)
    else
      svn co http://llvm.org/svn/llvm-project/cfe/trunk clang
    fi
    msg2 "done"
        
    cd $srcdir/llvm-svn/projects
    msg "setting up compiler-rt sources"
    if [ -d compiler-rt/.svn ]; then
        (cd compiler-rt && svn up)
    else
        svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt
    fi

    msg "SVN checkout done or server timeout"
    
    msg "setting up build directory sources and patching"
    rm -rf ${srcdir}/llvm #start fresh
    cp -ar ${srcdir}/llvm-svn ${srcdir}/llvm
    cd ${srcdir}/llvm
    msg2 "Arch package-derived sed -driven modifications"
    # Fix installation directories, ./configure doesn't seem to set them right
    sed -i -e 's:\$(PROJ_prefix)/etc/llvm:/etc/llvm:' \
         -e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib/llvm:' \
         -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    Makefile.config.in
    sed -i '/ActiveLibDir = ActivePrefix/s:lib:lib/llvm:' \
    tools/llvm-config/llvm-config.cpp
    sed -i 's:LLVM_LIBDIR="${prefix}/lib":LLVM_LIBDIR="${prefix}/lib/llvm":' \
    autoconf/configure.ac \
    configure

    # Fix insecure rpath (http://bugs.archlinux.org/task/14017)
    sed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

    msg2 "patching clang..."
    cd ${srcdir}/llvm/tools/clang
    _patchdir="${srcdir}/llvm-setup/toolchain/clang/patches"
      patch -p1 < ${_patchdir}/64-bit-ABI.patch
      patch -p1 < ${_patchdir}/pending.patch
    msg2 "patching llvm..."
    cd ${srcdir}/llvm 
      patch -p1 < ${_patchdir}/inline-64-bit-asm.patch
    msg2 "done"
    
#    msg "setting up clang as default compiler"
#    export CC=clang
#    export CXX="clang++ -stdlib=libc++ -Wl,-lstdc++" 
#    CFLAGS="$CFLAGS -I${srcdir}/llvm/include -I{srcdir}/llvm/tools/clang/include"
# compiling with stops after too many error warnings. Clang seems to be more pedantic.
    export CC=gcc
    export CXX=g++
# LLVM/Clang _should_ be self-hosting... why does it not compile???

    # Use Python 2
    rm -rf  "$srcdir/python2-path" # start fresh
    mkdir -p "$srcdir/python2-path"
    ln -s /usr/bin/python2 "$srcdir/python2-path/python"
    export PATH="$srcdir/python2-path:$PATH"
    
    msg "Starting make..."
    
    REQUIRES_RTTI=1
    
    cd ${srcdir}/llvm
    ./configure \
    --prefix=/usr \
    --libdir=/usr/lib/llvm \
    --sysconfdir=/etc \
    --enable-shared \
    --enable-libffi \
    --enable-targets=all \
    --disable-expensive-checks \
    --disable-debug-runtime \
    --disable-assertions \
    --enable-optimized \
    --with-binutils-include=/usr/include
    
    make || return 1
    make DESTDIR=${pkgdir} install || return 1 
    #getting some ld paths OK
    mkdir -p $pkgdir/etc/ld.so.conf.d
    echo "/usr/lib/llvm" > $pkgdir/etc/ld.so.conf.d/llvm.conf
    echo "/usr/lib/ocaml" > $pkgdir/etc/ld.so.conf.d/llvm-ocaml.conf
} 
