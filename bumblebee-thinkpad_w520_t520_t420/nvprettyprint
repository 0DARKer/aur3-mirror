#!/bin/sh

#######################
# BEGIN PRETTY OUTPUT #
#######################
function ppbegin { echo -e -n "\e[40m"; }
function ppend { echo -e -n "\e[0m"; }
function ppwarning { echo -e -n "\e[1;33m${@}"; ppend; ppbegin; }
function ppinfo { echo -e -n "\e[1;32m${@}"; ppend; ppbegin; }
function pperror { echo -e -n "\e[1;31m${@}"; ppend; ppbegin; }
function ppseparate { echo -e -n "\e[1;35m${@}"; ppend; ppbegin; }
function pptitletext { echo -e -n "\e[1;36m${@}"; ppend; ppbegin; }
function ppline {
	COLUMNS=$(tput cols)
	while [ $COLUMNS != 0 ]; do
		ppseparate "="
		let COLUMNS+=-1
	done
}
#Magical title bar maker :P
#Why make such a huge function for a simple script? Because I love bash :D
function pptitle {
	#Print a horizontal line
	ppline

	COLUMNS=$(tput cols)

	#Vertical character position of line
	POSITION=0

	#Vertical character position of string (title)
	STRINGPOS=0

	STRING="${@}"

	#If the terminal width is too short to accomodate the string, truncate it. Otherwise, add spaces to fill the width.

	#Check if string is larger than the width minus 4 (the maximum size for the string to fit
	if [ "${#STRING}" -gt "$((${COLUMNS}-4))" ]; then
		TEMPSTRING=""

		#Keep looping until the position is at the width minus 4
		while [ "${STRINGPOS}" -lt "$((${COLUMNS}-4))" ]; do
			#Print '...' when the position is at the width minus 7 -- 4 for the border and margin, 3 for the '...'
			if [ "${STRINGPOS}" == "$((${COLUMNS}-7))" ]; then
				TEMPSTRING="${TEMPSTRING}..."
				let STRINGPOS+=3
			else
				TEMPSTRING="${TEMPSTRING}${STRING:${STRINGPOS}:1}"
			fi
			let STRINGPOS++
		done
		STRING="${TEMPSTRING}"
	else
		#Calculate how many spaces to append after the string
		#Minus 4 to make room for the border and margin (2 on each side)
		SPACES=$((${COLUMNS}-${#@}-4))

		#Append the spaces to the string
		while [ "${#STRING}" != "$((${COLUMNS}-2))" ]; do
			STRING="$STRING "
		done
	fi

	STRINGPOS=0
	
	#Print title
	while [ "${POSITION}" != "$COLUMNS" ]; do
		#If the position is 0 or the last, print a '|' character -- border
		if [ "${POSITION}" == "0" ] || [ "${POSITION}" == "$((${COLUMNS}-1))" ]; then
			ppseparate "|"
		#If the position is 1 or the last - 1, print a space -- margin
		elif [ "${POSITION}" == "1" ] || [ "${POSITION}" == "$((${COLUMNS}-2))" ]; then
			echo -n " "
		#Otherwise, print the appropriate character of the string
		else
			pptitletext "${STRING:${STRINGPOS}:1}"
			let STRINGPOS++
		fi
		let POSITION++
	done

	#Print another line
	ppline
}
#####################
# END PRETTY OUTPUT #
#####################