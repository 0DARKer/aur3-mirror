# Maintainer: naelstrof <naelstrof@gmail.com>
pkgname=projectzomboid
pkgver=RC2.9
pkgrel=2
pkgdesc="Project Zomboid is a Zombie Survival RPG. You need a key and the game data from projectzomboid.com in order to play."
arch=('i686' 'x86_64' )
url="http://projectzomboid.com/"
license=('custom')
depends=('java-runtime')
source=(projectzomboid-RC2.9-linux.patch)
md5sums=('6694fc0137824f2761b7c897569bf1c8')

_arch=`uname -m`
if [[ "$_arch" == "x86_64" ]]; then
    _filename="projectzomboid-amd64.tar.gz"
    _filesum="e6f6cac50333584e81dd5809b736f55c"
else
    _filename="projectzomboid-i386.tar.gz"
    _filesum="9df703cb3ab509032849570f53de1cfc"
fi

prepare() {
    # Here we're going to make sure we have the necessary game data, if not tell the user to get it!
    cd "$startdir"

    # Check if game data does not exist.
    msg "Looking for game data..."
    if [[ ! -e "$_filename" ]]; then
        error "Missing $startdir/$_filename! Download $_filename and place it into $startdir You can get $_filename from here: http://www.desura.com/games/project-zomboid/download"
        exit 1
    fi
    echo "found $_filename"

    # Check the file's integrity
    msg "Checking game data integrity..."
    _sum="$(md5sum $_filename | awk '{print $1}')"
    if [[ "$_sum" != "$_filesum" ]]; then
        error "Ingegrity check failed! Game data is corrupt, compromised, or newer than this PKGBUILD! Try redownloading the game or editing _filesum to match the correct MD5 sum of the game using \"md5sum $_filename\"."
        exit 1
    fi

    # Finally we must extract it into the srcdir.
    msg "Extracting game data..."
    tar -xf $_filename -C $srcdir
}

build() {
    # Instead of actually building anything here, we're just going to fix the package.
    cd "$srcdir/$pkgname"

    # Gotta fix some scripting errors first.
    msg "Patching broken lua files..."
    patch -p1 -i $srcdir/projectzomboid-RC2.9-linux.patch

    # We also need to fix some case-sensitivity errors here:
    msg "Fixing case-sensitivity errors..."
    cd media/sound
    mv batswing.ogg batSwing.ogg
    mv Bathit.ogg bathit.ogg
    mv ambientOutsideDaybirds.ogg ambientOutsideDayBirds.ogg

    # That's it! Now go ahead and create the package with the fixed files.
}

package() {
    cd "$srcdir/$pkgname"

    # Install all the package files
    msg "Installing game data..."
    mkdir -p "$pkgdir/opt/$pkgname"
    cp -R * "$pkgdir/opt/$pkgname"

    # Now we have to create a proxy executable, since the script supplied by the package must be ran from the game directory.
    msg "Creating executable..."
    mkdir -p "$pkgdir/usr/bin"
    echo "#!/bin/bash
/opt/projectzomboid/projectzomboid.sh" > "$pkgdir/usr/bin/projectzomboid"
    chmod +x "$pkgdir/usr/bin/projectzomboid"

    # Now create a pretty desktop entry--
    msg "Creating desktop entry..."
    mkdir -p "$pkgdir/usr/share/applications"
    echo "[Desktop Entry]
Version=RC2.9
Name=Project Zomboid
GenericName=Project Zomboid
Comment=Survival Zombie RPG
Exec=/usr/bin/projectzomboid
Terminal=false
Icon=projectzomboid.png
Type=Application
Categories=Game;
MimeType=;" > "$pkgdir/usr/share/applications/projectzomboid.desktop"

    # With even its own icon!
    msg "Copying supplied pixmap..."
    mkdir -p "$pkgdir/usr/share/pixmaps"
    cp projectzomboid.png "$pkgdir/usr/share/pixmaps"

    # Phew! Finally a perfectly good Arch Linux acceptable application!
}
