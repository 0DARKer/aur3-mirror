# Maintainer:  fsckd <fsckdaemon@gmail.com>
# Contributor: cruznick <cruznick@archlinux.us>
# Contributor: Keshav P R <(the.ridikulus.rat) (aatt) (gemmaeiil) (ddoott) (ccoomm)>

# Tunables: change y to n to disable
_rm_bld_dirs=${_rm_bld_dirs:-n}        # remove build directories

pkgname="burg-efi-x86_64-bzr"
pkgver=1844
pkgrel=2
pkgdesc="Brand-new Universal loadeR from GRUB2 - Built for x86_64 UEFI"
url="http://code.google.com/p/burg/"
license="GPL3"
arch=('x86_64')

makedepends=('bzr' 'ruby' 'bdf-unifont' 'python2' 'ncurses' 'sdl')
depends=('gettext' 'freetype2' 'dosfstools' 'efibootmgr')
optdepends=('mtools')

conflicts=('burg-bios' 'burg-emu')
provides=('burg-efi-x86_64')

#options=('!makeflags')
changelog='burg.changelog'
backup=('etc/default/burg' 'etc/burg.d/40_custom')

source=('burg.default' 'arch-burg.patch' 'update-burg')

sha256sums=('e94ee55a1fa9cadb5d752c40df6060c0b5c6b42f6f69440d24642b483255b05a'
            '57fa4d1ab439a3e716cf60f5eda533969f8d4a46b6425e85f0529d1897897446'
            '48e08e512736a4dffeba3416a56eeeb7f8926174af37e90dfde5e40f5227a7c5')

install='burg.install'

_bzrmod="burg"
_bzrtrunk="lp:${_bzrmod}"

if [ "${CARCH}" = 'i686' ]
then
    echo "This package can be built only in a x86_64 system. Exiting."
    exit 1
fi

_common_configure_opts="--prefix=/usr --bindir=/bin \
                        --sbindir=/sbin --mandir=/usr/share/man \
                        --infodir=/usr/share/info --sysconfdir=/etc \
                        --enable-mm-debug --disable-werror"

_update_bzr() {
  
  cd "${srcdir}/"
  
  msg "Connecting to the server...."
  
  if [[ ! -d "${srcdir}/${_bzrmod}" ]] ; then
    bzr branch "${_bzrtrunk}"
  else
    cd "${srcdir}/${_bzrmod}" && bzr pull
  fi
  
  msg "BZR checkout done or server timeout"
  
}

_build_dir() {
  
  local rm_bdir='0'
  bdir="${_bzrmod}-build"
  
  while (( "$#" ))
  do
    [[ "$1" == '-r' ]] && rm_bdir=1 \
                       || bdir="${_bzrmod}-$1-build"
    shift
  done
  
  rm -rf "${srcdir}/${bdir}"
  
  if [[ "${rm_bdir}" == '0' ]] ; then
    cp -rip "${srcdir}/${_bzrmod}" "${srcdir}/${bdir}"
    cd "${srcdir}/${bdir}/"
  fi
  
}

_build_common() {
  
  cd "${srcdir}/${bdir}/"
  
  # Archlinux changed default python to python3, need to use /usr/bin/python2 instead
  sed 's|python|python2|g' -i "${srcdir}/${bdir}/autogen.sh" || true
  
  echo
  
  ./autogen.sh
  
  echo
  
}

_build_uefi_x86_64() {
  
  msg "Building burg uefi x86_64...."
  
  _build_dir
  
  echo
  
  # some random patches to facilitate automatic creation of burg.cfg
  patch -Np1 -i  "${srcdir}/arch-burg.patch"
  
  echo
  
  _build_common
  
  echo
  
  ## fix unifont.bdf location so burg-mkfont can create *.pf2 files
  sed 's|/usr/share/fonts/unifont|/usr/share/fonts/misc|g' -i "${srcdir}/${bdir}/configure"
  
  _uefi_configure_opts="${_common_configure_opts} --with-platform=efi --target=x86_64 --disable-efiemu --disable-grub-emu-usb"
  ./configure ${_uefi_configure_opts}
  
  echo
  
  CFLAGS="" make
  
  echo
  
}

build() {
  
  _update_bzr
  
  echo
  
  _build_uefi_x86_64
  
  echo
  
}

package() {
  
  cd "${srcdir}/${bdir}/"
  
  make DESTDIR="${pkgdir}/" install
  
  echo
  
  # install /etc/default/burg(needed config file)
  install -D -m0644 "${srcdir}/burg.default" "${pkgdir}/etc/default/burg"
  
  # install update-burg script
  install -D -m0755 "${srcdir}/update-burg" "${pkgdir}/sbin/update-burg"
  
  [[ "${_rm_bld_dirs}" == 'y' ]] && _build_dir -r
  
}
