# Maintainer: Thomas Fanninger <thomas@fanninger.at>

pkgname=gogs-git-dev
_pkgname=gogs
pkgver=20140512
pkgrel=2
pkgdesc="Gogs(Go Git Service) is a Self Hosted Git Service in the Go Programming Language. This is the current git version from branch dev."
arch=('i686' 'x86_64' 'armv6h' 'armv7h')
url="http://gogits.org/"
license=('MIT')
depends=('git')
optdepends=('sqlite: SQLite support'
            'mariadb: MariaDB support'
            'postgresql: PostgreSQL support'
            'redis'
            'memcache')
makedepends=('go>=1.2' 'git')
conflicts=('gogs-bin' 'gogs' 'gogs-git')
options=('!strip' '!emptydirs')

install=gogs.install

source=('gogs.service')

sha512sums=('SKIP')

_goroot="/usr/lib/go"

prepare() {
  export GOROOT=/usr/lib/go

  rm -rf build
  mkdir -p build/go
  cd build/go

  for f in "$GOROOT/"*; do
    ln -s "$f"
  done

  rm pkg
  mkdir pkg
  cd pkg

  for f in "$GOROOT/pkg/"*; do
    ln -s "$f"
  done

  export GOROOT="$srcdir/build/go"
  export GOPATH="$srcdir/build"
  
  #Depence
  git clone https://github.com/Unknwon/cae $GOPATH/src/github.com/Unknwon/cae
  git clone https://github.com/Unknwon/com $GOPATH/src/github.com/Unknwon/com
  git clone https://github.com/Unknwon/goconfig $GOPATH/src/github.com/Unknwon/goconfig
  git clone https://github.com/codegangsta/cli $GOPATH/src/github.com/codegangsta/cli
  git clone https://github.com/go-martini/martini $GOPATH/src/github.com/go-martini/martini
  git clone https://github.com/go-sql-driver/mysql $GOPATH/src/github.com/go-sql-driver/mysql
  git clone https://github.com/go-xorm/core $GOPATH/src/github.com/go-xorm/core
  git clone https://github.com/go-xorm/xorm $GOPATH/src/github.com/go-xorm/xorm
  git clone https://github.com/codegangsta/inject $GOPATH/src/github.com/codegangsta/inject
  git clone https://github.com/lib/pq $GOPATH/src/github.com/lib/pq
  git clone https://github.com/mattn/go-sqlite3 $GOPATH/src/github.com/mattn/go-sqlite3
  git clone https://github.com/nfnt/resize $GOPATH/src/github.com/nfnt/resize
  git clone https://github.com/qiniu/log $GOPATH/src/github.com/qiniu/log
  git clone https://github.com/robfig/cron $GOPATH/src/github.com/robfig/cron
  git clone https://github.com/gogits/cache $GOPATH/src/github.com/gogits/cache
  git clone https://github.com/gogits/gfm $GOPATH/src/github.com/gogits/gfm
  git clone https://github.com/gogits/git $GOPATH/src/github.com/gogits/git
  git clone https://github.com/gogits/logs $GOPATH/src/github.com/gogits/logs
  git clone https://github.com/gogits/oauth2 $GOPATH/src/github.com/gogits/oauth2
  git clone https://github.com/gogits/session $GOPATH/src/github.com/gogits/session
  git clone https://github.com/juju2013/goldap $GOPATH/src/github.com/juju2013/goldap
  git clone https://github.com/johnweldon/asn1-ber $GOPATH/src/github.com/johnweldon/asn1-ber

  git clone -b dev https://github.com/gogits/gogs $GOPATH/src/github.com/gogits/gogs
}

build() {
  # Fix and compile code
  cd $GOPATH/src/github.com/gogits/gogs
  go fix
  go build -tags sqlite
}

package() {
  mkdir -p "$pkgdir/home/$_pkgname/"
  cp "$srcdir/build/src/github.com/gogits/gogs/gogs" "$pkgdir/home/$_pkgname/"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/conf" "$pkgdir/home/$_pkgname"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/public" "$pkgdir/home/$_pkgname"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/templates" "$pkgdir/home/$_pkgname"
  
  mkdir -p "$pkgdir/etc/systemd/system/"
  cp -r "$startdir/gogs.service" "$pkgdir/etc/systemd/system/"

  mkdir -p "$pkgdir/usr/share/licenses/$_pkgname"
  cp "$srcdir/build/src/github.com/gogits/gogs/LICENSE" "$pkgdir/usr/share/licenses/$_pkgname"
}
