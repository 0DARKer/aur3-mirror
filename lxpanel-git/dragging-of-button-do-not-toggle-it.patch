From 91d660fe72600fe9f6ad439327a9d04015be61ae Mon Sep 17 00:00:00 2001
From: Raimar <no@email.de>
Date: Mon, 28 Jul 2014 22:53:15 +0200
Subject: [PATCH] dragging of button do not toggle it

---
 plugins/launchtaskbar.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/plugins/launchtaskbar.c b/plugins/launchtaskbar.c
index f5ed92a..aefdad1 100644
--- a/plugins/launchtaskbar.c
+++ b/plugins/launchtaskbar.c
@@ -154,6 +154,7 @@ struct LaunchTaskBarPlugin {
     Task * focused_previous;       /* Task that had focus just before panel got it */
     Task * menutask;               /* Task for which popup menu is open */
     guint dnd_delay_timer;         /* Timer for drag and drop delay */
+    gboolean dnd_working;          /* User is currently moving button */
     int icon_size;                 /* Size of task icons */
     gboolean show_all_desks;       /* User preference: show windows from all desktops */
     gboolean tooltips;             /* User preference: show tooltips */
@@ -2570,7 +2571,9 @@ static gboolean taskbar_task_control_event(GtkWidget * widget, GdkEventButton *
 /* Handler for "button-press-event" event from taskbar button. */
 static gboolean taskbar_button_press_event(GtkWidget * widget, GdkEventButton * event, Task * tk)
 {
-    return taskbar_task_control_event(widget, event, tk, FALSE);
+    if (!tk->tb->dnd_working)
+        return taskbar_task_control_event(widget, event, tk, FALSE);
+    return TRUE;
 }
 
 /* Handler for "activate" event from grouped-task popup menu item. */
@@ -2597,6 +2600,7 @@ static gboolean taskbar_button_drag_motion(GtkWidget * widget, GdkDragContext *
     GtkWidget * drag_source = gtk_drag_get_source_widget(drag_context);
     if (drag_source != NULL && gtk_widget_get_parent(drag_source) == gtk_widget_get_parent(tk->button))
     {
+        tk->tb->dnd_working = TRUE;
         gdk_drag_status(drag_context, GDK_ACTION_MOVE, time);
     }
     else
@@ -2613,6 +2617,7 @@ static gboolean taskbar_button_drag_motion(GtkWidget * widget, GdkDragContext *
 /* Handler for "drag-drop" event from taskbar button. */
 static gboolean taskbar_button_drag_drop(GtkWidget * widget, GdkDragContext * drag_context, gint x, gint y, guint time, Task * tk)
 {
+    tk->tb->dnd_working = FALSE;
     GtkWidget * drag_source = gtk_drag_get_source_widget(drag_context);
     if (drag_source != NULL && gtk_widget_get_parent(drag_source) == gtk_widget_get_parent(tk->button))
     {
@@ -2643,6 +2648,7 @@ static void taskbar_button_drag_leave(GtkWidget * widget, GdkDragContext * drag_
 /* Handler for "enter" event from taskbar button.  This indicates that the cursor position has entered the button. */
 static void taskbar_button_enter(GtkWidget * widget, Task * tk)
 {
+    tk->tb->dnd_working = FALSE;
     tk->entered_state = TRUE;
     if (tk->tb->flat_button)
         gtk_widget_set_state(widget, GTK_STATE_NORMAL);
@@ -2770,7 +2776,7 @@ static void task_build_gui(LaunchTaskBarPlugin * tb, Task * tk)
     gtk_drag_source_set(tk->button, GDK_BUTTON1_MASK, task_button_target_list, task_button_n_targets, GDK_ACTION_MOVE);
 
     /* Connect signals to the button. */
-    g_signal_connect(tk->button, "button-press-event", G_CALLBACK(taskbar_button_press_event), (gpointer) tk);
+    g_signal_connect(tk->button, "button-release-event", G_CALLBACK(taskbar_button_press_event), (gpointer) tk);
     g_signal_connect(G_OBJECT(tk->button), "drag-motion", G_CALLBACK(taskbar_button_drag_motion), (gpointer) tk);
     g_signal_connect(G_OBJECT(tk->button), "drag-leave", G_CALLBACK(taskbar_button_drag_leave), (gpointer) tk);
     g_signal_connect(G_OBJECT(tk->button), "drag-drop", G_CALLBACK(taskbar_button_drag_drop), (gpointer) tk);
-- 
2.0.3

