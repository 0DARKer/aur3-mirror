#Derived from the community wine PKGBUILD

_pkgname=wine
pkgname=${_pkgname}-dib
pkgver=1.3.11
pkgrel=1
_pkgbasever=${pkgver/rc/-rc}

#By default, wine-dib will replace the standard wine installation.
#However, if you want to install it alongside the default wine, change
#the following line to another directory. Example: _installdir=/opt/wine-dib
_installdir=/usr

source=(http://ibiblio.org/pub/linux/system/emulators/$_pkgname/$_pkgname-$_pkgbasever.tar.bz2
  attachment.cgi?id=31885 #Dib engine patch
  http://bugs.winehq.org/attachment.cgi?id=27311 #Depth Conversions patch
  attachment.cgi?id=27313 #Color mask filter fix patch
  http://bugs.winehq.org/attachment.cgi?id=31735 #Vertex blend patch
  )

pkgdesc="A compatibility layer for running Windows programs, whth dib engine patch and more"
url="http://www.winehq.com"
arch=(i686 x86_64)
license=(LGPL)

depends=(
  fontconfig      lib32-fontconfig
  mesa            lib32-mesa 
  libxcursor      lib32-libxcursor
  libxrandr       lib32-libxrandr
  libxdamage      lib32-libxdamage
  libxxf86dga     lib32-libxxf86dga
  alsa-lib        lib32-alsa-lib
)
makedepends=(autoconf ncurses bison perl fontforge flex prelink
  'gcc>=4.5.0-2'  'gcc-multilib>=4.5.0-2'
  giflib          lib32-giflib
  libxpm          lib32-libxpm
  libpng          lib32-libpng
  libxinerama     lib32-libxinerama
  libxcomposite   lib32-libxcomposite
  libxmu          lib32-libxmu
  libxxf86vm      lib32-libxxf86vm
  libxml2         lib32-libxml2
  libxslt         lib32-libxslt
  libldap         lib32-libldap
  lcms            lib32-lcms
  mpg123          lib32-mpg123
  openal          lib32-openal
  jack            lib32-jack
  libcups         lib32-libcups
  gnutls          lib32-gnutls
  v4l-utils       lib32-v4l-utils
)  
optdepends=(
  giflib          lib32-giflib
  libpng          lib32-libpng
  libldap         lib32-libldap
  lcms            lib32-lcms
  libxml2         lib32-libxml2
  mpg123          lib32-mpg123
  openal          lib32-openal
  jack            lib32-jack
  libcups         lib32-libcups
  gnutls          lib32-gnutls
  v4l-utils       lib32-v4l-utils
)

if [[ $CARCH == i686 ]]; then
  # Strip lib32 etc. on i686
  depends=(${depends[@]/*32-*/})
  makedepends=(${makedepends[@]/*32-*/})
  makedepends=(${makedepends[@]/*-multilib*/})
  optdepends=(${optdepends[@]/*32-*/})
  if [[ $_installdir == /usr ]]; then
    provides=("wine=$pkgver")
    conflicts=('wine')
    replaces=('wine')
  fi
else
  if [[ $_installdir == /usr ]]; then 
    provides=("wine=$pkgver" "wine-wow64=$pkgver" 'bin32-wine')
    conflicts=('wine' 'wine-wow64' 'bin32-wine')
    replaces=('wine' 'bin32-wine')
  fi
  _libdir32="$_installdir/lib32"
  _libdir64="$_installdir/lib"
fi


build() {
  cd "$srcdir"

  # Allow ccache to work
  mv $_pkgname-$_pkgbasever $_pkgname

  msg2 "Patching..."
  (
  mv "attachment.cgi?id=27311" winex11-rgb444-depth-conversions.patch
  mv "attachment.cgi?id=27313" color-mask-filter-fix-for-dib.patch
  mv "attachment.cgi?id=31735" vertex-blend.patch
  cd $_pkgname
  #rm -rf dlls/winedib.drv
  patch -p1 <${srcdir}/dib-engine-0001-hook-the-engine-bet.patch
  patch -p1 <${srcdir}/dib-engine-0002-initial-pass-throug.patch
  patch -p1 <${srcdir}/dib-engine-0003-fork-ddb-dib-behavi.patch
  patch -p1 <${srcdir}/dib-engine-0004-implement-most-engi.patch
  patch -p1 <${srcdir}/dib-engine-0005-implement-alphablen.patch
  patch -p1 <${srcdir}/dib-engine-0006-add-clipping-on-xxx.patch
  patch -p1 <${srcdir}/dib-engine-0007-implement-polygon.patch
  patch -p1 <${srcdir}/dib-engine-0008-fixes-clipping-text.patch
  patch -p1 <${srcdir}/dib-engine-0009-fixes-against-wine-.patch
  patch -p1 <${srcdir}/dib-engine-0010-introduction-of-bit.patch
  patch -p1 <${srcdir}/dib-engine-0011-fix-mapmodes-for-xx.patch
  patch -p1 <${srcdir}/dib-engine-0012-fix-color-in-antial.patch
  patch -p1 <${srcdir}/dib-engine-0013-dont-use-now-missin.patch
  patch -p1 <${srcdir}/dib-engine-0014-fix-vertically-mirr.patch
  patch -p1 <${srcdir}/dib-engine-0015-update-winedib-drv.patch
  patch -p1 <${srcdir}/dib-engine-0016-quick-fix-for-wine-1-2-rc2.patch
  patch -p1 <${srcdir}/dib-engine-0017-fix-alphablend-bug.patch
  patch -p1 <${srcdir}/winex11-rgb444-depth-conversions.patch
  patch -p1 <${srcdir}/color-mask-filter-fix-for-dib.patch
  #patch -p1 <${srcdir}/vertex-blend.patch
  autoconf
  )

  # Get rid of old build dirs
  rm -rf $_pkgname-{32,64}-build
  mkdir $_pkgname-32-build

  if [[ $CARCH == x86_64 ]]; then
    msg2 "Building Wine-64..."

    mkdir $_pkgname-64-build
    cd "$srcdir/$_pkgname-64-build"
    ../$_pkgname/configure \
      --prefix=$_installdir \
      --sysconfdir=/etc \
      --libdir=$_libdir64 \
      --with-x \
      --enable-win64

    make

    _wine32opts=(
      --libdir=$_libdir32
      --with-wine64="$srcdir/$_pkgname-64-build"
    )

    export PKG_CONFIG_PATH="$_libdir32/pkgconfig"
  fi

  msg2 "Building Wine-32..."
  cd "$srcdir/$_pkgname-32-build"
  ../$_pkgname/configure \
    --prefix=$_installdir \
    --sysconfdir=/etc \
    --with-x \
    "${_wine32opts[@]}"

  make
}

package() {
  msg2 "Packaging Wine-32..."
  cd "$srcdir/$_pkgname-32-build"

  if [[ $CARCH == i686 ]]; then
    make prefix="$pkgdir$_installdir" install
  else
    make prefix="$pkgdir$_installdir" \
      libdir="$pkgdir$_libdir32" \
      dlldir="$pkgdir$_libdir32/wine" install

    msg2 "Packaging Wine-64..."
    cd "$srcdir/$_pkgname-64-build"
    make prefix="$pkgdir$_installdir" \
      libdir="$pkgdir$_libdir64" \
      dlldir="$pkgdir$_libdir64/wine" install
  fi
}
# vim:set ts=8 sts=2 sw=2 et:

md5sums=('c7ddaa2b8a408839475784c7033ba809'
         '6d7e71c90f52833a31156cea1986f468'
         'd685211bf9d7857ad8070524f8f6045e'
         '4aa66b23a18dde20dd0bbc93b332ee68'
         'fd6a4ded1e16ad3f1442670e4e4dbc46')
