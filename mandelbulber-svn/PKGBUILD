# Maintainer: Wilfried Fauvel <wilfried.fauvel at gmail>
# Contributor: orbisvicis <orbisvicis at gmail dot com>
# Contributor: Martti K?hne <mysatyre at gmail dot com>

pkgname=mandelbulber-svn
_pkg="${pkgname%-svn}"
pkgver=226
pkgrel=2
pkgdesc="An experimental application designed to render 3D fractals such as the Mandelbulb, Mandelbox, BulbBox, JuliaBulb, Menger Sponge, and Iterated Function Systems"
arch=("i686" "x86_64")
url="http://sites.google.com/site/mandelbulber/"
license=("GPL3")
depends=('gtk2' 'libjpeg-turbo' 'libpng' 'libcl')
makedepends=("subversion" "cmake")
optdepends=()
provides=("$_pkg")
conflicts=("$_pkg")
source=( "patch.cmake.patch"
	 "patch.cl_support.patch"
	 "patch.cl_engine.patch" )

sha256sums=('ff15939db4acd5b89ff698ebf4ba1484cdebd1ee28940062fc41b1de1ebd1fc7'
            '4506da3d56af71173b46a3822abea9333a39eb35c72b1a35ab42b884abcba785'
            'a10a02baa772ea842632649145a5a78b5c01ae50c1a34bc80b6d9dc7d91e4404')


_svnmod="mandelbulber"
_svntrunk="http://mandelbulber.googlecode.com/svn/trunk/"

build() {
  cd "$srcdir"

  if [[ -d "$_svnmod/.svn" ]]; then
    (cd "$_svnmod" && svn up -r "$pkgver")
  else
    svn co "$_svntrunk" --config-dir ./ -r "$pkgver" "$_svnmod"
  fi

  msg "SVN checkout done or server timeout"
  msg "Starting build..."

  rm -rf "${srcdir}/${_svnmod}-build"
  cp -a "${srcdir}/${_svnmod}" "${srcdir}/${_svnmod}-build"
  cd "${srcdir}/${_svnmod}-build"

  #
  # BUILD
  #

  patch -p0 -i../patch.cmake.patch
  patch -p0 -i../patch.cl_support.patch
  patch -p0 -i../patch.cl_engine.patch


  mkdir -p "src/build"; mkdir -p "src/cmake/modules"
  ( cd "src/cmake/modules" && wget http://gitorious.org/findopencl/findopencl/blobs/raw/master/FindOpenCL.cmake )
  cd "src/build"
  # The default Arch Linux CXXFLAGS will disable the sse instruction set, which
  # is not a good idea for this type of program. Since mandelbulber has yet to
  # support dynamic detection of sse instructions, override the Arch defaults
  # and enable sse instructions (and all other optimizations) on supported
  # architectures
  for i in $CXXFLAGS; do [[ ! "$i" =~ -mtune|-march|-O ]] && _CXXFLAGS+="${i} "; done
  CXXFLAGS="$_CXXFLAGS"; export CXXFLAGS
  cmake ..
  make
}

package() {
  local _svndir="${srcdir}/${_svnmod}-build"

  install -m755 -d "${pkgdir}/usr/bin"
  install -m755 -t "${pkgdir}/usr/bin" "${_svndir}/src/build/${_pkg}"

  install -m755 -d "${pkgdir}/usr/share/${_pkg}"
  cp -r "${_svndir}/share/"* "${pkgdir}/usr/share/${_pkg}"
  
  # copy openCL files
  install -m755 "${_svndir}/src/cl_engine.cl" "${pkgdir}/usr/share/${_pkg}/"
  install -m755 "${_svndir}/src/cl_data.h" "${pkgdir}/usr/share/${_pkg}/"

  # fix right access
  while IFS= read -r -d $'\0' line; do
    rm -rf "$line"
  done < <(find "${pkgdir}/usr/share/${_pkg}" -type d -name '.svn' -print0)
  find "${pkgdir}/usr/share/${_pkg}" \( -type d -execdir chmod 755 '{}' \; \) -o \( -type f -execdir chmod 644 '{}' \; \)
}

# vim:set ts=2 sw=2 et:
