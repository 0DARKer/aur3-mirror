# Maintainer: RetroX <classixretrox@gmail.com>
pkgname=enigma-dev-svn
pkgver=581
pkgrel=1
pkgdesc="An open-source alternative to YoYoGame's Game Maker, written in C++."
pkglongdesc=`echo -e "ENIGMA Development Environment\nAn open-source alternative to YoYoGame's Game Maker, written in C++."`
pkgdebsection="devel"
arch=('i386' 'i486' 'i586' 'i686' 'x86_64' 'amd64')
url="http://enigma-dev.org"
license=('GPL')
depends=('libgl' 'libx11' 'mesa' 'zlib' 'openal' 'gcc' 'make' 'jre' 'gtk2')
debdepends=('libgl1-mesa-dev' 'libglu1-mesa-dev ' 'libx11-dev' 'libz-dev' 'libopenal-dev' 'libgtk2.0-dev' 'gcc' 'g++' 'make' 'sun-java6-jre')
makedepends=('subversion' 'gcc')
source=('makefile_fix_arch')
md5sums=('2e7cb75b1d2393b5eb6a70cf29477493')
_svntrunk="https://enigma-dev.svn.sourceforge.net/svnroot/enigma-dev/trunk"
_svnmod="enigma-dev"
install="enigma.install"
debpreinst="enigma.preinst"
debpostinst="enigma.postinst"
debpostrm="enigma.postrm"
lzmpostinst="enigma.postinst"

build()
{
  cd $srcdir
  svn co $_svntrunk $_svnmod

  mkdir -p $pkgdir/opt/enigma

  cp -r $srcdir/$_svnmod -T $pkgdir/opt/enigma

  mkdir -p $pkgdir/usr/sbin
  mkdir -p $pkgdir/usr/share/pixmaps
  mkdir -p $pkgdir/usr/share/applications
  mkdir -p $pkgdir/usr/share/mime/packages

  mv $pkgdir/opt/enigma/enigma.svg $pkgdir/usr/share/pixmaps
  mv $pkgdir/opt/enigma/enigma.desktop $pkgdir/usr/share/applications
  mv $pkgdir/opt/enigma/enigma.xml $pkgdir/usr/share/mime/packages
  mv $pkgdir/opt/enigma/lateralgm $pkgdir/usr/sbin

  chmod -R 777 $pkgdir/opt/enigma
  chmod 755 $pkgdir/usr/sbin/lateralgm
  chmod 544 $pkgdir/usr/share/applications/enigma.desktop $pkgdir/usr/share/mime/packages/enigma.xml

  cd $pkgdir/opt/enigma

  touch blank.txt defines.txt redirfile.txt searchdirs.txt definitions.h ENIGMAsystem/SHELL/API_Switchboard.h

  find -name "Makefile" -exec $srcdir/makefile_fix_arch {} "$PKGARCH" \;

  make linux -C CompilerSource

  cd $pkgdir/opt/enigma

  for make_GMODE in {Run,Debug,Build,Release}; do
    for make_dir in {Audio_Systems/*,Graphics_Systems/*}; do
      if [[ -d "$make_dir" && -f "$make_dir/Config/xlib.ey" ]]; then
        make $make_GMODE MODE="$make_GMODE" -C ENIGMAsystem/SHELL/$make_dir
      fi
    done
    for make_dir in Collision_Systems/*; do
      if [[ -f "$make_dir/Makefile" ]]; then
        make $make_GMODE MODE="$make_GMODE" -C ENIGMAsystem/SHELL/$make_dir
      fi
    done
    for make_dir in {Universal_System,Platforms/xlib}; do
      make $make_GMODE MODE="$make_GMODE" -C ENIGMAsystem/SHELL/$make_dir
    done
  done

  #rm -rf $(find $pkgdir | grep 'svn$') $pkgdir/opt/enigma/CompilerSource/.eobjs
}
