# Contributor: T-T

if [ -f ./pkgvrs ]; then
	pkgvrs=$(cat ./pkgvrs)
else
	until [[ "$pkgvrs" =~ ^[0-9]+(\.[0-9]+)*(-(RC|beta)[0-9]+)?$ ]]; do
		echo -n '	1.0.5'
		echo -n '	1.1.0'
		echo -n '	1.1.1'
		echo -n '	1.1.2'
		echo -n '	1.1.3'
		echo -n '	1.1.4'
		echo -n '	1.1.5'
		echo -n '	1.2.0'
		echo -n '	1.2.1'
		echo -n '	1.2.2'
		echo -n '	1.2.3'
		echo -n '	1.3.0'
		echo -n '	1.3.1'
		echo ''
		echo 'You can also type another (older, newer, beta or rc) version.'
		echo -n 'Choose version: '
		read pkgvrs
	done
	if [[ "$pkgvrs" =~ ^(1\.3\.1|1\.3\.0|1\.2\.3|1\.2\.2|1\.2\.1|1\.2\.0|1\.1\.5|1\.1\.4|1\.1\.3|1\.1\.2|1\.1\.1|1\.1\.0|1\.0\.5)$ ]]; then
		:
	else
		echo -n 'Unverified version, type md5sum: '
		read md5
	fi
fi
if test -f ./pkgvrs; then rm pkgvrs; else echo "$pkgvrs" > pkgvrs; fi

pkgname=openttd-bin
pkgver='1.3.1'
if test "$pkgvrs"; then pkgver=$(echo "$pkgvrs" | sed 's/-\|:/_/g'); pkgname="openttd-bin-$pkgvrs"; fi
pkgrel=0
pkgdesc="OpenTTD is an Open Source clone of Transport Tycoon Deluxe. This package let you have installed more versions simultaneously. Package version means tested version, it should work for actual version too, if you type it instead of one from the opinions."
arch=('i686' 'x86_64')
url="http://www.openttd.org"
license=('GPL')
depends=(libpng sdl fontconfig icu)
makedepends=()
conflicts=('')
optdepends=('openttd-opengfx: free graphics' 'openttd-opensfx: free soundset' 'openttd-openmsx: free musicset')
if [ "$pkgvrs" == '1.3.1' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='a40b40165b3b57da065cb2a27d3098d1'
	else
		_arch="i686"
		_md5_tar='3f36010f11e6b4cc02b6b47a82d07e01'
	fi
elif [ "$pkgvrs" == '1.3.0' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='268c08e9e02e4e8e64e1348526422810'
	else
		_arch="i686"
		_md5_tar='6606419dd8351fc7812ceaf9ec574cc5'
	fi
elif [ "$pkgvrs" == '1.2.3' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='6bedc3d2b52f2a0d07878f42161938e0'
	else
		_arch="i686"
		_md5_tar='549391a35ed2bb450bab7460dfe0bf62'
	fi
elif [ "$pkgvrs" == '1.2.2' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='455a1b49d83d6575882eb2a4c60e6b82'
	else
		_arch="i686"
		_md5_tar='2478eeee40041ecc241e42965be7e5f2'
	fi
elif [ "$pkgvrs" == '1.2.1' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='ba6eb2b356ed9c4a310fe99147ca9f0f'
	else
		_arch="i686"
		_md5_tar='e75eb0f27590f0ffa9835f8c98038e44'
	fi
elif [ "$pkgvrs" == '1.2.0' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='900b5e961bd73b97e8a67513f4f8b7ba'
	else
		_arch="i686"
		_md5_tar='b46e2fcf41e67a66672b3583996dc986'
	fi
elif [ "$pkgvrs" == '1.1.5' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='08c1d002138db2524ab6254b6d0ebfdb'
	else
		_arch="i686"
		_md5_tar='7bf74c7c7ad61e9a7efcdf43900b8776'
	fi
elif [ "$pkgvrs" == '1.1.4' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='070340fa7d4d5ebfb47fd806cde5489a'
	else
		_arch="i686"
		_md5_tar='a7feb7a1c1f7187abc8c17365194f36a'
	fi
elif [ "$pkgvrs" == '1.1.3' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='605da3675d3f56ce7bcaac7cc6ec093e'
	else
		_arch="i686"
		_md5_tar='4cd9fcb9ad88a66dfb96b22f23b75b13'
	fi
elif [ "$pkgvrs" == '1.1.2' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='f19cd685f6043be7654792537e42f903'
	else
		_arch="i686"
		_md5_tar='dc1d92453e25e3ab1699fc587124aad7'
	fi
elif [ "$pkgvrs" == '1.1.1' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='16dd695eaeff5db52a9e8a395e59387a'
	else
		_arch="i686"
		_md5_tar='005b1a31086546c418295f4ebfacde10'
	fi
elif [ "$pkgvrs" == '1.1.0' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='f8645cb8fc7650ac7f71659c69f65fe0'
	else
		_arch="i686"
		_md5_tar='0d1c3b56f7421ca1a264a23cb354a7e9'
	fi
elif [ "$pkgvrs" == '1.0.5' ]; then
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar='9f9068b8b35f70f9c534fa22ac6eac2a'
	else
		_arch="i686"
		_md5_tar='397d35173d5f70f40591940378723200'
	fi
else
	if [ "${CARCH}" = 'x86_64' ] ; then
		_arch='amd64'
		_md5_tar="$md5"
	else
		_arch="i686"
		_md5_tar="$md5"
	fi
fi

source=(http://binaries.openttd.org/releases/${pkgvrs}/openttd-${pkgvrs}-linux-generic-${_arch}.tar.xz)
md5sums=(${_md5_tar})

build() {
	cd ${srcdir}/openttd-${pkgvrs}-linux-generic-${_arch}
	name=openttd-${pkgvrs}

	mkdir -p ${pkgdir}/usr/share/applications/
	mv media/openttd.desktop ${pkgdir}/usr/share/applications/${name}.desktop
	sed -i "s#Name=OpenTTD#Name=OpenTTD - ${pkgvrs}#;s#Exec=openttd#Exec=${name}#" ${pkgdir}/usr/share/applications/${name}.desktop

	mkdir -p ${pkgdir}/usr/share/doc/${name}/
	mv docs/* ${pkgdir}/usr/share/doc/${name}/

	mkdir -p ${pkgdir}/usr/share/man/man6/
	mv man/openttd.6.gz ${pkgdir}/usr/share/man/man6/${name}.6.gz

	mkdir -p ${pkgdir}/usr/share/pixmaps/
	mv media/openttd.32.xpm ${pkgdir}/usr/share/pixmaps/${name}.32.xpm

	for isize in 16 32 48 64 128 256 ; do
		mkdir -p ${pkgdir}/usr/share/icons/hicolor/${isize}x${isize}/apps/
		mv media/openttd.${isize}.png ${pkgdir}/usr/share/icons/hicolor/${isize}x${isize}/apps/${name}.png
	done

	mkdir -p ${pkgdir}/usr/share/${name}
	for d in ./*; do
		mv $d ${pkgdir}/usr/share/${name}/
	done

	mkdir -p ${pkgdir}/usr/bin/
	echo -e "#/bin/sh\ncd /usr/share/${name} && ./openttd \$@" > ${pkgdir}/usr/bin/${name}
	
	chmod +xr ${pkgdir}/usr/bin/${name}
	cd ${pkgdir}/usr/share/${name}
	chmod +x `dir`
	chmod +r `find`
}
