--- a/configure
+++ b/configure
@@ -645,6 +645,7 @@
 SANEINCL
 sane_devel
 GNUTLSINCL
+GCRYPTINCL
 HALINCL
 DBUSINCL
 XSLTINCL
@@ -789,6 +790,7 @@
 with_dbus
 with_fontconfig
 with_freetype
+with_gcrypt
 with_gettext
 with_gettextpo
 with_gphoto
@@ -1480,6 +1482,7 @@
   --without-dbus          do not use DBus (dynamic device support)
   --without-fontconfig    do not use fontconfig
   --without-freetype      do not use the FreeType library
+  --without-gcrypt        do not use the gcrypt library
   --without-gettext       do not use gettext
   --with-gettextpo        use the GetTextPO library to rebuild po files
   --without-gphoto        do not use gphoto (Digital Camera support)
@@ -2575,6 +2578,12 @@
 fi
 
 
+# Check whether --with-gcrypt was given.
+if test "${with_gcrypt+set}" = set; then :
+  withval=$with_gcrypt;
+fi
+
+
 # Check whether --with-gettext was given.
 if test "${with_gettext+set}" = set; then :
   withval=$with_gettext;
@@ -6569,6 +6578,7 @@
 done
 
         LIBS="$ac_save_LIBS"
+        with_gcrypt=${with_gcrypt:-no}
         with_gnutls=${with_gnutls:-no}
     fi
     if test "$ac_cv_header_CoreAudio_CoreAudio_h" = "yes" -a "$ac_cv_header_AudioUnit_AudioUnit_h" = "yes"
@@ -9652,6 +9662,96 @@
 fi
 fi
 
+if test "x$with_gcrypt" != "xno"
+then
+    ac_save_CPPFLAGS="$CPPFLAGS"
+    if test "$PKG_CONFIG" != "false"
+    then
+        ac_gcrypt_libs="`$PKG_CONFIG --libs gcrypt 2>/dev/null`"
+        ac_gcrypt_cflags="`$PKG_CONFIG --cflags gcrypt 2>/dev/null`"
+        CPPFLAGS="$CPPFLAGS $ac_gcrypt_cflags"
+    fi
+    ac_fn_c_check_header_mongrel "$LINENO" "gcrypt.h" "ac_cv_header_gcrypt_h" "$ac_includes_default"
+if test "x$ac_cv_header_gcrypt_h" = xyes; then :
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <gcrypt.h>
+int
+main ()
+{
+static typeof(gcry_control) *func; if (func) return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -lgcrypt" >&5
+$as_echo_n "checking for -lgcrypt... " >&6; }
+if ${ac_cv_lib_soname_gcrypt+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_soname_save_LIBS=$LIBS
+LIBS="-lgcrypt $ac_gcrypt_libs $LIBS"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char gcry_control ();
+int
+main ()
+{
+return gcry_control ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  case "$LIBEXT" in
+    dll) ac_cv_lib_soname_gcrypt=`$ac_cv_path_LDD conftest.exe | grep "gcrypt" | sed -e "s/dll.*/dll/"';2,$d'` ;;
+    dylib) ac_cv_lib_soname_gcrypt=`otool -L conftest$ac_exeext | grep "libgcrypt\\.[0-9A-Za-z.]*dylib" | sed -e "s/^.*\/\(libgcrypt\.[0-9A-Za-z.]*dylib\).*$/\1/"';2,$d'` ;;
+    *) ac_cv_lib_soname_gcrypt=`$ac_cv_path_LDD conftest$ac_exeext | grep "libgcrypt\\.$LIBEXT" | sed -e "s/^.*\(libgcrypt\.$LIBEXT[^	 ]*\).*$/\1/"';2,$d'` ;;
+  esac
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LIBS=$ac_check_soname_save_LIBS
+fi
+if test "x$ac_cv_lib_soname_gcrypt" = "x"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
+$as_echo "not found" >&6; }
+
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_soname_gcrypt" >&5
+$as_echo "$ac_cv_lib_soname_gcrypt" >&6; }
+
+cat >>confdefs.h <<_ACEOF
+#define SONAME_LIBGCRYPT "$ac_cv_lib_soname_gcrypt"
+_ACEOF
+
+       GCRYPTINCL="$ac_gcrypt_cflags"
+
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+    CPPFLAGS="$ac_save_CPPFLAGS"
+fi
+if test "x$ac_cv_lib_soname_gcrypt" = "x"; then :
+  case "x$with_gcrypt" in
+  x)   as_fn_append wine_notices "|libgcrypt ${notice_platform}development files not found." ;;
+  xno) ;;
+  *)   as_fn_error $? "libgcrypt ${notice_platform}development files not found.
+This is an error since --with-gcrypt was requested." "$LINENO" 5 ;;
+esac
+fi
+
 if test "x$with_gnutls" != "xno"
 then
     ac_save_CPPFLAGS="$CPPFLAGS"
--- a/configure.ac
+++ b/configure.ac
@@ -45,6 +45,7 @@
 AC_ARG_WITH(dbus,      AS_HELP_STRING([--without-dbus],[do not use DBus (dynamic device support)]))
 AC_ARG_WITH(fontconfig,AS_HELP_STRING([--without-fontconfig],[do not use fontconfig]))
 AC_ARG_WITH(freetype,  AS_HELP_STRING([--without-freetype],[do not use the FreeType library]))
+AC_ARG_WITH(gcrypt,    AS_HELP_STRING([--without-gcrypt],[do not use the gcrypt library]))
 AC_ARG_WITH(gettext,   AS_HELP_STRING([--without-gettext],[do not use gettext]))
 AC_ARG_WITH(gettextpo, AS_HELP_STRING([--with-gettextpo],[use the GetTextPO library to rebuild po files]),
             [if test "x$withval" = "xno"; then ac_cv_header_gettext_po_h=no; fi])
@@ -746,6 +747,7 @@
         LIBS="$LIBS $SECURITYLIB"
         AC_CHECK_FUNCS(SSLCopyPeerCertificates)
         LIBS="$ac_save_LIBS"
+        with_gcrypt=${with_gcrypt:-no}
         with_gnutls=${with_gnutls:-no}
     fi
     if test "$ac_cv_header_CoreAudio_CoreAudio_h" = "yes" -a "$ac_cv_header_AudioUnit_AudioUnit_h" = "yes"
@@ -1266,6 +1268,25 @@
                      [libhal ${notice_platform}development files not found, no legacy dynamic device support.])
 fi
 
+dnl **** Check for libgcrypt ****
+if test "x$with_gcrypt" != "xno"
+then
+    ac_save_CPPFLAGS="$CPPFLAGS"
+    if test "$PKG_CONFIG" != "false"
+    then
+        ac_gcrypt_libs="`$PKG_CONFIG --libs gcrypt 2>/dev/null`"
+        ac_gcrypt_cflags="`$PKG_CONFIG --cflags gcrypt 2>/dev/null`"
+        CPPFLAGS="$CPPFLAGS $ac_gcrypt_cflags"
+    fi
+    AC_CHECK_HEADER([gcrypt.h],
+        [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <gcrypt.h>]], [[static typeof(gcry_control) *func; if (func) return 0;]])],
+            [WINE_CHECK_SONAME(gcrypt,gcry_control,
+                [AC_SUBST(GCRYPTINCL,"$ac_gcrypt_cflags")],,[$ac_gcrypt_libs])])])
+    CPPFLAGS="$ac_save_CPPFLAGS"
+fi
+WINE_NOTICE_WITH(gcrypt,[test "x$ac_cv_lib_soname_gcrypt" = "x"],
+                 [libgcrypt ${notice_platform}development files not found.])
+
 dnl **** Check for libgnutls ****
 if test "x$with_gnutls" != "xno"
 then
--- a/dlls/ntdll/loader.c
+++ b/dlls/ntdll/loader.c
@@ -27,6 +27,13 @@
 #ifdef HAVE_SYS_MMAN_H
 # include <sys/mman.h>
 #endif
+#ifdef SONAME_LIBGCRYPT
+#ifdef HAVE_PTHREAD_H
+#include <errno.h>
+#include <pthread.h>
+#include <gcrypt.h>
+#endif
+#endif
 
 #define NONAMELESSUNION
 #define NONAMELESSSTRUCT
@@ -2833,12 +2840,41 @@
 }
 
 
+#ifdef GCRY_THREAD_OPTION_PTHREAD_IMPL
+GCRY_THREAD_OPTION_PTHREAD_IMPL;
+static void *libgcrypt_handle;
+static typeof(gcry_control) *pgcry_control;
+#endif
+
 /******************************************************************
  *		DllMain   (NTDLL.@)
  */
 BOOL WINAPI DllMain( HINSTANCE inst, DWORD reason, LPVOID reserved )
 {
     if (reason == DLL_PROCESS_ATTACH) LdrDisableThreadCalloutsForDll( inst );
+
+#ifdef GCRY_THREAD_OPTION_PTHREAD_IMPL
+    libgcrypt_handle = wine_dlopen(SONAME_LIBGCRYPT, RTLD_NOW, NULL, 0);
+    if (!libgcrypt_handle)
+    {
+        WARN("Failed to load %s\n", SONAME_LIBGCRYPT);
+    }
+    else
+    {
+        pgcry_control = wine_dlsym(libgcrypt_handle, "gcry_control", NULL, 0);
+        if (!pgcry_control)
+        {
+            ERR("gcry_control() not found in %s\n", SONAME_LIBGCRYPT);
+        }
+        else
+        {
+            gcry_error_t err = pgcry_control(GCRYCTL_SET_THREAD_CBS, &gcry_threads_pthread);
+            if (err)
+                ERR("gcry_control(GCRYCTL_SET_THREAD_CBS) returned %08x\n", err);
+        }
+    }
+#endif
+
     return TRUE;
 }
 
--- a/include/config.h.in
+++ b/include/config.h.in
@@ -1205,6 +1205,9 @@
 /* Define to the soname of the libfreetype library. */
 #undef SONAME_LIBFREETYPE
 
+/* Define to the soname of the libgcrypt library. */
+#undef SONAME_LIBGCRYPT
+
 /* Define to the soname of the libGL library. */
 #undef SONAME_LIBGL
 
