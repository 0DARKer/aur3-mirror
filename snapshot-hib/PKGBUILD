# Maintainer: Sam S. <smls75@gmail.com>

pkgname=snapshot-hib
pkgver=1.28_20121219
_hibver=v28
pkgrel=1
pkgdesc='A platform puzzle game (Humble Bundle version)'
url='http://www.retroaffect.com/games/1/snapshot/'
arch=('i686' 'x86_64')
license=('custom:commercial')
depends=('libgl' 'glu' 'sdl' 'openal' 'libogg' 'libvorbis')
source=('snapshot-hib.desktop')
md5sums=('e3711ef78183ca24ed76618e9a422890')
options=('!strip' '!upx')
PKGEXT='.pkg.tar'

case $CARCH in
    i686)   _arch=x86; _archive_md5='8c893e6152d86801768de5d222b5150e' ;;
    x86_64) _arch=x64; _archive_md5='a9e6bb953e5d443fdb63901d89f65e78' ;;
esac
_archive="Snapshot-linux-${_hibver}-${_arch}.tar.gz"


package() {
  cd $srcdir

  # Get archive
  _get_local_source "${_archive}" "${_archive_md5}" || {
    error "Unable to find the game archive. Please download it from your Humble
           Bundle page, and place it into one of the above locations."
    exit 1; }
  
  # Extract archive
  msg "Starting setup..."
  tar -xzf "${_archive}"
  
  # Fix permissions
  find "${srcdir}/resources" -type f -exec chmod 644 {} \;
  find "${srcdir}/resources" -type d -exec chmod 755 {} \;
  
  # Install game files
  install -d "${pkgdir}/opt/Snapshot/"
  cp -r "${srcdir}/"{resources,snapshot.bin,snapshot,liblua5.1.so.0} \
        "${pkgdir}/opt/Snapshot/"
  
  # Install desktop entry
  install -Dm644 "${pkgname}.desktop" \
                 "${pkgdir}/usr/share/applications/${pkgname}.desktop"

  # Install icon
  install -Dm644 "${srcdir}/resources/art/engine/pic_icon.png" \
                 "${pkgdir}/usr/share/pixmaps/snapshot.png"

  # Install launch script
  install -d "${pkgdir}/usr/bin"
  ln -s "/opt/Snapshot/snapshot" "${pkgdir}/usr/bin/snapshot"
}


###### HELPER FUNCTIONS ######

# Locate a file or folder provided by the user, and symlink it into $srcdir
_get_local_source() {
  msg "Looking for '$1'..."
  declare -A _search=(['build dir']="$startdir"
                      ['$LOCAL_PACKAGE_SOURCES']="$LOCAL_PACKAGE_SOURCES")
  for _key in "${!_search[@]}"; do local _dir="${_search["$_key"]}"
    if [ -z "$_dir" ]; then _dir="<undefined>"; fi
    echo -n "    - in $_key ['$_dir'] ... ";
    if [ ! -e "$_dir/$1" ]; then
      echo "NOT FOUND"
    elif [ "$(md5sum "$_dir/$1"|awk '{print $1}')" != "$2" ]; then
      echo "CHECKSUM FAILED";
    else
      echo "FOUND"; ln -sfT "$(readlink -f "$_dir/$1")" "$srcdir/$1"; break;
    fi
  done
  if [ ! -e "$srcdir/$1" ]; then return 1; fi
}
