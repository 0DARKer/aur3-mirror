Index: source/gameengine/GameLogic/SCA_PythonController.cpp
===================================================================
--- source/gameengine/GameLogic/SCA_PythonController.cpp	(revision 34233)
+++ source/gameengine/GameLogic/SCA_PythonController.cpp	(working copy)
@@ -408,7 +408,13 @@
 		 */
 
 		excdict= PyDict_Copy(m_pythondictionary);
-		resultobj = PyEval_EvalCode((PyCodeObject*)m_bytecode, excdict, excdict);
+
+#if PY_VERSION_HEX >=  0x03020000
+		resultobj = PyEval_EvalCode((PyObject *)m_bytecode, excdict, excdict);
+#else
+		resultobj = PyEval_EvalCode((PyCodeObject *)m_bytecode, excdict, excdict);
+#endif
+
 		/* PyRun_SimpleString(m_scriptText.Ptr()); */
 		break;
 	}
Index: source/blender/python/intern/bpy_rna.c
===================================================================
--- source/blender/python/intern/bpy_rna.c	(revision 34233)
+++ source/blender/python/intern/bpy_rna.c	(working copy)
@@ -1764,7 +1764,7 @@
 		int len= RNA_property_array_length(&self->ptr, self->prop);
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)key, len, &start, &stop, &step, &slicelength) < 0) {
+		if (PySlice_GetIndicesEx((void *)key, len, &start, &stop, &step, &slicelength) < 0) {
 			ret= -1;
 		}
 		else if (slicelength <= 0) {
Index: source/blender/python/intern/bpy_driver.c
===================================================================
--- source/blender/python/intern/bpy_driver.c	(revision 34233)
+++ source/blender/python/intern/bpy_driver.c	(working copy)
@@ -251,7 +251,7 @@
 #else
 	/* evaluate the compiled expression */
 	if (expr_code)
-		retval= PyEval_EvalCode((PyCodeObject *)expr_code, bpy_pydriver_Dict, driver_vars);
+		retval= PyEval_EvalCode((void *)expr_code, bpy_pydriver_Dict, driver_vars);
 #endif
 
 	/* decref the driver vars first...  */
Index: source/blender/python/generic/mathutils_color.c
===================================================================
--- source/blender/python/generic/mathutils_color.c	(revision 34233)
+++ source/blender/python/generic/mathutils_color.c	(working copy)
@@ -274,7 +274,7 @@
 	} else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, COLOR_SIZE, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, COLOR_SIZE, &start, &stop, &step, &slicelength) < 0)
 			return NULL;
 
 		if (slicelength <= 0) {
@@ -307,7 +307,7 @@
 	else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, COLOR_SIZE, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, COLOR_SIZE, &start, &stop, &step, &slicelength) < 0)
 			return -1;
 
 		if (step == 1)
Index: source/blender/python/generic/mathutils_quat.c
===================================================================
--- source/blender/python/generic/mathutils_quat.c	(revision 34233)
+++ source/blender/python/generic/mathutils_quat.c	(working copy)
@@ -543,7 +543,7 @@
 	} else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, QUAT_SIZE, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, QUAT_SIZE, &start, &stop, &step, &slicelength) < 0)
 			return NULL;
 
 		if (slicelength <= 0) {
@@ -577,7 +577,7 @@
 	else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, QUAT_SIZE, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, QUAT_SIZE, &start, &stop, &step, &slicelength) < 0)
 			return -1;
 
 		if (step == 1)
Index: source/blender/python/generic/mathutils_euler.c
===================================================================
--- source/blender/python/generic/mathutils_euler.c	(revision 34233)
+++ source/blender/python/generic/mathutils_euler.c	(working copy)
@@ -504,7 +504,7 @@
 	} else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, EULER_SIZE, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, EULER_SIZE, &start, &stop, &step, &slicelength) < 0)
 			return NULL;
 
 		if (slicelength <= 0) {
@@ -538,7 +538,7 @@
 	else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, EULER_SIZE, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, EULER_SIZE, &start, &stop, &step, &slicelength) < 0)
 			return -1;
 
 		if (step == 1)
Index: source/blender/python/generic/mathutils_matrix.c
===================================================================
--- source/blender/python/generic/mathutils_matrix.c	(revision 34233)
+++ source/blender/python/generic/mathutils_matrix.c	(working copy)
@@ -1673,7 +1673,7 @@
 	} else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, self->rowSize, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, self->rowSize, &start, &stop, &step, &slicelength) < 0)
 			return NULL;
 
 		if (slicelength <= 0) {
@@ -1706,7 +1706,7 @@
 	else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, self->rowSize, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, self->rowSize, &start, &stop, &step, &slicelength) < 0)
 			return -1;
 
 		if (step == 1)
Index: source/blender/python/generic/mathutils_vector.c
===================================================================
--- source/blender/python/generic/mathutils_vector.c	(revision 34233)
+++ source/blender/python/generic/mathutils_vector.c	(working copy)
@@ -1383,7 +1383,7 @@
 	} else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, self->size, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, self->size, &start, &stop, &step, &slicelength) < 0)
 			return NULL;
 
 		if (slicelength <= 0) {
@@ -1416,7 +1416,7 @@
 	else if (PySlice_Check(item)) {
 		Py_ssize_t start, stop, step, slicelength;
 
-		if (PySlice_GetIndicesEx((PySliceObject*)item, self->size, &start, &stop, &step, &slicelength) < 0)
+		if (PySlice_GetIndicesEx((void *)item, self->size, &start, &stop, &step, &slicelength) < 0)
 			return -1;
 
 		if (step == 1)
