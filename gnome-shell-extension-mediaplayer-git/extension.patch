*** extension.js	2011-06-08 14:17:43.488242610 +0200
--- extension.js	2011-06-08 14:15:54.114918860 +0200
***************
*** 99,112 ****
   
      getShuffle: function(callback) {
          this.GetRemote('Shuffle', Lang.bind(this,
!             function(metadata, ex) {
                  if (!ex)
!                     callback(this, metadata);
              }));
      },
      
      setShuffle: function(value) {
          this.SetRemote('Shuffle', value);
      }
  }
  DBus.proxifyPrototype(MediaServer2Player.prototype, MediaServer2PlayerIFace)
--- 99,146 ----
   
      getShuffle: function(callback) {
          this.GetRemote('Shuffle', Lang.bind(this,
!             function(shuffle, ex) {
                  if (!ex)
!                     callback(this, shuffle);
              }));
      },
      
      setShuffle: function(value) {
          this.SetRemote('Shuffle', value);
+ 
+     },
+ 
+     getVolume: function(callback) {
+         this.GetRemote('Volume', Lang.bind(this,
+             function(volume, ex) {
+                 if (!ex)
+                     callback(this, volume);
+             }));
+     },
+ 
+     setVolume: function(value) {
+         this.SetRemote('Volume', value);
+     },
+     
+     getRepeat: function(callback) {
+         this.GetRemote('LoopStatus', Lang.bind(this,
+             function(repeat, ex) {
+                 if (!ex) {
+                     if (repeat == "None")
+                         repeat = false
+                     else
+                         repeat = true
+                     callback(this, repeat);
+                 }
+             }));
+     },
+ 
+     setRepeat: function(value) {
+         if (value)
+             value = "Playlist"
+         else
+             value = "None"
+         this.SetRemote('LoopStatus', value);
      }
  }
  DBus.proxifyPrototype(MediaServer2Player.prototype, MediaServer2PlayerIFace)
***************
*** 123,129 ****
          
          this._mediaServer = new MediaServer2Player();
          this._prop = new Prop();
!         
          this._artist = new PopupMenu.PopupImageMenuItem("Unknown Artist", "system-users", { reactive: false });
          this._album = new PopupMenu.PopupImageMenuItem("Unknown Album", "media-optical", { reactive: false });
          this._title = new PopupMenu.PopupImageMenuItem("Unknown Title", "audio-x-generic", { reactive: false });
--- 157,167 ----
          
          this._mediaServer = new MediaServer2Player();
          this._prop = new Prop();
! 
! //      this._songCover = new St.Bin({});
! //      box.add_actor(this._songCover);
! //      this.menu.addActor(box)
! 
          this._artist = new PopupMenu.PopupImageMenuItem("Unknown Artist", "system-users", { reactive: false });
          this._album = new PopupMenu.PopupImageMenuItem("Unknown Album", "media-optical", { reactive: false });
          this._title = new PopupMenu.PopupImageMenuItem("Unknown Title", "audio-x-generic", { reactive: false });
***************
*** 157,179 ****
          this.menu.addMenuItem(this._prev);
          this.menu.addMenuItem(this._togglePlayback);
          this.menu.addMenuItem(this._next);
!         
          this._shuffle = new PopupMenu.PopupSwitchMenuItem(_("Shuffle"), false);
          this._shuffle.connect('toggled', Lang.bind(this, function(item) {
              this._mediaServer.setShuffle(item.state);
              this._updateSwitches();
          }));
          this.menu.addMenuItem(this._shuffle);
          
          this._updateMetadata();
          this._updateSwitches();
!         this._updateButtons();
          this._prop.connect('PropertiesChanged', Lang.bind(this, function(arg) {
                  this._updateMetadata();
                  this._updateSwitches();
                  this._updateButtons();
              }));
      },
      
      _updateMetadata: function() {
          this._mediaServer.getMetadata(Lang.bind(this,
--- 195,241 ----
          this.menu.addMenuItem(this._prev);
          this.menu.addMenuItem(this._togglePlayback);
          this.menu.addMenuItem(this._next);
! 
!         this.menu.addMenuItem(new PopupMenu.PopupSeparatorMenuItem());
! 
!         this._volume_label = new PopupMenu.PopupImageMenuItem(_("Volume"), "audio-volume-high", { reactive: false });
! 	    this._volume = new PopupMenu.PopupSliderMenuItem(0);
! 	    this._volume.connect('value-changed', Lang.bind(this, function(item) {
! 	    this._mediaServer.setVolume(item._value);
! 	}));        
          this._shuffle = new PopupMenu.PopupSwitchMenuItem(_("Shuffle"), false);
          this._shuffle.connect('toggled', Lang.bind(this, function(item) {
              this._mediaServer.setShuffle(item.state);
              this._updateSwitches();
          }));
+         this._repeat = new PopupMenu.PopupSwitchMenuItem(_("Repeat"), false);
+         this._repeat.connect('toggled', Lang.bind(this, function(item) {
+             this._mediaServer.setRepeat(item.state);
+             this._updateSwitches();
+         }));
+         this.menu.addMenuItem(this._volume_label);
+         this.menu.addMenuItem(this._volume);
          this.menu.addMenuItem(this._shuffle);
+         this.menu.addMenuItem(this._repeat);
          
          this._updateMetadata();
          this._updateSwitches();
!         this._updateVolume();
          this._prop.connect('PropertiesChanged', Lang.bind(this, function(arg) {
                  this._updateMetadata();
                  this._updateSwitches();
+                 this._updateVolume();
                  this._updateButtons();
              }));
      },
+ 
+ //  _updateCover: function (coverpath) {
+ //   	let cover = new Clutter.Texture({
+ //       	keep_aspect_ratio: true,
+ //       	width: 150,
+ //       	filename: coverpath});
+ //   	this._songCover.set_child(cover);
+ //  },
      
      _updateMetadata: function() {
          this._mediaServer.getMetadata(Lang.bind(this,
***************
*** 181,203 ****
                  this._artist.label.set_text(metadata["xesam:artist"].toString());
                  this._album.label.set_text(metadata["xesam:album"].toString());
                  this._title.label.set_text(metadata["xesam:title"].toString());
              }));
      },
      
      _updateSwitches: function() {
!         this._mediaServer.getShuffle(Lang.bind(this, 
              function(sender, shuffle) {
                  this._shuffle.setToggleState(shuffle);
              }
          ));
      },
!     
!     _updateButtons: function() {
!         /*this._mediaServer.getCanGoNext(Lang.bind(this,
!             function(sender, canGoNext) {
!                 this._next.
              }
!         ));*/
      }
  };
  
--- 243,271 ----
                  this._artist.label.set_text(metadata["xesam:artist"].toString());
                  this._album.label.set_text(metadata["xesam:album"].toString());
                  this._title.label.set_text(metadata["xesam:title"].toString());
+ //              this._updateCover(metadata["mpris:artUrl"].substr(7,metadata["mpris:artUrl"].lenght));
              }));
      },
      
      _updateSwitches: function() {
!         this._mediaServer.getShuffle(Lang.bind(this,
              function(sender, shuffle) {
                  this._shuffle.setToggleState(shuffle);
              }
          ));
+         this._mediaServer.getRepeat(Lang.bind(this,
+             function(sender, repeat) {
+                 this._repeat.setToggleState(repeat);
+             }
+         ));
      },
! 
!     _updateVolume: function() {
!         this._mediaServer.getVolume(Lang.bind(this,
!             function(sender, volume) {
!                 this._volume.setValue(volume);
              }
!         ));
      }
  };
  
