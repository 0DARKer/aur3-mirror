# Author: Taras Shpot <mrshpot@gmail.com>

pkgname=rust-git
pkgver=20120121
pkgrel=1
pkgdesc="A safe, concurrent, practical language from Mozilla."
arch=(i686 x86_64)
url="http://www.rust-lang.org/"
license=('MIT')
depends=('gcc-libs')
makedepends=('git' 'gcc'
	'libffi' 'python2'  # for LLVM
	)
optdepends=('pandoc: to build rust.pdf'
	'llnextgen: for build-time grammar verification'
	'naturaldocs: to build library doc')

_gitroot="git://github.com/mozilla/rust.git"
_gitname="rust"

build() {
  cd "$srcdir"
  msg "Connecting to git server...."

  if [ -d $_gitname ] ; then
    cd $_gitname && git pull origin
    msg "The local files are updated."
  else
    git clone $_gitroot $_gitname
  fi

  msg "git checkout done or server timeout"

  rm -rf "$srcdir/$_gitname-build"
  git clone "$srcdir/$_gitname" "$srcdir/$_gitname-build"
  cd "$srcdir/$_gitname-build"

  git submodule update --init --recursive
  ./configure --prefix=/usr
  msg 's/python$/python2/'
  find . -executable -exec grep -qe 'env python$' '{}' ';' -exec sed -i 's/env python$/env python2/' '{}' ';' -print

  msg "Starting make..."
  make || return 1

  mkdir "$pkgdir/usr"
  make install DESTDIR="$pkgdir/usr/"
  
  _docdir=$pkgdir/usr/share/doc/rust
  mkdir -p "$_docdir"
  for _doc in rust.pdf rust.html tutorial.html rust.css core std rust.md ; do
	if ! [ -e "doc/$_doc" ] ; then continue ; fi
	cp -r "doc/$_doc" "$_docdir/"
	chmod -R 644 "$_docdir/$_doc"
	chown -R root:root "$_docdir/$_doc"
  done
  find "$_docdir" -type d -exec chmod 755 '{}' ';'
} 
