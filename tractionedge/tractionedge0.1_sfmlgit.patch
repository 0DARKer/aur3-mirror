diff -Naur tractionedge-v0.1/AnimManager.h tractionedge-v0.1_sfml/AnimManager.h
--- tractionedge-v0.1/AnimManager.h	2010-02-05 10:41:05.000000000 +0000
+++ tractionedge-v0.1_sfml/AnimManager.h	2011-07-08 21:08:36.000000000 +0100
@@ -12,7 +12,7 @@
 
 #include "Item.h"
 #include "Position.h"
-#include <vector>
+#include <deque>
 #include "DisplayManager.h"
 
 class AnimManager: public Item{
diff -Naur tractionedge-v0.1/GfxSFML.cpp tractionedge-v0.1_sfml/GfxSFML.cpp
--- tractionedge-v0.1/GfxSFML.cpp	2010-08-21 12:16:44.000000000 +0100
+++ tractionedge-v0.1_sfml/GfxSFML.cpp	2011-07-09 00:07:31.000000000 +0100
@@ -20,7 +20,7 @@
 {
 	//create window
 	m_mainWindow.Create(sf::VideoMode(SCREENWIDTH, SCREENHEIGHT, 32), "Traction Edge");
-	m_mainWindow.UseVerticalSync(true); 
+	m_mainWindow.EnableVerticalSync(true); 
 	m_mainWindow.EnableKeyRepeat(true);
 	
 	//create lookup table for colors
@@ -48,11 +48,11 @@
 	sf::Font mediumFont;
 	sf::Font largeFont;
 	
-	titleFont.LoadFromFile("fonts/Vtks Revolt.ttf", 60);
-	tinyFont.LoadFromFile("fonts/LiberationMono-Regular.ttf",FONTSIZETINY);
-	smallFont.LoadFromFile("fonts/LiberationMono-Regular.ttf",FONTSIZESMALL);
-	mediumFont.LoadFromFile("fonts/LiberationMono-Regular.ttf",FONTSIZEMEDIUM);
-	largeFont.LoadFromFile("fonts/LiberationMono-Regular.ttf",FONTSIZELARGE);
+	titleFont.LoadFromFile("fonts/Vtks Revolt.ttf"/*, 60*/);
+	tinyFont.LoadFromFile("fonts/LiberationMono-Regular.ttf"/*,FONTSIZETINY*/);
+	smallFont.LoadFromFile("fonts/LiberationMono-Regular.ttf"/*,FONTSIZESMALL*/);
+	mediumFont.LoadFromFile("fonts/LiberationMono-Regular.ttf"/*,FONTSIZEMEDIUM*/);
+	largeFont.LoadFromFile("fonts/LiberationMono-Regular.ttf"/*,FONTSIZELARGE*/);
 
 
 	//create lookup table of fonts
@@ -63,9 +63,9 @@
 	fontLookupMap[BODYLARGE]=largeFont;
 	
 	//create lookup table of font styles
-	styleLookupMap[REGULAR]=sf::String::Regular;
-	styleLookupMap[BOLD]=sf::String::Bold;
-	styleLookupMap[ITALIC]=sf::String::Italic;
+	styleLookupMap[REGULAR]=sf::Text::Regular;
+	styleLookupMap[BOLD]=sf::Text::Bold;
+	styleLookupMap[ITALIC]=sf::Text::Italic;
 	
 	//create lookup table of color shapes
 	for (int i=0;i < 15;i++){
@@ -97,7 +97,8 @@
 	tileImages.resize(0);
 	for (int y=0; y<MASTERTILEIMAGEHEIGHT/TILEHEIGHT;y++){
 		for (int x=0; x<MASTERTILEIMAGEWIDTH/TILEWIDTH; x++) {
-			sf::Image image(TILEWIDTH,TILEHEIGHT,colorLookup[0]);
+			sf::Image image;
+			image.Create(TILEWIDTH,TILEHEIGHT,colorLookup[0]);
 			sf::IntRect rect(x*TILEWIDTH,y*TILEHEIGHT,x*TILEWIDTH+TILEWIDTH,y*TILEHEIGHT+TILEHEIGHT);
 			image.Copy(masterImage,0,0,rect,false);
 			switch (tileImages.size()) {
@@ -214,12 +215,12 @@
 void GfxEngine::renderStrings(std::vector<std::string>& strings, std::vector<int>& colors, std::vector<font_t>& fonts, std::vector<fontStyle_t>& styles, std::vector<int>& sizes, std::vector<Position>& positions)
 {
 	for (int i=0;i < strings.size();i++){
-		sf::String text;
-		text.SetText(strings[i]);
+		sf::Text text;
+		text.SetString(strings[i]);
 		text.SetPosition(positions[i].x,positions[i].y);
 		text.SetColor(colorLookup[colors[i]]);
 		text.SetFont(fontLookupMap[fonts[i]]);
-        text.SetSize(sizes[i]);
+        text.SetCharacterSize(sizes[i]);
 	    text.SetStyle(styleLookupMap[styles[i]]);
 		m_mainWindow.Draw(text);
 	}
@@ -229,7 +230,7 @@
 void GfxEngine::renderFrame(int x1, int y1, int x2, int y2)
 {
 	sf::Shape rect = sf::Shape::Rectangle(x1, y1, x2, y2, colorLookup[COLORBROWN],true,colorLookup[COLORBROWN]);
-	rect.SetOutlineWidth(1);
+	rect.SetOutlineThickness(1);
 	rect.EnableFill(false);
 	m_mainWindow.Draw(rect);
 }
@@ -253,7 +254,7 @@
 {
 	//create window
 	m_mainWindow.Create(sf::VideoMode(SCREENWIDTH, SCREENHEIGHT, 32), "Traction Edge");
-	m_mainWindow.UseVerticalSync(true); 
+	m_mainWindow.EnableVerticalSync(true); 
 	m_mainWindow.EnableKeyRepeat(true);
 }	
 	
@@ -268,7 +269,7 @@
 {
 	//fetch events and send only keypresses back
 	sf::Event Event;
-	while (m_mainWindow.GetEvent(Event))
+	while (m_mainWindow.PollEvent(Event))
 	 {
 		//close and exit
 		if (Event.Type == sf::Event::Closed)
diff -Naur tractionedge-v0.1/GfxSFML.h tractionedge-v0.1_sfml/GfxSFML.h
--- tractionedge-v0.1/GfxSFML.h	2010-04-24 13:22:15.000000000 +0100
+++ tractionedge-v0.1_sfml/GfxSFML.h	2011-07-09 00:16:36.000000000 +0100
@@ -29,7 +29,7 @@
     std::map<char, sf::String> tileLookupMap;
 	std::map<int, sf::Shape> colorShapeMap;
 	std::map<font_t, sf::Font> fontLookupMap;
-	std::map<fontStyle_t, sf::String::Style> styleLookupMap;
+	std::map<fontStyle_t, sf::Text::Style> styleLookupMap;
 	
 	std::vector<sf::Image> tileImages;
     std::vector<std::vector<sf::Sprite> > mapSprites;
diff -Naur tractionedge-v0.1/Utility.cpp tractionedge-v0.1_sfml/Utility.cpp
--- tractionedge-v0.1/Utility.cpp	2010-07-01 10:31:35.000000000 +0100
+++ tractionedge-v0.1_sfml/Utility.cpp	2011-07-08 22:07:20.000000000 +0100
@@ -10,6 +10,7 @@
 #include "GameWorld.h"
 #include "Position.h"
 #include "Utility.h"
+#include <queue>
 
 std::string Utility::wrap(std::string str, int width)
 {
