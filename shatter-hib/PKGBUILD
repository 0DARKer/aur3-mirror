# Maintainer: Sam S. <smls75@gmail.com>

pkgname=shatter-hib
pkgver=1.0.20120917
_hibver=1347954459
pkgrel=2
pkgdesc='A retro-inspired brick-breaking game with unique twists (Humble Bundle version)'
url='http://www.shattergame.com/'
arch=('i686' 'x86_64')
license=('custom:commercial')
if [ $CARCH == i686 ]; then
  depends=('glibc' 'gcc-libs' 'libgl' 'libidn' 'zlib' 'libx11' 'libxfixes'
          'libxdamage' 'libxext' 'libxinerama' 'libxrender' 'libxau' 'libxft'
          'libxxf86vm' 'libxdmcp' 'fontconfig' 'sdl' 'alsa-lib' 'xdg-utils'
          'nvidia-cg-toolkit' 'libtxc_dxtn')
  optdepends=('alsa-plugins: PulseAudio support'
              'libpulse: PulseAudio support')
else
  depends=('lib32-glibc' 'lib32-gcc-libs' 'lib32-libgl' 'lib32-libidn'
           'lib32-zlib' 'lib32-libx11' 'lib32-libxfixes' 'lib32-libxdamage'
           'lib32-libxext' 'lib32-libxinerama' 'lib32-libxrender'
           'lib32-libxau' 'lib32-libxft' 'lib32-libxxf86vm' 'lib32-libxdmcp'
           'lib32-fontconfig' 'lib32-sdl' 'lib32-alsa-lib' 'xdg-utils'
           'lib32-nvidia-cg-toolkit' 'lib32-libtxc_dxtn')
  optdepends=('lib32-alsa-plugins: PulseAudio support'
              'lib32-libpulse: PulseAudio support')
fi
source=('shatter-hib.desktop')
md5sums=('52e9ea073d699ae979167fd4cb4af585')
install='shatter-hib.install'
options=('!upx')
PKGEXT='.pkg.tar'

_installer="shatter-linux-${_hibver}.sh"
_installer_md5="6e9ba377b121126e2b6fe3e3dbbf1dc2"

package() {
  cd $srcdir

  # Get installer
  _get_local_source "${_installer}" --md5 "${_installer_md5}" || {
    error "Unable to find the game archive. Please download it from your Humble
           Bundle page, and place it into one of the above locations."
    exit 1; }

  # Execute installer
  msg "Starting setup..."
  [[ -d "./temp" ]] && rm -r "./temp"
  sh "./${_installer}" --unattended --no-register --packager pacman \
                       --keep --overwrite \
                       --target  "${srcdir}/temp" \
                       --bindir  "${srcdir}/bin" \
                       --datadir "${pkgdir}/opt"

  # Remove bundled libraries & helper binaries (use system packages instead)
  rm -rf "${pkgdir}/opt/Shatter/lib/lib"{Cg.so,CgGL.so,SDL-1.2.so.0}
  rm -rf "${pkgdir}/opt/Shatter/"{xdg-open,xdg-utils}

  # Fix permissions
  chmod 644 "${pkgdir}/opt/Shatter/lib/"*

  # Install desktop entry
  install -Dm644 "${pkgname}.desktop" \
                 "${pkgdir}/usr/share/applications/${pkgname}.desktop"

  # Install icon
  install -Dm644 "${pkgdir}/opt/Shatter/Shatter.png" \
                 "${pkgdir}/usr/share/pixmaps/shatter.png"

  # Install launcher script
  install -d "${pkgdir}/usr/bin"
  ln -s "/opt/Shatter/Shatter.bin.x86" "${pkgdir}/usr/bin/shatter"
  ln -s "/opt/Shatter/SettingsEditor.bin.x86" "${pkgdir}/usr/bin/shatter-settings"
}


###### HELPER FUNCTIONS ######

# Locates a file or folder provided by the user, and symlinks it into $srcdir
_get_local_source() {
  msg "Looking for '$1'..."; rm -f "$srcdir/$1"
  declare -A _search=(['build dir']="$startdir"
                      ['$LOCAL_PACKAGE_SOURCES']="$LOCAL_PACKAGE_SOURCES")
  for _key in "${!_search[@]}"; do local _dir="${_search["$_key"]}"
    echo -n "    - in $_key [${_dir:-<undefined>}] ... ";
    if [[ -z "$_dir" || ! -e "$_dir/$1" ]]; then
      echo "NOT FOUND"
    elif [[ -n $2 && "$(${2#--}sum "$_dir/$1"|awk '{print $1}')" != $3 ]]; then
      echo "CHECKSUM FAILED";
    else
      echo "FOUND"; ln -sfT "$(readlink -f "$_dir/$1")" "$srcdir/$1"; break; fi
  done
  if [ ! -e "$srcdir/$1" ]; then return 1; fi
}
