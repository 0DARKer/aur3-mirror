Index: include/dahdi/kernel.h
===================================================================
--- include/dahdi/kernel.h	(revision 9410)
+++ include/dahdi/kernel.h	(revision 9411)
@@ -1262,6 +1262,10 @@
 #endif /* 2.6.26 */
 #endif /* 2.6.31 */
 
+#ifndef DEFINE_SPINLOCK
+#define DEFINE_SPINLOCK(x)      spinlock_t x = SPIN_LOCK_UNLOCKED
+#endif
+
 #ifndef DMA_BIT_MASK
 #define DMA_BIT_MASK(n)	(((n) == 64) ? ~0ULL : ((1ULL<<(n))-1))
 #endif
Index: drivers/dahdi/wct4xxp/base.c
===================================================================
--- drivers/dahdi/wct4xxp/base.c	(revision 9410)
+++ drivers/dahdi/wct4xxp/base.c	(revision 9411)
@@ -2225,11 +2225,7 @@
 static int syncsrc = 0;
 static int syncnum = 0 /* -1 */;
 static int syncspan = 0;
-#ifdef DEFINE_SPINLOCK
 static DEFINE_SPINLOCK(synclock);
-#else
-static spinlock_t synclock = SPIN_LOCK_UNLOCKED;
-#endif
 
 static void __t4_set_rclk_src(struct t4 *wc, int span)
 {
Index: drivers/dahdi/dahdi_dynamic_loc.c
===================================================================
--- drivers/dahdi/dahdi_dynamic_loc.c	(revision 9410)
+++ drivers/dahdi/dahdi_dynamic_loc.c	(revision 9411)
@@ -57,11 +57,7 @@
 
 #include <dahdi/kernel.h>
 
-#ifdef DEFINE_SPINLOCK
 static DEFINE_SPINLOCK(zlock);
-#else
-static spinlock_t zlock = SPIN_LOCK_UNLOCKED;
-#endif
 
 static struct ztdlocal {
 	unsigned short key;
Index: drivers/dahdi/dahdi_transcode.c
===================================================================
--- drivers/dahdi/dahdi_transcode.c	(revision 9410)
+++ drivers/dahdi/dahdi_transcode.c	(revision 9411)
@@ -46,7 +46,7 @@
  * is used as a simplistic way to spread the load amongst the different hardware
  * transcoders in the system. */
 static LIST_HEAD(active_list);
-static spinlock_t translock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(translock);
 
 EXPORT_SYMBOL(dahdi_transcoder_register);
 EXPORT_SYMBOL(dahdi_transcoder_unregister);
Index: drivers/dahdi/dahdi-base.c
===================================================================
--- drivers/dahdi/dahdi-base.c	(revision 9410)
+++ drivers/dahdi/dahdi-base.c	(revision 9411)
@@ -375,13 +375,8 @@
 
 static LIST_HEAD(zaptimers);
 
-#ifdef DEFINE_SPINLOCK
 static DEFINE_SPINLOCK(zaptimerlock);
 static DEFINE_SPINLOCK(bigzaplock);
-#else
-static spinlock_t zaptimerlock = SPIN_LOCK_UNLOCKED;
-static spinlock_t bigzaplock = SPIN_LOCK_UNLOCKED;
-#endif
 
 struct dahdi_zone {
 	atomic_t refcount;
Index: drivers/dahdi/xpp/xpp_usb.c
===================================================================
--- drivers/dahdi/xpp/xpp_usb.c	(revision 9410)
+++ drivers/dahdi/xpp/xpp_usb.c	(revision 9411)
@@ -242,7 +242,7 @@
 
 };
 
-static	spinlock_t	xusb_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(xusb_lock);
 static xusb_t *xusb_array[MAX_BUSES] = {};
 static unsigned bus_count = 0;
 
Index: drivers/dahdi/xpp/xbus-pcm.c
===================================================================
--- drivers/dahdi/xpp/xbus-pcm.c	(revision 9410)
+++ drivers/dahdi/xpp/xbus-pcm.c	(revision 9411)
@@ -55,8 +55,8 @@
  * I.e: one of our AB or dahdi_ticker
  */
 static struct xpp_ticker	*ref_ticker = NULL;
-static spinlock_t		ref_ticker_lock = SPIN_LOCK_UNLOCKED;
-static spinlock_t		elect_syncer_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(ref_ticker_lock);
+static DEFINE_SPINLOCK(elect_syncer_lock);
 static bool			force_dahdi_sync = 0;	/* from /sys/bus/astribanks/drivers/xppdrv/sync */
 static xbus_t			*global_ticker;
 static struct xpp_ticker	global_ticks_series;
Index: drivers/dahdi/xpp/mmapdrv.c
===================================================================
--- drivers/dahdi/xpp/mmapdrv.c	(revision 9410)
+++ drivers/dahdi/xpp/mmapdrv.c	(revision 9411)
@@ -68,7 +68,7 @@
 
 static xbus_t *global_xbus;
 static bool tx_ready = 1;
-static spinlock_t tx_ready_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(tx_ready_lock);
 static struct xframe_queue txpool;
 static unsigned int pcm_in_pool_count;
 static bool disconnecting;
Index: drivers/dahdi/xpp/xbus-core.c
===================================================================
--- drivers/dahdi/xpp/xbus-core.c	(revision 9410)
+++ drivers/dahdi/xpp/xbus-core.c	(revision 9411)
@@ -78,7 +78,7 @@
 static void transport_destroy(xbus_t *xbus);
 
 /* Data structures */
-static spinlock_t		xbuses_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(xbuses_lock);
 #ifdef	CONFIG_PROC_FS
 static struct proc_dir_entry	*proc_xbuses = NULL;
 #endif
@@ -405,7 +405,7 @@
 	return (xpacket_t *)(frm->packets + newlen - len);
 }
 
-static spinlock_t serialize_dump_xframe = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(serialize_dump_xframe);
 
 static void do_hexdump(const char msg[], byte *data, uint16_t len)
 {
Index: drivers/dahdi/xpp/parport_debug.c
===================================================================
--- drivers/dahdi/xpp/parport_debug.c	(revision 9410)
+++ drivers/dahdi/xpp/parport_debug.c	(revision 9411)
@@ -36,7 +36,7 @@
 void flip_parport_bit(unsigned char bitnum)
 {
 	static unsigned char	last_value;
-	spinlock_t	lock = SPIN_LOCK_UNLOCKED;
+	DEFINE_SPINLOCK(lock);
 	unsigned long	flags;
 	unsigned char	mask;
 	unsigned char	value;
Index: drivers/dahdi/tor2.c
===================================================================
--- drivers/dahdi/tor2.c	(revision 9410)
+++ drivers/dahdi/tor2.c	(revision 9411)
@@ -1129,11 +1129,7 @@
 static int syncsrc = 0;
 static int syncnum = 0 /* -1 */;
 static int syncspan = 0;
-#ifdef DEFINE_SPINLOCK
 static DEFINE_SPINLOCK(synclock);
-#else
-static spinlock_t synclock = SPIN_LOCK_UNLOCKED;
-#endif
 
 static int tor2_findsync(struct tor2 *tor)
 {
Index: drivers/dahdi/dahdi_dynamic_ethmf.c
===================================================================
--- drivers/dahdi/dahdi_dynamic_ethmf.c	(revision 9410)
+++ drivers/dahdi/dahdi_dynamic_ethmf.c	(revision 9411)
@@ -129,11 +129,7 @@
 /**
  * Lock for adding and removing items in ethmf_list
  */
-#ifdef DEFINE_SPINLOCK
 static DEFINE_SPINLOCK(ethmf_lock);
-#else
-static spinlock_t ethmf_lock = SPIN_LOCK_UNLOCKED;
-#endif
 
 /**
  * The active list of all running spans
@@ -401,7 +397,7 @@
 	unsigned char addr[ETH_ALEN];
 	int spans_ready = 0, index = 0;
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 10)
-	static spinlock_t lock = SPIN_LOCK_UNLOCKED;
+	static DEFINE_SPINLOCK(lock);
 	unsigned long flags;
 #endif
 
Index: drivers/dahdi/dahdi_dynamic.c
===================================================================
--- drivers/dahdi/dahdi_dynamic.c	(revision 9410)
+++ drivers/dahdi/dahdi_dynamic.c	(revision 9411)
@@ -113,13 +113,8 @@
 	struct list_head list;
 };
 
-#ifdef DEFINE_SPINLOCK
 static DEFINE_SPINLOCK(dspan_lock);
 static DEFINE_SPINLOCK(driver_lock);
-#else
-static spinlock_t dspan_lock = SPIN_LOCK_UNLOCKED;
-static spinlock_t driver_lock = SPIN_LOCK_UNLOCKED;
-#endif
 
 static LIST_HEAD(dspan_list);
 static LIST_HEAD(driver_list);
Index: drivers/dahdi/dahdi_dynamic_eth.c
===================================================================
--- drivers/dahdi/dahdi_dynamic_eth.c	(revision 9410)
+++ drivers/dahdi/dahdi_dynamic_eth.c	(revision 9411)
@@ -42,11 +42,7 @@
 
 /* We take the raw message, put it in an ethernet frame, and add a
    two byte addressing header at the top for future use */
-#ifdef DEFINE_SPINLOCK
 static DEFINE_SPINLOCK(zlock);
-#else
-static spinlock_t zlock = SPIN_LOCK_UNLOCKED;
-#endif
 
 static struct sk_buff_head skbs;
 
Index: drivers/dahdi/wcte12xp/wcte12xp.h
===================================================================
--- drivers/dahdi/wcte12xp/wcte12xp.h	(revision 9410)
+++ drivers/dahdi/wcte12xp/wcte12xp.h	(revision 9411)
@@ -77,8 +77,6 @@
 #define TYPE_T1	1
 #define TYPE_E1	2
 
-extern spinlock_t ifacelock;
-
 struct command {
 	struct list_head node;
 	struct completion complete;
Index: drivers/dahdi/wcte12xp/base.c
===================================================================
--- drivers/dahdi/wcte12xp/base.c	(revision 9410)
+++ drivers/dahdi/wcte12xp/base.c	(revision 9411)
@@ -87,7 +87,6 @@
 };
 
 static struct t1 *ifaces[WC_MAX_IFACES];
-spinlock_t ifacelock = SPIN_LOCK_UNLOCKED;
 
 struct t1_desc {
 	const char *name;
