--- a/build.gradle
+++ b/build.gradle
@@ -15,9 +15,9 @@ allprojects {
     apply plugin: "eclipse"
     apply plugin: "idea"
 
-    version = '0.2.2a'
+    version = '0.2.2b'
     ext {
-        versionCode = 14
+        versionCode = 15
         appName = 'shattered-pixel-dungeon'
 	    appTitle = 'Shattered Pixel Dungeon'
 	    appId = 'com.shatteredpixel.shatteredpixeldungeon'
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/Bones.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/Bones.java
@@ -47,15 +47,17 @@ public class Bones {
         depth = Dungeon.depth;
 
         //heroes which have won the game, who die far above their farthest depth, or who are challenged drop no bones.
-        if (Statistics.amuletObtained || (Statistics.deepestFloor - 5) >= depth || Dungeon.challenges > 0)
+        if (Statistics.amuletObtained || (Statistics.deepestFloor - 5) >= depth || Dungeon.challenges > 0) {
+            depth = -1;
             return;
+        }
 
 		item = pickItem(Dungeon.hero);
-		
+
 		Bundle bundle = new Bundle();
 		bundle.put( LEVEL, depth );
 		bundle.put( ITEM, item );
-		
+
 		try {
 			OutputStream output = Game.instance.openFileOutput( BONES_FILE );
 			Bundle.write( bundle, output );
@@ -118,30 +120,27 @@ public class Bones {
         }
         return item;
     }
-	
+
 	public static Item get() {
 		if (depth == -1) {
 
-            //challenged heroes cannot find bones.
-            if (Dungeon.challenges > 0)
-                return null;
-
 			try {
 				InputStream input = Game.instance.openFileInput( BONES_FILE ) ;
 				Bundle bundle = Bundle.read( input );
 				input.close();
-				
+
 				depth = bundle.getInt( LEVEL );
 				item = (Item)bundle.get( ITEM );
-				
+
 				return get();
-				
+
 			} catch (Exception e) {
 				return null;
 			}
-			
+
 		} else {
-			if (depth == Dungeon.depth) {
+            //heroes who are challenged cannot find bones
+			if (depth == Dungeon.depth && Dungeon.challenges == 0) {
 				Game.instance.deleteFile( BONES_FILE );
 				depth = 0;
 				
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/effects/Wound.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/effects/Wound.java
@@ -63,10 +63,12 @@ public class Wound extends Image {
 	}
 	
 	public static void hit( Char ch, float angle ) {
-		Wound w = (Wound)ch.sprite.parent.recycle( Wound.class );
-		ch.sprite.parent.bringToFront( w );
-		w.reset( ch.pos );
-		w.angle = angle;
+        if (ch.sprite.parent != null) {
+            Wound w = (Wound) ch.sprite.parent.recycle(Wound.class);
+            ch.sprite.parent.bringToFront(w);
+            w.reset(ch.pos);
+            w.angle = angle;
+        }
 	}
 	
 	public static void hit( int pos ) {
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Piercing.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Piercing.java
@@ -39,7 +39,7 @@ public class Piercing extends Enchantment {
 			int d = defender.pos - attacker.pos;
 			int pos = defender.pos + d;
 			
-			do {
+			while (pos >= 0 && pos < Level.LENGTH) {
 				
 				Char ch = Actor.findChar( pos );
 				if (ch == null) {
@@ -56,7 +56,7 @@ public class Piercing extends Enchantment {
 				ch.sprite.flash();
 				
 				pos += d;
-			} while (pos >= 0 && pos < Level.LENGTH);
+			}
 			
 			return true;
 			
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Boomerang.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Boomerang.java
@@ -116,7 +116,17 @@ public class Boomerang extends MissileWeapon {
 	
 	@Override
 	public String desc() {
-		return 
+		String info =
 			"Thrown to the enemy this flat curved wooden missile will return to the hands of its thrower.";
+        switch (imbue) {
+            case LIGHT:
+                info += "\n\nIt was balanced to be lighter. ";
+                break;
+            case HEAVY:
+                info += "\n\nIt was balanced to be heavier. ";
+                break;
+            case NONE:
+        }
+        return info;
 	}
 }
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/levels/Level.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/levels/Level.java
@@ -572,7 +572,9 @@ public abstract class Level implements Bundlable {
             (Dungeon.isChallenged( Challenges.NO_HEALING ) && item instanceof PotionOfHealing) ||
             (Dungeon.isChallenged( Challenges.NO_HERBALISM ) && (item instanceof Plant.Seed || item instanceof Dewdrop))) {
 
-            return new Heap();
+            Heap heap = new Heap();
+            GameScene.add( heap );
+            return heap;
 
         }
 
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/levels/SewerBossLevel.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/levels/SewerBossLevel.java
@@ -168,8 +168,6 @@ public class SewerBossLevel extends RegularLevel {
 		paintWater();
 		paintGrass();
 		
-		placeTraps();
-		
 		return true;
 	}
 		
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/scenes/InterlevelScene.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/scenes/InterlevelScene.java
@@ -25,6 +25,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
 import com.shatteredpixel.shatteredpixeldungeon.items.potions.Potion;
 import com.shatteredpixel.shatteredpixeldungeon.levels.Level;
+import com.shatteredpixel.shatteredpixeldungeon.ui.Window;
 import com.shatteredpixel.shatteredpixeldungeon.windows.WndError;
 import com.shatteredpixel.shatteredpixeldungeon.windows.WndStory;
 import com.watabou.noosa.BitmapText;
@@ -34,6 +35,7 @@
 import com.watabou.noosa.audio.Sample;
 
 import java.io.FileNotFoundException;
+import java.io.IOException;
 import java.util.ArrayList;
 
 public class InterlevelScene extends PixelScene {
@@ -76,7 +78,7 @@
 	@Override
 	public void create() {
 		super.create();
-		
+
 		String text = "";
 		switch (mode) {
 		case DESCEND:
@@ -107,7 +109,7 @@
 		
 		phase = Phase.FADE_IN;
 		timeLeft = TIME_TO_FADE;
-		
+
 		thread = new Thread() {
 			@Override
 			public void run() {
@@ -115,13 +117,13 @@
 				try {
 					
 					Generator.reset();
-					
-					Sample.INSTANCE.load( 
+
+					Sample.INSTANCE.load(
 						Assets.SND_OPEN,
 						Assets.SND_UNLOCK,
 						Assets.SND_ITEM,
-						Assets.SND_DEWDROP, 
-						Assets.SND_HIT, 
+						Assets.SND_DEWDROP,
+						Assets.SND_HIT,
 						Assets.SND_MISS,
 						Assets.SND_STEP,
 						Assets.SND_WATER,
@@ -157,7 +159,7 @@
 						Assets.SND_GHOST,
 						Assets.SND_SECRET,
 						Assets.SND_BONES );
-					
+
 					switch (mode) {
 					case DESCEND:
 						descend();
@@ -186,11 +188,11 @@
 				} catch (FileNotFoundException e) {
 					
 					error = ERR_FILE_NOT_FOUND;
-					
-				} catch (Exception e ) {
-					
+
+				} catch (IOException e ) {
+
 					error = ERR_GENERIC;
-					
+
 				}
 				
 				if (phase == Phase.STATIC && error == null) {
@@ -246,8 +248,8 @@
 			break;
 		}
 	}
-	
-	private void descend() throws Exception {
+
+	private void descend() throws IOException {
 
         Level level;
         ArrayList<Item> fallingItems = new ArrayList<Item>();
@@ -290,7 +292,7 @@
 
 	}
 	
-	private void fall() throws Exception {
+	private void fall() throws IOException {
 
         Level level = Dungeon.level;
 
@@ -321,7 +323,7 @@
 		Dungeon.switchLevel( level, fallIntoPit ? level.pitCell() : level.randomRespawnCell() );
 	}
 	
-	private void ascend() throws Exception {
+	private void ascend() throws IOException {
 		Actor.fixTime();
 		
 		Dungeon.saveLevel();
@@ -330,7 +332,7 @@
 		Dungeon.switchLevel( level, level.exit );
 	}
 	
-	private void returnTo() throws Exception {
+	private void returnTo() throws IOException {
 		
 		Actor.fixTime();
 		
@@ -340,7 +342,7 @@
 		Dungeon.switchLevel( level, Level.resizingNeeded ? level.adjustPos( returnPos ) : returnPos );
 	}
 	
-	private void restore() throws Exception {
+	private void restore() throws IOException {
 		
 		Actor.fixTime();
 		
@@ -354,7 +356,7 @@
 		}
 	}
 	
-	private void resurrect() throws Exception {
+	private void resurrect() throws IOException {
 		
 		Actor.fixTime(); 
 		
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/scenes/WelcomeScene.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/scenes/WelcomeScene.java
@@ -37,7 +37,10 @@ public class WelcomeScene extends PixelScene {
     private static final String TXT_SameVer =
             "v0.2.2a addresses an issue players were having when they tried to start a new game, " +
             "corrects a few small inconsistencies with challenges, and makes a few small improvements to " +
-            "level generation.\n\nHappy Dungeoneering!";
+            "level generation.\n\n" +
+            "v0.2.2b addresses issues players were having on runs with challenges enabled " +
+            "and fixes a variety of other smaller bugs as well.\n\n" +
+            "Happy Dungeoneering!";
 
     private static final String TXT_Future =
             "It seems that your current saves are from a future version of Shattered Pixel Dungeon!\n\n"+
diff --git a/core/src/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java b/core/src/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java
index 46b1202..6583db8 100644
--- a/core/src/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java
+++ b/core/src/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java
@@ -33,7 +33,7 @@ public class AboutScene extends PixelScene {
 
     private static final String TXT_SHPX =
             "Design, Code, & Graphics: Evan\n\n" +
-            "LibGDX port: Pururigro\n\n" +
+            "LibGDX port: Prurigro\n\n" +
             "Shattered Pixel is Evan's online home, check it out:";
 
     private static final String LNK_SHPX = "ShatteredPixel.com";
