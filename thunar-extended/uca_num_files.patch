diff -ru Thunar-1.0.2.orig/plugins/thunar-uca/thunar-uca-editor.c Thunar-1.0.2/plugins/thunar-uca/thunar-uca-editor.c
--- Thunar-1.0.2.orig/plugins/thunar-uca/thunar-uca-editor.c	2010-06-03 12:13:51.000000000 -0400
+++ Thunar-1.0.2/plugins/thunar-uca/thunar-uca-editor.c	2010-06-03 18:16:29.000000000 -0400
@@ -66,6 +66,8 @@
   GtkWidget   *command_entry;
   GtkWidget   *parameter_entry;
   GtkWidget   *patterns_entry;
+  GtkWidget   *upper_button;
+  GtkWidget   *lower_button;
   GtkWidget   *directories_button;
   GtkWidget   *audio_files_button;
   GtkWidget   *image_files_button;
@@ -109,6 +111,8 @@
   GtkWidget      *table;
   GtkWidget      *hbox;
   GtkWidget      *vbox;
+  GtkWidget	 *spin;
+  GtkAdjustment  *adj;
 
   /* configure the dialog properties */
   gtk_dialog_add_button (GTK_DIALOG (uca_editor), GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL);
@@ -385,7 +389,27 @@
   gtk_table_attach (GTK_TABLE (table), uca_editor->patterns_entry, 1, 2, 0, 1, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
   gtk_label_set_mnemonic_widget (GTK_LABEL (label), uca_editor->patterns_entry);
   gtk_widget_show (uca_editor->patterns_entry);
-
+  
+  /* widgets for setting the upper and lower bounds */
+  label = gtk_label_new ("Minimum number of files:");
+  gtk_widget_show (label);
+  gtk_table_attach (GTK_TABLE (table), label, 0, 1, 1, 2, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  adj = (GtkAdjustment *) gtk_adjustment_new (-1.0, -1.0, 9999.0, 1.0, 1.0, 0.0);
+  spin = gtk_spin_button_new (adj, 1.0, 0);
+  gtk_widget_show (spin);
+  gtk_table_attach (GTK_TABLE (table), spin, 1, 2, 1, 2, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  uca_editor->lower_button = spin;
+  
+  label = gtk_label_new ("Maximum number of files:");
+  gtk_widget_show (label);
+  gtk_table_attach (GTK_TABLE (table), label, 0, 1, 2, 3, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  adj = (GtkAdjustment *) gtk_adjustment_new (-1.0, -1.0, 9999.0, 1.0, 1.0, 0.0);
+  spin = gtk_spin_button_new (adj, 1.0, 0);
+  gtk_widget_show (spin);
+  gtk_table_attach (GTK_TABLE (table), spin, 1, 2, 2, 3, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  uca_editor->upper_button = spin;
+  
+  
   /* set Atk label relation for the entry */
   object = gtk_widget_get_accessible (uca_editor->patterns_entry);
   relations = atk_object_ref_relation_set (gtk_widget_get_accessible (label));
@@ -394,15 +418,15 @@
   g_object_unref (G_OBJECT (relation));
 
   align = g_object_new (GTK_TYPE_ALIGNMENT, "height-request", 0, NULL);
-  gtk_table_attach (GTK_TABLE (table), align, 0, 2, 1, 2, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  gtk_table_attach (GTK_TABLE (table), align, 0, 2, 3, 4, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
   gtk_widget_show (align);
 
   label = g_object_new (GTK_TYPE_LABEL, "label", _("Appears if selection contains:"), "xalign", 0.0f, NULL);
-  gtk_table_attach (GTK_TABLE (table), label, 0, 2, 2, 3, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  gtk_table_attach (GTK_TABLE (table), label, 0, 2, 4, 5, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
   gtk_widget_show (label);
 
   align = g_object_new (GTK_TYPE_ALIGNMENT, "left-padding", 18, NULL);
-  gtk_table_attach (GTK_TABLE (table), align, 0, 2, 3, 4, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  gtk_table_attach (GTK_TABLE (table), align, 0, 2, 5, 6, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
   gtk_widget_show (align);
 
   itable = gtk_table_new (3, 2, TRUE);
@@ -436,11 +460,11 @@
   gtk_widget_show (uca_editor->other_files_button);
 
   align = g_object_new (GTK_TYPE_ALIGNMENT, "height-request", 12, NULL);
-  gtk_table_attach (GTK_TABLE (table), align, 0, 2, 4, 5, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  gtk_table_attach (GTK_TABLE (table), align, 0, 2, 6, 7, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
   gtk_widget_show (align);
 
   hbox = gtk_hbox_new (FALSE, 6);
-  gtk_table_attach (GTK_TABLE (table), hbox, 0, 2, 5, 6, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
+  gtk_table_attach (GTK_TABLE (table), hbox, 0, 2, 7, 8, GTK_EXPAND | GTK_FILL, GTK_FILL, 0, 0);
   gtk_widget_show (hbox);
 
   image = gtk_image_new_from_stock (GTK_STOCK_DIALOG_INFO, GTK_ICON_SIZE_DND);
@@ -786,6 +810,8 @@
 {
   ThunarUcaTypes types;
   gchar         *description;
+  gchar		*upper;
+  gchar		*lower;
   gchar         *patterns;
   gchar         *command;
   gchar         *icon;
@@ -798,6 +824,8 @@
   /* determine the current values from the model */
   gtk_tree_model_get (GTK_TREE_MODEL (uca_model), iter,
                       THUNAR_UCA_MODEL_COLUMN_DESCRIPTION, &description,
+		      THUNAR_UCA_MODEL_COLUMN_UPPER, &upper,
+		      THUNAR_UCA_MODEL_COLUMN_LOWER, &lower,
                       THUNAR_UCA_MODEL_COLUMN_PATTERNS, &patterns,
                       THUNAR_UCA_MODEL_COLUMN_COMMAND, &command,
                       THUNAR_UCA_MODEL_COLUMN_TYPES, &types,
@@ -816,9 +844,13 @@
   gtk_entry_set_text (GTK_ENTRY (uca_editor->patterns_entry), (patterns != NULL) ? patterns : "");
   gtk_entry_set_text (GTK_ENTRY (uca_editor->command_entry), (command != NULL) ? command : "");
   gtk_entry_set_text (GTK_ENTRY (uca_editor->name_entry), (name != NULL) ? name : "");
+  gtk_spin_button_set_value (GTK_SPIN_BUTTON (uca_editor->upper_button), (upper != NULL) ? g_strtod (upper, NULL) : -1.0);
+  gtk_spin_button_set_value (GTK_SPIN_BUTTON (uca_editor->lower_button), (lower != NULL) ? g_strtod (lower, NULL) : -1.0);
 
   /* cleanup */
   g_free (description);
+  g_free (upper);
+  g_free (lower);
   g_free (patterns);
   g_free (command);
   g_free (icon);
@@ -841,16 +873,24 @@
                         ThunarUcaModel  *uca_model,
                         GtkTreeIter     *iter)
 {
+  gchar    *upper_string;
+  gchar    *lower_string;
+  
   g_return_if_fail (THUNAR_UCA_IS_EDITOR (uca_editor));
   g_return_if_fail (THUNAR_UCA_IS_MODEL (uca_model));
   g_return_if_fail (iter != NULL);
-
+  
+  upper_string = g_strdup_printf ("%d", gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (uca_editor->upper_button)));
+  lower_string = g_strdup_printf ("%d", gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (uca_editor->lower_button)));
+  
   thunar_uca_model_update (uca_model, iter,
                            gtk_entry_get_text (GTK_ENTRY (uca_editor->name_entry)),
                            gtk_entry_get_text (GTK_ENTRY (uca_editor->description_entry)),
                            thunar_uca_editor_get_icon_name (uca_editor),
                            gtk_entry_get_text (GTK_ENTRY (uca_editor->command_entry)),
                            gtk_entry_get_text (GTK_ENTRY (uca_editor->patterns_entry)),
+			   upper_string,
+			   lower_string,
                            thunar_uca_editor_get_types (uca_editor));
 }
 
diff -ru Thunar-1.0.2.orig/plugins/thunar-uca/thunar-uca-model.c Thunar-1.0.2/plugins/thunar-uca/thunar-uca-model.c
--- Thunar-1.0.2.orig/plugins/thunar-uca/thunar-uca-model.c	2010-06-03 12:13:51.000000000 -0400
+++ Thunar-1.0.2/plugins/thunar-uca/thunar-uca-model.c	2010-06-03 18:14:24.000000000 -0400
@@ -69,6 +69,8 @@
   PARSER_NAME,
   PARSER_COMMAND,
   PARSER_PATTERNS,
+  PARSER_UPPER,
+  PARSER_LOWER,
   PARSER_DESCRIPTION,
   PARSER_DIRECTORIES,
   PARSER_AUDIO_FILES,
@@ -158,6 +160,8 @@
   gchar         *icon;
   gchar         *command;
   gchar        **patterns;
+  gchar		*upper;
+  gchar		*lower;
   ThunarUcaTypes types;
 
   /* derived attributes */
@@ -179,6 +183,8 @@
   GString        *command;
   GString        *patterns;
   GString        *description;
+  GString	 *upper;
+  GString	 *lower;
   gboolean        description_use;
   guint           description_match;
   ThunarUcaTypes  types;
@@ -322,6 +328,12 @@
 
     case THUNAR_UCA_MODEL_COLUMN_PATTERNS:
       return G_TYPE_STRING;
+    
+    case THUNAR_UCA_MODEL_COLUMN_UPPER:
+      return G_TYPE_STRING;
+    
+    case THUNAR_UCA_MODEL_COLUMN_LOWER:
+      return G_TYPE_STRING;
 
     case THUNAR_UCA_MODEL_COLUMN_TYPES:
       return G_TYPE_UINT;
@@ -419,6 +431,14 @@
       g_value_take_string (value, str);
       break;
 
+    case THUNAR_UCA_MODEL_COLUMN_UPPER:
+      g_value_set_static_string (value, item->upper);
+      break;
+    
+    case THUNAR_UCA_MODEL_COLUMN_LOWER:
+      g_value_set_static_string (value, item->lower);
+      break;
+
     case THUNAR_UCA_MODEL_COLUMN_TYPES:
       g_value_set_uint (value, item->types);
       break;
@@ -575,6 +595,8 @@
   parser.icon = g_string_new (NULL);
   parser.command = g_string_new (NULL);
   parser.patterns = g_string_new (NULL);
+  parser.upper = g_string_new (NULL);
+  parser.lower = g_string_new (NULL);
   parser.description = g_string_new (NULL);
   xfce_stack_push (parser.stack, PARSER_START);
 
@@ -586,6 +608,8 @@
   /* cleanup */
   g_markup_parse_context_free (context);
   g_string_free (parser.description, TRUE);
+  g_string_free (parser.upper, TRUE);
+  g_string_free (parser.lower, TRUE);
   g_string_free (parser.patterns, TRUE);
   g_string_free (parser.command, TRUE);
   g_string_free (parser.icon, TRUE);
@@ -603,6 +627,8 @@
 {
   /* release the previous values... */
   g_strfreev (item->patterns);
+  g_free (item->upper);
+  g_free (item->lower);
   g_free (item->description);
   g_free (item->stock_id);
   g_free (item->command);
@@ -654,6 +680,8 @@
           g_string_truncate (parser->name, 0);
           g_string_truncate (parser->command, 0);
           g_string_truncate (parser->patterns, 0);
+	  g_string_truncate (parser->upper, 0);
+	  g_string_truncate (parser->lower, 0);
           g_string_truncate (parser->description, 0);
           xfce_stack_push (parser->stack, PARSER_ACTION);
         }
@@ -706,6 +734,16 @@
           g_string_truncate (parser->patterns, 0);
           xfce_stack_push (parser->stack, PARSER_PATTERNS);
         }
+      else if (strcmp (element_name, "upper") == 0)
+        {
+          g_string_truncate (parser->upper, 0);
+          xfce_stack_push (parser->stack, PARSER_UPPER);
+        }
+      else if (strcmp (element_name, "lower") == 0)
+        {
+          g_string_truncate (parser->lower, 0);
+          xfce_stack_push (parser->stack, PARSER_LOWER);
+        }
       else if (strcmp (element_name, "description") == 0)
         {
           for (n = 0; attribute_names[n] != NULL; ++n)
@@ -813,6 +851,8 @@
                                    parser->icon->str,
                                    parser->command->str,
                                    parser->patterns->str,
+				   parser->upper->str,
+				   parser->lower->str,
                                    parser->types);
         }
       else
@@ -838,7 +878,17 @@
       if (strcmp (element_name, "patterns") != 0)
         goto unknown_element;
       break;
-
+    
+    case PARSER_UPPER:
+      if (strcmp (element_name, "upper") != 0)
+        goto unknown_element;
+      break;
+    
+    case PARSER_LOWER:
+      if (strcmp (element_name, "lower") != 0)
+        goto unknown_element;
+      break;
+    
     case PARSER_DESCRIPTION:
       if (strcmp (element_name, "description") != 0)
         goto unknown_element;
@@ -916,6 +966,14 @@
       g_string_append_len (parser->patterns, text, text_len);
       break;
 
+    case PARSER_UPPER:
+      g_string_append_len (parser->upper, text, text_len);
+      break;
+   
+    case PARSER_LOWER:
+      g_string_append_len (parser->lower, text, text_len);
+      break;
+
     case PARSER_DESCRIPTION:
       if (parser->description_use)
         g_string_append_len (parser->description, text, text_len);
@@ -1032,6 +1090,7 @@
   GList                 *lp, *mp;
   gint                   n_files;
   gint                   i, m, n;
+  gint			 upper, lower;
 
   g_return_val_if_fail (THUNAR_UCA_IS_MODEL (uca_model), NULL);
 
@@ -1078,7 +1137,16 @@
     {
       /* check if we can just ignore this item */
       item = (ThunarUcaModelItem *) lp->data;
-      if (!item->multiple_selection && n_files > 1)
+      upper = g_strtod(item->upper, NULL);
+      lower = g_strtod(item->lower, NULL);
+      
+      if (upper == -1)
+        upper = n_files;
+      
+      if (lower == -1)
+        lower = n_files;
+      
+      if (((!item->multiple_selection) && (n_files > 1)) || (n_files > upper) || (n_files < lower))
         continue;
 
       /* match the specified files */
@@ -1249,6 +1317,8 @@
                          const gchar    *icon,
                          const gchar    *command,
                          const gchar    *patterns,
+			 const gchar	*upper,
+			 const gchar	*lower,
                          ThunarUcaTypes  types)
 {
   ThunarUcaModelItem *item;
@@ -1269,6 +1339,10 @@
     item->icon = g_strdup (icon);
   if (G_LIKELY (command != NULL && *command != '\0'))
     item->command = g_strdup (command);
+  if (G_LIKELY (upper != NULL && *upper != '\0'))
+    item->upper = g_strdup (upper);
+  if (G_LIKELY (lower != NULL && *lower != '\0'))
+    item->lower = g_strdup (lower);
   if (G_LIKELY (description != NULL && *description != '\0'))
     item->description = g_strdup (description);
   item->types = types;
@@ -1358,11 +1432,15 @@
                                          "<name>%s</name>"
                                          "<command>%s</command>"
                                          "<description>%s</description>"
+					 "<upper>%s</upper>"
+					 "<lower>%s</lower>"
                                          "<patterns>%s</patterns>",
                                          (item->icon != NULL) ? item->icon : "",
                                          (item->name != NULL) ? item->name : "",
                                          (item->command != NULL) ? item->command : "",
                                          (item->description != NULL) ? item->description : "",
+					 (item->upper != NULL) ? item->upper : "",
+					 (item->lower != NULL) ? item->lower : "",
                                          patterns);
       fprintf (fp, "%s", escaped);
       g_free (patterns);
diff -ru Thunar-1.0.2.orig/plugins/thunar-uca/thunar-uca-model.h Thunar-1.0.2/plugins/thunar-uca/thunar-uca-model.h
--- Thunar-1.0.2.orig/plugins/thunar-uca/thunar-uca-model.h	2010-06-03 12:13:51.000000000 -0400
+++ Thunar-1.0.2/plugins/thunar-uca/thunar-uca-model.h	2010-06-03 17:55:27.000000000 -0400
@@ -41,6 +41,8 @@
   THUNAR_UCA_MODEL_COLUMN_DESCRIPTION,
   THUNAR_UCA_MODEL_COLUMN_ICON,
   THUNAR_UCA_MODEL_COLUMN_COMMAND,
+  THUNAR_UCA_MODEL_COLUMN_UPPER,
+  THUNAR_UCA_MODEL_COLUMN_LOWER,
   THUNAR_UCA_MODEL_COLUMN_PATTERNS,
   THUNAR_UCA_MODEL_COLUMN_TYPES,
   THUNAR_UCA_MODEL_COLUMN_STOCK_ID,
@@ -92,6 +94,8 @@
                                                  const gchar            *icon,
                                                  const gchar            *command,
                                                  const gchar            *patterns,
+						 const gchar		*upper,
+						 const gchar		*lower,
                                                  ThunarUcaTypes          types) G_GNUC_INTERNAL;
 
 gboolean        thunar_uca_model_save           (ThunarUcaModel         *uca_model,
diff -ru Thunar-1.0.2.orig/plugins/thunar-uca/uca.xml.in Thunar-1.0.2/plugins/thunar-uca/uca.xml.in
--- Thunar-1.0.2.orig/plugins/thunar-uca/uca.xml.in	2010-06-03 12:13:51.000000000 -0400
+++ Thunar-1.0.2/plugins/thunar-uca/uca.xml.in	2010-06-03 18:18:30.000000000 -0400
@@ -36,11 +36,25 @@
   <action>
     <icon>Terminal</icon>
     <patterns>*</patterns>
+    <lower>-1</lower>
+    <upper>-1</upper>
     <_name>Open Terminal Here</_name>
     <command>exo-open --working-directory %f --launch TerminalEmulator</command>
     <_description>Example for a custom action</_description>
     
     <directories/>
   </action>
-
+  
+  <action>
+    <icon>preferences-desktop-wallpaper</icon>
+    <patterns>*</patterns>
+    <lower>0</lower>
+    <upper>1</upper>
+    <_name>Set as wallpaper</_name>
+    <command>xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitor0/image-path --create -t string -s \"%f\"</command>
+    <_description>Implementing the entire wallpaper plugin with just a bit of XML</_description>
+    
+    <image-files/>
+  </action>
+  
 </actions>
