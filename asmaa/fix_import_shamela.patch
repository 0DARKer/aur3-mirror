--- Asmaa/asm_add_original.py	2014-05-04 00:42:14.450618014 +0100
+++ Asmaa/asm_add.py	2014-05-04 00:26:49.968105199 +0100
@@ -289,15 +289,21 @@
             while (Gtk.events_pending()): Gtk.main_iteration()
             v += 1
             a = str(c[2])[-1]
-            b  = join(self.path_shamila, 'Books', a, str(c[2])+'.mdb')
-            if getsize(b) > 50000000: continue
+            if c[3] == 0:
+                b  = join(self.path_shamila, 'Books', a, str(c[2])+'.mdb')
+            else:
+                b  = join(self.path_shamila, 'Books', 'Archive', str(c[3])+'.mdb')
+            # if getsize(b) > 50000000: continue
             if self.stop_n == 1: 
                 asm_customs.erro(self.parent, 'تم إيقاف عملية التحويل')
                 return
             if self.db_bok != None: 
                 self.db_bok.destroy_db()
                 del self.db_bok
-            self.db_bok = DB_from_MDB(b, ['book', 'title'], ':memory:')
+            if c[3] == 0:
+                self.db_bok = DB_from_MDB(b, ['book', 'title'], ':memory:')
+            else:
+                self.db_bok = DB_from_MDB(b, ['b'+str(c[2]), 't'+str(c[2])], ':memory:')
             self.lab_status.set_text('({} \ {})  يجري تحويل كتاب {} '.format(v, n_books, c[0]))
             try: asm_import_bok.export_mdb(self.path_shamila, con_ls, cur_ls, cur_main, cur_sp, self.db_bok.cur, c[2])
             except OSError: asm_customs.erro(self.parent, "حزمة mdbtools \nيرجى تثبيتها لأجل استيراد الكتب غير مثبتة"); raise
@@ -387,10 +393,10 @@
         groups = cur_main.execute('SELECT id, name FROM acat').fetchall()
         self.store_books.clear()
         for a in groups:
-            aa = self.store_books.append(None, [True, a[1], a[0]])
-            books = cur_main.execute('SELECT bkid, bk FROM abok WHERE cat=?', (a[0],)).fetchall()
+            aa = self.store_books.append(None, [True, a[1], a[0], 0])
+            books = cur_main.execute('SELECT bkid, bk, archive FROM abok WHERE cat=?', (a[0],)).fetchall()
             for b in books:
-                self.store_books.append(aa, [True, b[1], b[0]])
+                self.store_books.append(aa, [True, b[1], b[0], b[2]])
         self.all_books.set_active(True)
     
     def remove_iter(self, *a):
@@ -411,10 +417,11 @@
         if bool0 == fixed: 
             nm_book = model.get_value(i, 1)
             id_book = model.get_value(i, 2)
+            archive = model.get_value(i, 3)
             i0 = model.iter_parent(i)
             if i0 != None: 
                 nm_group = model.get_value(i0, 1)
-                self.selected_books.append([nm_book, nm_group, id_book])
+                self.selected_books.append([nm_book, nm_group, id_book, archive])
             return False
     
     def select_inselect(self, model, path, i, bool1):
@@ -618,7 +625,7 @@
         hbox.pack_start(b_show, False, False, 0)
         box.pack_start(hbox, False, False, 0)
         
-        self.store_books = Gtk.TreeStore(GObject.TYPE_BOOLEAN, GObject.TYPE_STRING, GObject.TYPE_INT)
+        self.store_books = Gtk.TreeStore(GObject.TYPE_BOOLEAN, GObject.TYPE_STRING, GObject.TYPE_INT, GObject.TYPE_INT)
         self.tree_books = Gtk.TreeView()
         self.tree_books.set_model(self.store_books)
         self.sel_books = self.tree_books.get_selection()
@@ -657,7 +664,7 @@
         self.btn_convert.connect('clicked', self.start_convert)
         hbox.pack_start(self.btn_convert, False, False, 0)
         self.btn_stop = Gtk.Button("إيقاف")
-        self.btn_convert.connect('clicked', self.stop_operation)
+        self.btn_stop.connect('clicked', self.stop_operation)
         self.btn_stop.set_sensitive(False)
         hbox.pack_start(self.btn_stop, False, False, 0)
         area.pack_start(self.notebook, True, True, 0)



--- Asmaa/asm_import_bok_original.py	2014-05-04 00:41:59.520312669 +0100
+++ Asmaa/asm_import_bok.py	2014-05-04 00:44:39.240240647 +0100
@@ -60,11 +60,13 @@
                 s = re.compile(r'.*create table')
                 e = re.compile(r'\);.*')
                 self.new_cmd = re.sub(s, 'create table', cmd)
+                self.new_cmd = re.sub(u'\[|\]', '', self.new_cmd)
                 self.new_cmd = re.sub(u'create table '+table.lower(), u'create table '+new_table, self.new_cmd)
                 self.new_cmd = re.sub(e, ');', self.new_cmd)
                 self.get_cols()
                 for col in self.cols:
                     new_col = re.sub(r'/', '', col)
+                    new_col = re.sub(u'\[|\]', '', new_col)
                     new_col = re.sub('\s+', '_', new_col)
                     self.new_cmd = re.sub(col, new_col, self.new_cmd) 
                 self.cur.execute(self.new_cmd)
@@ -192,7 +194,7 @@
                          shrooh_book, com_book, inf_page, inf_title, sharh, tafsir, is_tafsir, is_sharh, version)
 
 def export_mdb(path, con_ls, cur_ls, cur_main, cur_sp, cur, bkid):
-    cur_main.execute('SELECT bkid, bk, cat, betaka, inf, authno, islamshort ,tafseernam FROM abok WHERE bkid=?', 
+    cur_main.execute('SELECT bkid, bk, cat, betaka, inf, authno, islamshort ,tafseernam, archive FROM abok WHERE bkid=?', 
                      (bkid, ))
     inf_book = cur_main.fetchone()
     cur_main.execute('SELECT id, name, catord, lvl FROM acat WHERE id=?', (inf_book[2], ))
@@ -203,21 +205,27 @@
     shorts_book = cur_sp.fetchall()
     cur_sp.execute('SELECT matn, matnid, sharh, sharhid FROM shrooh WHERE matnid=?', (inf_book[0], ))
     shrooh_book = cur_sp.fetchall()
-    cur.execute('SELECT id, nass, part, page FROM book')
+    if inf_book[8] == 0:
+        nm_book_table = 'book'
+        nm_title_table = 'title'
+    else:
+        nm_book_table = 'b'+str(bkid)
+        nm_title_table = 't'+str(bkid)
+    cur.execute('SELECT id, nass, part, page FROM {}'.format(nm_book_table))
     inf_page = cur.fetchall()
     if len(shrooh_book) > 0: 
         is_sharh = 1
-        sharh = cur.execute('SELECT hno FROM book').fetchall()
+        sharh = cur.execute('SELECT hno FROM {}'.format(nm_book_table)).fetchall()
     else: 
         is_sharh = 0
         sharh = []
     if len(inf_book[7]) > 2:
-        tafsir = cur.execute('SELECT sora, aya, na FROM book').fetchall()
+        tafsir = cur.execute('SELECT sora, aya, na FROM {}'.format(nm_book_table)).fetchall()
         is_tafsir = 1
     else: 
         tafsir = []
         is_tafsir = 0
-    cur.execute('SELECT id, tit, lvl , sub FROM title')
+    cur.execute('SELECT id, tit, lvl , sub FROM {}'.format(nm_title_table))
     inf_title = cur.fetchall()
     version = 0.1
     create_asmaa_bok(con_ls, cur_ls, inf_book, inf_group, shorts_book, shrooh_book, com_book, 
