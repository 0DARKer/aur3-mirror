diff -rupN orig/premake4.lua new/premake4.lua
--- orig/premake4.lua	2014-01-07 02:04:42.000000000 +0100
+++ new/premake4.lua	2014-01-11 15:24:31.871056819 +0100
@@ -17,7 +17,7 @@ solution "TEngine"
 		"src/physfs",
 		"src/zlib",
 		"src/bzip2",
-		"/opt/SDL-2.0/include/SDL2",
+		"/usr/include/SDL2",
 		"/usr/include/GL",
 	}
 	if _OPTIONS.lua == "default" then includedirs{"src/lua"}
@@ -53,8 +53,7 @@ configuration "macosx"
 configuration "Debug"
 	defines { }
 	flags { "Symbols" }
-	buildoptions { "-ggdb" }
-	buildoptions { "-O3" }
+	buildoptions { "-g" }
 	targetdir "bin/Debug"
 	if _OPTIONS.luaassert then defines {"LUA_USE_APICHECK"} end
 	if _OPTIONS.pedantic then buildoptions { "-Wall" } end
diff -rupN orig/src/core_lua.c new/src/core_lua.c
--- orig/src/core_lua.c	2014-01-09 00:36:07.000000000 +0100
+++ new/src/core_lua.c	2014-01-11 15:25:37.271055746 +0100
@@ -612,12 +612,17 @@ static int sdl_new_font(lua_State *L)
 	auxiliar_setclass(L, "sdl{font}", -1);
 
 	SDL_RWops *src = PHYSFSRWOPS_openRead(name);
-	if (!src)
+ 	if (!src)
+ 	{
+		char *sysfont = NULL;
+		asprintf(&sysfont, "/usr/share/fonts/TTF/%s", basename(name));
+		*f = TTF_OpenFont(sysfont, size);
+		free(sysfont);
+ 	}
+	else 
 	{
-		return luaL_error(L, "could not load font: %s (%d)", name, size);
-	}
-
-	*f = TTF_OpenFontRW(src, TRUE, size);
+		*f = TTF_OpenFontRW(src, TRUE, size);
+ 	}
 
 	if (!*f)
 	{
