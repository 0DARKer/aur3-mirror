# Maintainer: gruppenpest <gruppenpest@softhome.net>
# Previous maintainer: OK <ok100.ok100.ok100@gmail.com>
# Based on kernel-eee PKGBUILD by Dan McGee <dan@archlinux.org>

# AUR workaround
pkgname=linux-eee-ck

true && pkgname=(linux-eee-ck linux-eee-ck-headers)
_ckver=ck1
_srcname=linux-3.6
pkgver=3.6.9
pkgrel=3
_bfsver=0.425
arch=('i686')
license=('GPL2')
options=('!strip')
url="http://www.kernel.org"
source=("http://www.kernel.org/pub/linux/kernel/v3.x/${_srcname}.tar.xz"
"http://www.kernel.org/pub/linux/kernel/v3.x/patch-${pkgver}.xz"
"http://ck.kolivas.org/patches/3.0/3.6/3.6-${_ckver}/patch-3.6-${_ckver}.bz2"
        'change-default-console-loglevel.patch'
	'module-init-wait-3.6.patch'
	'module-symbol-waiting-3.6.patch'
	'irq_cfg_pointer-3.6.6.patch'
        'fat-3.6.x.patch'
        '61-eee-ssd.rules'
        'kernelconfig')

md5sums=('1a1760420eac802c541a20ab51a093d1'
	 'a7c656034599f90dcbc50895b69022aa'
	 '43068822b9292432617b81d10ca757d3'
         '9d3c56a4b999c8bfbd4018089a62f662'
	 '3b8568f67c0a9a9d809273710f86001d'
	 'd9ecff2d89c19218cdffca1838851608'
         '426c26705da667fea6dae34e8ef94185'
         '218edfabd3d3ed5872c2d42a6f61cf57'
         '6100b3e13c4c24ce3c887a1ae36ab7f1'
	 'e1c249f0959c2326abdc16239c5ffe38')

build() {
  # get into the linux source directory and start some magic
  cd $srcdir/$_srcname

  # add upstream patch
  patch -p1 -i "$srcdir/patch-$pkgver"
  # set DEFAULT_CONSOLE_LOGLEVEL to 4 (same value as the 'quiet' kernel param)
  # remove this when a Kconfig knob is made available by upstream
  # (relevant patch sent upstream: https://lkml.org/lkml/2011/7/26/227)
  patch -Np1 -i ../change-default-console-loglevel.patch

  # fix module initialisation
  patch -Np1 -i ../module-init-wait-3.6.patch
  patch -Np1 -i ../module-symbol-waiting-3.6.patch
  
  # fix FS#32615 - Check for valid irq_cfg pointer in smp_irq_move_cleanup_interrupt
  patch -Np1 -i ../irq_cfg_pointer-3.6.6.patch

  # fix cosmetic fat issue
  # https://bugs.archlinux.org/task/32916
  patch -Np1 -i "${srcdir}/fat-3.6.x.patch"

  # apply ck patch
  echo "=> Applying $_ckver patchset..."
  patch -Np1 -i ../patch-3.6-$_ckver

  ### Clean tree and copy ARCH config over
  msg "Running make mrproper to clean source tree"
  make mrproper
  cp ../kernelconfig ./.config

  # set extraversion to pkgrel
  sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile

  # don't run depmod on 'make install'. We'll do this ourselves in packaging
  sed -i '2iexit 0' scripts/depmod.sh

  msg "Running make prepare for you to enable patched options of your choosing"
  make prepare

  # to modify kernel settings, uncomment the following line
  # make menuconfig

  # build!
  make ${MAKEFLAGS} LOCALVERSION= bzImage modules || return 1
}

package_linux-eee-ck() {
  _Kpkgdesc='The Linux Kernel and modules for the Asus Eee PC 701, with Brain Fuck Scheduler v${_bfsver} and all the goodies in the ${_ckver} patchset.'
  pkgdesc="${_Kpkgdesc}"
  
  provides=("linux-eee-ck=${pkgver}")
  depends=('coreutils' 'module-init-tools')
  optdepends=('crda: for wireless regulatory domain support'
            'iw: for wireless configuration support')
  replaces=('linux-uvc-eee-svn' 'madwifi-eee-svn')
  install='linux-eee-ck.install'

  KARCH=x86

  # install our modules
  cd $srcdir/$_srcname

  # get kernel version
  _kernver="$(make LOCALVERSION= kernelrelease)"

  mkdir -p $pkgdir/{usr,lib/modules,boot}
  make LOCALVERSION= INSTALL_MOD_PATH=$pkgdir modules_install || return 1

  # remove the junk symlinks
  cd $srcdir/$_srcname
  rm $pkgdir/lib/modules/$_kernver/{build,source}

  # install the kernel
  cp arch/x86/boot/bzImage $pkgdir/boot/vmlinuz-eee-ck

  # udev rules for SSD drives/SD Cards, they is not rotational
  mkdir -p $pkgdir/lib/udev/rules.d/
  install -m644 $srcdir/61-eee-ssd.rules $pkgdir/lib/udev/rules.d/

  # gzip -9 all modules
  find "$pkgdir" -name '*.ko' -exec gzip -9 {} \;
  # Now we call depmod...
  depmod -b "$pkgdir" -F System.map "$_kernver"

  # move module tree /lib -> /usr/lib
  mv "$pkgdir/lib" "$pkgdir/usr"
}

package_linux-eee-ck-headers() {
  _Hpkgdesc='Header files and scripts to build modules for linux-ck.'
  pkgdesc="${_Hpkgdesc}"
  depends=('linux-eee-ck') # added to keep kernel and headers packages matched
  replaces=('kernel26-ck-headers')

  mkdir -p ${pkgdir}/lib/modules/${_kernver}
  cd ${pkgdir}/lib/modules/${_kernver}
  ln -sf ../../../usr/src/${_kernver} build

  cd ${srcdir}/$_srcname
  install -D -m644 Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Makefile
  install -D -m644 kernel/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/kernel/Makefile
  install -D -m644 .config \
    ${pkgdir}/usr/src/linux-${_kernver}/.config
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include

  for i in acpi asm-generic config crypto drm generated linux math-emu \
    media net pcmcia scsi sound trace video xen; do
    cp -a include/$i ${pkgdir}/usr/src/linux-${_kernver}/include/
  done

  # copy arch includes for external modules
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/x86
  cp -a arch/x86/include ${pkgdir}/usr/src/linux-${_kernver}/arch/x86/

  # copy files necessary for later builds, like nvidia and vmware
  cp Module.symvers ${pkgdir}/usr/src/linux-${_kernver}
  cp -a scripts ${pkgdir}/usr/src/linux-${_kernver}
  # fix permissions on scripts dir
  chmod og-w -R ${pkgdir}/usr/src/linux-${_kernver}/scripts
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/.tmp_versions

  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel

  cp arch/$KARCH/Makefile ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  if [ "$CARCH" = "i686" ]; then
    cp arch/$KARCH/Makefile_32.cpu ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  fi
  cp arch/$KARCH/kernel/asm-offsets.s ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel/

  # add headers for lirc package
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video
  cp drivers/media/video/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/
  for i in bt8xx cpia2 cx25840 cx88 em28xx pwc saa7134 sn9c102; do
   mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
   cp -a drivers/media/video/$i/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
  done
  # add docbook makefile
  install -D -m644 Documentation/DocBook/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Documentation/DocBook/Makefile
  # add dm headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  cp drivers/md/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  # add inotify.h
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/linux
  cp include/linux/inotify.h ${pkgdir}/usr/src/linux-${_kernver}/include/linux/
  # add wireless headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  cp net/mac80211/*.h ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/

  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/9912
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core
  cp drivers/media/dvb/dvb-core/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core/

  # add dvb headers for http://mcentral.de/hg/~mrec/em28xx-new
  # in reference to:
  # http://bugs.archlinux.org/task/13146
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/dvb/frontends/lgdt330x.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/video/msp3400-driver.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/

  # add dvb headers  
  # in reference to:
  # http://bugs.archlinux.org/task/20402
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb
  cp drivers/media/dvb/dvb-usb/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends
  cp drivers/media/dvb/frontends/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners
  cp drivers/media/common/tuners/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners/

  # add xfs and shmem for aufs building
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/mm
  cp fs/xfs/xfs_sb.h ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs/xfs_sb.h
  # copy in Kconfig files
  for i in `find . -name "Kconfig*"`; do 
    mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/`echo $i | sed 's|/Kconfig.*||'`
    cp $i ${pkgdir}/usr/src/linux-${_kernver}/$i
  done

  chown -R root.root ${pkgdir}/usr/src/linux-${_kernver}
  find ${pkgdir}/usr/src/linux-${_kernver} -type d -exec chmod 755 {} \;

  # strip scripts directory
  find ${pkgdir}/usr/src/linux-${_kernver}/scripts  -type f -perm -u+w 2>/dev/null | while read binary ; do
  case "$(file -bi "$binary")" in
    *application/x-sharedlib*) # Libraries (.so)
    /usr/bin/strip $STRIP_SHARED "$binary";;
    *application/x-archive*) # Libraries (.a)
    /usr/bin/strip $STRIP_STATIC "$binary";;
    *application/x-executable*) # Binaries
    /usr/bin/strip $STRIP_BINARIES "$binary";;
    esac 
  done 
  # remove unneeded architectures
  rm -rf ${pkgdir}/usr/src/linux-${_kernver}/arch/{alpha,arm,arm26,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,microblaze,mn10300,parisc,powerpc,ppc,s390,sh,sh64,sparc,sparc64,um,v850,xtensa}
}

# Global pkgdesc and depends are here so that they will be picked up by AUR
pkgdesc='Linux Kernel and modules with the ck1 patchset featuring the Brain Fuck Scheduler v0.425.'
