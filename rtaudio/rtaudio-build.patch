--- rtaudio-4.0.12.old/rtaudio-config.in	2008-11-22 04:32:52.000000000 +0100
+++ rtaudio-4.0.12/rtaudio-config.in	2013-04-19 21:48:57.333879465 +0200
@@ -8,11 +8,11 @@
 CXXFLAGS="@CXXFLAGS@"
 CPPFLAGS="@CPPFLAGS@"
 
-if (test "x$1" == "x--libs") ; then
+if (test "x$1" = "x--libs") ; then
   echo "$LIBRARY"
-elif (test "x$1" == "x--cxxflags") ; then
+elif (test "x$1" = "x--cxxflags") ; then
   echo "$CXXFLAGS"
-elif (test "x$1" == "x--cppflags") ; then
+elif (test "x$1" = "x--cppflags") ; then
   echo "$CPPFLAGS"
 else
   echo "Unknown option: $1"
--- rtaudio-4.0.12.old/Makefile.in	2013-04-15 17:30:29.000000000 +0200
+++ rtaudio-4.0.12/Makefile.in	2013-04-20 01:22:58.133925938 +0200
@@ -6,27 +6,24 @@
 
 OBJECTS	= RtAudio.o @objects@
 
-STATIC = librtaudio.a
 SHARED = @sharedlib@
 RELEASE = 4.0.12
 MAJOR = 4
-LIBRARIES = $(STATIC) $(SHARED)
+LIBRARIES = $(SHARED)
 
 CC       = @CXX@
 AR       = @AR@
 RANLIB   = @RANLIB@
 
 DEFS     = @CPPFLAGS@
-CFLAGS   = @CXXFLAGS@ -Iinclude -fPIC
+CFLAGS   += @CXXFLAGS@ -Iinclude -fPIC
 
 all : $(LIBRARIES)
 
-tests:
+check:
 	cd tests && $(MAKE) all
 
 $(LIBRARIES): $(OBJECTS)
-	$(AR) ruv $(STATIC) $(OBJECTS)
-	ranlib $(STATIC)
 	$(CC) -fPIC @libflags@ $(OBJECTS) @LIBS@
 	$(LN) -sf @sharedname@ $(SHARED)
 	$(LN) -sf @sharedname@ $(SHARED).$(MAJOR)

--- rtaudio-4.0.12.old/librtaudio.pc.in	2013-04-15 17:30:29.000000000 +0200
+++ rtaudio-4.0.12/librtaudio.pc.in	2013-04-20 01:22:07.523924114 +0200
@@ -1,4 +1,4 @@
-prefix=/usr/local
+prefix=/usr
 exec_prefix=${prefix}
 libdir=${exec_prefix}/lib
 includedir=${prefix}/include        
--- rtaudio-4.0.12.old/RtAudio.h	2013-04-15 19:56:31.000000000 +0200
+++ rtaudio-4.0.12/RtAudio.h	2013-04-22 23:17:31.377502435 +0200
@@ -50,7 +50,7 @@
 #include "RtError.h"
 
 // RtAudio version
-static const std::string VERSION( "4.0.12" );
+static const std::string MY_VERSION( "4.0.12" );
 
 /*! \typedef typedef unsigned long RtAudioFormat;
     \brief RtAudio data format type.
@@ -322,7 +322,7 @@
   };
 
   //! A static function to determine the current RtAudio version.
-  static std::string getVersion( void ) { return VERSION; } 
+  static std::string getVersion( void ) { return MY_VERSION; } 
 
   //! A static function to determine the available compiled audio APIs.
   /*!
