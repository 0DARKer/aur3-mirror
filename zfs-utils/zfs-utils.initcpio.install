build() {
    add_module "zfs"
    add_module "zcommon"
    add_module "znvpair"
    add_module "zavl"
    add_module "zunicode"
    add_module "spl"
    add_module "zlib_deflate"
    add_binary "/usr/sbin/zfs"
    add_binary "/usr/sbin/zpool"
    add_binary "/usr/bin/zpool_layout"
    add_binary "/usr/lib/udev/zpool_id"
    add_binary "/usr/lib/udev/zvol_id"
    add_binary "/sbin/mount.zfs"
    add_binary "/usr/bin/hostid"
    add_file "/usr/lib/udev/rules.d/60-zpool.rules"
    add_file "/usr/lib/udev/rules.d/60-zvol.rules"
    add_file "/usr/lib/udev/rules.d/90-zfs.rules"
    add_file "/etc/zfs/zdev.conf"
    add_runscript "zfs"
    [ -f "/etc/zfs/zpool.cache" ] && add_file "/etc/zfs/zpool.cache"
    [ -f "/etc/hostid" ] && add_file "/etc/hostid"
}

help() {
cat<<HELPEOF
This hook allows you to use ZFS as your root filesystem.

Command Line Setup:

You can append the following arguments to your kernel parameters list. See
https://wiki.archlinux.org/index.php/Kernel_parameters for more information.

To use ZFS as your boot filesystem:

    zfs=bootfs or zfs=auto or root=zfs

To use a pool or dataset:

    zfs=<pool/dataset>

To force importing of a ZFS pool:

    zfs_force=1

    If set to 1, this will use "zpool import -f" when attempting to import
    pools.

To override the /etc/hostid:

    spl_hostid=0x00bab10c

    By default the hostid will be used from /etc/hostid, you can use spl_hostid
    to override it.

Examples:

To use bootfs on your pool, use

    zfs=bootfs

This will setup your root using tank/root zfs pool.

    zfs=tank/root
HELPEOF
}

# vim: set ts=4 sw=4 ft=sh et:
