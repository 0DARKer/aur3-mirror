#! /bin/bash

ACTIVE = "no"

post_install() {
  getent group mediabrowser >/dev/null || groupadd mediabrowser
  getent passwd mediabrowser >/dev/null || useradd -c 'Media Browser Server' -g mediabrowser -b /var/lib/mediabrowser-server -r -M mediabrowser -s /bin/false
  if [ ! $? -eq 0 ]
    then
    echo "WARNING COULDN'T CREATE MEDIABROWSER USERID, MAKE SURE I HAVE PERMISSON TO DO THAT!"
      exit 1
  fi
  
  systemctl --system daemon-reload
  echo "Fixing file permissions...Please be patient."
  if [ ! -d /var/lib/mediabrowser-server ]; then
    mkdir /var/lib/mediabrowser-server
  fi 
  chown -R mediabrowser:mediabrowser /var/lib/mediabrowser-server
  chown -R mediabrowser:mediabrowser /usr/lib/mediabrowser-server
  echo "MediaBrowser Server (MBS) is a home media server built using other popular open-source technologies."
  echo ""
  echo "MBS is still in active development. If you have any issues with the software, please report them at www.mediabrowser.tv/community."
  echo ""
  echo "MBS uses the system's mono, ffmpeg, and ffprobe binaries. If any of those binaries are not in /usr/bin, please create a custom environment file in /etc and configure the systemd service file to point to that environment file. For more information on how to customize systemd files, please refer to https://wiki.archlinux.org/index.php/Systemd#Editing_provided_unit_files."
  echo ""
  echo "You may use the environment file that is included with this package at /etc/conf.d/mediabrowser.conf as a template for your custom environment file."
  echo ""
  echo "To run the server, you will need to use the systemd service as their are a number of configurations that are needed for the server to run."
  echo ""
  echo "If you wish to run the binary from the command line, you will need to enter /var/lib/mediabrowser-server and run /usr/bin/mediabrowser-server with the environment variables in /etc/conf.d/mediabrowser-server.conf set."
  echo ""
  echo "The server's web client is located at localhost:8096/mediabrowser. You will need to access it to configure the server."
  echo ""
  echo "Enjoy the show!"
}

pre_install() {
  if [ $(systemctl is-active mediabrowser-server) == "active" ]; then
    $ACTIVE = "yes"
    echo "Stopping mediabrowser-server..."
    systemctl stop mediabrowser-server
  fi;
}

pre_upgrade() {
  pre_install;
}

pre_remove() {
  pre_install;
}

post_upgrade() {
  if [ $ACTIVE = "yes" ] ; then
    sudo systemctl --system daemon-reload
    sudo systemctl start mediabrowser-server.service
  fi
}

post_remove() {
  echo "To remove all data related to MediaBrowser, delete" 
  echo "/var/lib/mediabrowser-server."
}
