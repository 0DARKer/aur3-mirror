Index: src/MainWindow.cpp
===================================================================
--- src/gui/src/MainWindow.cpp	(revision 1374)
+++ src/gui/src/MainWindow.cpp	(working copy)
@@ -147,6 +147,7 @@
 
 	m_pTrayIcon = new QSystemTrayIcon(this);
 	m_pTrayIcon->setContextMenu(m_pTrayIconMenu);
+	connect(m_pTrayIcon, SIGNAL(activated(QSystemTrayIcon::ActivationReason)), this, SLOT(iconActivated(QSystemTrayIcon::ActivationReason)));
 
 	setIcon(synergyDisconnected);
 
@@ -187,8 +188,10 @@
 {
 	// the next two must come BEFORE loading groupServerChecked and groupClientChecked or
 	// disabling and/or enabling the right widgets won't automatically work
-	m_pRadioExternalConfig->setChecked(settings().value("externalConfig", false).toBool());
-	m_pRadioInternalConfig->setChecked(settings().value("internalConfig", true).toBool());
+	bool bUseExternalConfig = settings().value("externalConfig", false).toBool();
+	m_pRadioExternalConfig->setChecked(bUseExternalConfig);
+	// use the inverse as default, otherwise internalConfig [group] will always be true...
+	m_pRadioInternalConfig->setChecked(settings().value("internalConfig", !bUseExternalConfig).toBool());
 
 	m_pGroupServer->setChecked(settings().value("groupServerChecked", false).toBool());
 	m_pLineEditConfigFile->setText(settings().value("configFile", QDir::homePath() + "/" + synergyConfigName).toString());
@@ -204,9 +207,10 @@
 	connect(m_pActionStopSynergy, SIGNAL(triggered()), this, SLOT(stopSynergy()));
 	connect(m_pActionQuit, SIGNAL(triggered()), qApp, SLOT(quit()));
 	connect(&m_versionChecker, SIGNAL(updateFound(const QString&)), this, SLOT(updateFound(const QString&)));
+	// Of course there'a a guard here, the TrayIcon has not been created yet!
+	//if (m_pTrayIcon)
+	//	connect(m_pTrayIcon, SIGNAL(activated(QSystemTrayIcon::ActivationReason)), this, SLOT(iconActivated(QSystemTrayIcon::ActivationReason)));
 
-	if (m_pTrayIcon)
-		connect(m_pTrayIcon, SIGNAL(activated(QSystemTrayIcon::ActivationReason)), this, SLOT(iconActivated(QSystemTrayIcon::ActivationReason)));
 }
 
 void MainWindow::saveSettings()
@@ -432,7 +436,7 @@
 	if (m_pRadioInternalConfig->isChecked())
 	{
 		// TODO: no need to use a temporary file, since we need it to
-		// be permenant (since it'll be used for Windows services, etc).
+		// be permanent (since it'll be used for Windows services, etc).
 		m_pTempConfigFile = new QTemporaryFile();
 		if (!m_pTempConfigFile->open())
 		{
