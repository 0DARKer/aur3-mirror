diff -ru a/weather b/weather
--- a/weather	2010-10-29 02:38:04.000000000 +0000
+++ b/weather	2010-10-29 02:23:10.000000000 +0000
@@ -22,7 +22,7 @@
 get_bool = selections.get_bool
 
 # this mode just lists the aliases defined in the config
-if get_bool("list"): print weather.list_aliases(selections.config)
+if get_bool("list"): print( weather.list_aliases(selections.config) )
 
 # normal operation
 else:
diff -ru a/weather.py b/weather.py
--- a/weather.py	2010-10-29 02:37:59.000000000 +0000
+++ b/weather.py	2010-10-29 02:43:13.000000000 +0000
@@ -6,6 +6,18 @@
 
 version = "1.5"
 
+def pyversion(ref=None):
+   """Determine the Python version and optionally compare to a reference."""
+   import platform
+   ver = platform.python_version()
+   if ref:
+      return [
+         int(x) for x in ver.split(".")
+      ] >= [
+         int(x) for x in ref.split(".")
+      ]
+   else: return ver
+
 class Selections:
    """An object to contain selection data."""
    def __init__(self):
@@ -139,9 +151,16 @@
 
 def get_url(url, ignore_fail=False):
    """Return a string containing the results of a URL GET."""
-   import urllib2
-   try: return urllib2.urlopen(url).read()
-   except urllib2.URLError:
+   if pyversion("3"):
+      import urllib.error, urllib.request
+      URLError = urllib.error.URLError
+      urlopen = urllib.request.urlopen
+   else:
+      import urllib2 as urllib
+      URLError = urllib.URLError
+      urlopen = urllib.urlopen
+   try: return urlopen(url).read()
+   except URLError:
       if ignore_fail: return ""
       else:
          import sys, traceback
@@ -173,6 +192,7 @@
    murl = murl.replace("%id%", id.lower())
    murl = murl.replace(" ", "_")
    metar = get_url(murl)
+   if pyversion("3") and type(metar) is bytes: metar = metar.decode("utf-8")
    if verbose: return metar
    else:
       lines = metar.split("\n")
@@ -233,6 +253,7 @@
    aurl = aurl.replace("%zone%", zone.lower())
    aurl = aurl.replace(" ", "_")
    alert = get_url(aurl, ignore_fail=True).strip()
+   if pyversion("3") and type(alert) is bytes: alert = alert.decode("utf-8")
    if alert:
       if verbose: return alert
       else:
@@ -290,6 +311,8 @@
    furl = furl.replace("%st%", st.lower())
    furl = furl.replace(" ", "_")
    forecast = get_url(furl)
+   if pyversion("3") and type(forecast) is bytes:
+      forecast = forecast.decode("utf-8")
    if verbose: return forecast
    else:
       lines = forecast.split("\n")
@@ -524,8 +547,10 @@
 
 def get_config():
    """Parse the aliases and configuration."""
-   import ConfigParser
-   config = ConfigParser.ConfigParser()
+   import sys
+   if pyversion("3"): import configparser
+   else: import ConfigParser as configparser
+   config = configparser.ConfigParser()
    import os.path
    rcfiles = [
       "/etc/weatherrc",
