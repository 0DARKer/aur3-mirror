# Maintainer : Keshav P R <(skodabenz) (aatt) (rocketmail) (ddoott) (ccoomm)>

# This PKGBUILD is based on grub.spec at http://pkgs.fedoraproject.org/gitweb/?p=grub.git;a=blob_plain;f=grub.spec;hb=HEAD .

# This grub-legacy package includes support for booting from GPT and for reading EXT4 filesystem (/boot can be ext4).

pkgname="grub-legacy-fedora-git"
pkgver=20110724
pkgrel=1
pkgdesc="Fedora's grub-legacy fork - compiled for BIOS systems"
url="http://git.kernel.org/?p=boot/grub-fedora/grub-fedora.git"
arch=('i686' 'x86_64')
license=('GPL')
makedepends=('git' 'ncurses')
depends=('ncurses')
optdepends=('python2: For /sbin/grub-crypt python2 script')
backup=('boot/grub/grub.conf')
conflicts=('grub')
provides=('grub')
source=('grub.conf')
sha256sums=('59e219f429ef1c1fb7f2e6007e483908e5464e05a58b78f5c390d5491d3b288a')

install="${pkgname}.install"

_gitroot="git://git.kernel.org/pub/scm/boot/grub-fedora/grub-fedora.git"
_gitname="grub-fedora"

## TODO: Need to check whether multilib is really needed for x86_64.
if [ "${CARCH}" == 'x86_64' ]
then
	makedepends=(${makedepends[@]} 'gcc-multilib' 'gcc-libs-multilib' 'lib32-glibc' 'binutils-multilib' 'libtool-multilib')
	echo
fi

_update_git() {
	
	cd "${srcdir}"
	
	msg "Connecting to GIT server...."
	
	if [ -d "${srcdir}/${_gitname}/" ]
	then
		cd "${srcdir}/${_gitname}/"
		git reset --hard
		git fetch
		git checkout master
		git merge remotes/origin/master
		msg "The local GIT repo has been updated."
	else
		git clone "${_gitroot}" "${_gitname}"
		msg "GIT checkout done or server timeout"
	fi
	
	echo
	
}


build() {
	
	_update_git
	
	rm -rf "${srcdir}/${_gitname}_build/" || true
	cp -r "${srcdir}/${_gitname}" "${srcdir}/${_gitname}_build"
	
	cd "${srcdir}/${_gitname}_build/"
	
	sed -i "s|0\.97|0\.97-${pkgver}|" "${srcdir}/${_gitname}_build/configure.in" || true
	sed -i "s|0\.97|0\.97-${pkgver}|" "${srcdir}/${_gitname}_build/configure.ac" || true
	echo
	
	autoreconf
	echo
	autoconf
	echo
	
	_CFLAGS="-Os -g -fno-strict-aliasing -Wall -Werror -Wno-shadow -Wno-unused -Wno-pointer-sign -m32"
	
	if [ "${CARCH}" == 'x86_64' ]
	then
		__CFLAGS="${_CFLAGS} -static"
	else
		__CFLAGS="${_CFLAGS}"
	fi
	
	CFLAGS="${__CFLAGS}" ./configure --with-platform=pc \
									--host=i386-pc-linux-gnu \
									--disable-auto-linux-mem-opt \
									--prefix=/usr --bindir=/bin --sbindir=/sbin \
									--mandir=/usr/share/man --infodir=/usr/share/info \
									--libdir=/usr/lib --datarootdir=/usr/lib \
									--without-curses
	echo
	
	CFLAGS="${_CFLAGS}" make
	echo
	
}


package() {
	
	cd "${srcdir}/${_gitname}_build/"
	
	make DESTDIR="${pkgdir}" install
	
	install -D -m644 "${srcdir}/grub.conf" "${pkgdir}/boot/grub/grub.conf"
	
	sed -i 's|#! /usr/bin/python|#!/usr/bin/env python2|g' "${pkgdir}/sbin/grub-crypt"
	
}
