# Maintainer:  John Schoenick <john@pointysoftware.net>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-multimedia
_basename=wine
pkgver=1.3.29
pkgrel=1

_pkgbasever=${pkgver/rc/-rc}

source=(http://ibiblio.org/pub/linux/system/emulators/$_basename/$_basename-$_pkgbasever.tar.bz2
        winemultimedia_1.3.29_20110923.patch
        winemultimedia_add_winepulse_getpriority.patch)
sha256sums=('41fa0f7a9d67de65bd5813405a49b3f6b91a1672cde85570b22a567cd7ef24d6'
            '7ba1a37af68b42ee4c0adc361b2b8425f4148ac18813dc7a7b6463ab04ac28ae'
            '209b22d5fe05a59ddb5108507261641f733256ba218bfe932df867fb0757aeb9')

pkgdesc="A compatibility layer for running Windows programs"
url="http://www.winehq.com"
arch=(i686 x86_64)
license=(LGPL)
install=wine.install

depends=(
  fontconfig       lib32-fontconfig
  mesa             lib32-mesa 
  libxcursor       lib32-libxcursor
  libxrandr        lib32-libxrandr
  libxdamage       lib32-libxdamage
  libxxf86dga      lib32-libxxf86dga
  libxi            lib32-libxi
  alsa-lib         lib32-alsa-lib
  desktop-file-utils
  
  # Required for new openalSOFT api calls that arn't in release yet.
  # Sound wont work without this!
  openal-git       lib32-openal-git
  # The pulse driver wont work without this, but you can remove it if you don't expect to use it.
  alsa-plugins-git lib32-alsa-plugins-git
)

makedepends=(autoconf ncurses bison perl fontforge flex prelink
  'gcc>=4.5.0-2'  'gcc-multilib>=4.5.0-2'
  giflib          lib32-giflib
  libxpm          lib32-libxpm
  libpng          lib32-libpng
  libxinerama     lib32-libxinerama
  libxcomposite   lib32-libxcomposite
  libxmu          lib32-libxmu
  libxxf86vm      lib32-libxxf86vm
  libxml2         lib32-libxml2
  libxslt         lib32-libxslt
  libldap         lib32-libldap
  lcms            lib32-lcms
  mpg123          lib32-mpg123
  openal          lib32-openal
  libcups         lib32-libcups
  gnutls          lib32-gnutls
  v4l-utils       lib32-v4l-utils
  
  # This is required if you want the build to support OSS,
  # but since this is an AUR package and just installing OSS can devestate your alsa sound system,
  # I'm leaving it out by default.
  #oss
)
  
optdepends=(
  giflib          lib32-giflib
  libpng          lib32-libpng
  libldap         lib32-libldap
  lcms            lib32-lcms
  libxml2         lib32-libxml2
  mpg123          lib32-mpg123
  openal          lib32-openal
  libcups         lib32-libcups
  gnutls          lib32-gnutls
  v4l-utils       lib32-v4l-utils
  oss
)

if [[ $CARCH == i686 ]]; then
  # Strip lib32 etc. on i686
  depends=(${depends[@]/*32-*/})
  makedepends=(${makedepends[@]/*32-*/})
  makedepends=(${makedepends[@]/*-multilib*/})
  optdepends=(${optdepends[@]/*32-*/})
  provides=("wine=$pkgver")
  conflicts=('wine')
else
  provides=("wine=$pkgver" "bin32-wine=$pkgver" "wine-wow64=$pkgver")
  conflicts=('wine' 'bin32-wine' 'wine-wow64')
  replaces=('bin32-wine')
fi

build() {
  cd "$srcdir"

  # Allow ccache to work
  mv $_basename-$_pkgbasever $_basename
  
  # Apply patches
  (
      cd "$_basename"
      msg2 "Applying multimedia patch"
      patch -Np1 -i "$srcdir/winemultimedia_1.3.29_20110923.patch"
      # This commit added GetPriority() to all the drivers
      # http://source.winehq.org/git/wine.git/commitdiff/c4b94b1ba4ee1664c0a14515d6fbc6d648e9175b
      # So this patch adds the same thing to winepulse, fixing it refusing to load
      msg2 "Applying winepulse fix for 1.3.28"
      patch -Np1 -i "$srcdir/winemultimedia_add_winepulse_getpriority.patch"
  )

  # Get rid of old build dirs
  rm -rf $_basename-{32,64}-build
  mkdir $_basename-32-build

  if [[ $CARCH == x86_64 ]]; then
    msg2 "Building Wine-64..."

    mkdir $_basename-64-build
    cd "$srcdir/$_basename-64-build"
    ../$_basename/configure \
      --prefix=/usr \
      --sysconfdir=/etc \
      --libdir=/usr/lib \
      --with-x \
      --enable-win64

    make

    _wine32opts=(
      --libdir=/usr/lib32
      --with-wine64="$srcdir/$_basename-64-build"
    )

    export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
  fi

  msg2 "Building Wine-32..."
  cd "$srcdir/$_basename-32-build"
  ../$_basename/configure \
    --prefix=/usr \
    --sysconfdir=/etc \
    --with-x \
    "${_wine32opts[@]}"

  make
}

package() {
  msg2 "Packaging Wine-32..."
  cd "$srcdir/$_basename-32-build"

  if [[ $CARCH == i686 ]]; then
    make prefix="$pkgdir/usr" install
  else
    make prefix="$pkgdir/usr" \
      libdir="$pkgdir/usr/lib32" \
      dlldir="$pkgdir/usr/lib32/wine" install

    msg2 "Packaging Wine-64..."
    cd "$srcdir/$_basename-64-build"
    make prefix="$pkgdir/usr" \
      libdir="$pkgdir/usr/lib" \
      dlldir="$pkgdir/usr/lib/wine" install
  fi
}

# vim:set ts=8 sts=2 sw=2 et:
