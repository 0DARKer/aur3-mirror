# $Id: pkgbuild-mode.el,v 1.23 2007/10/20 16:02:14 juergen Exp $
# Maintainer: perlawk
pkgname=dyncall  
pkgver=0.6
pkgrel=1 
pkgdesc="The dyncall library project provides a clean and portable C interface to dynamically issue calls to foreign code using small call kernels written in assembly. Instead of providing code for every bridged function call, which unnecessarily results in code bloat, only a modest number of instructions are used to invoke all the calls."
url="http://dyncall.org/index.shtml"
arch=(`arch`)
license=('GPL')
depends=()
makedepends=()
conflicts=()
replaces=()
backup=()
install=
source=(http://dyncall.org/r0.6/$pkgname-$pkgver.tar.gz)
md5sums=('8e1e47285374222d1ea2f6bf6ecd78c3')
build() {
  cd $startdir/src/$pkgname-$pkgver
  ./configure --prefix=/usr --prefix-bd=$pkgdir/usr
  make || return 1

  install -m755 -d $pkgdir/usr/lib $pkgdir/usr/include
  install -m755 -t $pkgdir/usr/lib dynload/build_out/linu*/lib*a dyncall/build_out/linu*/lib*a \
dyncallback/build_out/linu*/lib*a 
  cd dyncall
  install -m755 -t $pkgdir/usr/include dyncall_macros.h dyncall_config.h dyncall_types.h dyncall.h dyncall_signature.h dyncall_value.h dyncall_callf.h dyncall_alloc.h 
  cd ../dyncallback
 install -m755 -t $pkgdir/usr/include dyncall_thunk.h dyncall_thunk_x86.h dyncall_thunk_ppc32.h dyncall_thunk_x64.h dyncall_thunk_arm32_arm.h dyncall_thunk_arm32_thumb.h dyncall_alloc_wx.h dyncall_args.h dyncall_callback.h
}
