# $Id$
# Maintainer: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Evangelos Foutras <foutrelis@gmail.com>
# Contributor: Sebastian Nowicki <sebnow@gmail.com>
# Contributor: Devin Cofer <ranguvar{AT]archlinux[DOT}us>
# Contributor: Tobias Kieslich <tobias@justdreams.de>
# Contributor: Geoffroy Carrier <geoffroy.carrier@aur.archlinux.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Gerardo Exequiel Pozzi <vmlinuz386@yahoo.com.ar>

pkgname=clang-svn
pkgver=131090
_gcc_ver=4.6.0
pkgrel=1
pkgdesc="Low Level Virtual Machine with Clang from SVN"
arch=('i686' 'x86_64')
url="http://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
depends=('gcc-libs' 'libffi' 'python2' "gcc=$_gcc_ver")
makedepends=(svn)
conflicts=(llvm llvm-svn llvm-ocaml clang clang-analyzer)
source=(ftp://ftp.archlinux.org/other/community/clang/gcc-headers-4.5.2.tar.xz
        clang-plugin-loader-registry.patch
        cindexer-clang-path.patch
        clang-pure64.patch
        enable-lto.patch
        default-libcxx.patch)
md5sums=('70e23a3dc2b38ecb2bb4d2c48f47295d'
         '02c23b4aaca3445b8bf39fddb2f9906e'
         '87a7162dbe99e9ffce6c40bd09f5f4f0'
         '225ee6b531f8327f34f344a18cb4ec81'
         '8f7582d7440e4a8342c3aea9ec714fb4'
         '9d153103dda0c088562f1feb1129b67e')

_svntrunk="http://llvm.org/svn/llvm-project"
_svnmod="llvm"
_cfemod="cfe"
_cxxmod="libcxx"

build() {
  cd "$srcdir"

msg2 "Connecting to LLVM.org SVN server...."

  if [ -d $_svnmod/.svn ]; then
    (cd $_svnmod && svn update -r $pkgver) || warning "Update failed!"
  else
    svn co $_svntrunk/$_svnmod/trunk $_svnmod --config-dir ./ -r $pkgver
  fi

  if [ -d $_cfemod/.svn ]; then
    (cd $_cfemod && svn update -r $pkgver) || warning "Update failed!"
  else
    svn co $_svntrunk/$_cfemod/trunk $_cfemod --config-dir ./ -r $pkgver
  fi

  if [ -d $_cxxmod/.svn ]; then
    (cd $_cxxmod && svn update -r $pkgver) || warning "Update failed!"
  else
    svn co $_svntrunk/$_cxxmod/trunk $_cxxmod --config-dir ./ -r $pkgver
  fi

msg2 "SVN checkout done or server timeout"

  rm -rf $_svnmod-build
  svn export $_svnmod $_svnmod-build
  svn export $_cfemod $_svnmod-build/tools/clang
  svn export $_cxxmod $_svnmod-build/projects/libcxx
  cd $_svnmod-build

msg2 "Patching..."

  # Fix symbolic links from OCaml bindings to LLVM libraries
  sed -i 's:\$(PROJ_libdir):/usr/lib/llvm:' bindings/ocaml/Makefile.ocaml

  # Fix installation directories, ./configure doesn't seem to set them right
  sed -i -e 's:\$(PROJ_prefix)/etc/llvm:/etc/llvm:' \
         -e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib/llvm:' \
         -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    Makefile.config.in

  # Fix insecure rpath (http://bugs.archlinux.org/task/14017)
  sed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

  # Get the correct list of symbols to export
  # See http://lists.cs.uiuc.edu/pipermail/cfe-dev/2010-April/008559.html
  patch -Np1 -i "$srcdir/clang-plugin-loader-registry.patch"

  # Fix clang path in CIndexer.cpp (https://bugs.archlinux.org/task/22799)
  patch -d tools/clang -Np0 -i "$srcdir/cindexer-clang-path.patch"

  if [[ $CARCH == x86_64 ]]; then
    # Adjust lib paths
    patch -d tools/clang -Np0 -i "$srcdir/clang-pure64.patch"
  fi

  # Make -flto work
  # Use gold instead of default linker, and always use the plugin
  #patch -d tools/clang -Np0 -i "$srcdir/enable-lto.patch"

  # Use libc++ by default, as libstdc++ includes use C++0x
  # features not supported by clang
  #patch -d tools/clang -Np0 -i "$srcdir/default-libcxx.patch"
  # On the other hand, libc++ is pretty broken at the moment

msg2 "Starting build..."

  # Apply strip option to configure
  _optimized_switch="enable"
  [[ $(check_option strip) == n ]] && _optimized_switch="disable"

  # Include location of libffi headers in CPPFLAGS
  export CPPFLAGS="$CPPFLAGS $(pkg-config --cflags libffi)"

  # TODO: Uncomment when clang works with GCC 4.6+
  #_cxx_headers="/usr/include/c++/$_gcc_ver"
  #if [[ ! -d $_cxx_headers ]]; then
  #  error "Couldn't find the C++ headers, PKGBUILD needs fixing!"
  #  return 1
  #fi
  _cxx_headers="/usr/include/c++/clang-$pkgver"

  _32bit_headers=""
  if [[ $CARCH == x86_64 ]]; then
    # Important for multilib
    _32bit_headers="32"
  fi

  ./configure \
    --prefix=/usr \
    --libdir=/usr/lib/llvm \
    --sysconfdir=/etc \
    --enable-shared \
    --enable-libffi \
    --enable-targets=all \
    --disable-expensive-checks \
    --disable-debug-runtime \
    --disable-assertions \
    --with-cxx-include-root=$_cxx_headers \
    --with-cxx-include-arch=$CHOST \
    --with-cxx-include-32bit-dir=$_32bit_headers \
    --$_optimized_switch-optimized
    #--with-binutils-include=/usr/include \

  make REQUIRES_RTTI=1

  # Build libc++
  _build_mode="Release"
  [ "$(check_option strip)" = "n" ] && _build_mode="Debug"

  cd projects/libcxx/lib
  CXX=../../../$_build_mode/bin/clang ./buildit
}

package() {
  cd "$srcdir/$_svnmod-build"

  # Provide the right version
  _providesver=$(grep '^PACKAGE_VERSION=' configure | awk -F\' '{print $2}')
  provides=("llvm=$_providesver" "llvm-svn=$_providesver"
            "clang=$_providesver" "clang-analyzer=$_providesver")

  # -j1 is due to race conditions during the installation of the OCaml bindings
  make -j1 DESTDIR="$pkgdir" install

  # Remove duplicate files installed by the OCaml bindings
  rm -f "$pkgdir"/usr/{lib/llvm/libllvm*,share/doc/llvm/ocamldoc.tar.gz}

  # Fix permissions of static libs
  chmod -x "$pkgdir"/usr/lib/llvm/*.a
  chmod -x "$pkgdir"/usr/lib/ocaml/libllvm*.a || true

  # Fix libdir in llvm-config (http://bugs.archlinux.org/task/14487)
  sed -i 's:\(ABS_RUN_DIR/lib\):\1/llvm:' "$pkgdir/usr/bin/llvm-config"

  # Get rid of example Hello transformation
  rm "$pkgdir"/usr/lib/llvm/*LLVMHello.*

  # Symlink the gold plugin where clang expects it
  #ln -s llvm/LLVMgold.so "$pkgdir/usr/lib/LLVMgold.so"

  # Add ld.so.conf.d entry
  install -d "$pkgdir/etc/ld.so.conf.d"
  echo /usr/lib/llvm >"$pkgdir/etc/ld.so.conf.d/llvm.conf"

  # Install old libstdc++ headers. Contains combined headers from
  # gcc 4.5.2-6-i686 and gcc-multilib-4.5.2-6-x86_64
  install -d "$pkgdir/usr/include/c++"
  cp -rd "$srcdir/gcc-headers-4.5.2" "$pkgdir/usr/include/c++/clang-$pkgver"

  # install libc++
  (
    cd projects/libcxx/lib
    install -D libc++.so.1.0 "$pkgdir/usr/lib/libc++.so.1.0"
    ln -s libc++.so.1.0 "$pkgdir/usr/lib/libc++.so.1"
    ln -s libc++.so.1.0 "$pkgdir/usr/lib/libc++.so"

    cd ../include
    install -d "$pkgdir/usr/include/c++/v1/ext"
    install -m644 * "$pkgdir/usr/include/c++/v1" || true
    install -m644 ext/* "$pkgdir/usr/include/c++/v1/ext"
  )

  # install static analyzer
  (
    cd tools/clang
    install -d "$pkgdir/usr/lib/clang-analyzer"
    for _tool in scan-{build,view}; do
      cp -r tools/$_tool "$pkgdir/usr/lib/clang-analyzer"
      ln -s /usr/lib/clang-analyzer/$_tool/$_tool "$pkgdir/usr/bin"
    done

    # Use Python 2
    sed -i '1s/env python$/&2/' \
      "$pkgdir/usr/lib/clang-analyzer/scan-view/scan-view" \
      "$pkgdir/usr/lib/clang-analyzer/scan-build/set-xcode-analyzer"

    # Compile Python scripts
    python2 -m compileall "$pkgdir/usr/lib/clang-analyzer"
    python2 -O -m compileall "$pkgdir/usr/lib/clang-analyzer"
  )

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

# vim:set ts=2 sw=2 et:
