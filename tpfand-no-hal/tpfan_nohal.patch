diff -ur tpfand-0.94.orig/src/tpfand/settings.py tpfand-0.94/src/tpfand/settings.py
--- tpfand-0.94.orig/src/tpfand/settings.py	2010-10-19 23:09:47.000000000 +0200
+++ tpfand-0.94/src/tpfand/settings.py	2010-10-19 22:53:40.000000000 +0200
@@ -21,6 +21,8 @@
 import sys, os, os.path
 import dbus, dbus.service, dbus.mainloop.glib, dbus.glib
 import gobject
+from subprocess import Popen, PIPE
+from xml.etree.ElementTree import ElementTree, fromstring
 
 from tpfand import build
 
@@ -153,25 +155,27 @@
     def read_model_info(self):
         """reads model info from HAL"""
         try:
-            bus = dbus.SystemBus()            
-            computer_obj = bus.get_object('org.freedesktop.Hal', '/org/freedesktop/Hal/devices/computer')
-            computer = dbus.Interface(computer_obj, 'org.freedesktop.Hal.Device')
-            
-            product_id = computer.GetProperty('system.hardware.vendor') + "_" + computer.GetProperty('system.hardware.product')
+            hw = Popen(["lshw", "-class", "system", "-xml"], stdout=PIPE).communicate()[0]
+            xml = fromstring(hw)
+            hw_product = xml.findtext("product")
+            hw_vendor = xml.findtext("vendor")
+            hw_version = xml.findtext("version")
+
+            product_id = hw_vendor + "_" + hw_product
             self.product_id = product_id.lower()
-            product_name = computer.GetProperty('system.hardware.vendor') + "_" + computer.GetProperty('system.hardware.version')
+            product_name = hw_vendor + "_" + hw_version
             self.product_name = product_name.lower().replace('/', '-').replace(' ', '_')
             
-            self.product_pretty_vendor = computer.GetProperty('system.hardware.vendor') 
-            self.product_pretty_name = computer.GetProperty('system.hardware.version')
-            self.product_pretty_id = computer.GetProperty('system.hardware.product')
+            self.product_pretty_vendor = hw_vendor
+            self.product_pretty_name = hw_version
+            self.product_pretty_id = hw_product
         except:
             print "Warning: unable to get your system model from HAL."
-            self.product_id = None
-            self.product_name = None
-            self.product_pretty_vendor = None
-            self.product_pretty_name = None
-            self.product_pretty_id = None   
+            self.product_id = ''
+            self.product_name = ''
+            self.product_pretty_vendor = ''
+            self.product_pretty_name = ''
+            self.product_pretty_id = ''   
                 
     @dbus.service.method("org.thinkpad.fancontrol.Settings", in_signature='', out_signature='a{is}')
     def get_sensor_names(self):
