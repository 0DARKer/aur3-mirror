diff --git a/CMake/HPHPFindLibs.cmake b/CMake/HPHPFindLibs.cmake
index 08f8cf1..90db0a3 100644
--- a/CMake/HPHPFindLibs.cmake
+++ b/CMake/HPHPFindLibs.cmake
@@ -315,6 +315,10 @@ else()
 	add_definitions(-DSKIP_IMAP_GSS=1)
 endif()
 
+if (LINK_PAM)
+	find_package(Libpam REQUIRED)
+endif()
+
 if (NOT CCLIENT_HAS_SSL)
 	add_definitions(-DSKIP_IMAP_SSL=1)
 endif()
@@ -475,7 +479,7 @@ endif()
 	target_link_libraries(${target} ${NCURSES_LIBRARY})
 	target_link_libraries(${target} ${CCLIENT_LIBRARY})
 
-	if (CCLIENT_NEEDS_PAM)
+	if (CCLIENT_NEEDS_PAM OR LINK_PAM)
 		target_link_libraries(${target} ${PAM_LIBRARY})
 	endif()
 
diff --git a/CMake/HPHPFunctions.cmake b/CMake/HPHPFunctions.cmake
index 43b4792..62ffb34 100644
--- a/CMake/HPHPFunctions.cmake
+++ b/CMake/HPHPFunctions.cmake
@@ -70,20 +70,41 @@ endmacro()
 
 function(embed_systemlib TARGET DEST SOURCE)
 	if (APPLE)
-	        target_link_libraries(${TARGET} -Wl,-sectcreate,__text,systemlib,${SOURCE})
+		target_link_libraries(${TARGET} -Wl,-sectcreate,__text,systemlib,${SOURCE})
 	else()
-	        add_custom_command(TARGET ${TARGET} POST_BUILD
-	                   COMMAND "objcopy"
-	                   ARGS "--add-section" "systemlib=${SOURCE}" ${DEST}
-	                   COMMENT "Embedding systemlib.php in ${TARGET}")
+		add_custom_command(TARGET ${TARGET} POST_BUILD
+			COMMAND "objcopy"
+			ARGS "--add-section" "systemlib=${SOURCE}" ${DEST}
+			COMMENT "Embedding ${SOURCE} in ${TARGET}")
 	endif()
+	# Add the systemlib file to the "LINK_DEPENDS" for the systemlib, this will cause it
+	# to be relinked and the systemlib re-embedded
+	set_property(TARGET ${TARGET} APPEND_STRING PROPERTY LINK_DEPENDS ";${SOURCE}")
 endfunction(embed_systemlib)
 
+# Custom install function that doesn't relink, instead it uses chrpath to change it, if
+# it's available, otherwise, it leaves the chrpath alone
+function(HHVM_INSTALL TARGET DEST)
+	get_target_property(LOC ${TARGET} LOCATION)
+	get_target_property(TY ${TARGET} TYPE)
+	if (FOUND_CHRPATH)
+		get_target_property(RPATH ${TARGET} INSTALL_RPATH)
+		if (NOT RPATH STREQUAL "RPATH-NOTFOUND")
+			if (RPATH STREQUAL "")
+				install(CODE "execute_process(COMMAND \"${CHRPATH}\" \"-d\" \"${LOC}\" ERROR_QUIET)")
+			else()
+				install(CODE "execute_process(COMMAND \"${CHRPATH}\" \"-r\" \"${RPATH}\" \"${LOC}\" ERROR_QUIET)")
+			endif()
+		endif()
+	endif()
+	install(CODE "FILE(INSTALL DESTINATION \"\${CMAKE_INSTALL_PREFIX}/${DEST}\" TYPE ${TY} FILES \"${LOC}\")")
+endfunction(HHVM_INSTALL)
+
 function(HHVM_EXTENSION EXTNAME)
 	list(REMOVE_AT ARGV 0)
 	add_library(${EXTNAME} SHARED ${ARGV})
 	set_target_properties(${EXTNAME} PROPERTIES PREFIX "")
 	set_target_properties(${EXTNAME} PROPERTIES SUFFIX ".so")
 endfunction()
 
 function(HHVM_SYSTEMLIB EXTNAME SOURCE_FILE)
diff --git a/CMake/HPHPSetup.cmake b/CMake/HPHPSetup.cmake
index dbc4a56..9e43ed1 100644
--- a/CMake/HPHPSetup.cmake
+++ b/CMake/HPHPSetup.cmake
@@ -25,6 +25,15 @@ IF(NOT DEFINED CMAKE_PREFIX_PATH)
   message(STATUS "CMAKE_PREFIX_PATH was missing, proceeding anyway")
 endif()
 
+# Look for the chrpath tool so we can warn if it's not there
+find_program(CHRPATH chrpath)
+IF (CHRPATH STREQUAL "CHRPATH-NOTFOUND")
+    SET(FOUND_CHRPATH OFF)
+    message(WARNING "chrpath not found, rpath will not be stripped from installed binaries")
+else()
+    SET(FOUND_CHRPATH ON)
+endif()
+
 LIST(APPEND CMAKE_PREFIX_PATH "$ENV{CMAKE_PREFIX_PATH}")
 
 if(APPLE)
diff --git a/CMake/Options.cmake b/CMake/Options.cmake
index ab1ce07..f22b3b3 100644
--- a/CMake/Options.cmake
+++ b/CMake/Options.cmake
@@ -13,3 +13,4 @@ option(USE_JEMALLOC "Use jemalloc" ON)
 option(USE_TCMALLOC "Use tcmalloc (if jemalloc is not used)" ON)
 option(USE_GOOGLE_HEAP_PROFILER "Use Google heap profiler" OFF)
 option(USE_GOOGLE_CPU_PROFILER "Use Google cpu profiler" OFF)
+option(LINK_PAM "Always link PAM" OFF)
diff --git a/hphp/hhvm/CMakeLists.txt b/hphp/hhvm/CMakeLists.txt
index c21724f..1bbd082 100644
--- a/hphp/hhvm/CMakeLists.txt
+++ b/hphp/hhvm/CMakeLists.txt
@@ -7,4 +7,4 @@ target_link_libraries(hhvm ${HHVM_LINK_LIBRARIES})
 embed_systemlib(hhvm "${CMAKE_CURRENT_SOURCE_DIR}/hhvm" ${HPHP_HOME}/bin/systemlib.php)
 add_dependencies(hhvm systemlib)
 
-install(TARGETS hhvm DESTINATION bin)
+HHVM_INSTALL(hhvm bin)
