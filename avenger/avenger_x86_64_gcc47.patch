diff -Naur libasync/ihash.h /home/bl4ckb1t/libasync_patched/ihash.h
--- libasync/ihash.h	2009-06-26 18:33:04.000000000 -0300
+++ /home/bl4ckb1t/libasync_patched/ihash.h	2012-04-24 21:26:52.000000000 -0300
@@ -235,7 +235,7 @@
   ihash () : eq (E ()), hash (H ()) {}
   ihash (const E &e, const H &h) : eq (e), hash (h) {}
 
-  void insert (V *elm) { insert_val (elm, hash (elm->*key)); }
+  void insert (V *elm) { this->insert_val (elm, hash (elm->*key)); }
 
 #if 0
   template<class T> V *operator[] (const T &k) const {
@@ -243,16 +243,16 @@
   V *operator[] (const K &k) const {
 #endif
     V *v;
-    for (v = lookup_val (hash (k));
+    for (v = this->lookup_val (hash (k));
 	 v && !eq (k, v->*key);
-	 v = next_val (v))
+	 v = this->next_val (v))
       ;
     return v;
   }
 
   V *nextkeq (V *v) {
     const K &k = v->*key;
-    while ((v = next_val (v)) && !eq (k, v->*key))
+    while ((v = this->next_val (v)) && !eq (k, v->*key))
       ;
     return v;
   };
diff -Naur libasync/itree.h /home/bl4ckb1t/libasync_patched/itree.h
--- libasync/itree.h	2009-06-26 18:33:04.000000000 -0300
+++ /home/bl4ckb1t/libasync_patched/itree.h	2012-04-24 21:25:34.000000000 -0300
@@ -250,7 +250,7 @@
 #else
   V *operator[] (const K &k) {
     // return search (wrap (this, &kvcmp, &k));
-    return search (skvcmp, &kcmp, &k);
+    return this->search (skvcmp, &kcmp, &k);
   }
 #endif
 };
diff -Naur libasync/qhash.h /home/bl4ckb1t/libasync_patched/qhash.h
--- libasync/qhash.h	2009-06-26 18:33:04.000000000 -0300
+++ /home/bl4ckb1t/libasync_patched/qhash.h	2012-04-24 21:27:57.000000000 -0300
@@ -71,7 +71,7 @@
 
   slot *getslot (const K &k) const {
     slot *s;
-    for (s = lookup_val (hash (k)); s && !eq (s->key, k); s = next_val (s))
+    for (s = this->lookup_val (hash (k)); s && !eq (s->key, k); s = this->next_val (s))
       ;
     return s;
   }
@@ -156,7 +156,7 @@
 
   slot *getslot (const K &k) const {
     slot *s;
-    for (s = lookup_val (hash (k)); s && !eq (s->key, k); s = next_val (s))
+    for (s = this->lookup_val (hash (k)); s && !eq (s->key, k); s = this->next_val (s))
       ;
     return s;
   }
diff -Naur libasync/vec.h /home/bl4ckb1t/libasync_patched/vec.h
--- libasync/vec.h	2010-02-21 21:31:58.000000000 -0300
+++ /home/bl4ckb1t/libasync_patched/vec.h	2012-04-24 21:20:29.000000000 -0300
@@ -102,7 +102,7 @@
   static void destroy (elm_t &e) { e.~elm_t (); }
 
   void init () { lastp = firstp = basep = def_basep (); limp = def_limp (); }
-  void del () { while (firstp < lastp) firstp++->~elm_t (); bfree (basep); }
+  void del () { while (firstp < lastp) firstp++->~elm_t (); this->bfree (basep); }
 
 #define append(v)						\
 do {								\
@@ -143,7 +143,7 @@
       elm_t *obasep = basep;
       move (static_cast<elm_t *> (txmalloc (nalloc * sizeof (elm_t))));
       limp = basep + nalloc;
-      bfree (obasep);
+      this->bfree (obasep);
     }
     else
       move (basep);
