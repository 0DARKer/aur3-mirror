--- setup.py	2008-11-13 19:41:28.000000000 +0100
+++ setup.pypatch	2008-12-04 10:42:25.000000000 +0100
@@ -54,30 +54,30 @@
     _setup(**kwargs)
 
 # if python docutils are installed, generate HTML documentation.
-if os.path.exists('/usr/bin/rst-buildhtml'):
-  os.system('/usr/bin/rst-buildhtml')
+#if os.path.exists('/usr/bin/rst-buildhtml'):
+#  os.system('/usr/bin/rst-buildhtml')
 
-readme = open('index.rst').read()	# read in documentation file
-readme = string.replace(readme,'**','')	# remove restructuredtext markup
+#readme = open('index.rst').read()	# read in documentation file
+#readme = string.replace(readme,'**','')	# remove restructuredtext markup
 
 # split documentation by text titles and put each title and its text body
 # into a dictionary: title is the key, text body is the value.
-readme_split = re.split('\n(.*?)\n====+?\n\n',readme)
-i =  3
-readme_db = {}
-while i < len(readme_split):
-  readme_db[readme_split[i]] = readme_split[i + 1]
-  i += 2
+#readme_split = re.split('\n(.*?)\n====+?\n\n',readme)
+#i =  3
+#readme_db = {}
+#while i < len(readme_split):
+#  readme_db[readme_split[i]] = readme_split[i + 1]
+#  i += 2
 
-main_title = readme_split[1] + '\n'	# main title goes alone
+#main_title = readme_split[1] + '\n'	# main title goes alone
 
 # if not present, generate portio.c source file.
 # Replace template tag "DOCUMENTATION" into C source with documentation
 # text read from README. Add backslash iand new line at end of each line
 # (C multiline string syntax).
 if not os.path.exists('portio.c'):
-  doc = main_title + '\n' + readme_db["Module reference"]
-  doc = string.replace(doc,'\n','\\n\\\n')
+#  doc = main_title + '\n' + readme_db["Module reference"]
+#  doc = string.replace(doc,'\n','\\n\\\n')
   source = open('portio.c.in').read()
   source = source % {'DOCUMENTATION':doc}
   open('portio.c','w').write(source)
@@ -108,9 +108,9 @@
   url = 'http://portio.inrim.it',
   license = 'http://www.gnu.org/licenses/gpl.txt',
   platforms = ['Linux'],
-  description = main_title,
+#  description = main_title,
   classifiers = filter(None, classifiers.split("\n")),
-  long_description =  readme_db["Module reference"],
+#  long_description =  readme_db["Module reference"],
   ext_modules = [module])
 
 # cleanup
