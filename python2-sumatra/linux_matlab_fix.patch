diff -Nur Sumatra-0.5.2_clean/usr/lib/python2.7/site-packages/sumatra/dependency_finder/matlab.py Sumatra-0.5.2/usr/lib/python2.7/site-packages/sumatra/dependency_finder/matlab.py
--- Sumatra-0.5.2_clean/usr/lib/python2.7/site-packages/sumatra/dependency_finder/matlab.py	2013-02-22 08:20:01.000000000 -0500
+++ Sumatra-0.5.2/usr/lib/python2.7/site-packages/sumatra/dependency_finder/matlab.py	2013-08-23 14:25:42.957552757 -0400
@@ -1,4 +1,5 @@
 import os
+import sys
 import re
 import subprocess
 from sumatra.dependency_finder import core
@@ -16,10 +17,14 @@
 
 def save_dependencies(cmd, filename):
     ''' save all dependencies to the file in the current folder '''
-    file_dep = "depfun %s -toponly -quiet -print depfun.data;" %filename # save dependencies to a file
-    mat_args = cmd.split('-r ')[-1]
+    file_dep = "depfun %s -toponly -quiet -print ./.smt/depfun.data;" %filename # save dependencies to a file
+    mat_args = cmd.split('-r ')[-1][1:-1]
     cmd = "%s; %s quit" %(mat_args, file_dep)
-    p = subprocess.Popen(['matlab','-nodesktop', '-nosplash', '-nojvm', ' -nodisplay', '-wait', '-r', cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)    
+    cmd_ux = "\"{}\"".format(cmd)
+    if sys.platform.startswith('win'):
+        p = subprocess.Popen(['matlab','-nodesktop', '-nosplash', '-nojvm', ' -nodisplay', '-wait', '-r', cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
+    else:
+        p = subprocess.Popen('matlab -nodesktop -nosplash -nojvm -nodisplay -r ' + cmd_ux, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)    
     result = p.wait()
     output = p.stdout.read() 
     # import pdb; pdb.set_trace() 
@@ -28,7 +33,7 @@
 
 def find_dependencies(filename, executable):
     #ifile = os.path.join(os.getcwd(), 'depfun.data')
-    file_data = (open('depfun.data', 'r'))
+    file_data = (open('./.smt/depfun.data', 'r'))
     content = file_data.read()
     paths = re.split('1: ', content)[2:]
     list_deps = []
diff -Nur Sumatra-0.5.2_clean/usr/lib/python2.7/site-packages/sumatra/programs.py Sumatra-0.5.2/usr/lib/python2.7/site-packages/sumatra/programs.py
--- Sumatra-0.5.2_clean/usr/lib/python2.7/site-packages/sumatra/programs.py	2013-04-02 09:06:29.000000000 -0400
+++ Sumatra-0.5.2/usr/lib/python2.7/site-packages/sumatra/programs.py	2013-08-23 14:28:49.689028030 -0400
@@ -37,7 +37,8 @@
 import warnings
 
 version_pattern = re.compile(r'\b(?P<version>\d[\.\d]*([a-z]*\d)*)\b')
-version_pattern_matlab = re.compile(r'(?<=Version: )(?P<version>\d.+)\b')
+#version_pattern_matlab = re.compile(r'(?<=Version: )(?P<version>\d.+)\b')
+version_pattern_matlab = re.compile(r'R\d{4}.*')
 
 class Executable(object):
     # store compilation/configuration options? yes, if we can determine them
@@ -141,13 +142,13 @@
     requires_script = True
 
     def _get_version(self):
-        p = subprocess.Popen("matlab -h", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)
+        p = subprocess.Popen("matlab -nodesktop -nosplash -nojvm -nodisplay -r quit", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)
         returncode = p.wait()
         match = version_pattern_matlab.search(p.stdout.read())
         if match:
-            version = match.groupdict()['version']
+            version = match.group()
         else:
-            version = None
+            version = "unknown" #None
         return version
 
 
