#!/bin/bash

daemon_name=tcpcryptd

. /etc/rc.conf
. /etc/rc.d/functions
. /etc/conf.d/$daemon_name.conf

get_pid() {
	pidof -o %PPID $daemon_name
}

[ -z "$NFQUEUE_NUM" ] && NFQUEUE_NUM=666
[ -z "$PORT" ] && PORT=80

# This is taken from launch_tcpcryptd.sh
linux_set_iptables() {
  iptables -I INPUT  \! --in-interface lo  -p tcp --sport $PORT -j NFQUEUE --queue-num $NFQUEUE_NUM || return 1
  iptables -I OUTPUT \! --out-interface lo -p tcp --dport $PORT -j NFQUEUE --queue-num $NFQUEUE_NUM || return 1
}

linux_unset_iptables() {
  iptables -D INPUT  \! --in-interface lo  -p tcp --sport $PORT -j NFQUEUE --queue-num $NFQUEUE_NUM
  iptables -D OUTPUT \! --out-interface lo -p tcp --dport $PORT -j NFQUEUE --queue-num $NFQUEUE_NUM

  # These are for easing upgrades, since older versions didn't specify an interface
  iptables -D INPUT  -p tcp --sport $PORT -j NFQUEUE --queue-num $NFQUEUE_NUM 2>/dev/null
  iptables -D OUTPUT -p tcp --dport $PORT -j NFQUEUE --queue-num $NFQUEUE_NUM 2>/dev/null
}


case "$1" in
  start)
    stat_busy "Starting $daemon_name daemon"

    PID=$(get_pid)
    if [ -z "$PID" ]; then
      [ -f /var/run/$daemon_name.pid ] && rm -f /var/run/$daemon_name.pid
      # RUN
      linux_set_iptables
      if [ $? -gt 0 ]; then
        stat_fail
        exit 1
      fi

      $daemon_name $OPTS -p $NFQUEUE_NUM >/dev/null &
      #
      if [ $? -gt 0 ]; then
        stat_fail
        exit 1
      else
        echo $(get_pid) > /var/run/$daemon_name.pid
        add_daemon $daemon_name
        stat_done
      fi
    else
      stat_fail
      exit 1
    fi
    ;;

  stop)
    stat_busy "Stopping $daemon_name daemon"
    PID=$(get_pid)
    # KILL
    linux_unset_iptables

    [ ! -z "$PID" ] && kill $PID &> /dev/null
    #
    if [ $? -gt 0 ]; then
      stat_fail
      exit 1
    else
      rm -f /var/run/$daemon_name.pid &> /dev/null
      rm_daemon $daemon_name
      stat_done
    fi
    ;;

  restart)
    $0 stop
    sleep 3
    $0 start
    ;;

  status)
    stat_busy "Checking $daemon_name status";
    ck_status $daemon_name
    ;;

  *)
    echo "usage: $0 {start|stop|restart|status}"
esac

exit 0
