# Manteiner: Valantin <valantin89@gmail.com>
# Contributor: Flamelab <panosfilip@gmail.com>

pkgname=gnome-shell-extensions-git
_realname=gnome-shell-extensions
pkgver=20111125
_realver=3.0.2
pkgrel=1
pkgdesc="GNOME Shell extensions"
arch=('i686' 'x86_64')
url="http://live.gnome.org/GnomeShell"
license=('GPL2')

depends=('gnome-shell' 'gtk3')
makedepends=('intltool' 'gnome-doc-utils' 'gnome-common')

provides=("${_realname}=${_realver}"
#  "gnome-shell-extension-alternate-tab"                                                                         
#  "gnome-shell-extension-alternative-status-menu"
  "gnome-shell-extension-apps-menu"
#  "gnome-shell-extension-auto-move-windows"
#  "gnome-shell-extension-dock"
#  "gnome-shell-extension-drive-menu"
  "gnome-shell-extension-gajim"
  "gnome-shell-extension-native-window-placement"
#  "gnome-shell-extension-places-menu"
  "gnome-shell-extension-system-monitor"
#  "gnome-shell-extension-user-theme"
  "gnome-shell-extension-windows-navigator"
  "gnome-shell-extension-workspace-indicator"
#  "gnome-shell-extension-xrandr-indicator"
  "gnome-shell-extensions-common")
conflicts=("${_realname}" 
  "gnome-shell-extensions-common"
  "gnome-shell-extension-common-git")

options=(!libtool !emptydirs)
install=gnome-shell-extensions-git.install

_gitroot="git://git.gnome.org/gnome-shell-extensions"
_gitname="gnome-shell-extensions"


# PKGBUILD specific functions
_enabled_extensions="apps-menu native-window-placement systemMonitor windowsNavigator workspace-indicator gajim"

# You may uncomment the extensions below, but they are working properly yet.
_not_fully_working_extensions="alternate-tab places-menu alternative-status-menu auto-move-windows dock drive-menu user-theme xrandr-indicator"

build()
{
  cd ${srcdir}/

  msg "Connecting to the GNOME GIT server..."
  if [[ -d ${srcdir}/${_gitname} ]] ; then
    cd ${_gitname}
    git pull origin
    msg "The local files are updated..."
  else
    git clone ${_gitroot} ${_gitname}
  fi

  msg "GIT checkout done."

  msg2 "Starting make for: ${pkgname}"

  if [[ -d ${srcdir}/${_gitname}-build ]]; then
    msg "Cleaning the previous build directory..."
    rm -rf ${srcdir}/${_gitname}-build
  fi

  git clone ${srcdir}/${_gitname} ${srcdir}/${_gitname}-build

  cd ${srcdir}/${_gitname}-build

  msg "Starting configure..."
  
  # Workaround on version checking problem
  sed -i -e "s|3.3.2|3.2.1|" configure.ac

  ./autogen.sh --prefix=/usr --disable-schemas-compile --enable-extensions="${_enabled_extensions}" "${_not_fully_working_extensions}"
  
  make
}

package()
{
  cd ${srcdir}/${_gitname}-build
  make DESTDIR="${pkgdir}" install
}
