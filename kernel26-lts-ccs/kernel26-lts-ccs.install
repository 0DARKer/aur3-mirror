KERNEL_NAME=-lts-ccs
KERNEL_VERSION=2.6.32-lts-ccs

post_install () {
  # updating module dependencies
  echo ">>> Updating module dependencies. Please wait ..."
  depmod $KERNEL_VERSION 
  # generate init ramdisks
  echo ">>> MKINITCPIO SETUP"
  echo ">>> ----------------"
  echo ">>> If you use LVM2, Encrypted root or software RAID,"
  echo ">>> Ensure you enable support in /etc/mkinitcpio.conf ."
  echo ">>> More information about mkinitcpio setup can be found here:"
  echo ">>> http://wiki.archlinux.org/index.php/Mkinitcpio"
  echo ""
  echo ">>> Generating initial ramdisk, using mkinitcpio.  Please wait..."
  /sbin/mkinitcpio -p kernel26${KERNEL_NAME}

  echo
  echo " * Install the ccs-tools package to make use of TOMOYO Linux"
  echo
  echo " * Some configuration options differ from the upstream Arch Linux"
  echo "   kernel for security reasons:"

  echo " * CONFIG_MMAP_MIN_ADDR=65536"
  echo "   This is the safe default. Some distributions reduce this to 4096"
  echo "   to account for people using vm86 functionality."
  echo "   vm.mmap_min_addr = 4096 can be set in /etc/sysctl.conf"
  echo "   if required."
  echo
  echo " * The aufs patches are not included as such patches are contrary to"
  echo "   the Arch Way and should not be included in the default Arch Linux"
  echo "   kernel. They also do not play nice with ccs-patch."
  echo
}

post_upgrade() {
  if [ "$(vercmp $1 2.6.32.35)" -le 0 ]; then
    post_install
  else
    # updating module dependencies
    echo ">>> Updating module dependencies. Please wait ..."
    depmod $KERNEL_VERSION 
    # generate init ramdisks
    echo ">>> MKINITCPIO SETUP"
    echo ">>> ----------------"
    echo ">>> If you use LVM2, Encrypted root or software RAID,"
    echo ">>> Ensure you enable support in /etc/mkinitcpio.conf ."
    echo ">>> More information about mkinitcpio setup can be found here:"
    echo ">>> http://wiki.archlinux.org/index.php/Mkinitcpio"
    echo ""
    echo ">>> Generating initial ramdisk, using mkinitcpio.  Please wait..."
    /sbin/mkinitcpio -p kernel26${KERNEL_NAME}
  fi
}

post_remove() {
  rm -f /boot/kernel26${KERNEL_NAME}.img
  rm -f /boot/kernel26${KERNEL_NAME}-fallback.img
}
