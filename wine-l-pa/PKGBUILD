# Maintainer: Jordan Johnston <triplesquarednine@gmail.com>
# Contributor: Joakim Hernberg <jhernberg@alchemy.lu>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-l-pa
pkgver=1.7.15
pkgrel=2

_pkgbasever=${pkgver/rc/-rc}

source=(http://prdownloads.sourceforge.net/wine/wine-$_pkgbasever.tar.bz2{,.sign}
        wine-rt.install
        add-implementation-setProcessWorkingSetSize.patch
        0012-ntdll-Use-pipes-for-synchronization-objects.patch
        00_override_pthreads_to_fix_gstreamer.patch
        NI-drag-and-drop.patch
        0050-pipe-check-and-thread-safe-read.patch
        set-realtime-priority-without-wineserver.patch
        Expand-dos-has-entropy-in-order-to-make-collision-le.patch
        fix-obscured-windows.patch
        disable-winedbg-auto-crash-dialog.patch
        Fix-disk-geometry-ioctl.patch
        menu-border-color.patch
        If-a-child-of-the-window-being-disabled-is-the-captu.patch
        hack-for-Ivory-Library-Installer-force-GENERIC_xxx.patch
        disable-wine-prefix-update-window.patch
        capitalize-users-directory.patch
        ntdll-Fix-name-validation-for-pipes-bug-28995.patch
        L-defeat-dialog-box.patch
        0001-mmdevapi-Prevent-race-condition-upon-Start.patch
        0007-mciseq-Prevent-busy-wait-while-pausing.patch
        0008-mciseq-Pause-causes-an-ABORT-notification.patch
        0009-mciseq-Make-sure-MCI_WAIT-waits-for-the-player-to-t.patch
        0010-mciseq-Limit-concurrency-when-starting-to-play.patch
        0012-mciseq-Play-returns-the-error-code-from-midiOutOpen.patch
        0020-mciseq-Check-stop-condition-after-sleeping.patch
        0021-mciseq-Remain-responsive-while-processing-large-del.patch
        0023-mciseq-MCI_PLAY-does-not-reset-the-tempo-to-default.patch
        0024-mciseq-Read-the-tempo-from-the-file-when-opening-it.patch
        0025-mciseq-MCI-tempo-is-expressed-in-beats-per-minute.patch
        0003-ntdll-Add-DTrace-probes-for-heap-functions.patch
        0004-ntdll-Add-DTrace-probes-for-critical-section-functio.patch
        0005-ntdll-Provide-handle-to-trap-deadlocks-from-debugger.patch
        0006-Fix-the-order-that-we-enable-an-application-window.patch
        0014-Fix-bug-linking-sync-object-into-linked-list.patch
        0003-Exit-expand-function-early-if-there-are-no-children.patch
        kernel32-tests-Verify-the-stability-of-CreateTimerQueue.patch
        winegcc-Add-Multiarch-Specifiers.patch
        msvcp100-Sign-compare-warnings-fix.patch
        kernel32_path.patch
        wine-rt-101107.patch
        ableton_file-read-write-diff.patch
        improve-allocation-performance.patch
        kuser_shared_data-RT.patch
        InitializeConditionVariable.patch
        64bits_return_Zero.patch
        0001-kernel32-Fix-MoveFile-where-source-dest-are-equal.patch
        kernel32-handle_FindFirstFileEx_better.patch
        winegcc-force_pointer_size.patch
        fdc.patch
        msi_actions_hack.patch
        setidealcpu_wine.patch
        0001-ntdll-Implement-NtQuerySystemInformation-class-0x37.patch
        0002-kernel32-Implement-GetNumaHighestNodeNumber.patch
        shush_DnDhelper.patch
        0B-msi_check_return_value_of_ITypeLib_GetLibAttr.patch
        et_exception_handler_mode.patch
        0000-revert_increase_mmdevapi_buffer_sizes_this_is_linux_not_mac.patch
        immReleaseContext.patch
        update_embedded_window.patch
        GetSystemTimes.patch
        shush_gdi_noHDC.patch
        shL.patch
        0016-muse-volume-work-around.patch
        0044-get-windows-label-from-registry.patch
        0049-override-serial-number-from-environment.patch
        0056-allow-WINEDLLPATH-override.patch
        winemenubuilder-silence-an-err.patch
        valgrind-prevent-crash-hack.patch
        ntdll_heap_alloc_stalls.patch
        winealsa-lock-free-memory_barriers.patch
        more_prios.patch
        imm_threads.patch
        avrtcrit.patch
        Optimize_Dlls.patch
        advapi_silent_delayShutdown.patch
        cxExclude_children-wait.patch
        threadLSPointer.patch
        winex11_Enable_disable_windows_unmap_foreign.patch
        0011-winmm-Load-winealsa-if-winepulse-is-found.patch
        0012-winepulse-Add-initial-stub-for-pulseaudio-support.patch
        0013-winepulse-Add-format-and-period-probing.patch
        0014-winepulse-Add-audioclient.patch
        0015-winepulse-Add-IAudioRenderClient-and-IAudioCaptureCl.patch
        0016-winepulse-Add-IAudioClock-and-IAudioClock2.patch
        0017-winepulse-Add-audiostreamvolume.patch
        0018-winepulse-Add-session-support.patch
        0019-fix-fdels-trailing-whitespaces.patch
        0020-winepulse-v12.patch
        0021-winepulse-v15-Add-support-for-missing-formats-and-si.patch
        0022-winepulse-v16-Add-official-warning-wine-doesn-t-want.patch 
        0023-winepulse-v17-Fix-winmm-tests.patch
        0024-winepulse-v18-Latency-and-compilation-improvements.patch
        0025-winepulse-API-Compatibility-with-1.5.2-onward-v2.patch
        0026-winepulse-Fix-low-latency-support.patch
        0027-winepulse-drop-realtime-priority-before-thread-destr.patch
        0028-winepulse-remove-bogus-SetEvent-from-pulse_started_c.patch
        0029-winepulse-disable-the-setevent-part-of-the-latency-h.patch
        0030-winepulse-v20-fix-the-checks-in-IsFormatSupported.patch
        0031-winepulse-fixup-IsFormatSupported-calls.patch
        0032-winepulse-v21-return-early-if-padding-didn-t-update.patch
        0033-winepulse-fix-unneeded-free-in-write.patch
        0034-winepulse-v23-fixup-a-invalid-free-in-mmdevapi.patch
        0035-winepulse-use-a-pi-mutex-for-serialization.patch
        0036-winepulse-add-support-for-IMarshal.patch
        0037-rewrite_winealsa_be_more_like_mmdevapi-like.patch
        wineX11drv_revert_177_XEmbed_changes_NO_vst_flicker.patch)

md5sums=('92ed8c6bfe876dd2f72efafbebf26485'
         'SKIP'
         'b2e3ba93933f64bd98a3aa8ec64ffcfd'
         '817b81193419ca4b417c8c8f06729b76'
         'e956f5efb911cb1c8581b61a6aebac7e'
         '7c6734f301124d66c4454af79a8465f6'
         '1a8f481c97c1b5ad723b8aa72d68d5f6'
         '60b749b08cb95bf0c4ad16c46227f35e'
         '03ba935bc120dd7d110cc6a443aee6a9'
         'c29dd4f1cdda2d4175d07a68e29eb5e7'
         'd93b6a752caac30c2e497eef2f8b0bf9'
         '460cceb5b38d027ef9d914917cbb086b'
         'b8d955070a784ec29ed90c00af75453a'
         '572837f5d756809401e1a60178295a3d'
         '8ddfdea34ce5edd9e1afa13d37d223da'
         '1d8e0e45cbe0d4f705fe7b638f7bcd66'
         'bc9c5755c350a8afdaa296bd8cc52d7c'
         '6b03015993ddc36ffe95cfb9298a4b57'
         '1ac12284717594a1683c1d91c0ee41af'
         'b6091c250b2399dc577cc1436db40d86'
         'd00c0864d11edfaa2b609282fa12d801'
         '8a70f7773d9364239939650d28575a0a'
         '1236ec750718c2f89c950462f59c1c25'
         'd352e531848ec9123714977b50192a30'
         'cac7a4c02cc526f7df6ec4e241859197'
         'a1e72dbe31e7eb212b140fca71b1e064'
         '1507c571f155202db95b89105c24c542'
         '5833bcab85a06e2d947105095d9d50b9'
         '9850a793cf670d2fc1b419a397c9193f'
         'ede42fe52def0c1c926291df9f3f2c05'
         '71caa3a934735d4f68e28d8ee04a9d37'
         'd2901fbbfdec1038eed2e95898868a92'
         '44b1e90c2f5f65400d517c23243cad46'
         '0792a8ceb7ca98038cf93e8ca11c8a98'
         'a4ca909137f755fab24c0d7e8d504262'
         '7e050a0ac3e6a0e2dd258f6040ddbb74'
         'b90f574e25258f20735c8d31eb94052e'
         '66d0dc4f9f988f53d31dccb52d3a1f82'
         'c2f518f2350f27e0765e354c65af7f04'
         'b104f8fd1d3f3f10787c988afe020550'
         '737d70ea89cecdf5d24ce490be4d9200'
         '495b16901c0fac577f9b8cf8448e1c7d'
         '265e6770852e7ce075d0ac8ed4813d07'
         'eb4eb42c1420c45b386a267091a1c48e'
         'dcceef3cf7b02e88db2723c8a8234125'
         'a6158ad7e35dbe540d5f6705448960f4'
         'ad812d5dfa3ca313f17087df203e7cb6'
         '75aaf97c4b8903796f6e2eef950cf900'
         'ebe3a5f6ec81925f903e3bcbbca635f3'
         '6ca7900b3a87186fcf8ff24a30e47723'
         '6181b7c761325e36720589835f22785b'
         'e59d18f8afab13f7536322f4d3a601be'
         'a5b8d7fd515e528e618958e66b66d6df'
         '51869218f8dfd59f19da4aee7007117f'
         'e4706b443e2d4c0c9c6f2c58719499c3'
         '278df05b91a33070bcb8695222c543c9'
         'bec79adce3598e4ac3226b01f040d6ed'
         'c057fb56d489657def6497eadafee7e2'
         'b669b581214f2a3d6e33e108c54b28e0'
         'e24564e8a7d169780422fb7f98552129'
         'f2d7b890592eaabdc4c211d2c095c973'
         '927a210b3e18bbd7c0bd15195f89f0e2'
         '8e1f5c244312c5314079c80f0de00b85'
         '33bef628f15f0527cd6dcaa1fdb383bf'
         '9bdaf2995dec7dd9a4287dd80c73fa7c'
         '6bed7098b7cd8ab0ed2cee91a75250ee'
         '5453c3c7460219c0e5b369dc71b4f94a'
         '3c125ce474c93a44155167c8d00e4157'
         'f1e80e572bb48563994e5d9ca488807e'
         'fcfd83a0ecb10489299d01d9e32f9d8a'
         '7f123e2d784f073fd8c26bd18d55b4e5'
         '53e8282b0003c00a4562cfc62c20c0ea'
         '4bc859fc2194c6d1cec35cb056e5085d'
         '62c6310b363ab88426c217b3a16e10e4'
         'a0d63fa731760e28e4402788f90a4c67'
         'ba6896b86ebfc9153aa366346b208bbb'
         '92e78dae6fea343481ce4102b8b589f8'
         '993a342dea11af6ddc23569f2c29ed47'
         'faa5b22d1a58ea4a67400d1dadba3704'
         '3415f621478dba0e0ef1bf1d694fb897'
         'aa5f1efa074cf0262e3cfffef3a5d892'
         'de0e7c3a5688cbec8c9ebb7825a64bc3'
         '9e2429a81a5c9e3ac41b486dd6b52a80'
         'f40a9de8efaf190919b284b6be47c8ab'
         '1e31f164b2e6bb7fb1f90e3bf59e308a'
         'ff8f5b426ed75ba463abe3d6e5b0b991'
         'a7ff936bef5ad5ae694924fdff11d007'
         'dd9f72fb51525055a7bd7f0e489dbb2b'
         '5faf22c4f63cdfb2e446ad6ad30237d1'
         'dc0d83c60b7eb1d8a609c365bbdead52'
         '50011fdb695cea4cf4ff04577e993382'
         '6529683b90c49178bf0dc4ac412ffcc5'
         '3435eb8144012da50b147126ea2b328d'
         'ae792bfa8cf4bac85c886bef26d8bda4'
         '1ef0cae8718671c598865a62b41afeab'
         '7354614b4c07bba54de5433d586699d9'
         '54e14150009a3119c04fd83d9c137960'
         'c01ee5e5a1bc16dd615861cb39d82e42'
         '1d3184d6c381bde5135a4993aca95dc5'
         'aaa5d79fd5f8b4dae88d7c563a257b44'
         '4059107af87cd804d0a0f49c16886aaf'
         '3e9a9bc3f423a92c5ad29f703ab15566'
         '997f5db71e8a3aa2d1462e5114e2e145'
         '2fbebc3167c102a9c392d4c1a9b54157'
         '6fbf08cefd8afb71d746c355da1a06b6'
         '49e177f986442efa25c7396be8c5acca'
         '046f159853dd90903d045b1e2edff5a2'
         '8a7aea6115aee90ccefc5a6894c4ef02')

pkgdesc="Wine-L_pa: Wine geared for Proaudio"
url="https://sourceforge.net/projects/l-proaudio/"
arch=(i686 x86_64)
options=(staticlibs)
license=(LGPL)
install=wine-rt.install

depends=(
  fontconfig      lib32-fontconfig
  mesa            lib32-mesa 
  libxcursor      lib32-libxcursor
  libxrandr       lib32-libxrandr
  libxdamage      lib32-libxdamage
  libxi           lib32-libxi
  gettext         lib32-gettext
  desktop-file-utils
)

makedepends=(autoconf ncurses bison perl fontforge flex prelink
  'gcc>=4.5.0-2'  'gcc-multilib>=4.5.0-2'
  giflib          lib32-giflib
  libpng          lib32-libpng
  gnutls          lib32-gnutls
  libxinerama     lib32-libxinerama
  libxcomposite   lib32-libxcomposite
  libxmu          lib32-libxmu
  libxxf86vm      lib32-libxxf86vm
  libxml2         lib32-libxml2
  libldap         lib32-libldap
  lcms2           lib32-lcms2
  mpg123          lib32-mpg123
  openal          lib32-openal
  v4l-utils       lib32-v4l-utils
  alsa-lib        lib32-alsa-lib
)
  
optdepends=(
  giflib          lib32-giflib
  libpng          lib32-libpng
  libldap         lib32-libldap
  gnutls          lib32-gnutls
  lcms2           lib32-lcms2
  libxml2         lib32-libxml2
  mpg123          lib32-mpg123
  openal          lib32-openal
  v4l-utils       lib32-v4l-utils
  libpulse        lib32-libpulse
  alsa-plugins    lib32-alsa-plugins
  alsa-lib        lib32-alsa-lib
  libpulse        lib32-libpulse  
)

if [[ $CARCH == i686 ]]; then
  provides=("wine=$pkgver")
  conflicts=('wine wine-rt')
  replaces=('wine wine-rt')

  # Strip lib32 etc. on i686
  depends=(${depends[@]/*32-*/})
  makedepends=(${makedepends[@]/*32-*/})
  makedepends=(${makedepends[@]/*-multilib*/})
  optdepends=(${optdepends[@]/*32-*/})
else
  provides=("wine=$pkgver" "bin32-wine=$pkgver" "wine-wow64=$pkgver")
  conflicts=('wine' 'bin32-wine' 'wine-wow64')
  replaces=('wine' 'bin32-wine')
fi

build() {
  if [ -f "$srcdir//wine-$pkgver/README.WINE-RT" ]
  then
    rm  "$srcdir//wine-$pkgver/README.WINE-RT"
  fi

  cd "$srcdir/wine-$_pkgbasever"

#############################################################################
#
# L_Pa-Wine sync_pipe and L_RT_THREADS patchwork
#
# You absolutely need these patches for L_Pa-Wine to actually be useful ;)
#

  msg "Applying 0012-ntdll-Use-pipes-for-synchronization.patch"
  patch -s -Np1 -i $srcdir/0012-ntdll-Use-pipes-for-synchronization-objects.patch
  msg2 "         SUCCESS :)"

  msg "Applying set-realtime-priority-without-wineserver.patch"
  patch -s -Np1 -i $srcdir/set-realtime-priority-without-wineserver.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0050-pipe-thread-safe.patch"
  patch -s -Np1 -i $srcdir/0050-pipe-check-and-thread-safe-read.patch
  msg2 "         SUCCESS :)"

  msg "Applying disable-wine-prefix-update-window.patch"
  patch -s -Np1 -i $srcdir/disable-wine-prefix-update-window.patch
  msg2 "         SUCCESS :)"

  msg "Applying L-defeat-dialog-box.patch"
  patch -s -Np1 -i $srcdir/L-defeat-dialog-box.patch
  msg2 "         SUCCESS :)"

#############################################################################
#
# Hacks / Workarounds / one-offs 
#
 
  msg "Applying NI-drag-drop patch"
  patch -s -Np1 -i $srcdir/NI-drag-and-drop.patch
  msg2 "         SUCCESS :)"

  msg "Applying expand-dos-has-entropy-to-make-less-collision.patch"
  patch -s -Np1 -i $srcdir/Expand-dos-has-entropy-in-order-to-make-collision-le.patch
  msg2 "         SUCCESS :)"

  msg "Applying fix-obscured-windows.patch"
  patch -s -Np1 -i $srcdir/fix-obscured-windows.patch
  msg2 "         SUCCESS :)"
 
  msg "Applying disable-winedbg-auto-crash-dialog.patch"
  patch -s -Np1 -i $srcdir/disable-winedbg-auto-crash-dialog.patch
  msg2 "         SUCCESS :)"

  msg "Applying Fix disk geomtery.ioctl"
  patch -s -Np1 -i $srcdir/Fix-disk-geometry-ioctl.patch
  msg "        SUCCESS :)"

  msg "Applying menu-border-color.patch"
  patch -s -Np1 -i $srcdir/menu-border-color.patch
  msg2 "         SUCCESS :)"

  msg "Applying child-window-is-capture-give-WM_CANCELMODE.patch"
  patch -s -Np1 -i $srcdir/If-a-child-of-the-window-being-disabled-is-the-captu.patch
  msg2 "         SUCCESS :)"

  msg "Applying capitalize-users-directory.patch"
  patch -s -Np1 -i $srcdir/capitalize-users-directory.patch
  msg2 "         SUCCESS :)"

  msg "Applying hack-for-Ivory-Library-Installer-force-GENERIC_xxx.patch"
  patch -s -Np1 -i $srcdir/hack-for-Ivory-Library-Installer-force-GENERIC_xxx.patch
  msg "        SUCCESS :)"

  msg "Applying kernel32-tests-Verify-the-stability-of-CreateTimerQueue.patch"
  patch -s -Np1 -i $srcdir/kernel32-tests-Verify-the-stability-of-CreateTimerQueue.patch
  msg2 "         SUCCESS :)"

#  msg "Applying msvcp100-Sign-compare-warnings-fix.patch"
#  patch -s -Np1 -i $srcdir/msvcp100-Sign-compare-warnings-fix.patch
#  msg2 "         SUCCESS :)"

  msg "Applying kernel32_path.patch"
  patch -s -Np1 -i $srcdir/kernel32_path.patch
  msg2 "         SUCCESS :)"

  msg "Applying ntdll-Fix-name-validation-for-pipes-bug-28995.patch"
  patch -s -Np1 -i $srcdir/ntdll-Fix-name-validation-for-pipes-bug-28995.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0006-Fix-the-order-that-we-enable-an-application-window.patch"
  patch -s -Np1 -i $srcdir/0006-Fix-the-order-that-we-enable-an-application-window.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0003-Exit-expand-function-early-if-there-are-no-children.patch"
  patch -s -Np1 -i $srcdir/0003-Exit-expand-function-early-if-there-are-no-children.patch
  msg2 "         SUCCESS :)"

#  msg "Applying kuser_shared_data-RT.patch"
#  patch -s -Np1 -i $srcdir/kuser_shared_data-RT.patch
#  msg2 "         SUCCESS :)"

#############################################################################
#
# Sound / Midi patches
# 

  msg "Applying 0001-mmdevapi-Prevent-race-condition-upon-Start.patch"
  patch -s -Np1 -i $srcdir/0001-mmdevapi-Prevent-race-condition-upon-Start.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0007-mciseq-Prevent-busy-wait-while-pausing.patch"
  patch -s -Np1 -i $srcdir/0007-mciseq-Prevent-busy-wait-while-pausing.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0008-mciseq-Pause-causes-an-ABORT-notification.patch"
  patch -s -Np1 -i $srcdir/0008-mciseq-Pause-causes-an-ABORT-notification.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0009-mciseq-Make-sure-MCI_WAIT-waits-for-the-player-to-t.patch"
  patch -s -Np1 -i $srcdir/0009-mciseq-Make-sure-MCI_WAIT-waits-for-the-player-to-t.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0010-mciseq-Limit-concurrency-when-starting-to-play.patch patch"
  patch -s -Np1 -i $srcdir/0010-mciseq-Limit-concurrency-when-starting-to-play.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0012-mciseq-Play-returns-the-error-code-from-midiOutOpen.patch"
  patch -s -Np1 -i $srcdir/0012-mciseq-Play-returns-the-error-code-from-midiOutOpen.patch
  msg2 "        SUCCESS :)"

  msg "Applying 0020-mciseq-Check-stop-condition-after-sleeping.patch"
  patch -s -Np1 -i $srcdir/0020-mciseq-Check-stop-condition-after-sleeping.patch
  msg2 "        SUCCESS :)"

  msg "Applying 0021-mciseq-Remain-responsive-while-processing-large-del.patch"
  patch -s -Np1 -i $srcdir/0021-mciseq-Remain-responsive-while-processing-large-del.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0023-mciseq-MCI_PLAY-does-not-reset-the-tempo-to-default.patch"
  patch -s -Np1 -i $srcdir/0023-mciseq-MCI_PLAY-does-not-reset-the-tempo-to-default.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0024-mciseq-Read-the-tempo-from-the-file-when-opening-it.patch"
  patch -s -Np1 -i $srcdir/0024-mciseq-Read-the-tempo-from-the-file-when-opening-it.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0025-mciseq-MCI-tempo-is-expressed-in-beats-per-minute.patch"
  patch -s -Np1 -i $srcdir/0025-mciseq-MCI-tempo-is-expressed-in-beats-per-minute.patch
  msg2 "         SUCCESS :)"

#############################################################################
#
# Wine-rt
#

  msg "Applying Wine-rt patch"
  patch -s -Np1 -i $srcdir/wine-rt-101107.patch
  msg2 "         SUCCESS :)"

#############################################################################
#
# more one offs / hacks / workarounds 
#

  msg "Applying 0001-kernel32-Fix-MoveFile-where-source-dest-are-equal.patch"
  patch -s -Np1 -i $srcdir/0001-kernel32-Fix-MoveFile-where-source-dest-are-equal.patch
  msg2 "         SUCCESS :)"

  msg "Applying 64bits_return_Zero.patch"
  patch -s -Np1 -i $srcdir/64bits_return_Zero.patch
  msg2 "         SUCCESS :)"

  msg "Applying kernel32-handle_FindFirstFileEx_better.patch"
  patch -s -Np1 -i $srcdir/kernel32-handle_FindFirstFileEx_better.patch
  msg2 "         SUCCESS :)"

  msg "Applying ableton_file-read-write-diff.patch"
  patch -s -Np1 -i $srcdir/ableton_file-read-write-diff.patch
  msg2 "         SUCCESS :)"

  msg "Applying winegcc-force_pointer_size.patch"
  patch -s -Np1 -i $srcdir/winegcc-force_pointer_size.patch
  msg2 "         SUCCESS :)"

  # is below needed anymore?

#  msg "Applying fdc.patch"
#  patch -s -Np1 -i $srcdir/fdc.patch
#  msg2 "         SUCCESS :)"

  # I think above may be from my USB branch (?)

  msg "add-implementation-setProcessWorkingSetSize.patch"
  patch -s -Np1 -i $srcdir/add-implementation-setProcessWorkingSetSize.patch
  msg2 "         SUCCESS :)"

  msg "Applying setidealcpu_wine.patch"
  patch -s -Np1 -i $srcdir/setidealcpu_wine.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0001-ntdll-Implement-NtQuerySystemInformation-class-0x37.patch"
  patch -s -Np1 -i $srcdir/0001-ntdll-Implement-NtQuerySystemInformation-class-0x37.patch
  msg2 "         SUCCESS :)"

#  msg "Applying 0002-kernel32-Implement-GetNumaHighestNodeNumber.patch"
#  patch -s -Np1 -i $srcdir/0002-kernel32-Implement-GetNumaHighestNodeNumber.patch
#  msg2 "         SUCCESS :)"

  msg "Applying shush_DnDhelper.patch"
  patch -s -Np1 -i $srcdir/shush_DnDhelper.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0B-msi_check_return_value_of_ITypeLib_GetLibAttr.patch"
  patch -s -Np1 -i $srcdir/0B-msi_check_return_value_of_ITypeLib_GetLibAttr.patch
  msg2 "         SUCCESS :)"

  msg "Applying 00_override_pthreads_to_fix_gstreamer.patch"
  patch -s -Np1 -i $srcdir/00_override_pthreads_to_fix_gstreamer.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0000-revert_increase_mmdevapi_buffer_sizes_this_is_linux_not_mac.patch"
  patch -s -Np1 -i $srcdir/0000-revert_increase_mmdevapi_buffer_sizes_this_is_linux_not_mac.patch
  msg2 "         SUCCESS :)"

  msg "Applying immReleaseContext.patch"
  patch -s -Np1 -i $srcdir/immReleaseContext.patch
  msg2 "         SUCCESS :)"

  msg "Applying imm_threads.patch"
  patch -s -Np1 -i $srcdir/imm_threads.patch
  msg2 "         SUCCESS :)"

  msg "Applying more_prios.patch"
  patch -s -Np1 -i $srcdir/more_prios.patch
  msg2 "         SUCCESS :)"

  msg "Applying avrtcrit.patch"
  patch -s -Np1 -i $srcdir/avrtcrit.patch
  msg2 "         SUCCESS :)"

  msg "Applying valgrind-prevent-crash-hack.patch"
  patch -s -Np1 -i $srcdir/valgrind-prevent-crash-hack.patch
  msg2 "         SUCCESS :)"

  msg "Applying winemenubuilder-silence-an-err.patch"
  patch -s -Np1 -i $srcdir/winemenubuilder-silence-an-err.patch
  msg2 "         SUCCESS :)"

  msg "Applying threadLSPointer.patch"
  patch -s -Np1 -i $srcdir/threadLSPointer.patch
  msg2 "         SUCCESS :)"

  msg "Applying et_exception_handler_mode.patch"
  patch -s -Np1 -i $srcdir/et_exception_handler_mode.patch
  msg2 "         SUCCESS :)"

  msg "Applying cxExclude_children-wait.patch"
  patch -s -Np1 -i $srcdir/cxExclude_children-wait.patch
  msg2 "         SUCCESS :)"

  msg "Applying ntdll_heap_alloc_stalls.patch"
  patch -s -Np1 -i $srcdir/ntdll_heap_alloc_stalls.patch
  msg2 "         SUCCESS :)"

#  msg "Applying Optimize_Dlls.patch"
#  patch -s -Np1 -i $srcdir/Optimize_Dlls.patch
#  msg2 "         SUCCESS :)"

  msg "Applying shush_gdi_noHDC.patch"
  patch -s -Np1 -i $srcdir/shush_gdi_noHDC.patch
  msg2 "         SUCCESS :)"

  msg "Applying shL.patch"
  patch -s -Np1 -i $srcdir/shL.patch
  msg2 "         SUCCESS :)"

  msg "Applying advapi_silent_delayShutdown.patch"
  patch -s -Np1 -i $srcdir/advapi_silent_delayShutdown.patch
  msg2 "         SUCCESS :)"

#  msg "Applying update_embedded_window.patch"
#  patch -s -Np1 -i $srcdir/update_embedded_window.patch
#  msg2 "         SUCCESS :)"

  ############################################################################
  #
  # Winepulse Support
  #

  msg "Applying 0011-winmm-Load-winealsa-if-winepulse-is-found.patch"
  patch -s -Np1 -i $srcdir/0011-winmm-Load-winealsa-if-winepulse-is-found.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0012-winepulse-Add-initial-stub-for-pulseaudio-support.patch"
  patch -s -Np1 -i $srcdir/0012-winepulse-Add-initial-stub-for-pulseaudio-support.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0013-winepulse-Add-format-and-period-probing.patch"
  patch -s -Np1 -i $srcdir/0013-winepulse-Add-format-and-period-probing.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0014-winepulse-Add-audioclient.patch"
  patch -s -Np1 -i $srcdir/0014-winepulse-Add-audioclient.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0015-winepulse-Add-IAudioRenderClient-and-IAudioCaptureCl.patch"
  patch -s -Np1 -i $srcdir/0015-winepulse-Add-IAudioRenderClient-and-IAudioCaptureCl.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0016-winepulse-Add-IAudioClock-and-IAudioClock2.patch"
  patch -s -Np1 -i $srcdir/0016-winepulse-Add-IAudioClock-and-IAudioClock2.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0017-winepulse-Add-audiostreamvolume.patch"
  patch -s -Np1 -i $srcdir/0017-winepulse-Add-audiostreamvolume.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0018-winepulse-Add-session-support.patch"
  patch -s -Np1 -i $srcdir/0018-winepulse-Add-session-support.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0019-fix-fdels-trailing-whitespaces.patch"
  patch -s -Np1 -i $srcdir/0019-fix-fdels-trailing-whitespaces.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0020-winepulse-v12.patch"
  patch -s -Np1 -i $srcdir/0020-winepulse-v12.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0021-winepulse-v15-Add-support-for-missing-formats-and-si.patch"
  patch -s -Np1 -i $srcdir/0021-winepulse-v15-Add-support-for-missing-formats-and-si.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0022-winepulse-v16-Add-official-warning-wine-doesn-t-want.patch"
  patch -s -Np1 -i $srcdir/0022-winepulse-v16-Add-official-warning-wine-doesn-t-want.patch 
  msg2 "         SUCCESS :)"

  msg "Applying 0023-winepulse-v17-Fix-winmm-tests.patch"
  patch -s -Np1 -i $srcdir/0023-winepulse-v17-Fix-winmm-tests.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0024-winepulse-v18-Latency-and-compilation-improvements.patch"
  patch -s -Np1 -i $srcdir/0024-winepulse-v18-Latency-and-compilation-improvements.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0025-winepulse-API-Compatibility-with-1.5.2-onward-v2.patch"
  patch -s -Np1 -i $srcdir/0025-winepulse-API-Compatibility-with-1.5.2-onward-v2.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0026-winepulse-Fix-low-latency-support.patch"
  patch -s -Np1 -i $srcdir/0026-winepulse-Fix-low-latency-support.patch
  msg2 "         SUCCESS :)"

#  msg "Applying 0027-winepulse-drop-realtime-priority-before-thread-destr.patch"
#  patch -s -Np1 -i $srcdir/0027-winepulse-drop-realtime-priority-before-thread-destr.patch
#  msg2 "         SUCCESS :)"

  msg "Applying 0028-winepulse-remove-bogus-SetEvent-from-pulse_started_c.patch"
  patch -s -Np1 -i $srcdir/0028-winepulse-remove-bogus-SetEvent-from-pulse_started_c.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0029-winepulse-disable-the-setevent-part-of-the-latency-h.patch"
  patch -s -Np1 -i $srcdir/0029-winepulse-disable-the-setevent-part-of-the-latency-h.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0030-winepulse-v20-fix-the-checks-in-IsFormatSupported.patch"
  patch -s -Np1 -i $srcdir/0030-winepulse-v20-fix-the-checks-in-IsFormatSupported.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0031-winepulse-fixup-IsFormatSupported-calls.patch"
  patch -s -Np1 -i $srcdir/0031-winepulse-fixup-IsFormatSupported-calls.patch
  msg2 "         SUCCESS :)"

  msg "Applying 00321-winepulse-v21-return-early-if-padding-didn-t-update.patch"
  patch -s -Np1 -i $srcdir/0032-winepulse-v21-return-early-if-padding-didn-t-update.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0033-winepulse-fix-unneeded-free-in-write.patch"
  patch -s -Np1 -i $srcdir/0033-winepulse-fix-unneeded-free-in-write.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0034-winepulse-v23-fixup-a-invalid-free-in-mmdevapi.patch"
  patch -s -Np1 -i $srcdir/0034-winepulse-v23-fixup-a-invalid-free-in-mmdevapi.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0035-winepulse-use-a-pi-mutex-for-serialization.patch"
  patch -s -Np1 -i $srcdir/0035-winepulse-use-a-pi-mutex-for-serialization.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0036-winepulse-add-support-for-IMarshal.patch"
  patch -s -Np1 -i $srcdir/0036-winepulse-add-support-for-IMarshal.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0037-rewrite_winealsa_be_more_like_mmdevapi-like.patch"
  patch -s -Np1 -i $srcdir/0037-rewrite_winealsa_be_more_like_mmdevapi-like.patch
  msg2 "         SUCCESS :)"

  msg "Reverting wineX11drv_revert_177_XEmbed_changes_NO_vst_flicker.patch"
  patch -s -Np1 -i $srcdir/wineX11drv_revert_177_XEmbed_changes_NO_vst_flicker.patch
  msg2 "         SUCCESS :)"

#  msg "Applying winex11_Enable_disable_windows_unmap_foreign.patch"
#  patch -s -Np1 -i $srcdir/winex11_Enable_disable_windows_unmap_foreign.patch
#  msg2 "         SUCCESS :)"

#  msg "Applying GetSystemTimes.patch"
#  patch -s -Np1 -i $srcdir/GetSystemTimes.patch
#  msg2 "         SUCCESS :)"

#  msg "Applying InitializeConditionVariable.patch"
#  patch -s -Np1 -i $srcdir/InitializeConditionVariable.patch
#  msg2 "         SUCCESS :)"

  msg "Applying msi_actions_hack.patch"
  patch -s -Np1 -i $srcdir/msi_actions_hack.patch
  msg "         SUCCESS :)

_____________________________________________________________

(IF) ALL PATCHES APPLIED SUCCESSFULLY ....

        ....   L_Pa-WINE IS READY (FOR COMPILATION)
______________________________________________________________
"
  sleep 3

  cd "$srcdir"

  # Allow ccache to work
  mv wine-1.7.15 wine

  # ncurses fix
  sed -i 's|libncurses|libncursesw|g' "$srcdir/wine/configure"
  sed -i 's|lncurses|lncursesw|g' "$srcdir/wine/configure"

  # Get rid of old build dirs
  rm -rf wine-{32,64}-build
  mkdir wine-32-build

  if [[ $CARCH == x86_64 ]]; then
    msg2 "Building Wine-64..."

    mkdir wine-64-build
    cd "$srcdir/wine-64-build"
    ../wine/configure \
      --prefix=/usr \
      --without-opencl \
      --without-mpg123 \
      --disable-tests \
      --libdir=/usr/lib \
      --with-pulse \
      --enable-win64 

    make CFLAGS+="-O2 -march=native -mtune=native" 

    _wine32opts=(
      --libdir=/usr/lib32
      --with-wine64="$srcdir/wine-64-build"
    )

    export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
  fi

  msg2 "Building Wine-32..."
  cd "$srcdir/wine-32-build"
  ../wine/configure \
    --prefix=/usr \
    --disable-tests \
    --without-opencl \
    --without-mpg123 \
    --with-pulse \
    "${_wine32opts[@]}"

  # These additional CFLAGS solve FS#27560
    make CFLAGS+="-mincoming-stack-boundary=2 -march=native -mtune=native -O2 -pipe" CXXFLAGS+="-mincoming-stack-boundary=2"
}

package() {
  msg2 "Packaging Wine-32..."
  cd "$srcdir/wine-32-build"

  if [[ $CARCH == i686 ]]; then
    make prefix="$pkgdir/usr" install
  else
    make prefix="$pkgdir/usr" \
      libdir="$pkgdir/usr/lib32" \
      dlldir="$pkgdir/usr/lib32/wine" install

    msg2 "Packaging Wine-64..."
    cd "$srcdir/wine-64-build"
    make prefix="$pkgdir/usr" \
      libdir="$pkgdir/usr/lib" \
      dlldir="$pkgdir/usr/lib/wine" install
  fi

  mkdir -p "$pkgdir/usr/share/doc/wine-rt"
  cp "$srcdir/wine/README.WINE-RT" "$pkgdir/usr/share/doc/wine-rt"
}

# vim:set ts=8 sts=2 sw=2 et:
