# Maintainer: Jordan Johnston <triplesquarednine@gmail.com>
# Contributor:  Joakim Hernberg <jhernberg@alchemy.lu>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-l-pa
pkgver=1.5.21
pkgrel=1

_pkgbasever=${pkgver/rc/-rc}

source=(http://ibiblio.org/pub/linux/system/emulators/wine/wine-${_pkgbasever}.tar.bz2
        wine-rt-101107.patch
        wine-rt.install
        add-implementation-setProcessWorkingSetSize.patch
        0012-ntdll-Use-pipes-for-synchronization-objects.patch
        0052-NI-drag-and-drop.patch
        0061-fix-broken-cross-compiled-winegcc.patch
        0050-pipe-check-and-thread-safe-read.patch
        0054-set-realtime-priority-without-wineserver.patch
        0005-Expand-dos-has-entropy-in-order-to-make-collision-le.patch
        0023-improve-IoRegisterDeviceInterface.patch
        0025-Add-stub-for-IoSetDeviceInterfaceState.patch
        fix-obscured-windows.patch
        0063-disable-winedbg-auto-crash-dialog.patch
        0062-disable-crashing-alpha-bitmaps-for-gdb.patch
        Fix-disk-geometry-ioctl.patch
        menu-border-color.patch
        0010-If-a-child-of-the-window-being-disabled-is-the-captu.patch
        0033-overridable-default-filesystem-type.patch
        0027-Add-stub-for-PoSetPowerState.patch
        0044-get-windows-label-from-registry.patch)

md5sums=('0ebfc492bf22f22bff27af04c92fd9d2'
         '495b16901c0fac577f9b8cf8448e1c7d'
         'b2e3ba93933f64bd98a3aa8ec64ffcfd'
         '817b81193419ca4b417c8c8f06729b76'
         'da54d53fb4d2137d3a7314fbbe1025b2'
         '9e785adfe843c113bcbe41cacb82234f'
         'e7a3ac594c4fb4bc8b3b08046e50a483'
         '60b749b08cb95bf0c4ad16c46227f35e'
         '48b467728bdfb18309fabd2ab106243b'
         'c29dd4f1cdda2d4175d07a68e29eb5e7'
         '4d11a7f2361fdcd9c8590c9a2d308223'
         '79b4726c57a2de7bc8c1eaafdab732ad'
         'd93b6a752caac30c2e497eef2f8b0bf9'
         '460cceb5b38d027ef9d914917cbb086b'
         '3e258865e2ec2042b7bde18b5fe5474d'
         'b8d955070a784ec29ed90c00af75453a'
         '572837f5d756809401e1a60178295a3d'
         '8ddfdea34ce5edd9e1afa13d37d223da'
         '2c8655c7945e6b20a3141d2880caf305'
         '538293d3e47a259a58db22c9d8c1d03f'
         '6bed7098b7cd8ab0ed2cee91a75250ee')

pkgdesc="Wine-L_pa: Wine geared for Proaudio"
url="http://www.winehq.com"
arch=(i686 x86_64)
license=(LGPL)
install=wine-rt.install

depends=(
  fontconfig      lib32-fontconfig
  mesa            lib32-mesa 
  libxcursor      lib32-libxcursor
  libxrandr       lib32-libxrandr
  libxdamage      lib32-libxdamage
  libxi           lib32-libxi
  gettext         lib32-gettext
  desktop-file-utils
)

makedepends=(autoconf ncurses bison perl fontforge flex prelink
  'gcc>=4.5.0-2'  'gcc-multilib>=4.5.0-2'
  giflib          lib32-giflib
  libpng          lib32-libpng
  gnutls          lib32-gnutls
  libxinerama     lib32-libxinerama
  libxcomposite   lib32-libxcomposite
  libxmu          lib32-libxmu
  libxxf86vm      lib32-libxxf86vm
  libxml2         lib32-libxml2
  libldap         lib32-libldap
  lcms            lib32-lcms
  mpg123          lib32-mpg123
  openal          lib32-openal
  v4l-utils       lib32-v4l-utils
  alsa-lib        lib32-alsa-lib
)
  
optdepends=(
  giflib          lib32-giflib
  libpng          lib32-libpng
  libldap         lib32-libldap
  gnutls          lib32-gnutls
  lcms            lib32-lcms
  libxml2         lib32-libxml2
  mpg123          lib32-mpg123
  openal          lib32-openal
  v4l-utils       lib32-v4l-utils
  libpulse        lib32-libpulse
  alsa-plugins    lib32-alsa-plugins
  alsa-lib        lib32-alsa-lib
)

if [[ $CARCH == i686 ]]; then
  provides=("wine=$pkgver")
  conflicts=('wine wine-rt')
  replaces=('wine wine-rt')

  # Strip lib32 etc. on i686
  depends=(${depends[@]/*32-*/})
  makedepends=(${makedepends[@]/*32-*/})
  makedepends=(${makedepends[@]/*-multilib*/})
  optdepends=(${optdepends[@]/*32-*/})
else
  provides=("wine=$pkgver" "bin32-wine=$pkgver" "wine-wow64=$pkgver")
  conflicts=('wine' 'bin32-wine' 'wine-wow64')
  replaces=('wine' 'bin32-wine')
fi

build() {
  if [ -f "$srcdir//wine-$pkgver/README.WINE-RT" ]
  then
    rm  "$srcdir//wine-$pkgver/README.WINE-RT"
  fi

  # apply the realtime patch
  msg "Applying rt patch"
  cd "$srcdir/wine-$_pkgbasever"
  patch -s -Np1 -i $srcdir/wine-rt-101107.patch

  msg ".       SUCCESS :)"

  msg "add-implementation = setProcessWorkingSetSize patch"
  patch -s -Np1 -i $srcdir/add-implementation-setProcessWorkingSetSize.patch

  msg "..      SUCCESS :)"

  msg "Applying ntdll-Use-pipes-for-synchronization patch"
  patch -s -Np1 -i $srcdir/0012-ntdll-Use-pipes-for-synchronization-objects.patch

  msg "...     SUCCESS :)"

  msg "Applying NI-drag-drop patch"
  patch -s -Np1 -i $srcdir/0052-NI-drag-and-drop.patch

  msg " ...    SUCCESS :)"

  msg "Applying winegcc patch"
  patch -s -Np1 -i $srcdir/0061-fix-broken-cross-compiled-winegcc.patch

  msg "  ...   SUCCESS :)"

  msg "Applying pipe-thread-safe patch"
  patch -s -Np1 -i $srcdir/0050-pipe-check-and-thread-safe-read.patch

  msg "   ...  SUCCESS :)"

  msg "Applying rt-no-wineserver patch"
  patch -s -Np1 -i $srcdir/0054-set-realtime-priority-without-wineserver.patch

  msg "    ... SUCCESS :)"

  msg "Applying expand-dos-has-entropy-to-make-less-collision patch"
  patch -s -Np1 -i $srcdir/0005-Expand-dos-has-entropy-in-order-to-make-collision-le.patch

  msg "     .. SUCCESS :)"

  msg "Applying improve-IoRegisterDeviceInterface patch"
  patch -s -Np1 -i $srcdir/0023-improve-IoRegisterDeviceInterface.patch

  msg ".       SUCCESS :)"

  msg "Applying Add-stub-for-IoSetDeviceInterfaceState patch"
  patch -s -Np1 -i $srcdir/0025-Add-stub-for-IoSetDeviceInterfaceState.patch

  msg "..      SUCCESS :)"

  msg "Applying fix-obscured-windows patch"
  patch -s -Np1 -i $srcdir/fix-obscured-windows.patch

  msg "...     SUCCESS :)"
 
  msg "Applying disable-winedbg-auto-crash-dialog patch"
  patch -s -Np1 -i $srcdir/0063-disable-winedbg-auto-crash-dialog.patch

  msg "...     SUCCESS :)"

  msg "Applying disable-crashing-alpha-bitmaps-for-gdb patch"
  patch -s -Np1 -i $srcdir/0062-disable-crashing-alpha-bitmaps-for-gdb.patch

  msg " ...    SUCCESS :)"

  msg "Applying Fix disk geomtery ioctl"
  patch -s -Np1 -i $srcdir/Fix-disk-geometry-ioctl.patch

  msg "  ...   SUCCESS :)"

  msg "Applying menu-border-color patch"
  patch -s -Np1 -i $srcdir/menu-border-color.patch

  msg "   ...  SUCCESS :)"

  msg "Applying child-window-is-capture-give-WM_CANCELMODE patch"
  patch -s -Np1 -i $srcdir/0010-If-a-child-of-the-window-being-disabled-is-the-captu.patch

  msg "    ... SUCCESS :)"

  msg "Applying Overridable-default-filesystem-type patch"
  patch -s -Np1 -i $srcdir/0033-overridable-default-filesystem-type.patch

  msg "     .. SUCCESS :)"

  msg "Applying add stub-for-PoPowerState patch"
  patch -s -Np1 -i $srcdir/0027-Add-stub-for-PoSetPowerState.patch

  msg ".       SUCCESS :)"

  msg "Applying add get-windows-label-from-registry patch"
  patch -s -Np1 -i $srcdir/0044-get-windows-label-from-registry.patch

  msg "..      SUCCESS :)
______________________________________________________________

(IF) ALL PATCHES APPLIED SUCCESSFULLY ....

        ....   L_ProAudio WINE source IS READY (FOR COMPILATION)
______________________________________________________________
"
  sleep 3

  cd "$srcdir"

  # Allow ccache to work
  mv wine-$_pkgbasever wine

  # Get rid of old build dirs
  rm -rf wine-{32,64}-build
  mkdir wine-32-build

  #This is unneeded as wine itself takes care of it

  # These additional CFLAGS solve FS#27662
  #export CFLAGS="${CFLAGS/-D_FORTIFY_SOURCE=2/} -D_FORTIFY_SOURCE=0"
  #export CXXFLAGS="${CFLAGS/-D_FORTIFY_SOURCE=2/} -D_FORTIFY_SOURCE=0"

  if [[ $CARCH == x86_64 ]]; then
    msg2 "Building Wine-64..."

    mkdir wine-64-build
    cd "$srcdir/wine-64-build"
    ../wine/configure \
      --prefix=/usr \
      --without-opencl \
      --without-mpg123 \
      --disable-tests \
      --libdir=/usr/lib \
      --enable-win64

    make

    _wine32opts=(
      --libdir=/usr/lib32
      --with-wine64="$srcdir/wine-64-build"
    )

    export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
  fi

  msg2 "Building Wine-32..."
  cd "$srcdir/wine-32-build"
  ../wine/configure \
    --prefix=/usr \
    --disable-tests \
    --without-opencl \
    --without-mpg123 \
    --without-gstreamer \
    "${_wine32opts[@]}"

  # These additional CFLAGS solve FS#27560
  make CFLAGS+="-mstackrealign" CXXFLAGS+="-mstackrealign"
}

package() {
  msg2 "Packaging Wine-32..."
  cd "$srcdir/wine-32-build"

  if [[ $CARCH == i686 ]]; then
    make prefix="$pkgdir/usr" install
  else
    make prefix="$pkgdir/usr" \
      libdir="$pkgdir/usr/lib32" \
      dlldir="$pkgdir/usr/lib32/wine" install

    msg2 "Packaging Wine-64..."
    cd "$srcdir/wine-64-build"
    make prefix="$pkgdir/usr" \
      libdir="$pkgdir/usr/lib" \
      dlldir="$pkgdir/usr/lib/wine" install
  fi

  mkdir -p "$pkgdir/usr/share/doc/wine-rt"
  cp "$srcdir/wine/README.WINE-RT" "$pkgdir/usr/share/doc/wine-rt"
}

# vim:set ts=8 sts=2 sw=2 et:
