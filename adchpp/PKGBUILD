# Maintainer:

pkgname=adchpp
pkgver=2.11.0.1
_pkgver=2.11.0
pkgrel=1
pkgdesc="ADCH++ is a hub software for the ADC network."
url="http://adchpp.sourceforge.net/"
arch=('i686' 'x86_64')
license=("GPL")
depends=('ruby' 'python2')
makedepends=('scons' 'swig' 'bzr' 'asciidoc')
backup=('etc/adchpp/Script.xml'
        'etc/adchpp/adchpp.xml')
source=("http://downloads.sourceforge.net/project/adchpp/Releases/ADCH%2B%2B%202.11/${_pkgver}/adchpp_${pkgver}_source.tar.gz"
        'adchpp.sh'
        'adchpp.service'
        'adchpp.tmpfile'
        'http://data.gpo.zugaina.org/klondike/net-p2p/adchpp/files/adchpp-2.8.0-fix_config_paths.patch'
        'http://data.gpo.zugaina.org/klondike/net-p2p/adchpp/files/adchpp-2.9.0-fix_cflags.patch'
        'https://dl.dropboxusercontent.com/u/6596386/adchpp-2.9.0-fix_store_files_in_config_dir_access.guard_plugin.patch'
        'https://dl.dropboxusercontent.com/u/6596386/adchpp-2.9.0-fix_log_path.patch')
md5sums=('9f841cbc85be1fc35fc00c576708dd79'
         'c3477438b0853c31c3887e1ed5ff6846'
         '6dc1e1ae06acdf0b4620362952ccd403'
         '89e45b7ebbc63f9aaf4e10e724e60263'
         '521d84fb6ef43b286a5767a20ba432f9'
         '0a8ace9b60db41dbc4dace75df4714ba'
         '083d2ac163382023f2d5b26a7235735a'
         'c38fa8001edea9e58405f84cdd8f6988')
install="adchpp.install"

[ "$CARCH" = "i686" ] && _arch="x86"
[ "$CARCH" = "x86_64" ] && _arch="x64"

prepare() {
   rm -fr "${pkgname}"
   mv "adchpp_${_pkgver}_source" "${pkgname}"
   cd "${pkgname}"

  # Use python2
  rm -rf "${srcdir}/python"
  mkdir "${srcdir}/python"
  ln -s /usr/bin/python2 "${srcdir}/python/python"
  export PATH="${srcdir}"/python:$PATH

  # Patch
  patch -p1 -i "${srcdir}/adchpp-2.8.0-fix_config_paths.patch"
  sed 's|-Wl,--no-undefined|$UNDEF|' -i "${srcdir}/adchpp-2.9.0-fix_cflags.patch"
  patch -p1 -i "${srcdir}/adchpp-2.9.0-fix_cflags.patch"
  patch -p0 -i "${srcdir}/adchpp-2.9.0-fix_store_files_in_config_dir_access.guard_plugin.patch"
  patch -p0 -i "${srcdir}/adchpp-2.9.0-fix_log_path.patch"
  sed -e "s|%%ADCHPPLIB%%|/usr/lib/${pkgname}|g" \
      -e "s|%%ADCHPPSHARE%%|/usr/share/${pkgname}|g" \
      -e "s|%%ADCHPPETC%%|/etc/${pkgname}|g" \
      -e "s|%%ADCHPPLOG%%|/var/log/${pkgname}|g" \
      -i etc/adchpp.xml -i etc/Script.xml -i rbutil/adchpp.rb -i pyutil/adchpp.py

  # Ugly patch: set path for lua scripts volatile files
  sed -e "/luadchpp.)/a-- set path of volatile files\nlocal varfilepath = \"/var/lib/${pkgname}/\"\n" \
      -e 's|adchpp.Util_getCfgPath()|varfilepath|g' \
      -i plugins/Script/examples/*lua

  # Dos2Unix
  find -type f -exec perl -pi -e 's/\r\n?/\n/g' "{}" \;
}

build() {
  cd "${pkgname}"

  # Build
  scons mode=release docs=yes ssl=yes langs=all tools=default arch="${_arch}"
}

package() {
  cd "${pkgname}"

  install -Dm755 "${srcdir}/adchpp.sh" "${pkgdir}/usr/bin/adchpp"
  install -Dm755 "build/release-default-${_arch}/bin/adchppd" "${pkgdir}/usr/lib/${pkgname}/adchpp"
  pushd "build/release-default-${_arch}/bin" &> /dev/null
  for i in $(find . -maxdepth 1 -type f -name "*.so"); do install -Dm755 "${i}" "${pkgdir}/usr/lib/${pkgname}/${i}"; done
  popd &> /dev/null
  install -Dm755 linux/generate_certs.sh "${pkgdir}/usr/share/${pkgname}/generate_certs.sh"

  install -d "${pkgdir}/etc/${pkgname}"
  install -dm750 -o126 -g126 "${pkgdir}/etc/${pkgname}/certs"
  install -dm750 -o126 -g126 "${pkgdir}/etc/${pkgname}/certs/trusted"
  install -d -o126 -g126 "${pkgdir}/var/log/${pkgname}"
  install -dm750 -o126 -g126 "${pkgdir}/var/lib/${pkgname}"

  install -Dm644 etc/adchpp.xml "${pkgdir}/etc/${pkgname}/adchpp.xml"
  install -Dm644 etc/Script.xml "${pkgdir}/etc/${pkgname}/Script.xml"

  pushd plugins/Script/examples &> /dev/null
  for i in $(find . -type f); do install -Dm644 -oroot -g126 "${i}" "${pkgdir}/usr/share/${pkgname}/scripts/${i}"; done
  popd &> /dev/null
  for i in $(find pyutil rbutil -type f); do install -Dm644 "${i}" "${pkgdir}/usr/share/${pkgname}/${i}"; done

  pushd build/docs &> /dev/null
  for i in $(find . -type f); do install -Dm644 "${i}" "${pkgdir}/usr/share/doc/${pkgname}/${i}"; done
  popd &> /dev/null

  install -Dm644 "${srcdir}/adchpp.service" "${pkgdir}/usr/lib/systemd/system/adchpp.service"
  install -Dm644 "${srcdir}/adchpp.tmpfile" "${pkgdir}/usr/lib/tmpfiles.d/adchpp.conf"
}