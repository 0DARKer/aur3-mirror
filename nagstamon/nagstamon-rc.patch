diff -u -r nagstamon_0.9.5-rc1/Nagstamon/Server/Generic.py nagstamon_0.9.5-rc1-jp/Nagstamon/Server/Generic.py
--- nagstamon_0.9.5-rc1/Nagstamon/Server/Generic.py	2010-12-22 11:32:40.000000000 +0100
+++ nagstamon_0.9.5-rc1-jp/Nagstamon/Server/Generic.py	2011-03-09 19:39:36.559479191 +0100
@@ -84,6 +84,7 @@
         self.new_hosts = dict()
         self.new_hosts_in_maintenance = list()
         self.new_hosts_acknowledged = list()
+        self.new_hosts_disabled_notifications = list()
         self.thread = ""
         self.isChecking = False
         self.debug = False
@@ -353,7 +354,7 @@
         # services (unknown, warning or critical?)
         nagcgiurl_services = self.nagios_cgi_url + "/status.cgi?host=all&servicestatustypes=" + str(servicestatustypes) + "&serviceprops=" + str(hostserviceprops)
         # hosts (up or down or unreachable)
-        nagcgiurl_hosts = self.nagios_cgi_url + "/status.cgi?hostgroup=all&style=hostdetail&hoststatustypes=" + str(hoststatustypes) + "&hostprops=" + str(hostserviceprops)
+        nagcgiurl_hosts = self.nagios_cgi_url + "/status.cgi?hostgroup=all&style=hostdetail&hoststatustypes=" + str(hoststatustypes) + "&hostprops=" + str(hostserviceprops & ~8192)
         # fetching hosts in downtime and acknowledged hosts at once is not possible because these 
         # properties get added and nagios display ONLY hosts that have BOTH states
         # hosts that are in scheduled downtime, we will later omit services on those hosts
@@ -362,6 +363,8 @@
         # hosts that are acknowledged, we will later omit services on those hosts
         # hostproperty 4 = HOST_STATE_ACKNOWLEDGED 
         nagcgiurl_hosts_acknowledged = self.nagios_cgi_url + "/status.cgi?hostgroup=all&style=hostdetail&hostprops=4"
+        # hosts that have disabled notifications, we will later omit services on these hosts
+        nagcgiurl_hosts_disabled_notifications = self.nagios_cgi_url + "/status.cgi?hostgroup=all&style=hostdetail&hostprops=4096"
 
         # hosts - mostly the down ones
         # unfortunately the hosts status page has a different structure so
@@ -573,6 +576,45 @@
             self.isChecking = False
             result, error = self.Error(sys.exc_info())
             return Result(result=result, error=error)
+
+        # hosts which have disabled notifications
+        try:
+            #result = Result()
+            result = self.FetchURL(nagcgiurl_hosts_disabled_notifications)
+            htobj, error = result.result, result.error
+            if error != "": return Result(result=copy.deepcopy(htobj), error=error)
+            # workaround for Nagios < 2.7 which has an <EMBED> in its output
+            try:
+                table = copy.deepcopy(htobj.body.table[self.HTML_BODY_TABLE_INDEX])
+            except:
+                table = copy.deepcopy(htobj.body.embed.table)
+                
+            # do some cleanup    
+            del htobj               
+
+            for i in range(1, len(table.tr)):
+                try:
+                    # ignore empty <tr> rows
+                    if not table.tr[i].countchildren() == 1:
+                        # host
+                        try:
+                            self.new_hosts_disabled_notifications.append(str(table.tr[i].td[0].table.tr.td.table.tr.td.a.text))
+                            # get real status of host with disabled notification
+                            if self.new_hosts.has_key(self.new_hosts_disabled_notifications[-1]):
+                                self.new_hosts[self.new_hosts_disabled_notifications[-1]].status = str(table.tr[i].td[1].text)
+                        except:
+                            self.Error(sys.exc_info())
+                except:
+                    self.Error(sys.exc_info())
+
+            # do some cleanup
+            del table
+
+        except:
+            # set checking flag back to False
+            self.isChecking = False
+            result, error = self.Error(sys.exc_info())
+            return Result(result=result, error=error)
                 
         # some cleanup
         del nagitems
@@ -624,7 +666,9 @@
             and (not (host.name in self.new_hosts_in_maintenance and \
             str(self.conf.filter_hosts_services_maintenance) == "True") and \
             not (host.name in self.new_hosts_acknowledged and \
-            str(self.conf.filter_acknowledged_hosts_services) == "True")) and \
+            str(self.conf.filter_acknowledged_hosts_services) == "True") and \
+            not (host.name in self.new_hosts_disabled_notifications and \
+            str(self.conf.filter_hosts_services_disabled_notifications) == "True")) and \
             str(self.conf.filter_all_down_hosts) == "False": 
                 self.nagitems_filtered["hosts"]["DOWN"].append(host)
                 self.downs += 1
Bin√§rdateien nagstamon_0.9.5-rc1/Nagstamon/Server/Generic.pyc and nagstamon_0.9.5-rc1-jp/Nagstamon/Server/Generic.pyc sind verschieden.
Nur in nagstamon_0.9.5-rc1-jp/Nagstamon/Server: .Generic.py.swp.
