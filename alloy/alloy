#!/bin/sh
#
# A launcher script for Alloy programs, with liberal borrowings from
# the Clojure launcher script `clj'.
#
# The following environment variables can be used to configure the
# script:
#
#   ALLOY_HOME
#       The root directory where Alloy is installed.
#   ALLOY_JAVA
#       The name of the java executable used to run Alloy.
#   ALLOY_JAVA_OPTS
#       Additional options to be passed to the java executable.
#   ALLOY_CLASSPATH
#       A path to be added to Alloy's classpath.
#   ALLOY_LIBRARY_PATH
#       A path to be searched for native code such as DLL's or JNI
#       libraries. This gets added to the Java options as
#       "-Djava.library.path=$ALLOY_LIBRARY_PATH".
#   ALLOY_LIB
#       This directory, and any jars inside it, will be automatically
#       added to Alloy's classpath.

usage="\
usage: alloy [options] [file1 [file2] ...]

Options:
  --help, -h        show this message
  --java-cmd, -J    the Java executable to use
  --java-opts, -j   options to be passed to the JVM
  --classpath, -cp  add to Alloy's classpath
  --verbose, -v     print initialization information
"

## read ~/.alloyrc for home configuration
[ -e ~/.alloyrc ] && . ~/.alloyrc

## read ./.alloyrc for project specific configuration
[ -e ./.alloyrc ] && . ./.alloyrc

if [ ! "$ALLOY_HOME" ]; then
    # Find the real path to Alloy's home directory if $0 is a symlink
    program="$0"
    while [ -h "$program" ]; do
        ls=`ls -ld "$program"`
        link=`expr "$ls" : '.*-> \(.*\)$'`
        if expr "$link" : '.*/.*' >/dev/null; then
            program="$link"
        else
            program="`dirname $program`/$link"
        fi
    done
    script_dir=`dirname "$program"`
    relative_alloy_home=`dirname "$script_dir"`
    ALLOY_HOME=`cd "$relative_alloy_home" && pwd`
fi

if [ ! "$ALLOY_JAVA" ]; then
    ALLOY_JAVA="java";
fi

if [ ! "$ALLOY_CLASSPATH" ]; then
    ALLOY_CLASSPATH="."
fi

##  Add Alloy home jars.
for jar in "$ALLOY_HOME"/*.jar; do
    ALLOY_CLASSPATH="$ALLOY_CLASSPATH:$jar"
done

if [ -d "$ALLOY_LIB" ]; then
    ALLOY_CLASSPATH="$ALLOY_CLASSPATH:$ALLOY_LIB"
    for jar in "$ALLOY_LIB"/*.jar; do
        ALLOY_CLASSPATH="$ALLOY_CLASSPATH:$jar"
    done
fi

verbose=0
main="edu.mit.csail.sdg.alloy4whole.SimpleGUI"
for arg in "$@"; do
    case $arg in
        -h|--help)
            echo "$usage"; exit 1;;
        -J|--java-cmd)
            ALLOY_JAVA="$2"; shift; shift;;
        -j|--java-opts)
            ALLOY_JAVA_OPTS="$ALLOY_JAVA_OPTS $2"; shift; shift;;
        -cp|--classpath)
            ALLOY_CLASSPATH="$ALLOY_CLASSPATH:$2"; shift; shift;;
        -L|--library-path)
            if [ "$ALLOY_LIBRARY_PATH" ]; then
                ALLOY_LIBRARY_PATH="$ALLOY_LIBRARY_PATH:$2";
            else
                ALLOY_LIBRARY_PATH="$2";
            fi
            shift; shift;;
	-v|--verbose)
	    verbose=1; shift;;
        *) break;;
    esac
done

[ $verbose -eq 1 ] && echo "$ALLOY_CLASSPATH"

## Add ALLOY_LIBRARY_PATH to the Java options if necessary
if [ -n "$ALLOY_LIBRARY_PATH" ]; then
    ALLOY_JAVA_OPTS="$ALLOY_JAVA_OPTS -Djava.library.path=$ALLOY_LIBRARY_PATH"
fi

cmd=`echo "$ALLOY_JAVA" "$ALLOY_JAVA_OPTS" -cp "$ALLOY_CLASSPATH" $main "$@"`
[ $verbose -eq 1 ] && echo "$cmd"
exec `echo $cmd`
