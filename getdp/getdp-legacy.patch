diff -aur getdp-2.1.1.orig/Legacy/EigenSolve.cpp getdp-2.1.1/Legacy/EigenSolve.cpp
--- getdp-2.1.1.orig/Legacy/EigenSolve.cpp	2011-04-12 18:38:46.000000000 +0600
+++ getdp-2.1.1/Legacy/EigenSolve.cpp	2012-05-23 20:00:18.971042895 +0600
@@ -7,6 +7,9 @@
 #include "Message.h"
 #include "EigenSolve.h"
 
+#define PetscTruth PetscBool
+#define PetscOptionsGetTruth PetscOptionsGetBool
+
 void EigenSolve(struct DofData * DofData_P, int NumEigenvalues, 
 		double shift_r, double shift_i)
 {
diff -aur getdp-2.1.1.orig/Legacy/EigenSolve_SLEPC.cpp getdp-2.1.1/Legacy/EigenSolve_SLEPC.cpp
--- getdp-2.1.1.orig/Legacy/EigenSolve_SLEPC.cpp	2011-04-12 18:38:46.000000000 +0600
+++ getdp-2.1.1/Legacy/EigenSolve_SLEPC.cpp	2012-05-23 20:03:34.227702917 +0600
@@ -130,8 +130,8 @@
     Current.Time = re;
     Current.TimeImag = im;
   }
-  _try(VecDestroy(xr));
-  _try(VecDestroy(xi));
+  _try(VecDestroy(&xr));
+  _try(VecDestroy(&xi));
 }
 
 static void _linearEVP(struct DofData * DofData_P, int numEigenValues, 
@@ -203,8 +203,6 @@
     Msg::Error("SLEPc diverged after %d iterations", its);
   else if(reason == EPS_DIVERGED_BREAKDOWN)
     Msg::Error("SLEPc generic breakdown in method");
-  else if(reason == EPS_DIVERGED_NONSYMMETRIC)
-    Msg::Error("The operator is nonsymmetric");
   
   // get number of converged approximate eigenpairs
   PetscInt nconv;
@@ -217,7 +215,7 @@
   // print eigenvalues and store eigenvectors in DofData
   _storeEigenVectors(DofData_P, nconv, eps, PETSC_NULL);
   
-  _try(EPSDestroy(eps));
+  _try(EPSDestroy(&eps));
 }
 
 static void _quadraticEVP(struct DofData * DofData_P, int numEigenValues, 
@@ -307,7 +305,7 @@
   // print eigenvalues and store eigenvectors in DofData
   _storeEigenVectors(DofData_P, nconv, PETSC_NULL, qep);
   
-  _try(QEPDestroy(qep));
+  _try(QEPDestroy(&qep));
 
   // restore operators
   LinAlg_ProdMatrixDouble(&DofData_P->M3, -1.0, &DofData_P->M3);
diff -aur getdp-2.1.1.orig/Legacy/LinAlg_PETSC.cpp getdp-2.1.1/Legacy/LinAlg_PETSC.cpp
--- getdp-2.1.1.orig/Legacy/LinAlg_PETSC.cpp	2011-04-12 18:38:46.000000000 +0600
+++ getdp-2.1.1/Legacy/LinAlg_PETSC.cpp	2012-05-23 20:00:02.947710107 +0600
@@ -62,6 +62,9 @@
 static void _try(int ierr){ CHKERRABORT(PETSC_COMM_WORLD, ierr); }
 static int SolverInitialized = 0;
 
+#define PetscTruth PetscBool
+#define PetscOptionsGetTruth PetscOptionsGetBool
+
 void LinAlg_InitializeSolver(int* argc, char*** argv)
 {
   // This function detects if MPI is initialized
@@ -128,7 +131,7 @@
   VecScatterBegin(ctx, V->V, V->Vseq, INSERT_VALUES, SCATTER_FORWARD);
   VecScatterEnd(ctx, V->V, V->Vseq, INSERT_VALUES, SCATTER_FORWARD);
 #endif
-  VecScatterDestroy(ctx);
+  VecScatterDestroy(&ctx);
 }
 
 void LinAlg_CreateMatrix(gMatrix *M, gSolver *Solver, int n, int m)
@@ -162,19 +165,19 @@
 void LinAlg_DestroySolver(gSolver *Solver)
 {
   for(int i = 0; i < 10; i++)
-    if(Solver->ksp[i]) _try(KSPDestroy(Solver->ksp[i]));
+    if(Solver->ksp[i]) _try(KSPDestroy(&Solver->ksp[i]));
 }
 
 void LinAlg_DestroyVector(gVector *V)
 {
-  _try(VecDestroy(V->V));
+  _try(VecDestroy(&V->V));
   if(Msg::GetCommSize() > 1)
-    _try(VecDestroy(V->Vseq));
+    _try(VecDestroy(&V->Vseq));
 }
 
 void LinAlg_DestroyMatrix(gMatrix *M)
 {
-  _try(MatDestroy(M->M));
+  _try(MatDestroy(&M->M));
 }
 
 void LinAlg_CopyScalar(gScalar *S1, gScalar *S2)
@@ -306,7 +309,7 @@
     _try(PetscViewerSetFormat(fd, PETSC_VIEWER_ASCII_MATLAB));
     _try(PetscObjectSetName((PetscObject)V->V, varName));
     _try(VecView(V->V, fd));
-    _try(PetscViewerDestroy(fd));
+    _try(PetscViewerDestroy(&fd));
   }
 } 
 
@@ -319,7 +322,7 @@
   _try(PetscViewerSetFormat(fd, PETSC_VIEWER_ASCII_MATLAB));
   _try(PetscObjectSetName((PetscObject)M->M, varName));
   _try(MatView(M->M, fd));
-  _try(PetscViewerDestroy(fd));
+  _try(PetscViewerDestroy(&fd));
 }
 
 void LinAlg_WriteScalar(FILE *file, gScalar *S)
