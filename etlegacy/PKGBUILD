# Maintainer: Spyhawk
#
# ET:Legacy is provided as a cross-compiled 32-bit version for compatibility reason with W:ET 2.60b servers.
# On a 64 bits system, [multilib] must be enabled and multilib-devel installed for 32 bits cross-compilation.
# The engine is dynamically compiled, while the official precompiled mod libraries are provided.

_pkgver=2.71a
pkgbase=etlegacy
pkgname=('etlegacy' 'etlegacy-mod')
pkgver=2.71.a
pkgrel=2
arch=('i686' 'x86_64')
url="http://www.etlegacy.com/"
license=('GPL3' 'custom')
makedepends_i686=('cmake' 'zip' 'alsa-lib' 'curl' 'freetype2' 'glew' 'libjpeg-turbo' 'libvorbis' 'lua' 'sdl2')
makedepends_x86_64=('cmake' 'zip' 'lib32-alsa-lib' 'lib32-curl' 'lib32-freetype2' 'lib32-glew' 'lib32-libjpeg-turbo' 'lib32-libvorbis' 'lib32-lua' 'lib32-sdl2')
source=("https://github.com/etlegacy/$pkgbase/archive/v$_pkgver.tar.gz"
        "http://mirror.etlegacy.com/release/etl_bin_v$_pkgver.pk3"
        "http://mirror.etlegacy.com/release/pak3_v$_pkgver.pk3")
noextract=("etl_bin_v$_pkgver.pk3" "pak3_v$_pkgver.pk3")
md5sums=('6ce99f7933496742e0c0d520131d5751'
         'af492c93a7283b0736c5261bb4abeaa9'
         '1ca0778f06221148dc69579354ce6514')

build() {
    cd "$pkgbase-$_pkgver"

    if [[ "$CARCH" == "i686" ]]; then
        cmakeopts+=(
            '-DCMAKE_LIBRARY_PATH=/usr/lib'
            '-DCROSS_COMPILE32=0'
        )
    else
        cmakeopts+=(
            '-DCMAKE_LIBRARY_PATH=/usr/lib32'
            '-DCROSS_COMPILE32=1'
        )
    fi

    cmake . ${cmakeopts[@]} \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DINSTALL_DEFAULT_BASEDIR=/usr/lib/etlegacy\
        -DINSTALL_DEFAULT_BINDIR=bin \
        -DINSTALL_DEFAULT_MODDIR=lib/etlegacy \
        -DBUILD_SERVER=1 \
        -DBUILD_CLIENT=1 \
        -DBUILD_MOD=0 \
        -DBUILD_MOD_PK3=0 \
        -DBUILD_PAK3_PK3=0 \
        -DFEATURE_AUTOUPDATE=0 \
        -DINSTALL_OMNIBOT=0

    make
}

package_etlegacy() {
    pkgdesc="Wolfenstein: Enemy Territory 2.60b compatible client/server (etlegacy engine)"
    depends_i686=('etlegacy-mod' 'alsa-lib' 'curl' 'freetype2' 'gcc-libs' 'glew' 'libjpeg-turbo' 'libvorbis' 'lua' 'sdl2')
    depends_x86_64=('etlegacy-mod' 'lib32-alsa-lib' 'lib32-curl' 'lib32-freetype2' 'lib32-gcc-libs' 'lib32-glew' 'lib32-libjpeg-turbo' 'lib32-libvorbis' 'lib32-lua' 'lib32-sdl2')
    backup=('etc/xdg/etlegacy/etmain/etl_server.cfg'
            'etc/xdg/etlegacy/etmain/legacy.cfg'
            'etc/xdg/etlegacy/etmain/campaigncycle.cfg'
            'etc/xdg/etlegacy/etmain/lmscycle.cfg'
            'etc/xdg/etlegacy/etmain/mapvotecycle.cfg'
            'etc/xdg/etlegacy/etmain/objectivecycle.cfg')
    install=etlegacy.install

    cd "$pkgbase-$_pkgver"

    # engine
    make DESTDIR="$pkgdir/" install

    # mod
    rm -rf $pkgdir/usr/lib/$pkgbase/legacy

    # assets
    ln -s /usr/share/enemy-territory/etmain/{pak0,pak1,pak2}.pk3 $pkgdir/usr/lib/$pkgbase/etmain/

    # doc
    mkdir -p $pkgdir/usr/share/doc/$pkgbase
    mv $pkgdir/usr/lib/$pkgbase/README.md $pkgdir/usr/share/doc/$pkgbase/
    install -m 644 docs/game/anticheat.html $pkgdir/usr/share/doc/$pkgbase/

    # license
    mkdir -p $pkgdir/usr/share/licenses/$pkgbase
    mv $pkgdir/usr/lib/$pkgbase/COPYING.txt $pkgdir/usr/share/licenses/$pkgbase/

    # systemd
    mkdir -p $pkgdir/etc/xdg/$pkgbase/etmain
    mkdir -p $pkgdir/usr/lib/systemd/system
    install -m 644 misc/etlegacy.conf $pkgdir/etc/xdg/$pkgbase/
    install -m 644 misc/etlegacy.service $pkgdir/usr/lib/systemd/system/

    # config
    mv $pkgdir/usr/lib/$pkgbase/etmain/*.cfg $pkgdir/etc/xdg/$pkgbase/etmain/
    ln -s /etc/xdg/$pkgbase/etmain/{etl_server,legacy,{campaign,lms,mapvote,objective}cycle}.cfg $pkgdir/usr/lib/$pkgbase/etmain/

    # server
    mkdir -p $pkgdir/var/lib/$pkgbase-server
    ln -s /etc/xdg/$pkgbase/etmain $pkgdir/var/lib/$pkgbase-server/
}

package_etlegacy-mod() {
    pkgdesc="Wolfenstein: Enemy Territory 2.60b compatible client/server (etlegacy mod)"
    depends=('enemy-territory-data')
    optdepends=('etlegacy-omnibot: artificial intelligence (AI) controlled opponent')

    cd "$pkgbase-$_pkgver"

    # mod
    mkdir -p $pkgdir/usr/lib/$pkgbase/legacy
    install -m 644 $srcdir/{etl_bin,pak3}_v$_pkgver.pk3 $pkgdir/usr/lib/$pkgbase/legacy
}

# vim:set ts=4 sw=2 et:
