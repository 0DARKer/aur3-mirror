# Maintainer: Spyhawk
#
# ET:Legacy is provided as a 32-bit version only for compatibility reason with W:ET 2.60b servers.
# On a 64 bits system, [multilib] must be enabled and multilib-devel installed for 32 bits cross-compilation.
# The engine is dynamically compiled, while the official precompiled mod libraries are provided.

pkgbase=etlegacy
pkgname=('etlegacy' 'etlegacy-mod')
pkgver=2.71rc4
pkgrel=1
arch=('i686' 'x86_64')
url="http://www.etlegacy.com/"
license=('GPL3' 'custom')
if [[ "$CARCH" == "i686" ]]; then
    makedepends=('cmake' 'zip' 'alsa-lib' 'curl' 'gcc-libs' 'glew' 'libjpeg' 'libvorbis' 'lua' 'sdl')
else
    makedepends=('cmake' 'zip' 'lib32-alsa-lib' 'lib32-curl' 'lib32-gcc-libs' 'lib32-glew' 'lib32-libjpeg' 'lib32-libvorbis' 'lib32-lua' 'lib32-sdl')
fi
source=("https://github.com/etlegacy/$pkgname/archive/v$pkgver.tar.gz")
        #"http://mirror.etlegacy.com/release/etlegacy-common-$pkgver.zip")
md5sums=('479afbcec99b22a6602fb811b7698306')

build() {
    cd "$pkgname-$pkgver"

    if [[ "$CARCH" == "i686" ]]; then
        cmakeopts+=(
            '-DCMAKE_LIBRARY_PATH=/usr/lib'
            '-DCROSS_COMPILE32=0'
        )
    else
        cmakeopts+=(
            '-DCMAKE_LIBRARY_PATH=/usr/lib32'
            '-DCROSS_COMPILE32=1'
        )
    fi

    cmake . ${cmakeopts[@]} \
        -DCMAKE_C_FLAGS="-lm" \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DINSTALL_DEFAULT_BASEDIR=/usr/lib/etlegacy\
        -DINSTALL_DEFAULT_BINDIR=bin \
        -DINSTALL_DEFAULT_MODDIR=lib/etlegacy \
        -DBUILD_SERVER=1 \
        -DBUILD_CLIENT=1 \
        -DBUILD_MOD=1 \
        -DBUILD_MOD_PK3=1 \
        -DBUILD_PAK3_PK3=1 \
        -DINSTALL_OMNIBOT=0 \

    make
}

package_etlegacy() {
    pkgdesc="Wolfenstein: Enemy Territory 2.60b compatible client/server (etlegacy engine)"
    if [[ "$CARCH" == "i686" ]]; then
        depends=('etlegacy-mod' 'alsa-lib' 'curl' 'gcc-libs' 'glew' 'libjpeg' 'libvorbis' 'lua' 'sdl')
    else
        depends=('etlegacy-mod' 'lib32-alsa-lib' 'lib32-curl' 'lib32-gcc-libs' 'lib32-glew' 'lib32-libjpeg' 'lib32-libvorbis' 'lib32-lua' 'lib32-sdl')
    fi
    backup=('etc/xdg/etlegacy/etmain/etl_server.cfg'
            'etc/xdg/etlegacy/etmain/legacy.cfg'
            'etc/xdg/etlegacy/etmain/campaigncycle.cfg'
            'etc/xdg/etlegacy/etmain/lmscycle.cfg'
            'etc/xdg/etlegacy/etmain/mapvotecycle.cfg'
            'etc/xdg/etlegacy/etmain/objectivecycle.cfg')
    install=etlegacy.install

    cd "$pkgname-$pkgver"

    # engine
    make DESTDIR="$pkgdir/" install

    # mod
    rm -rf $pkgdir/usr/lib/$pkgname/legacy

    # assets
    ln -s /usr/share/enemy-territory/etmain/{pak0,pak1,pak2}.pk3 $pkgdir/usr/lib/$pkgbase/etmain/

    # doc
    mkdir -p $pkgdir/usr/share/doc/$pkgbase
    mv $pkgdir/usr/lib/$pkgbase/README.md $pkgdir/usr/share/doc/$pkgbase/
    install -m 644 docs/game/anticheat.html $pkgdir/usr/share/doc/$pkgbase/

    # license
    mkdir -p $pkgdir/usr/share/licenses/$pkgbase
    mv $pkgdir/usr/lib/$pkgbase/COPYING.txt $pkgdir/usr/share/licenses/$pkgbase/

    # systemd
    mkdir -p $pkgdir/etc/xdg/$pkgbase/etmain
    mkdir -p $pkgdir/usr/lib/systemd/system
    install -m 644 misc/etlegacy.conf $pkgdir/etc/xdg/$pkgbase/
    install -m 644 misc/etlegacy.service $pkgdir/usr/lib/systemd/system/

    # config
    mv $pkgdir/usr/lib/$pkgbase/etmain/*.cfg $pkgdir/etc/xdg/$pkgbase/etmain/
    ln -s /etc/xdg/$pkgbase/etmain/{etl_server,legacy,{campaign,lms,mapvote,objective}cycle}.cfg $pkgdir/usr/lib/$pkgbase/etmain/

    # server
    mkdir -p $pkgdir/var/lib/$pkgbase-server
    ln -s /etc/xdg/$pkgbase/etmain $pkgdir/var/lib/$pkgbase-server/
}

package_etlegacy-mod() {
    pkgdesc="Wolfenstein: Enemy Territory 2.60b compatible client/server (etlegacy mod)"
    depends=('etlegacy' 'enemy-territory-data')
    optdepends=('etlegacy-omnibot: artificial intelligence (AI) controlled opponent')

    cd "$pkgbase-$pkgver"

    # mod
    mkdir -p $pkgdir/usr/lib/$pkgbase/legacy
    install legacy/* -t $pkgdir/usr/lib/$pkgbase/legacy
}

# vim:set ts=4 sw=2 et:
