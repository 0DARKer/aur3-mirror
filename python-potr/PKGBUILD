# Contributor: Konstantin Nikiforov <helllamer@gmail.com>
#
# Special thanks to:
# - Adrian C. <anrxc@sysphere.org>

pkgname=python-potr
pkgver="1.0.0b2"
pkgrel=2
pkgdesc="A pure python implementation of the OTR encryption protocol."
arch=('i686' 'x86_64')
url="http://python-otr.pentabarf.de/"
license=('LGPLv3')
depends=('python2>=2.6')
makedepends=('gnupg' 'wget')

filename="$pkgname-$pkgver"
filename_tgz="$filename.tar.gz"
url_tgz="http://python-otr.pentabarf.de/releases/potr/$filename_tgz"
source=($url_tgz)
md5sums=('7c48f8453489d35e86f2dab306905713')

# Kjell Braden's GPG-key ID
keyid='BC74B598'

PYTHON=`which python2`
GPG='gpg'

build() {
	# Ensure tarball originality:
	check_gpg

	# All ok. Build it
	cd $srcdir/$filename

	# Switch python to python2
	set_python2

	# make
	$PYTHON setup.py build
}

## check gpg signature of source tarball
check_gpg() {
	cd $srcdir
	msg "Checking GPG signature..."
	$GPG --list-keys 2>/dev/null | grep $keyid >/dev/null || {
		msg "Author's GPG key not found. Looking for 0x$keyid..."
		$GPG --keyserver 'hkp://pgp.mit.edu:11371' --recv-keys $keyid 2>&1 | tail -n1
	}
	local tmp=`mktemp`
	wget --quiet -O - "$url_tgz.asc" 2>/dev/null | $GPG --verify - $filename_tgz 2>$tmp 1>&2
	# Ensure, that gpg has really used author's signature for tarball verification
	grep $keyid $tmp
	cat $tmp
	rm -f $tmp
	msg2 "Detached GPG signature is valid."
}

package() {
	cd $srcdir/$filename
	$PYTHON setup.py install --root=$pkgdir/
}

# To use python2 instead of default python v3.
set_python2() {
	for file in $(find . -name '*.py' -print); do
		sed -i 's_^#!.*/usr/bin/python_#!/usr/bin/python2_' "${file}"
		sed -i 's_^#!.*/usr/bin/env.*python_#!/usr/bin/env python2_' "${file}"
	done
}
