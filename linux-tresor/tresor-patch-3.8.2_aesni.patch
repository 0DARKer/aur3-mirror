--- tresor-patch-3.8.2_aesni	2014-12-17 11:15:13.428663000 +0000
+++ tresor-patch-3.8.2_aesni.patched	2014-12-23 11:41:33.725738000 +0000
@@ -22,11 +22,11 @@
 +++ b/Makefile
 @@ -1,7 +1,7 @@
  VERSION = 3
- PATCHLEVEL = 8
- SUBLEVEL = 2
+ PATCHLEVEL = 18
+ SUBLEVEL = 1
 -EXTRAVERSION =
 +EXTRAVERSION = -tresor0.5
- NAME = Unicycling Gorilla
+ NAME = Diseased Newt
  
  # *DOCUMENTATION*
 diff --git a/arch/x86/crypto/Makefile b/arch/x86/crypto/Makefile
@@ -41,14 +41,14 @@
  obj-$(CONFIG_CRYPTO_GHASH_CLMUL_NI_INTEL) += ghash-clmulni-intel.o
  
  obj-$(CONFIG_CRYPTO_CRC32C_INTEL) += crc32c-intel.o
-@@ -48,6 +49,7 @@ serpent-sse2-x86_64-y := serpent-sse2-x86_64-asm_64.o serpent_sse2_glue.o
- serpent-avx-x86_64-y := serpent-avx-x86_64-asm_64.o serpent_avx_glue.o
+@@ -79,6 +80,7 @@
  
  aesni-intel-y := aesni-intel_asm.o aesni-intel_glue.o fpu.o
+ aesni-intel-$(CONFIG_64BIT) += aesni-intel_avx-x86_64.o aes_ctrby8_avx-x86_64.o
 +tresor-y := tresor_asm.o tresor_glue.o tresor_key.o
  ghash-clmulni-intel-y := ghash-clmulni-intel_asm.o ghash-clmulni-intel_glue.o
  sha1-ssse3-y := sha1_ssse3_asm.o sha1_ssse3_glue.o
- crc32c-intel-y := crc32c-intel_glue.o
+ ifeq ($(avx2_supported),yes)
 diff --git a/arch/x86/crypto/tresor_asm.S b/arch/x86/crypto/tresor_asm.S
 new file mode 100644
 index 0000000..4c3e430
@@ -1362,8 +1362,8 @@
 index b629bbe..402519c 100644
 --- a/arch/x86/kernel/ptrace.c
 +++ b/arch/x86/kernel/ptrace.c
-@@ -705,6 +705,10 @@ static unsigned long ptrace_get_debugreg(struct task_struct *tsk, int n)
- 	struct thread_struct *thread = &(tsk->thread);
+@@ -706,6 +706,10 @@ static unsigned long ptrace_get_debugreg
+ 	struct thread_struct *thread = &tsk->thread;
  	unsigned long val = 0;
  
 +#ifdef CONFIG_CRYPTO_TRESOR
@@ -1371,32 +1371,35 @@
 +#endif
 +
  	if (n < HBP_NUM) {
- 		struct perf_event *bp;
+ 		struct perf_event *bp = thread->ptrace_bps[n];
  
-@@ -737,6 +741,10 @@ static int ptrace_set_breakpoint_addr(struct task_struct *tsk, int nr,
- 	if (ptrace_get_breakpoints(tsk) < 0)
- 		return -ESRCH;
+@@ -726,6 +730,10 @@ static int ptrace_set_breakpoint_addr(st
+ 	struct perf_event *bp = t->ptrace_bps[nr];
+ 	int err = 0;
  
 +#ifdef CONFIG_CRYPTO_TRESOR
-+	return -EBUSY;
++    return -EBUSY;
 +#endif
 +
- 	if (!t->ptrace_bps[nr]) {
- 		ptrace_breakpoint_init(&attr);
+ 	if (!bp) {
  		/*
-@@ -791,6 +799,12 @@ static int ptrace_set_debugreg(struct task_struct *tsk, int n,
+ 		 * Put stub len and type to create an inactive but correct bp.
+@@ -765,6 +773,15 @@ static int ptrace_set_debugreg(struct ta
  	/* There are no DR4 or DR5 registers */
- 	if (n == 4 || n == 5)
- 		return -EIO;
+ 	int rc = -EIO;
+ 
 +#ifdef CONFIG_CRYPTO_TRESOR
-+	else if (n == 6 || n == 7)
-+		return -EPERM;
-+	else
-+		return -EBUSY;
++    if (n == 4 || n == 5)
++        return -EIO;
++    else if (n == 6 || n == 7)
++        return -EPERM;
++    else
++        return -EBUSY;
 +#endif
- 
- 	if (n == 6) {
- 		thread->debugreg6 = val;
++
+ 	if (n < HBP_NUM) {
+ 		rc = ptrace_set_breakpoint_addr(tsk, n, val);
+ 	} else if (n == 6) {
 diff --git a/crypto/Kconfig b/crypto/Kconfig
 index 4641d95..45d6235 100644
 --- a/crypto/Kconfig
@@ -1483,9 +1486,9 @@
 --- a/crypto/testmgr.c
 +++ b/crypto/testmgr.c
 @@ -27,6 +27,9 @@
- #include <linux/slab.h>
  #include <linux/string.h>
  #include <crypto/rng.h>
+ #include <crypto/drbg.h>
 +#ifdef CONFIG_CRYPTO_TRESOR
 +#include <crypto/tresor.h>
 +#endif
@@ -1556,29 +1559,29 @@
  	for (i = 0; i < tcount; i++) {
  		if (template[i].iv)
 @@ -887,6 +925,11 @@ static int __test_skcipher(struct crypto_ablkcipher *tfm, int enc,
- 				crypto_ablkcipher_set_flags(
- 					tfm, CRYPTO_TFM_REQ_WEAK_KEY);
+ 		if (template[i].wk)
+ 			crypto_ablkcipher_set_flags(tfm, CRYPTO_TFM_REQ_WEAK_KEY);
  
 +#ifdef CONFIG_CRYPTO_TRESOR
 +			if (strstr(algo, "tresor"))
 +				tresor_setkey(template[i].key);
 +#endif
 +
- 			ret = crypto_ablkcipher_setkey(tfm, template[i].key,
- 						       template[i].klen);
- 			if (!ret == template[i].fail) {
+ 		ret = crypto_ablkcipher_setkey(tfm, template[i].key,
+ 					       template[i].klen);
+ 		if (!ret == template[i].fail) {
 @@ -955,6 +998,11 @@ static int __test_skcipher(struct crypto_ablkcipher *tfm, int enc,
- 				crypto_ablkcipher_set_flags(
- 					tfm, CRYPTO_TFM_REQ_WEAK_KEY);
+ 		if (template[i].wk)
+ 			crypto_ablkcipher_set_flags(tfm, CRYPTO_TFM_REQ_WEAK_KEY);
  
 +#ifdef CONFIG_CRYPTO_TRESOR
 +			if (strstr(algo, "tresor"))
 +				tresor_setkey(template[i].key);
 +#endif
 +
- 			ret = crypto_ablkcipher_setkey(tfm, template[i].key,
- 						       template[i].klen);
- 			if (!ret == template[i].fail) {
+ 		ret = crypto_ablkcipher_setkey(tfm, template[i].key,
+ 					       template[i].klen);
+ 		if (!ret == template[i].fail) {
 @@ -1882,6 +1930,23 @@ static const struct alg_test_desc alg_test_descs[] = {
  			}
  		}
@@ -1745,9 +1748,9 @@
 --- a/kernel/power/process.c
 +++ b/kernel/power/process.c
 @@ -17,6 +17,9 @@
- #include <linux/delay.h>
  #include <linux/workqueue.h>
  #include <linux/kmod.h>
+ #include <trace/events/power.h>
 +#ifdef CONFIG_CRYPTO_TRESOR_PROMPT
 +#include <crypto/tresor.h>
 +#endif
