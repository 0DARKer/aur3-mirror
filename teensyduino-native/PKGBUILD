# Maintainer: Niels Martignène <niels.martignene@gmail.com>
# Contributor: PyroPeter <googlemail.com@abi1789>
# Contributor: darkapex <me@jailuthra.in>
# Contributor: tty0 <vt.tty0[d0t]gmail.com>

pkgname=('teensyduino-native' 'teensyduino-native-libraries')
pkgver=1.20
_teensyduino=120
_arduino=1.0.6
_loader=2.1
pkgrel=1
arch=('i686' 'x86_64')
url="http://www.pjrc.com/teensy/teensyduino.html"
options=(!strip staticlibs)
license=('GPL' 'LGPL' 'custom')
depends=('arm-none-eabi-gcc' 'arm-none-eabi-binutils' 'avr-gcc' 'avr-libc'
         'avrdude' 'libusb-compat' 'libusb' 'java-runtime' 'java-rxtx'
         'gtk2' 'libpng12' 'libsm')
makedepends=('xorg-server-xvfb' 'libxft' 'xdotool')
source=("http://arduino.cc/download.php?f=/arduino-${_arduino}-linux32.tgz"
        "http://www.pjrc.com/teensy/td_${pkgver//./}/teensyduino.32bit"
        'arduino-fix-arguments.patch'
        'arduino-gcc-4.8-no-use-cxa-atexit.patch'
        'arduino.png'
        'arduino.desktop'
        'teensyduino.sh'
        'teensy.desktop'
        "http://www.pjrc.com/teensy/teensy_loader_cli.${_loader}.zip"
        "http://www.pjrc.com/teensy/49-teensy.rules"
        'LICENSE')
sha256sums=('f059a572231abafb92099a3a404c0a41502c3413668610676c40029384edc658'
            '682238505ff5ac2781bd11735759b59847cbd067d75eace61c79961d32d48567'
            '631921fce485d14c79bcdc31d5d6f3a95d729d49975390b6b785fe49d238ff65'
            '356f87aca8b33b97c299b21ca8dc876d446de33944409f7f8b6748b5e7772fe7'
            '3aff4239209751f0396cc27e4348f9adbd8c193e410565895811c38d2bda6ae8'
            '3991ce3980bf0bea26ad6c6836038ebece17d443e130aace901c2ac637a7746f'
            'de5d200f2aebdf6f2c211c130b63a00a6a0c1514eb1408618f51775f85c00b3d'
            '13509264eb2ac51437e4628dcbb57c133c9decd82eb5795b485403f60ed58fe6'
            'dafd040d6748b52e0d4a01846d4136f3354ca27ddc36a55ed00d0a0af0902d46'
            'fa7eff0e0f1e8230941c3b016c40617887f52f1991db655a498309824291ca54'
            '25980feb5927b8bea8b8e999f5002e110825b1bc3d546fa902c2db5c824d33f3')

if [ "$CARCH" == 'x86_64' ]; then
  source[0]="http://arduino.cc/download.php?f=/arduino-${_arduino}-linux64.tgz"
  source[1]="http://www.pjrc.com/teensy/td_${_teensyduino}/teensyduino.64bit"
  sha256sums[0]='1ff175c487de335981d3aad64cf212b56cb2c778a6bdd6655045335ffc65e147'
  sha256sums[1]='e27751fd92d122bc0479c6813e92ded0934f398baba27e2f59e5db76a9203464'

  _bits=64
elif [ "$CARCH" == 'i686' ]; then
  _bits=32
fi

prepare() {
  cd "arduino-${_arduino}"

  patch -Np1 <"${srcdir}/arduino-fix-arguments.patch"
  patch -Np1 <"${srcdir}/arduino-gcc-4.8-no-use-cxa-atexit.patch"
}

build() {
  msg2 "Running Teensyduino installer (takes around 40 seconds)"

  cd "arduino-${_arduino}/libraries"
  ls -d */ >1.txt

  cd ../..
  chmod +x "teensyduino.${_bits}bit"
  xvfb-run ./teensyduino.sh "./teensyduino.${_bits}bit" "${srcdir}/arduino-${_arduino}"

  rm -rf libraries
  mv "arduino-${_arduino}/libraries" .

  cd libraries
  ls -d */ >2.txt

  msg2 "Building Teensy Loader command line"

  cd ../teensy_loader_cli
  make
}

package_teensyduino-native() {
  pkgdesc="Arduino SDK with Teensyduino"
  provides=('arduino' 'teensyduino')
  conflicts=('arduino' 'teensyduino' 'arduino-toolchain' 'teensyduino-toolchain' 'teensy-loader-cli')
  install="arduino.install"

  cd "arduino-${_arduino}"

  mkdir -p "${pkgdir}/usr/bin"
  mkdir -p "${pkgdir}/usr/share/"{doc,applications,pixmaps,licenses/teensyduino}
  mkdir -p "${pkgdir}/usr/lib/udev/rules.d"

  # use Arch's avr toolchain
  mkdir -p "${pkgdir}/usr/arm-none-eabi/lib"
  install -m644 hardware/tools/arm-none-eabi/arm-none-eabi/lib/libarm_cortexM4l_math.a "${pkgdir}/usr/arm-none-eabi/lib/"
  rm -rf hardware/tools/{arm-none-eabi,avr}
  rm -f hardware/tools/{avrdude,avrdude64,avrdude.conf,readme.txt}

  # copy the whole SDK to /usr/share/arduino/
  cp -a . "${pkgdir}/usr/share/arduino"

  # use system's RXTX library
  ln -sf /usr/lib/librxtxSerial.so "${pkgdir}/usr/share/arduino/lib/librxtxSerial.so"
  ln -sf /usr/lib/librxtxSerial.so "${pkgdir}/usr/share/arduino/lib/librxtxSerial64.so"
  ln -sf /usr/share/java/rxtx/RXTXcomm.jar "${pkgdir}/usr/share/arduino/lib/RXTXcomm.jar"

  # we don't need these sources
  rm -rf "${pkgdir}/usr/share/arduino/src"

  # at least support the FHS a little bit
  ln -s /usr/share/arduino/arduino "${pkgdir}/usr/bin/arduino"
  ln -s /usr/share/arduino/reference "${pkgdir}/usr/share/doc/arduino"

  # desktop icon
  install -m644 "${srcdir}/arduino.desktop" "${pkgdir}/usr/share/applications/"
  install -m644 "${srcdir}/arduino.png" "${pkgdir}/usr/share/pixmaps/"

  # install custom PJRC license
  install -m644 "${srcdir}/LICENSE" "${pkgdir}/usr/share/licenses/teensyduino/"

  # install teensy loader files
  install -m644 "${srcdir}/49-teensy.rules" "${pkgdir}/usr/lib/udev/rules.d"
  ln -s /usr/share/arduino/hardware/tools/teensy "${pkgdir}/usr/bin/teensy-loader"
  install -m644 "${srcdir}/teensy.desktop" "${pkgdir}/usr/share/applications/"

  # install command-line teensy loader
  install -m755 "${srcdir}/teensy_loader_cli/teensy_loader_cli" "${pkgdir}/usr/bin/teensy-loader-cli"

  cd ../libraries

  # package arduino libraries only
  mkdir "${pkgdir}/usr/share/arduino/libraries"
  cp -a $(comm -12 1.txt 2.txt) "${pkgdir}/usr/share/arduino/libraries/"
}

package_teensyduino-native-libraries() {
  pkgdesc="Additional libraries for Teensyduino"
  provides=('teensyduino-libraries')
  conflicts=('teensyduino-libraries')
  depends=('teensyduino-native')

  cd libraries

  mkdir -p "${pkgdir}/usr/share/arduino/libraries"
  cp -a $(comm -13 1.txt 2.txt) "${pkgdir}/usr/share/arduino/libraries/"
}

