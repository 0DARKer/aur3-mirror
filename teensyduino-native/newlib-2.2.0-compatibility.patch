--- a/hardware/teensy/cores/teensy3/avr_functions.h	2015-01-03 15:02:04.000000000 +0100
+++ b/hardware/teensy/cores/teensy3/avr_functions.h	2015-01-05 18:48:07.679564639 +0100
@@ -31,6 +31,7 @@
 #ifndef _avr_functions_h_
 #define _avr_functions_h_
 
+#include <stdlib.h>
 #include <inttypes.h>
 
 #ifdef __cplusplus
@@ -92,12 +93,10 @@
 }
 
 
-char * ultoa(unsigned long val, char *buf, int radix);
-char * ltoa(long val, char *buf, int radix);
-static inline char * utoa(unsigned int val, char *buf, int radix) __attribute__((always_inline, unused));
-static inline char * utoa(unsigned int val, char *buf, int radix) { return ultoa(val, buf, radix); }
-static inline char * itoa(int val, char *buf, int radix) __attribute__((always_inline, unused));
-static inline char * itoa(int val, char *buf, int radix) { return ltoa(val, buf, radix); }
+static inline char * ultoa(unsigned long val, char *buf, int radix) __attribute__((always_inline, unused));
+static inline char * ultoa(unsigned long val, char *buf, int radix) { return utoa(val, buf, radix); }
+static inline char * ltoa(long val, char *buf, int radix) __attribute__((always_inline, unused));
+static inline char * ltoa(long val, char *buf, int radix) { return itoa(val, buf, radix); }
 char * dtostrf(float val, int width, unsigned int precision, char *buf);
 
 
--- a/hardware/teensy/cores/teensy3/nonstd.c	2015-01-03 15:02:04.000000000 +0100
+++ b/hardware/teensy/cores/teensy3/nonstd.c	2015-01-05 18:46:36.375439887 +0100
@@ -40,40 +40,6 @@
 	return n;
 }
 
-
-char * ultoa(unsigned long val, char *buf, int radix) 	
-{
-	unsigned digit;
-	int i=0, j;
-	char t;
-
-	while (1) {
-		digit = val % radix;
-		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
-		val /= radix;
-		if (val == 0) break;
-		i++;
-	}
-	buf[i + 1] = 0;
-	for (j=0; j < i; j++, i--) {
-		t = buf[j];
-		buf[j] = buf[i];
-		buf[i] = t;
-	}
-	return buf;
-}
-
-char * ltoa(long val, char *buf, int radix)
-{
-	if (val >= 0) {
-		return ultoa(val, buf, radix);
-	} else {
-		buf[0] = '-';
-		ultoa(-val, buf + 1, radix);
-		return buf;
-	}
-}
-
 // TODO: actually write an efficient dtostrf()....
 char * dtostrf(float val, int width, unsigned int precision, char *buf)
 {
