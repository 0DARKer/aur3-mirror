diff -r -u vmmon-only/linux/driver.c vmmon-only/linux/driver.c
--- vmmon-only/linux/driver.c	2011-09-23 23:05:44.000000000 -0300
+++ vmmon-only/linux/driver.c	2012-02-15 13:25:46.000000000 -0300
@@ -785,7 +785,7 @@
 
 
 #define POLLQUEUE_MAX_TASK 1000
-static spinlock_t pollQueueLock __attribute__((unused)) = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(pollQueueLock);
 static void *pollQueue[POLLQUEUE_MAX_TASK];
 static unsigned int pollQueueCount = 0;
 
@@ -1046,7 +1046,8 @@
 		* but unfortunately there is no way how to detect that
 		* we are building for RedHat's kernel...
 		*/
-	       static spinlock_t timerLock = SPIN_LOCK_UNLOCKED;
+
+	       static DEFINE_SPINLOCK(timerLock);
 
 	       spin_lock(&timerLock);
 	       mod_timer(&linuxState.pollTimer, jiffies + 1);
diff -r -u vmmon-only/linux/hostif.c vmmon-only/linux/hostif.c
--- vmmon-only/linux/hostif.c	2011-09-23 23:05:43.000000000 -0300
+++ vmmon-only/linux/hostif.c	2012-02-15 13:25:46.000000000 -0300
@@ -46,7 +46,6 @@
 #include <linux/mman.h>
 
 #include <linux/smp.h>
-#include <linux/smp_lock.h>
 
 #include <asm/io.h>
 #include <linux/mc146818rtc.h>
diff -r -u vmmon-only/linux/iommu.c vmmon-only/linux/iommu.c
--- vmmon-only/linux/iommu.c	2011-09-23 23:05:43.000000000 -0300
+++ vmmon-only/linux/iommu.c	2012-02-15 13:29:37.000000000 -0300
@@ -35,6 +35,11 @@
 
 #define PCI_BDF_SLOTFUNC(bdf) PCI_DEVFN(PCI_SLOT(bdf), PCI_FUNC(bdf))
 #define PCI_BDF_BUS(bdf)      (((bdf) >> 8) & 0xff)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 42, 0) && LINUX_VERSION_CODE < KERNEL_VERSION(3, 0, 0)) || LINUX_VERSION_CODE >= KERNEL_VERSION(3, 2, 0)
+#include <linux/pci.h>
+#define iommu_found() iommu_present(&pci_bus_type)
+#define iommu_domain_alloc() iommu_domain_alloc(&pci_bus_type)
+#endif
 
 typedef struct PassthruDevice {
    struct pci_dev *pdev;
@@ -44,7 +48,7 @@
 
 
 static LIST_HEAD(passthruDeviceList);
-static spinlock_t passthruDeviceListLock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(passthruDeviceListLock);
 static void *pciHolePage = NULL;
 
 /*
