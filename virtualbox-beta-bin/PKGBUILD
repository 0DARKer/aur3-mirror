# Maintainer: Det
# Contributors: The Ringmaster, Christian Berendt, Balwinder S "bsd" Dheeman, thotypous
# Based on virtualbox-bin and virtualbox-ext-oracle

pkgbase=virtualbox-beta-bin
pkgname=$pkgbase
true && pkgname=("$pkgbase" 'virtualbox-ext-oracle-beta')
pkgver=4.1.8
_build=75467
pkgrel=1
arch=('i686' 'x86_64')
url='http://virtualbox.org'
license=('GPL2' 'custom:PUEL')
options=('!strip')
_arch='x86'
[ "$CARCH" = 'x86_64' ] && _arch='amd64'
source=("http://dlc.sun.com.edgesuite.net/virtualbox/$pkgver/VirtualBox-$pkgver-$_build-Linux_$_arch.run"
        "http://dlc.sun.com.edgesuite.net/virtualbox/$pkgver/Oracle_VM_VirtualBox_Extension_Pack-$pkgver-$_build.vbox-extpack"
        '10-vboxdrv.rules'
        'vboxdrv'
        'vboxdrv.conf'
        'vboxweb'
        'vboxweb.conf'
        'PUEL')
md5sums=(`curl -s ${source/V*}MD5SUMS | grep $_arch.run | cut -d " " -f1`
         `curl -s ${source/V*}MD5SUMS | grep -m1 VM | cut -d " " -f1`
         'fe60f9510502bea67383d9198ae8c13c'
         'e7a94c97b1b1e1e843c1bb85181d2de8'
         '951bf4a5524e919fc4aaee6f46041e3d'
         'c159d683ba1947290fc2ad2c64194150'
         '3ac185709bfe688bb753c46e170d0546'
         '08b28b82d0ebd6962025100d4b5414a1')

package_virtualbox-beta-bin() {
  pkgdesc="A powerful x86 virtualizer (Personal Use Edition, bleeding edge binaries)"
  depends=('libidl2' 'libxcursor' 'libxinerama' 'libxslt' 'curl' 'linux-headers' 'python2')
  optdepends=('virtualbox-ext-oracle-beta: for Oracle extensions'
              'dkms: for handling kernel modules with dkms'
              'qt: for GUI support'
              'sdl: for VBoxSDL and GUI support'
              'mesa: for OpenGL support'
              'libgl: for shared OpenGL support'
              'libxt: for shared clipboard support'
              'alsa-lib: for ALSA support'
              'pulseaudio: for PulseAudio support')
  provides=("virtualbox=$pkgver")
  conflicts=('virtualbox' 'virtualbox-modules')
  backup=('etc/vbox/vbox.cfg' 'etc/conf.d/vboxdrv' 'etc/conf.d/vboxweb')
  install=$pkgbase.install
  _installdir=/opt/VirtualBox

  # Unpack the run package via sh(1)
  echo yes | sh VirtualBox-$pkgver-$_build-Linux_$_arch.run --target . --nox11 --noexec &> /dev/null

  # Create required dirs
  mkdir -p "$pkgdir"/{$_installdir,etc/{vbox,{rc,conf}.d},lib/udev/rules.d,usr/{bin,src,share/{applications,doc/$pkgname,mime/packages,pixmaps}},var/run/VirtualBox}

  # Extract the VBox tarball
  cd "$pkgdir/$_installdir"
  tar -xjf "$srcdir/VirtualBox.tar.bz2"

  # Hardened build: Mark binaries suid root, create symlinks for working around
  #                 unsupported $ORIGIN/.. in VBoxC.so and make sure the
  #                 directory is only writable by the user (paranoid).
  chmod 4511 VirtualBox VBox{SDL,Headless,NetDHCP,NetAdpCtl}
  for _lib in VBox{VMM,REM,RT,DDU,XPCOM}.so; do
    ln -sf $_installdir/$_lib components/$_lib
  done
  chmod go-w .

  # Patch "vboxshell.py" to use Python 2.x instead of Python 3
  sed -i 's#/usr/bin/python#\02#' vboxshell.py

  # Update Arch initscripts way of life in VBox.sh
  sed -i -e 's,/etc/init.d/,/etc/rc.d/,g' VBox.sh

  # Install scripts and confs
  cd "$srcdir"
  install -m755 vbox{drv,web} "$pkgdir/etc/rc.d/"
  cp vboxdrv.conf "$pkgdir/etc/conf.d/vboxdrv"
  cp vboxweb.conf "$pkgdir/etc/conf.d/vboxweb"

  # Install udev rules
  cp 10-vboxdrv.rules "$pkgdir/lib/udev/rules.d/"
  ln -s "$_installdir/VBoxCreateUSBNode.sh" "$pkgdir/lib/udev/"

  # Install the SDK
  cd "$pkgdir/$_installdir/sdk/installer"
  VBOX_INSTALL_PATH=$_installdir python2 vboxapisetup.py install --root "$pkgdir"
  rm -r -f build
  cd -

  # Symlink the launchers. Second link can fail if fs is not case sensitive.
  for _bin in VirtualBox VBox{Headless,Manage,SDL,SVC,Tunctl,NetAdpCtl} rdesktop-vrdp; do
    ln -s $_installdir/$_bin "$pkgdir/usr/bin/$_bin"
    ln -s $_installdir/$_bin "$pkgdir/usr/bin/${_bin,,}" &>/dev/null || :
  done

  # Symlink the desktop icon, mime info, doc, module sources and ".desktop" files
  ln -s $_installdir/{VBox,icons/128x128/virtualbox}.png "$pkgdir/usr/share/pixmaps/"
  ln -s $_installdir/virtualbox.desktop "$pkgdir/usr/share/applications/"
  ln -s $_installdir/virtualbox.xml "$pkgdir/usr/share/mime/packages/"
  ln -s $_installdir/VirtualBox.chm "$pkgdir/usr/share/doc/$pkgname/"
  ln -s $_installdir/src/vboxhost "$pkgdir/usr/src/vboxhost-$pkgver"

  # Symlink icons
  cd "$pkgdir/$_installdir/icons"
  for _dir in *; do
    cd "$_dir"
    mkdir -p "$pkgdir/usr/share/icons/hicolor/$_dir/"{apps,mimetypes}
    for _icon in *; do
      if [[ "$_icon" = 'virtualbox.png' ]]; then
          ln -s $_installdir/icons/$_dir/$_icon "$pkgdir/usr/share/icons/hicolor/$_dir/apps/$_icon"
      else
          ln -s $_installdir/icons/$_dir/$_icon "$pkgdir/usr/share/icons/hicolor/$_dir/mimetypes/$_icon"
      fi
    done
    cd - >/dev/null
  done

  # Write the configuration file
  echo "# VirtualBox installation directory
INSTALL_DIR=$_installdir
# VirtualBox version
INSTALL_VER=$pkgver
INSTALL_REV=$_build" >> "$pkgdir/etc/vbox/vbox.cfg"
#   chmod 0644 "$pkgdir/etc/vbox/vbox.cfg"
}

package_virtualbox-ext-oracle-beta() {
  pkgdesc="An extension pack for bleeding edge VirtualBox"
  arch=('any')
  depends=("$pkgbase=$pkgver")
  install=${pkgname[1]}.install

  # Install extension pack and license
  install -Dm644 Oracle_VM_VirtualBox_Extension_Pack-$pkgver-$_build.vbox-extpack "$pkgdir/usr/share/virtualbox/extensions/Oracle_VM_VirtualBox_Extension_Pack-$pkgver.vbox-extpack"
  install -Dm644 PUEL "$pkgdir/usr/share/licenses/$pkgname/PUEL"
}

pkgdesc="A powerful x86 virtualizer (Personal Use Edition + Extension Pack, bleeding edge binaries)"
depends=('libidl2' 'libxcursor' 'libxinerama' 'libxslt' 'curl' 'linux-headers' 'python2')

# vim:set ts=2 sw=2 ft=sh et:
