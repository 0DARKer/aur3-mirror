diff -ur vcglib.orig/vcg/complex/local_optimization/tri_edge_collapse.h vcglib/vcg/complex/local_optimization/tri_edge_collapse.h
--- vcglib.orig/vcg/complex/local_optimization/tri_edge_collapse.h	2011-01-25 18:53:19.000000000 +1100
+++ vcglib/vcg/complex/local_optimization/tri_edge_collapse.h	2012-04-21 16:06:33.670332356 +1000
@@ -163,7 +163,7 @@
   inline void Execute(TriMeshType &m)
   {	
     CoordType MidPoint=(pos.V(0)->P()+pos.V(1)->P())/2.0;
-    DoCollapse(m, pos, MidPoint);
+    this->DoCollapse(m, pos, MidPoint);
   }
   
   static bool IsSymmetric() { return true;}
@@ -235,7 +235,7 @@
   ModifierType IsOfType(){ return TriEdgeCollapseOp;}
 
   inline bool IsFeasible(){
-		return LinkConditions(pos);
+		return this->LinkConditions(pos);
 	}
 
   inline bool IsUpToDate(){
diff -ur vcglib.orig/vcg/complex/local_optimization/tri_edge_collapse_quadric.h vcglib/vcg/complex/local_optimization/tri_edge_collapse_quadric.h
--- vcglib.orig/vcg/complex/local_optimization/tri_edge_collapse_quadric.h	2011-01-25 18:53:19.000000000 +1100
+++ vcglib/vcg/complex/local_optimization/tri_edge_collapse_quadric.h	2012-04-21 16:12:36.567297402 +1000
@@ -207,7 +207,7 @@
 
 
 		inline bool IsFeasible(){
-      bool res = ( !Params().PreserveTopology || LinkConditions(this->pos) );
+      bool res = ( !Params().PreserveTopology || this->LinkConditions(this->pos) );
       if(!res) ++( TriEdgeCollapse< TriMeshType,MYTYPE>::FailStat::LinkConditionEdge() );
       return res;
     }
@@ -219,7 +219,7 @@
 		//this->pos.V(1)->Qd()+=this->pos.V(0)->Qd();
     QH::Qd(this->pos.V(1))+=QH::Qd(this->pos.V(0));
 		//int FaceDel=
-		DoCollapse(m, this->pos, newPos); // v0 is deleted and v1 take the new position
+		this->DoCollapse(m, this->pos, newPos); // v0 is deleted and v1 take the new position
 		//m.fn-=FaceDel;
 		//--m.vn;
   }
diff -ur vcglib.orig/vcg/complex/local_optimization/tri_edge_flip.h vcglib/vcg/complex/local_optimization/tri_edge_flip.h
--- vcglib.orig/vcg/complex/local_optimization/tri_edge_flip.h	2011-01-25 18:53:19.000000000 +1100
+++ vcglib/vcg/complex/local_optimization/tri_edge_flip.h	2012-04-21 16:30:58.993961805 +1000
@@ -550,13 +550,13 @@
 		// edges of the first face, except the flipped edge
 		for(int i = 0; i < 3; i++) if(i != flipped) {
 			PosType newpos(f1, i);
-			Insert(heap, newpos, this->GlobalMark());
+			this->Insert(heap, newpos, this->GlobalMark());
 		}
 
 		// edges of the second face, except the flipped edge
 		for(int i = 0; i < 3; i++) if(i != f1->FFi(flipped)) {
 			PosType newpos(f2, i);
-			Insert(heap, newpos, this->GlobalMark());
+			this->Insert(heap, newpos, this->GlobalMark());
 		}
 
 		// every edge with v0, v1 v3 of f1
@@ -575,7 +575,7 @@
 			do {
 				VertexPointer v = pos.VFlip();
 				if(v != v0 && v != v1 && v != v2 && v != v3)
-				Insert(heap, pos, this->GlobalMark());
+				this->Insert(heap, pos, this->GlobalMark());
 
 				pos.NextE();
 			} while(pos != startpos && !pos.IsBorder());
@@ -595,7 +595,7 @@
 		do {
 			VertexPointer v = pos.VFlip();
 			if(v != v0 && v != v1 && v != v2 && v != v3)
-			Insert(heap, pos, this->GlobalMark());
+			this->Insert(heap, pos, this->GlobalMark());
 
 			pos.NextE();
 		} while(pos != startpos && !pos.IsBorder());
diff -ur vcglib.orig/vcg/math/lin_algebra.h vcglib/vcg/math/lin_algebra.h
--- vcglib.orig/vcg/math/lin_algebra.h	2011-01-25 18:53:23.000000000 +1100
+++ vcglib/vcg/math/lin_algebra.h	2012-04-21 15:55:56.298627225 +1000
@@ -220,6 +220,13 @@
 
 	// Computes (a^2 + b^2)^(1/2) without destructive underflow or overflow.
 	template <typename TYPE>
+	inline static TYPE sqr(TYPE a)
+	{
+		TYPE sqr_arg = a;
+		return (sqr_arg == 0 ? 0 : sqr_arg*sqr_arg);
+	}
+
+	template <typename TYPE>
 	inline static TYPE pythagora(TYPE a, TYPE b)
 	{
 		TYPE abs_a = fabs(a);
@@ -236,13 +243,6 @@
 		return (b >= 0.0 ? fabs(a) : -fabs(a));
 	};
 
-	template <typename TYPE>
-	inline static TYPE sqr(TYPE a)
-	{
-		TYPE sqr_arg = a;
-		return (sqr_arg == 0 ? 0 : sqr_arg*sqr_arg);
-	}
-
 	/*!
 	*
 	*/
diff -ur vcglib.orig/vcg/space/index/grid_static_obj.h vcglib/vcg/space/index/grid_static_obj.h
--- vcglib.orig/vcg/space/index/grid_static_obj.h	2011-01-25 18:53:25.000000000 +1100
+++ vcglib/vcg/space/index/grid_static_obj.h	2012-04-21 16:00:15.005246055 +1000
@@ -94,7 +94,7 @@
 	 }
 
 	 // Dato un punto ritorna l'indice della cella
-	 inline int GridIndF( const Point3<FLT> & p ) const { return GridIndI(GridP(p)); 	}
+	 inline int GridIndF( const Point3<FLT> & p ) const { return GridIndI(this->GridP(p)); 	}
   
 	void Create( const Point3i &_siz, const ObjType & init )
 	{
@@ -106,7 +106,7 @@
 		if(grid) delete[] grid;
 		int n = this->siz[0]*this->siz[1]*this->siz[2];
 		grid = new ObjType[n];
-		fill(grid,grid+n,init);
+		std::fill(grid,grid+n,init);
 	}
 
 	/// Crea una griglia di un dato bbox e con un certo numero di elem.
diff -ur vcglib.orig/vcg/space/index/octree.h vcglib/vcg/space/index/octree.h
--- vcglib.orig/vcg/space/index/octree.h	2011-01-25 18:53:25.000000000 +1100
+++ vcglib/vcg/space/index/octree.h	2012-04-21 16:15:07.094850030 +1000
@@ -288,7 +288,7 @@
 				{
 					int placeholder_index = int(placeholders.size());
 					placeholders.push_back( ObjectPlaceholder< NodeType >() ); 
-					placeholders[placeholder_index].z_order			 = BuildRoute(hit_leaf, route);
+					placeholders[placeholder_index].z_order			 = this->BuildRoute(hit_leaf, route);
 					placeholders[placeholder_index].leaf_pointer = route[depth];
 					placeholders[placeholder_index].object_index = i;					
 					
@@ -631,7 +631,7 @@
 				query_bb.Offset(TemplatedOctree::leafDiagonal);
 				sphere_radius+= TemplatedOctree::leafDiagonal;
 
-				ContainedLeaves(query_bb, leaves, TemplatedOctree::Root(), TemplatedOctree::boundingBox);
+				this->ContainedLeaves(query_bb, leaves, TemplatedOctree::Root(), TemplatedOctree::boundingBox);
 
 				leaves_count = int(leaves.size());
 				object_count = 0;
@@ -724,10 +724,10 @@
 			VoxelPointer son_voxel;
 			for (int s=0; s<8; s++)
 			{
-				NodePointer son_index = Son(n, s);
+				NodePointer son_index = this->Son(n, s);
 				if (son_index!=NULL)
 				{
-					if (Level(son_index)!=TemplatedOctree::maximumDepth)
+					if (this->Level(son_index)!=TemplatedOctree::maximumDepth)
 						IndexInnerNodes(son_index);
 
 					son_voxel = TemplatedOctree::Voxel(son_index);
diff -ur vcglib.orig/vcg/space/index/spatial_hashing.h vcglib/vcg/space/index/spatial_hashing.h
--- vcglib.orig/vcg/space/index/spatial_hashing.h	2011-01-25 18:53:25.000000000 +1100
+++ vcglib/vcg/space/index/spatial_hashing.h	2012-04-21 16:21:52.303609010 +1000
@@ -178,7 +178,7 @@
 			Box3<ScalarType> b;
 			s->GetBBox(b);
 			vcg::Box3i bb;
-			BoxToIBox(b,bb);
+			this->BoxToIBox(b,bb);
 			//then insert all the cell of bb
 			for (int i=bb.min.X();i<=bb.max.X();i++)
 				for (int j=bb.min.Y();j<=bb.max.Y();j++)
@@ -203,7 +203,7 @@
         {
             Box3x b(p-Point3f(radius,radius,radius),p+Point3f(radius,radius,radius));
             vcg::Box3i bb;
-            BoxToIBox(b,bb);
+            this->BoxToIBox(b,bb);
             ScalarType r2=radius*radius;
             int cnt=0;
             std::vector<HashIterator> toDel;
diff -ur vcglib.orig/wrap/gl/trimesh.h vcglib/wrap/gl/trimesh.h
--- vcglib.orig/wrap/gl/trimesh.h	2011-01-25 18:53:40.000000000 +1100
+++ vcglib/wrap/gl/trimesh.h	2012-04-21 15:55:56.298627225 +1000
@@ -990,7 +990,7 @@
 			}
 		}
 
-	m.vert.math::Swap(newvert);
+	m.vert.Swap(newvert);
 	m.vn=m.vert.size();
 }
 
diff -ur vcglib.orig/wrap/io_trimesh/import_ply.h vcglib/wrap/io_trimesh/import_ply.h
--- vcglib.orig/wrap/io_trimesh/import_ply.h	2011-01-25 18:53:42.000000000 +1100
+++ vcglib/wrap/io_trimesh/import_ply.h	2012-04-21 15:55:56.298627225 +1000
@@ -156,6 +156,7 @@
 #include<vcg/complex/trimesh/allocate.h>
 #include<vcg/complex/trimesh/create/platonic.h>
 #include<vcg/space/color4.h>
+#include <cstddef>
 #include <vector>
 
 namespace vcg {
diff -ur vcglib.orig/wrap/ply/plystuff.h vcglib/wrap/ply/plystuff.h
--- vcglib.orig/wrap/ply/plystuff.h	2011-01-25 18:53:42.000000000 +1100
+++ vcglib/wrap/ply/plystuff.h	2012-04-21 16:20:15.226943490 +1000
@@ -75,6 +75,7 @@
 #define pb_close  _close
 #define DIR_SEP "\\"
 #else
+#include <unistd.h>
 #define pb_mkdir(n)  mkdir(n,0755)
 #define pb_access access
 #define pb_stat   stat
