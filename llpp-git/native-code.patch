Build using the Ocaml native-code compiler.  Patch is roughly:

,s/ocamlc/ocamlopt/g
,s/cmo/cmx/g
,s/cma/cmxa/g

with some fixes to the llpp target rules and flags.

diff --git a/build.ninja b/build.ninja
index f2e8955..a570b84 100644
--- a/build.ninja
+++ b/build.ninja
@@ -1,6 +1,6 @@
 cc = gcc
 include .config
-ocamlc = ocamlc.opt
+ocamlopt = ocamlopt.opt
 ocamlflags = -warn-error +a -w +a -g -safe-string
 libs = -lmupdf $mujs -lpthread -L$mupdf/build/$buildtype
 
@@ -10,15 +10,15 @@ cflags = $cflags -Wall -Werror -I$mupdf/include -I$freetype -g $
 rule cc
      deps = gcc
      depfile = $out.d
-     command = $ocamlc -cc "$cc" -ccopt "$cflags -MMD -MF $out.d -o $out" -c $in
+     command = $ocamlopt -cc "$cc" -ccopt "$cflags -MMD -MF $out.d -o $out" -c $in
      description = cc $out
 
-rule ocamlc
+rule ocamlopt
      deps = gcc
      depfile = $out.d
      command = env incs="$incs" pp="$pp" /bin/sh $srcdir/doocaml.sh $
-             $ocamlc $out $in -c $ocamlflags
-     description = ocamlc $out
+             $ocamlopt $out $in -c $ocamlflags
+     description = ocamlopt $out
 
 rule genhelp
      command = sh $srcdir/mkhelp.sh $srcdir/keystoml.ml $srcdir/KEYS >$out
@@ -28,21 +28,21 @@ build $builddir/help.ml: genhelp $
       $srcdir/mkhelp.sh $srcdir/keystoml.ml $srcdir/KEYS
 build $builddir/link.o: cc $srcdir/link.c
       cflags = $cflags -D_GNU_SOURCE -DOBSCURED_OPT -DFFP
-build $builddir/help.cmo: ocamlc $builddir/help.ml
-build $builddir/utils.cmo: ocamlc $srcdir/utils.ml
-build $builddir/bo.cmo: ocamlc $srcdir/le/bo.ml
-build $builddir/wsi.cmi: ocamlc $srcdir/wsi.mli $
-      | $builddir/utils.cmo
-build $builddir/wsi.cmo: ocamlc $srcdir/wsi.ml $
-      | $builddir/bo.cmo $builddir/utils.cmo $builddir/wsi.cmi
-build $builddir/parser.cmo: ocamlc $srcdir/parser.ml
-build $builddir/config.cmo: ocamlc $srcdir/config.ml $
-      | $builddir/wsi.cmi $builddir/utils.cmo $
-        $builddir/parser.cmo $builddir/help.cmo
+build $builddir/help.cmx: ocamlopt $builddir/help.ml
+build $builddir/utils.cmx: ocamlopt $srcdir/utils.ml
+build $builddir/bo.cmx: ocamlopt $srcdir/le/bo.ml
+build $builddir/wsi.cmi: ocamlopt $srcdir/wsi.mli $
+      | $builddir/utils.cmx
+build $builddir/wsi.cmx: ocamlopt $srcdir/wsi.ml $
+      | $builddir/bo.cmx $builddir/utils.cmx $builddir/wsi.cmi
+build $builddir/parser.cmx: ocamlopt $srcdir/parser.ml
+build $builddir/config.cmx: ocamlopt $srcdir/config.ml $
+      | $builddir/wsi.cmi $builddir/utils.cmx $
+        $builddir/parser.cmx $builddir/help.cmx
       incs = $lablglcflags
-build $builddir/main.cmo: ocamlc $srcdir/main.ml $
-      | $builddir/wsi.cmi $builddir/utils.cmo $builddir/config.cmo $
-        $builddir/help.cmo $srcdir/doocaml.sh
+build $builddir/main.cmx: ocamlopt $srcdir/main.ml $
+      | $builddir/wsi.cmi $builddir/utils.cmx $builddir/config.cmx $
+        $builddir/help.cmx $srcdir/doocaml.sh
         incs = $lablglcflags
         pp = sed -f $srcdir/pp.sed
 
@@ -53,23 +53,23 @@ rule linkso
 build $builddir/link.so: linkso $builddir/link.o
 
 rule link
-     command = $ocamlc -g -o $out $lablglcflags $
-             str.cma unix.cma lablgl.cma $in $
+     command = $ocamlopt -g -o $out $lablglcflags $
+             str.cmxa unix.cmxa lablgl.cmxa $in $
              $ocamllflags
      description = link $out
 
-build $builddir/llpp.custom: link $
-     $builddir/help.cmo $
-     $builddir/utils.cmo $
-     $builddir/parser.cmo $
-     $builddir/bo.cmo $
-     $builddir/wsi.cmo $
-     $builddir/config.cmo $
-     $builddir/main.cmo $
+build $builddir/llpp: link $
+     $builddir/help.cmx $
+     $builddir/utils.cmx $
+     $builddir/parser.cmx $
+     $builddir/bo.cmx $
+     $builddir/wsi.cmx $
+     $builddir/config.cmx $
+     $builddir/main.cmx $
      $builddir/link.o
-     ocamllflags = -custom -cclib "$libs -lX11 $lflags"
+     ocamllflags = -cclib "$libs -lX11 $lflags"
 
-build $builddir/llpp: link $
+build $builddir/llpp.custom: link $
      $builddir/help.cmo $
      $builddir/utils.cmo $
      $builddir/parser.cmo $
