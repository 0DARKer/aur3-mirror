# Maintainer: Michael Witten <mfwitten>

# The following revision worked for me:
#
#    82529ccf64386d48fd69f2abaeced6bd1ab44b42

# The various phases of the build can be controlled
# with the following variables (use an empty value
# to mean false; if you're hacking on the source,
# I RECOMMEND skipping the _clean phase):

_source=yes
_clean=yes
_clean_keep_3rd_party_deps=    # Don't remove the `3rdp' directory.
_compile=yes
_install=yes
#_install=          # do not install

######################################################################

pkgname=llpp-git
pkgver=20120704
pkgrel=1
pkgdesc="Lightweight but fast and featureful PDF viewer based on MuPDF"

arch=(i686 x86_64)
url=http://repo.or.cz/w/llpp.git
license=(GPL)

provides=(llpp)
conflicts=(llpp)

depends=(
  mesa
  xsel
)

makedepends=(
  git
  wget
  unzip
  ocaml
)

options=('!strip')

_gitroot=git://repo.or.cz/llpp.git
_gitname=repo

source=(llpp.desktop)
md5sums=(9c4891f779eac44569671ee3a9cc0335)

build()
{
  cd "$srcdir"

  #### Source ####

    if [[ ! $_source ]]; then

      cd "$_gitname"

    else

      msg "Connecting to server...."

      if [[ -d $_gitname ]]; then

        cd "$_gitname"
        git pull origin
        msg "The local files are updated."

      else

        git clone "$_gitroot" "$_gitname"
        cd "$_gitname"

      fi

      msg "Checkout done or server timeout"

    fi

  # At this point, the current working directory
  # should be "$srcdir/$_gitname"

  #### Clean ####

    if [[ $_clean ]]; then

      msg "Cleaning ..."
      git clean -fdx ${_clean_keep_3rd_party_deps:+-e /3rdp/}

    fi

  #### Configure ####
  #### Compile ####

    if [[ $_compile ]]; then
    
      msg "Compiling ..."
      MAKEFLAGS=$MAKEFLAGS' -j1' bash buildall.sh

    fi
}

package()
{

  #### Install  ####

    if [[ $_install ]]; then
    
      msg "Installing ..."
      install -D llpp.desktop "$pkgdir"/usr/share/applications/llpp.desktop
      cd "$srcdir/$_gitname"
      install -D llpp "$pkgdir"/usr/bin/llpp

    fi
}
