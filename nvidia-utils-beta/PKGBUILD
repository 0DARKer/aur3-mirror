# Maintainer: Det
# Contributors: Ng Oon-Ee, Dan Vratil
# Based on [extra]'s nvidia-utils: https://www.archlinux.org/packages/extra/x86_64/nvidia-utils/

pkgname=nvidia-utils-beta
pkgname+=('nvidia-libgl-beta' 'opencl-nvidia-beta')
pkgver=334.21
pkgrel=2
arch=('i686' 'x86_64')
url="http://www.nvidia.com/"
license=('custom:NVIDIA')
options=('!strip')

_arch='x86'
_pkg="NVIDIA-Linux-${_arch}-${pkgver}"
if [ "${CARCH}" = 'x86_64' ]; then
    _arch='x86_64'
    _pkg="NVIDIA-Linux-${_arch}-${pkgver}-no-compat32"
fi

source=("http://us.download.nvidia.com/XFree86/Linux-${_arch}/${pkgver}/${_pkg}.run"
#source=("ftp://download.nvidia.com/XFree86/Linux-${_arch}/${pkgver}/${_pkg}.run"
        '20-nvidia.conf')
md5sums=(`curl -s ${source}.md5 | cut -d " " -f1` # ${_pkg}.run
         'e0448a3aa53f0e96b87dde0f85e1d5bd')      # 20-nvidia.conf

_create_links() {
    # create missing soname links
    for _lib in $(find "${pkgdir}" -name '*.so*'); do
        # Get the soname name
        _soname=${_lib%/*}/$(readelf -d ${_lib} | grep SONAME | cut -d "[" -f2 | tr -d "]")

        # Create missing links
        if [ ! -e ${_soname} ]; then
            ln -s ${_lib##*/} ${_soname}
            ln -s ${_soname##*/} ${_soname/.[0-9]*/}
        fi
    done
}

build() {
    # Remove previous builds
    if [ -d ${_pkg} ]; then
        rm -rf ${_pkg}
    fi

    # Extract
    msg2 "Self-Extracting ${_pkg}.run.."
    sh ${_pkg}.run --extract-only
}

package_opencl-nvidia-beta() {
    pkgdesc="OpenCL implemention for NVIDIA (beta)"
    depends=('libcl' 'zlib')
    optdepends=('opencl-headers: headers necessary for OpenCL development')
    conflicts=('opencl-nvidia')
    provides=('opencl-nvidia')
    cd ${_pkg}

    # OpenCL
    install -Dm644 nvidia.icd "${pkgdir}"/etc/OpenCL/vendors/nvidia.icd
    install -Dm755 libnvidia-compiler.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-compiler.so.${pkgver}
    install -Dm755 libnvidia-opencl.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-opencl.so.${pkgver}

    # create missing soname links
    _create_links

    # License (link)
    install -d "${pkgdir}"/usr/share/licenses/
    ln -s nvidia/ "${pkgdir}"/usr/share/licenses/opencl-nvidia
}

package_nvidia-libgl-beta() {
    pkgdesc="NVIDIA library symlinks (beta)"
    depends=('nvidia-utils-beta')
    conflicts=('libgl' 'nvidia-libgl' 'mesa<10.1.0-2')
    provides=('libgl' 'nvidia-libgl')
    cd ${_pkg}

    # GLX extension for X (link)
    install -d "${pkgdir}"/usr/lib/xorg/modules/extensions/
    ln -s /usr/lib/nvidia/xorg/modules/extensions/libglx.so.${pkgver} \
          "${pkgdir}"/usr/lib/xorg/modules/extensions/libglx.so.${pkgver}
    ln -s libglx.so.${pkgver} "${pkgdir}"/usr/lib/xorg/modules/extensions/libglx.so.1
    ln -s libglx.so.${pkgver} "${pkgdir}"/usr/lib/xorg/modules/extensions/libglx.so

    # OpenGL (link)
    ln -s /usr/lib/nvidia/libGL.so.${pkgver} "${pkgdir}"/usr/lib/libGL.so.${pkgver}
    ln -s libGL.so.${pkgver} "${pkgdir}"/usr/lib/libGL.so.1
    ln -s libGL.so.${pkgver} "${pkgdir}"/usr/lib/libGL.so

    # EGL (link)
    ln -s /usr/lib/nvidia/libEGL.so.${pkgver} "${pkgdir}"/usr/lib/libEGL.so.${pkgver}
    ln -s libEGL.so.${pkgver} "${pkgdir}"/usr/lib/libEGL.so.1
    ln -s libEGL.so.${pkgver} "${pkgdir}"/usr/lib/libEGL.so

    # OpenGL ES 1 (link)
    ln -s /usr/lib/nvidia/libGLESv1_CM.so.${pkgver} "${pkgdir}"/usr/lib/libGLESv1_CM.so.${pkgver}
    ln -s libGLESv1_CM.so.${pkgver} "${pkgdir}"/usr/lib/libGLESv1_CM.so.1
    ln -s libGLESv1_CM.so.${pkgver} "${pkgdir}"/usr/lib/libGLESv1_CM.so

    # OpenGL ES 2 (link)
    ln -s /usr/lib/nvidia/libGLESv2.so.${pkgver} "${pkgdir}"/usr/lib/libGLESv2.so.${pkgver}
    ln -s libGLESv2.so.${pkgver} "${pkgdir}"/usr/lib/libGLESv2.so.2
    ln -s libGLESv2.so.${pkgver} "${pkgdir}"/usr/lib/libGLESv2.so

    # License (link)
    install -d "${pkgdir}"/usr/share/licenses/
    ln -s nvidia/ "${pkgdir}"/usr/share/licenses/nvidia-libgl
}

package_nvidia-utils-beta() {
    pkgdesc="NVIDIA libraries and utilities (beta)"
    depends=('xorg-server')
    optdepends=('gtk2: nvidia-settings'
                'opencl-nvidia-beta: OpenCL support')
    conflicts=('nvidia-utils')
    provides=("nvidia-utils=${pkgver}")
    backup=('etc/X11/xorg.conf.d/20-nvidia.conf')
    cd ${_pkg}

    # X driver
    install -Dm755 nvidia_drv.so "${pkgdir}"/usr/lib/xorg/modules/drivers/nvidia_drv.so

    # GLX extension for X
    install -Dm755 libglx.so.${pkgver} "${pkgdir}"/usr/lib/nvidia/xorg/modules/extensions/libglx.so.${pkgver}
    ln -s libglx.so.${pkgver} "${pkgdir}"/usr/lib/nvidia/xorg/modules/extensions/libglx.so

    # OpenGL
    install -Dm755 libGL.so.${pkgver} "${pkgdir}"/usr/lib/nvidia/libGL.so.${pkgver}
    install -Dm755 libnvidia-glcore.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-glcore.so.${pkgver}

    # EGL
    install -Dm755 libEGL.so.${pkgver} "${pkgdir}"/usr/lib/nvidia/libEGL.so.${pkgver}
    install -Dm755 libnvidia-eglcore.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-eglcore.so.${pkgver}

    # OpenGL ES 1/2
    install -Dm755 libGLESv1_CM.so.${pkgver} "${pkgdir}"/usr/lib/nvidia/libGLESv1_CM.so.${pkgver}
    install -Dm755 libGLESv2.so.${pkgver} "${pkgdir}"/usr/lib/nvidia/libGLESv2.so.${pkgver}
    install -Dm755 libnvidia-glsi.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-glsi.so.${pkgver}

    # VDPAU (Video Decode and Presentation API for Unix)
    install -Dm755 libvdpau_nvidia.so.${pkgver} "${pkgdir}"/usr/lib/vdpau/libvdpau_nvidia.so.${pkgver}

    # GPU-accelerated video encoding (FS#38604: https://bugs.archlinux.org/task/38604)
    install -Dm755 libnvidia-encode.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-encode.so.${pkgver}

    # CUDA (Compute Unified Device Architecture)
    install -Dm755 libcuda.so.${pkgver} "${pkgdir}"/usr/lib/libcuda.so.${pkgver}
    install -Dm755 libnvcuvid.so.${pkgver} "${pkgdir}"/usr/lib/libnvcuvid.so.${pkgver}

    # TLS (Thread local storage) support for OpenGL libraries
    install -Dm755 tls/libnvidia-tls.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-tls.so.${pkgver}

    # Helper libs for approved partners' GRID remote apps
    install -Dm755 libnvidia-ifr.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-ifr.so.${pkgver}
    install -Dm755 libnvidia-fbc.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-fbc.so.${pkgver}

    # GPU monitoring and management
    install -Dm755 libnvidia-ml.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-ml.so.${pkgver}
    install -Dm755 nvidia-smi "${pkgdir}"/usr/bin/nvidia-smi
    install -Dm644 nvidia-smi.1.gz "${pkgdir}"/usr/share/man/man1/nvidia-smi.1.gz

    # create missing soname links
    _create_links

    # CUDA MPS (Multi Process Service) (FS#38604: https://bugs.archlinux.org/task/38604)
    install -Dm755 nvidia-cuda-mps-server "${pkgdir}"/usr/bin/nvidia-cuda-mps-server
    install -Dm644 nvidia-cuda-mps-control.1.gz "${pkgdir}"/usr/share/man/man1/nvidia-cuda-mps-control.1.gz

    # nvidia-xconfig
    install -Dm755 nvidia-xconfig "${pkgdir}"/usr/bin/nvidia-xconfig
    install -Dm644 nvidia-xconfig.1.gz "${pkgdir}"/usr/share/man/man1/nvidia-xconfig.1.gz
    install -Dm755 libnvidia-cfg.so.${pkgver} "${pkgdir}"/usr/lib/libnvidia-cfg.so.${pkgver}

    # nvidia-settings
    install -Dm755 nvidia-settings "${pkgdir}"/usr/bin/nvidia-settings
    install -Dm644 nvidia-settings.1.gz "${pkgdir}"/usr/share/man/man1/nvidia-settings.1.gz
    install -Dm644 nvidia-settings.png "${pkgdir}"/usr/share/pixmaps/nvidia-settings.png
    install -Dm644 nvidia-settings.desktop "${pkgdir}"/usr/share/applications/nvidia-settings.desktop

    # Tweak .desktop
    sed -e 's:__UTILS_PATH__:/usr/bin:' \
        -e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' \
        -i "${pkgdir}"/usr/share/applications/nvidia-settings.desktop

    # Debug
    install -Dm755 nvidia-bug-report.sh "${pkgdir}"/usr/bin/nvidia-bug-report.sh
    install -Dm755 nvidia-debugdump "${pkgdir}"/usr/bin/nvidia-debugdump

    # Disable logo splash
    install -Dm644 "${srcdir}"/20-nvidia.conf "${pkgdir}"/etc/X11/xorg.conf.d/20-nvidia.conf

    # Vendor profiles (FS#38604: https://bugs.archlinux.org/task/38604)
    install -Dm644 nvidia-application-profiles-${pkgver}-rc \
                   "${pkgdir}"/usr/share/nvidia/nvidia-application-profiles-${pkgver}-rc

    # Documentation
    install -Dm644 README.txt "${pkgdir}"/usr/share/doc/nvidia/README
    install -Dm644 NVIDIA_Changelog "${pkgdir}"/usr/share/doc/nvidia/NVIDIA_Changelog
    ln -s nvidia/ "${pkgdir}"/usr/share/doc/nvidia-utils

    # Licenses
    install -Dm644 LICENSE "${pkgdir}"/usr/share/licenses/nvidia/LICENSE
    ln -s nvidia/ "${pkgdir}"/usr/share/licenses/nvidia-utils
}