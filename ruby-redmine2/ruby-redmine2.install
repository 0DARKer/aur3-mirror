p_generate_secret_token() {
	cd /var/lib/redmine2/
	rake generate_secret_token 1>/dev/null
}

p_install_gems() {
	cd /var/lib/redmine2

	# set bundler bin path
	BUNDLE_BIN="/usr/bin/bundle"

	if [ ! -x "$BUNDLE_BIN" ]; then
		echo "Error: Bundler executable not found: $BUNDLE_BIN"
		exit 1
	fi

	$BUNDLE_BIN install --without development test rmagick
	if [ $? != 0 ]; then
		echo "failed."
	else
		echo "done."
	fi
}

p_install_user() {
	getent group "redmine" &>/dev/null || groupadd -r -g 155 redmine 1>/dev/null
	getent passwd "redmine" &>/dev/null || useradd -r -u 155 -g redmine -d "/var/lib/redmine2" -s "/bin/false" redmine 1>/dev/null
}

p_adjust_perms(){
	for dir in /var/lib/redmine2/{files,log,tmp,public/plugin_assets}; do
		chown -R redmine:redmine "$dir" 1>/dev/null
		chmod -R 755 "$dir" 1>/dev/null
	done
}

post_install() {
	p_install_user
	p_install_gems

	chown -R redmine:redmine "/var/lib/redmine2" 1>/dev/null
	
	p_adjust_perms

	p_generate_secret_token

	echo "==> Installation finished."
	echo "Now go to http://www.redmine.org/projects/redmine/wiki/RedmineInstall and follow"
	echo "the instructions starting point 3 to complete your installation."
}

post_upgrade() {
	p_install_user
	p_install_gems

	p_adjust_perms

	p_generate_secret_token

	# migrate database if a config file exists for the database
	if [ -r "/var/lib/redmine2/config/database.yml" ]; then
		RAILS_ENV=production rake db:migrate 1>/dev/null
		RAILS_ENV=production rake redmine:plugins:migrate
		rake tmp:cache:clear 1>/dev/null
		rake tmp:sessions:clear 1>/dev/null

		echo "==> Upgrade finished."
		echo "Restart your application server to take changes effect."
	else
		echo "==> Installation finished."
		echo "Now go to http://www.redmine.org/projects/redmine/wiki/RedmineInstall and follow"
		echo "the instructions starting point 3 to complete your installation."
	fi
}

post_remove() {
	getent passwd "redmine" &>/dev/null && userdel redmine 1>/dev/null
	getent group "redmine" &>/dev/null && groupdel redmine 1>/dev/null
	return 0
}
