# Maintainer: ponsfoot <cabezon dot hashimoto at gmail dot com>

## You can choose the input method framework to use either ibus, scim or both.
## If you will not be using ibus, comment out below.
_ibus_mozc="yes"
## If you will be using scim, uncomment below.
#_scim_mozc="yes"

## If you will be using mozc.el on Emacs, uncomment below.
#_emacs_mozc="yes"

pkgbase=mozc
pkgname=mozc
true && pkgname=('mozc-server' 'mozc-utils-gui')
pkgver=1.1.690.102
pkgrel=4
arch=('i686' 'x86_64')
url="http://code.google.com/p/mozc/"
license=('BSD' 'custom')
makedepends=('pkg-config' 'python2' 'curl' 'qt' 'gtest' 'zinnia' 'protobuf' )
changelog=${pkgbase}.ChangeLog
source=(http://mozc.googlecode.com/files/mozc-${pkgver}.tar.bz2)
sha1sums=('2305e57b63bb5fc631f3e64eab1f1bfffffd3bf0')
_copt=Release
#_copt=Debug

if [[ "$_ibus_mozc" = "yes" ]]; then
    true && pkgname=(${pkgname[@]} 'ibus-mozc')
    makedepends=(${makedepends[@]} 'ibus')
fi
if [[ "$_scim_mozc" = "yes" ]]; then
    true && pkgname=(${pkgname[@]} 'scim-mozc')
    makedepends=(${makedepends[@]} 'scim')
fi
if [[ "$_emacs_mozc" = "yes" ]]; then
    true && pkgname=(${pkgname[@]} 'emacs-mozc' 'emacs-mozc-bin')
fi

build() {
  if [[ "$_ibus_mozc" != "yes" && "$_scim_mozc" != "yes" ]]; then
      msg "***********************************************************"
      msg " Please choose either one of ibus or scim at least."
      msg " See PKGBUILD."
      msg "***********************************************************"
      return 1
  fi

  cd "${srcdir}/${pkgbase}-${pkgver}"

  # Adjust to use python2
  sed -i '1s|python.*$|python2|' `find . -name \*.py -type f -print`
  sed -i "s|'python'|'python2'|" `grep -lR \'python\' * --include=*.gyp{,i}`

  # build mozc server and tools
  python2 build_mozc.py gyp
  python2 build_mozc.py build_tools -c $_copt
  python2 build_mozc.py build -c $_copt \
      server/server.gyp:mozc_server \
      gui/gui.gyp:mozc_tool

  # build mozc_emacs_helper
  if [[ "$_emacs_mozc" = "yes" ]]; then
      python2 build_mozc.py build -c $_copt unix/emacs/emacs.gyp:mozc_emacs_helper
  fi

  # build ibus-mozc
  if [[ "$_ibus_mozc" = "yes" ]]; then
      python2 build_mozc.py build -c $_copt unix/ibus/ibus.gyp:ibus_mozc
      sed -i 's|/usr/libexec/ibus-engine-mozc|/usr/lib/ibus-mozc/ibus-engine-mozc|' \
              out_linux/${_copt}/obj/gen/unix/ibus/mozc.xml
  fi

  # build scim-mozc
  if [[ "$_scim_mozc" = "yes" ]]; then
      python2 build_mozc.py build -c $_copt unix/scim/scim.gyp:scim_mozc unix/scim/scim.gyp:scim_mozc_setup
  fi
}

package_mozc-server() {
  pkgdesc="Server part of the Mozc input method"
  arch=('i686' 'x86_64')
  depends=('curl' 'protobuf')
  provides=('mozc')
  replaces=('mozc')
  conflicts=('mozc')

  cd "${srcdir}/${pkgbase}-${pkgver}"
  install -D -m 755 out_linux/${_copt}/mozc_server "${pkgdir}/usr/lib/mozc/mozc_server"
  install -d "${pkgdir}/usr/lib/mozc/documents/"
  install    -m 644 data/installer/*.html "${pkgdir}/usr/lib/mozc/documents/"
}

package_mozc-utils-gui() {
  pkgdesc="Mozc GUI uitilities, such as the configuration dialog, user dictionary tool and about dialog"
  arch=('i686' 'x86_64')
  depends=('mozc-server' 'qt')

  cd "${srcdir}/${pkgbase}-${pkgver}"
   install -D -m 755 out_linux/${_copt}/mozc_tool "${pkgdir}/usr/lib/mozc/mozc_tool"
}

package_emacs-mozc() {
  pkgdesc="Mozc for Emacs"
  arch=('any')
  depends=('emacs-mozc-bin' 'emacs')
  install=emacs-mozc.install

  cd "${srcdir}/${pkgbase}-${pkgver}"
  install -D -m 644 unix/emacs/mozc.el "${pkgdir}/usr/share/emacs/site-lisp/emacs-mozc/mozc.el"
}

package_emacs-mozc-bin() {
  pkgdesc="Helper module for emacs-mozc"
  arch=('i686' 'x86_64')
  depends=('mozc-server')

  cd "${srcdir}/${pkgbase}-${pkgver}"
  install -D -m 755 out_linux/${_copt}/mozc_emacs_helper "${pkgdir}/usr/bin/mozc_emacs_helper"
}

package_ibus-mozc() {
  pkgdesc="IBus engine module for Mozc"
  arch=('i686' 'x86_64')
  depends=('mozc-server' 'ibus')

  cd "${srcdir}/${pkgbase}-${pkgver}"
  install -D -m 755 out_linux/${_copt}/ibus_mozc          "${pkgdir}/usr/lib/ibus-mozc/ibus-engine-mozc"
  install -D -m 644 out_linux/${_copt}/obj/gen/unix/ibus/mozc.xml "${pkgdir}/usr/share/ibus/component/mozc.xml"
  install -D -m 644 data/images/unix/ime_product_icon_opensource-32.png "${pkgdir}/usr/share/ibus-mozc/product_icon.png"
  install    -m 644 data/images/unix/ui-tool.png          "${pkgdir}/usr/share/ibus-mozc/tool.png"
  install    -m 644 data/images/unix/ui-properties.png    "${pkgdir}/usr/share/ibus-mozc/properties.png"
  install    -m 644 data/images/unix/ui-dictionary.png    "${pkgdir}/usr/share/ibus-mozc/dictionary.png"
  install    -m 644 data/images/unix/ui-direct.png        "${pkgdir}/usr/share/ibus-mozc/direct.png"
  install    -m 644 data/images/unix/ui-hiragana.png      "${pkgdir}/usr/share/ibus-mozc/hiragana.png"
  install    -m 644 data/images/unix/ui-katakana_half.png "${pkgdir}/usr/share/ibus-mozc/katakana_half.png"
  install    -m 644 data/images/unix/ui-katakana_full.png "${pkgdir}/usr/share/ibus-mozc/katakana_full.png"
  install    -m 644 data/images/unix/ui-alpha_half.png    "${pkgdir}/usr/share/ibus-mozc/alpha_half.png"
  install    -m 644 data/images/unix/ui-alpha_full.png    "${pkgdir}/usr/share/ibus-mozc/alpha_full.png"
}

package_scim-mozc() {
  pkgdesc="SCIM IMEngine module for Mozc"
  arch=('i686' 'x86_64')
  depends=('mozc-server' 'scim')

  cd "${srcdir}/${pkgbase}-${pkgver}"
  _moduledir=`pkg-config scim --variable=moduledir`
  install -D -m 755 out_linux/${_copt}/lib.target/libscim_mozc.so       "${pkgdir}${_moduledir}/IMEngine/mozc.so"
  install -D -m 755 out_linux/${_copt}/lib.target/libscim_mozc_setup.so "${pkgdir}${_moduledir}/SetupUI/mozc-setup.so"
  _icondir=`pkg-config scim --variable=icondir`
  install -D -m 644 data/images/unix/ime_product_icon_opensource-32.png "${pkgdir}${_icondir}/scim-mozc.png"
  install    -m 644 data/images/unix/ui-tool.png          "${pkgdir}${_icondir}/scim-mozc-tool.png"
  install    -m 644 data/images/unix/ui-properties.png    "${pkgdir}${_icondir}/scim-mozc-properties.png"
  install    -m 644 data/images/unix/ui-dictionary.png    "${pkgdir}${_icondir}/scim-mozc-dictionary.png"
  install    -m 644 data/images/unix/ui-direct.png        "${pkgdir}${_icondir}/scim-mozc-direct.png"
  install    -m 644 data/images/unix/ui-hiragana.png      "${pkgdir}${_icondir}/scim-mozc-hiragana.png"
  install    -m 644 data/images/unix/ui-katakana_half.png "${pkgdir}${_icondir}/scim-mozc-katakana_half.png"
  install    -m 644 data/images/unix/ui-katakana_full.png "${pkgdir}${_icondir}/scim-mozc-katakana_full.png"
  install    -m 644 data/images/unix/ui-alpha_half.png    "${pkgdir}${_icondir}/scim-mozc-alpha_half.png"
  install    -m 644 data/images/unix/ui-alpha_full.png    "${pkgdir}${_icondir}/scim-mozc-alpha_full.png"
}

pkgdesc="A Japanese input method originates from Google Japanese Input"
depends=('curl' 'protobuf' 'qt')