# Maintainer: dumblob <dumblob@gmail.com>
# Contributor: dumblob <dumblob@gmail.com>

_basename=bonita-bpm-community
_prefix=bonitasoft

pkgname=${_basename}-bin
pkgver=6.4.2
pkgrel=1
pkgdesc='Bonita BPM Studio with embedded Engine + Portal'
url='http://www.bonitasoft.com/how-we-do-it#how-we-do-it_bonita-bpm'
license=('GPL2')
arch=('i686' 'x86_64')
# http://www.bonitasoft.com/products/download/bonita-bpm-linux-6-4-2-64bit?skip=true
source_x86_64=('http://download.forge.objectweb.org/bonita/BonitaBPMCommunity-6.4.2-x86_64.run')
# http://www.bonitasoft.com/products/download/bonita-bpm-linux-6-4-2-32bit?skip=true
source_i686=(  'http://download.forge.objectweb.org/bonita/BonitaBPMCommunity-6.4.2-x86.run')
sha256sums_x86_64=('0436e2f50f1b729d1efb344114764eddec8c810b5eb367a6ae564feb80dbd8dd')
sha256sums_i686=('e8fd40d407f9e22ae80cd1a4168faedf24d357bec7440b191ab788731552b5ac')
depends=('ffmpeg-compat' 'java-environment' 'libxslt' 'python' 'gtk2')
makedepends=()
# FIXME may be needed: 'postgresql' 'tomcat'
# FIXME may be needed: libavformat.so.52 libgstreamer-lite.so libavcodec.so.52
optdepends=(
  'jre7-openjdk-headless: PROVIDES libverify.so libjli.so libfontmanager.so libjava.so libawt.so libnio.so libjvm.so libnet.so libmawt.so'
  'openjdk6:              PROVIDES libverify.so libjli.so libfontmanager.so libjava.so libawt.so libnio.so libjvm.so libnet.so libmawt.so'
  'cuda-toolkit:          PROVIDES libverify.so libjli.so libfontmanager.so libjava.so libawt.so libnio.so libjvm.so libnet.so libmawt.so libJdbcOdbc.so'
  'libnet:                PROVIDES libnet.so'
  'jre7-openjdk:          PROVIDES libmawt.so'
)

provides=('bonita-bpm-community')
conflicts=('bonita-bpm-community')

build() {
  chmod +x *.run
  ./*.run --mode unattended --prefix "$_prefix/$_basename"

  # fix permissions
  find "$_prefix/$_basename/jre/" -name '*.so' -execdir chmod a+x '{}' \;
  chmod a+x \
    "$_prefix/$_basename/jre/lib/jexec" \
    "$_prefix/$_basename/jre/bin/"*

  # fix the executable and icon paths
  sed -i -r "s%^([[:blank:]]*(Exec|Icon)=)%\1/opt/%" \
    "$_prefix/$_basename/"*.desktop
}

package() {
  cd "$pkgdir"
  mkdir opt/
  mv "$srcdir/$_prefix/" opt/

  xdg_name="$(cd "opt/$_prefix/$_basename/" &&
    ls -1 *.desktop | sed -r 's|\.desktop$||')"
  mkdir -p usr/share/applications/
  ln -s "/opt/$_prefix/$_basename/${xdg_name}.desktop" \
    "$pkgdir/usr/share/applications/"

  mkdir -p usr/bin/
  cat > "usr/bin/$xdg_name" <<EOF
#!/bin/sh

set -e

cd '/opt/$_prefix/$_basename/'
exec '$(grep -E '^[[:blank:]]*Exec=' "opt/$_prefix/$_basename/"*.desktop |
    sed -r 's|^[^=]+=||')' \
      -configuration "\$XDG_CONFIG_HOME/$_prefix/$_basename/configuration" \
      -data "\$XDG_CONFIG_HOME/$_prefix/$_basename/workspace"
EOF
  chmod a+x "usr/bin/$xdg_name"
}
