## Maintainer : shahid <helllamer@gmail.com>
# Contributor: Richard Schwab <mail NOSPAM w.tf-w.tf>
## Long PKGBUILD description, todo, wiki:
## * https://bitbucket.org/helllamer/archlinux-pkgbuild/wiki/pkgbuild/bitcoin-git

## Wanna take part on development my PKGBUILDs? Feel welcome on my repo:
## * https://bitbucket.org/helllamer/archlinux-pkgbuild/

pkgname=bitcoin-git
pkgver=0.8.2rc2
pkgrel=1
epoch=1
pkgdesc="Bitcoin is a peer-to-peer network based digital currency."
arch=('i686' 'x86_64')
url="http://www.bitcoin.org/"
depends=('qt4>=4.6' 'libpng>=1.4' 'expat' 'gcc-libs' 'boost-libs>=1.46' 'miniupnpc>=1.5' 'openssl')
makedepends=('git' 'boost' 'gcc' 'make' 'automoc4')
conflicts=('bitcoin-bin' 'bitcoin' 'bitcoind' 'bitcoin-daemon' 'bitcoin-qt')
provides=('bitcoin')
license=('MIT')
source=(git://github.com/bitcoin/bitcoin.git)
md5sums=(SKIP)

pkgver() {
	cd bitcoin
	git describe | sed "s/^v//; s/-/./g"
}

## files & commands for building
makefile_unix=makefile.unix
qmake=qmake-qt4

build() {
	cd bitcoin/src

	msg "Patching $makefile_unix..."
	sed -i $makefile_unix \
		-e 's/CXXFLAGS/CPPFLAGS/g' \
		-e 's/-O[0-3]/${CXXFLAGS}/g' \
		-e 's/$(DEBUGFLAGS)//g'

	# make bitcoind
	msg "Starting make..."
	make USE_UPNP=1 USE_SSL=1 $MAKEFLAGS -f $makefile_unix bitcoind

	# and make qt gui
	cd ..
	$qmake
	make $MAKEFLAGS
}

package() {
	cd bitcoin

	## Grab debian .install files here.
	## First, create directories:
	cat contrib/debian/*.install | cut -d\  -f2 | sort | uniq | xargs -I{} mkdir -p $pkgdir/{}

	## Copy needed files into created dir-s:
	cat contrib/debian/*.install | deb_paths_pp | apply_deb_install

	## Copy mans
	cat contrib/debian/*.manpages | deb_paths_pp | install_man

	## Copy examples
	mkdir -p $pkgdir/usr/share/bitcoin
	cat contrib/debian/*.examples | deb_paths_pp | xargs -I{} install {} $pkgdir/usr/share/bitcoin/

	find $pkgdir/usr/share/ -type f | xargs chmod -x 
}

## convert paths from .install and other files: "debian/" -> "contrib/debian/"
deb_paths_pp() { sed -e 's@^\(debian\)@contrib/\1@'; }

## reading input in "<from> <to>"-manner and convert it
apply_deb_install() {
    while read from to ; do
		install $from $pkgdir/$to
    done
}

## guess correct /usr/share/man's subdirectory for man every file
## FIXME Uber-fat crunch. It should another, simple way...
install_man() {
    while read man; do
		local man_d="$pkgdir/usr/share/man/man${man#${man%?}}/"
		mkdir -p $man_d
		install -D $man $man_d
    done
}
