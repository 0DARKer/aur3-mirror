From eef6446ead3d4db2057e4c17c527919e67701aee Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Wed, 2 May 2012 00:05:18 -0400
Subject: [PATCH] Manually revert commit
 6cd6a4543b83fe9dddca8e827a538331615f9a30

---
 configure.ac                     |    4 ++++
 data/Makefile.am                 |    9 +++++++++
 data/org.cinnamon.gschema.xml.in |   36 ------------------------------------
 js/ui/altTab.js                  |    6 +++---
 js/ui/main.js                    |   17 +++++++++++++++--
 js/ui/windowManager.js           |   35 +++++++++++++----------------------
 js/ui/workspace.js               |    9 ++++-----
 src/main.c                       |   20 ++++++++++----------
 8 files changed, 58 insertions(+), 78 deletions(-)

diff --git a/configure.ac b/configure.ac
index 3f0a5fe..a5d0b7a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -36,6 +36,10 @@ AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE",
 
 PKG_PROG_PKG_CONFIG([0.22])
 
+# GConf stuff
+AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
+AM_GCONF_SOURCE_2
+
 GLIB_GSETTINGS
 
 # Get a value to substitute into cinnamon.in
diff --git a/data/Makefile.am b/data/Makefile.am
index 8ab4f9d..04d4d9f 100644
--- a/data/Makefile.am
+++ b/data/Makefile.am
@@ -71,14 +71,23 @@ gschemas.compiled: $(gsettings_SCHEMAS:.xml=.valid)
 all-local: gschemas.compiled
 
 
+# GConf schemas: provide defaults for keys from Metacity we are overriding
+gconfschemadir  = @GCONF_SCHEMA_FILE_DIR@
+gconfschema_DATA = cinnamon.schemas
+
 shadersdir = $(pkgdatadir)/shaders
 shaders_DATA = \
 	shaders/dim-window.glsl
 
+install-data-local:
+	GCONF_CONFIG_SOURCE=$(GCONF_SCHEMA_CONFIG_SOURCE) $(GCONFTOOL) --makefile-install-rule $(srcdir)/$(gconfschema_DATA)
+
+
 
 EXTRA_DIST =						\
 	cinnamon.desktop.in.in			\
 	$(menu_DATA)					\
+	$(gconfschema_DATA)				\
 	$(shaders_DATA)					\
 	org.cinnamon.gschema.xml.in
 
diff --git a/data/org.cinnamon.gschema.xml.in b/data/org.cinnamon.gschema.xml.in
index e6ff411..77d9b47 100644
--- a/data/org.cinnamon.gschema.xml.in
+++ b/data/org.cinnamon.gschema.xml.in
@@ -422,40 +422,4 @@
       </_description>
     </key>
   </schema>
-
-  <schema id="org.cinnamon.overrides" path="/org/cinnamon/overrides/">
-    <key name="attach-modal-dialogs" type="b">
-      <default>true</default>
-      <summary>Attach modal dialog to the parent window</summary>
-      <description>
-        This key overrides the key in org.gnome.muffin when running
-        Cinnamon.
-      </description>
-    </key>
-
-    <key name="button-layout" type="s">
-      <default>":close"</default>
-      <summary>Arrangement of buttons on the titlebar</summary>
-      <description>
-        This key overrides the key in org.gnome.desktop.wm.preferences when
-        running Cinnamon.
-      </description>
-    </key>
-
-    <key name="edge-tiling" type="b">
-      <default>true</default>
-      <summary>Enable edge tiling when dropping windows on screen edges</summary>
-      <description>
-        This key overrides the key in org.gnome.muffin when running Cinnamon.
-      </description>
-    </key>
-
-    <key name="workspaces-only-on-primary" type="b">
-      <default>true</default>
-      <summary>Workspaces only on primary monitor</summary>
-      <description>
-        This key overrides the key in org.gnome.muffin when running Cinnamon.
-      </description>
-    </key>
-  </schema>
 </schemalist>
diff --git a/js/ui/altTab.js b/js/ui/altTab.js
index fc3121a..6886c8c 100644
--- a/js/ui/altTab.js
+++ b/js/ui/altTab.js
@@ -197,7 +197,7 @@ AltTabPopup.prototype = {
         this.actor.get_allocation_box();
 
         // Make the initial selection
-        if (binding == 'switch-group') {
+        if (binding == 'switch_group') {
             if (backward) {
                 this._select(0, this._appIcons[0].cachedWindows.length - 1);
             } else {
@@ -206,9 +206,9 @@ AltTabPopup.prototype = {
                 else
                     this._select(0, 0);
             }
-        } else if (binding == 'switch-group-backward') {
+        } else if (binding == 'switch_group_backward') {
             this._select(0, this._appIcons[0].cachedWindows.length - 1);
-        } else if (binding == 'switch-windows-backward') {
+        } else if (binding == 'switch_windows_backward') {
             this._select(this._appIcons.length - 1);
         } else if (this._appIcons.length == 1) {
             this._select(0);
diff --git a/js/ui/main.js b/js/ui/main.js
index 7791f6b..2a7002d 100644
--- a/js/ui/main.js
+++ b/js/ui/main.js
@@ -4,6 +4,7 @@ const Clutter = imports.gi.Clutter;
 const DBus = imports.dbus;
 const Gio = imports.gi.Gio;
 const GLib = imports.gi.GLib;
+const GConf = imports.gi.GConf;
 const Mainloop = imports.mainloop;
 const Meta = imports.gi.Meta;
 const Cinnamon = imports.gi.Cinnamon;
@@ -144,11 +145,13 @@ function _initUserSession() {
     ExtensionSystem.init();
     ExtensionSystem.loadExtensions();
 
-    Meta.keybindings_set_custom_handler('panel-run-dialog', function() {
+    cinnamonwm.takeover_keybinding('panel_run_dialog');
+    cinnamonwm.connect('keybinding::panel_run_dialog', function () {
        getRunDialog().open();
     });
 
-    Meta.keybindings_set_custom_handler('panel-main-menu', function () {
+    cinnamonwm.takeover_keybinding('panel_main_menu');
+    cinnamonwm.connect('keybinding::panel_main_menu', function () {
         expo.toggle();
     });
     
@@ -655,6 +658,16 @@ function _globalKeyPressHandler(actor, event) {
     // This relies on the fact that Clutter.ModifierType is the same as Gdk.ModifierType
     let action = global.display.get_keybinding_action(keyCode, modifierState);
 
+    // The screenshot action should always be available (even if a
+    // modal dialog is present)
+    if (action == Meta.KeyBindingAction.COMMAND_SCREENSHOT) {
+        let gconf = GConf.Client.get_default();
+        let command = gconf.get_string('/apps/metacity/keybinding_commands/command_screenshot');
+        if (command != null && command != '')
+            Util.spawnCommandLine(command);
+        return true;
+    }
+
     // Other bindings are only available to the user session when the overview is up and
     // no modal dialog is present.
     if (global.session_type == Cinnamon.SessionType.USER && ((!overview.visible && !expo.visible) || modalCount > 1))
diff --git a/js/ui/windowManager.js b/js/ui/windowManager.js
index 0d5a000..84d37f5 100644
--- a/js/ui/windowManager.js
+++ b/js/ui/windowManager.js
@@ -116,24 +116,15 @@ WindowManager.prototype = {
         this._cinnamonwm.connect('map', Lang.bind(this, this._mapWindow));
         this._cinnamonwm.connect('destroy', Lang.bind(this, this._destroyWindow));
         
-        Meta.keybindings_set_custom_handler('switch-to-workspace-left',
-                                            Lang.bind(this, this._showWorkspaceSwitcher));
-        Meta.keybindings_set_custom_handler('switch-to-workspace-right',
-                                            Lang.bind(this, this._showWorkspaceSwitcher));
-        Meta.keybindings_set_custom_handler('switch-to-workspace-up',
-                                            Lang.bind(this, this._showWorkspaceSwitcher));
-        Meta.keybindings_set_custom_handler('switch-to-workspace-down',
-                                            Lang.bind(this, this._showWorkspaceSwitcher));
-        Meta.keybindings_set_custom_handler('switch-windows',
-                                            Lang.bind(this, this._startAppSwitcher));
-        Meta.keybindings_set_custom_handler('switch-group',
-                                            Lang.bind(this, this._startAppSwitcher));
-        Meta.keybindings_set_custom_handler('switch-windows-backward',
-                                            Lang.bind(this, this._startAppSwitcher));
-        Meta.keybindings_set_custom_handler('switch-group-backward',
-                                            Lang.bind(this, this._startAppSwitcher));
-        Meta.keybindings_set_custom_handler('switch-panels',
-                                            Lang.bind(this, this._startA11ySwitcher));
+        this.setKeybindingHandler('switch_to_workspace_left', Lang.bind(this, this._showWorkspaceSwitcher));
+        this.setKeybindingHandler('switch_to_workspace_right', Lang.bind(this, this._showWorkspaceSwitcher));
+        this.setKeybindingHandler('switch_to_workspace_up', Lang.bind(this, this._showWorkspaceSwitcher));
+        this.setKeybindingHandler('switch_to_workspace_down', Lang.bind(this, this._showWorkspaceSwitcher));
+        this.setKeybindingHandler('switch_windows', Lang.bind(this, this._startAppSwitcher));
+        this.setKeybindingHandler('switch_group', Lang.bind(this, this._startAppSwitcher));
+        this.setKeybindingHandler('switch_windows_backward', Lang.bind(this, this._startAppSwitcher));
+        this.setKeybindingHandler('switch_group_backward', Lang.bind(this, this._startAppSwitcher));
+        this.setKeybindingHandler('switch_panels', Lang.bind(this, this._startA11ySwitcher));
 
         Main.overview.connect('showing', Lang.bind(this, function() {
             for (let i = 0; i < this._dimmedWindows.length; i++)
@@ -751,11 +742,11 @@ WindowManager.prototype = {
     },
 
     _showWorkspaceSwitcher : function(display, screen, window, binding) {
-        if (binding.get_name() == 'switch-to-workspace-up') {
+        if (binding == 'switch_to_workspace_up') {
         	Main.expo.toggle();
         	return;                   
         }
-        if (binding.get_name() == 'switch-to-workspace-down') {
+        if (binding == 'switch_to_workspace_down') {
             Main.overview.toggle();
             return;
         }
@@ -763,9 +754,9 @@ WindowManager.prototype = {
         if (screen.n_workspaces == 1)
             return;
 
-        if (binding.get_name() == 'switch-to-workspace-left')
+        if (binding == 'switch_to_workspace_left')
            this.actionMoveWorkspaceLeft();
-        else if (binding.get_name() == 'switch-to-workspace-right')
+        else if (binding == 'switch_to_workspace_right')
            this.actionMoveWorkspaceRight();
     },
 
diff --git a/js/ui/workspace.js b/js/ui/workspace.js
index 58e93ee..e769678 100644
--- a/js/ui/workspace.js
+++ b/js/ui/workspace.js
@@ -1,7 +1,7 @@
 // -*- mode: js; js-indent-level: 4; indent-tabs-mode: nil -*-
 
 const Clutter = imports.gi.Clutter;
-const Gio = imports.gi.Gio;
+const GConf = imports.gi.GConf;
 const Lang = imports.lang;
 const Mainloop = imports.mainloop;
 const Meta = imports.gi.Meta;
@@ -27,8 +27,7 @@ const CLOSE_BUTTON_FADE_TIME = 0.1;
 
 const DRAGGING_WINDOW_OPACITY = 100;
 
-const BUTTON_LAYOUT_SCHEMA = 'org.cinnamon.overrides';
-const BUTTON_LAYOUT_KEY = 'button-layout';
+const BUTTON_LAYOUT_KEY = '/desktop/cinnamon/windows/button_layout';
 
 // Define a layout scheme for small window counts. For larger
 // counts we fall back to an algorithm. We need more schemes here
@@ -548,8 +547,8 @@ WindowOverlay.prototype = {
         let button = this.closeButton;
         let title = this.title;
 
-        let settings = new Gio.Settings({ schema: BUTTON_LAYOUT_SCHEMA });
-        let layout = settings.get_string(BUTTON_LAYOUT_KEY);
+        let gconf = GConf.Client.get_default();
+        let layout = gconf.get_string(BUTTON_LAYOUT_KEY);
         let rtl = St.Widget.get_default_direction() == St.TextDirection.RTL;
 
         let split = layout.split(":");
diff --git a/src/main.c b/src/main.c
index 3f88a61..01b2ae0 100644
--- a/src/main.c
+++ b/src/main.c
@@ -33,8 +33,6 @@ extern GType gnome_cinnamon_plugin_get_type (void);
 #define CINNAMON_DBUS_SERVICE "org.Cinnamon"
 #define MAGNIFIER_DBUS_SERVICE "org.gnome.Magnifier"
 
-#define OVERRIDES_SCHEMA "org.cinnamon.overrides"
-
 static gboolean is_gdm_mode = FALSE;
 
 static void
@@ -136,14 +134,16 @@ cinnamon_dbus_init (gboolean replace)
 static void
 cinnamon_prefs_init (void)
 {
-  meta_prefs_override_preference_schema ("attach-modal-dialogs",
-                                         OVERRIDES_SCHEMA);
-  meta_prefs_override_preference_schema ("workspaces-only-on-primary",
-                                         OVERRIDES_SCHEMA);
-  meta_prefs_override_preference_schema ("button-layout",
-                                         OVERRIDES_SCHEMA);
-  meta_prefs_override_preference_schema ("edge-tiling",
-                                         OVERRIDES_SCHEMA);
+  meta_prefs_override_preference_location ("/apps/muffin/general/attach_modal_dialogs",
+                                           "/desktop/cinnamon/windows/attach_modal_dialogs");
+  meta_prefs_override_preference_location ("/apps/muffin/general/workspaces_only_on_primary",
+                                           "/desktop/cinnamon/windows/workspaces_only_on_primary");
+  meta_prefs_override_preference_location ("/apps/metacity/general/button_layout",
+                                           "/desktop/cinnamon/windows/button_layout");
+  meta_prefs_override_preference_location ("/apps/metacity/general/edge_tiling",
+                                           "/desktop/cinnamon/windows/edge_tiling");
+  meta_prefs_override_preference_location ("/apps/metacity/general/theme",
+                                           "/desktop/cinnamon/windows/theme");
 }
 
 static void
-- 
1.7.10

