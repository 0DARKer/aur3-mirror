--- JoGLCanvas.java	2014-12-28 14:51:23.920203769 +0100
+++ src/scilab-5.5.1/modules/scirenderer/src/org/scilab/forge/scirenderer/implementation/jogl/JoGLCanvas.java	2014-10-01 16:09:43.000000000 +0200
@@ -19,14 +19,12 @@
 import org.scilab.forge.scirenderer.implementation.jogl.texture.JoGLTextureManager;
 import org.scilab.forge.scirenderer.picking.PickingManager;
 
-import com.jogamp.opengl.util.awt.AWTGLReadBufferUtil;
 import com.jogamp.opengl.util.awt.ImageUtil;
-
+import com.jogamp.opengl.util.awt.Screenshot;
 import java.awt.Dimension;
 import java.awt.image.BufferedImage;
 import java.lang.reflect.InvocationTargetException;
 import java.util.concurrent.Semaphore;
-
 import javax.media.opengl.DebugGL2;
 import javax.media.opengl.GL2;
 import javax.media.opengl.GLAutoDrawable;
@@ -35,7 +33,7 @@
 import javax.media.opengl.GLDrawableFactory;
 import javax.media.opengl.GLEventListener;
 import javax.media.opengl.GLException;
-import javax.media.opengl.GLOffscreenAutoDrawable;
+import javax.media.opengl.GLPbuffer;
 import javax.media.opengl.GLProfile;
 import javax.swing.SwingUtilities;
 
@@ -156,17 +154,17 @@
 
     @Override
     public int getWidth() {
-        return autoDrawable.getSurfaceWidth();
+        return autoDrawable.getWidth();
     }
 
     @Override
     public int getHeight() {
-        return autoDrawable.getSurfaceHeight();
+        return autoDrawable.getHeight();
     }
 
     @Override
     public Dimension getDimension() {
-        return new Dimension(autoDrawable.getSurfaceWidth(), autoDrawable.getSurfaceHeight());
+        return new Dimension(autoDrawable.getWidth(), autoDrawable.getHeight());
     }
 
     @Override
@@ -246,16 +244,14 @@
 
         if (SwingUtilities.isEventDispatchThread()) {
             context.makeCurrent();
-            AWTGLReadBufferUtil buffer = new AWTGLReadBufferUtil(GLProfile.getDefault(), true);
-            image[0] = buffer.readPixelsToBufferedImage(getGl(), 0, 0, autoDrawable.getSurfaceWidth(), autoDrawable.getSurfaceHeight(), false);
+            image[0] = Screenshot.readToBufferedImage(autoDrawable.getWidth(), autoDrawable.getHeight());
             context.release();
         } else {
             try {
                 SwingUtilities.invokeAndWait(new Runnable() {
                     public void run() {
                         context.makeCurrent();
-                        AWTGLReadBufferUtil buffer = new AWTGLReadBufferUtil(GLProfile.getDefault(), true);
-                        image[0] = buffer.readPixelsToBufferedImage(getGl(), 0, 0, autoDrawable.getSurfaceWidth(), autoDrawable.getSurfaceHeight(), false);
+                        image[0] = Screenshot.readToBufferedImage(autoDrawable.getWidth(), autoDrawable.getHeight());
                         context.release();
                     }
                 });
@@ -275,7 +271,7 @@
      */
     public void destroy() {
         if (isOffscreen) {
-            ((GLOffscreenAutoDrawable) autoDrawable).destroy();
+            ((GLPbuffer) autoDrawable).destroy();
         }
         try {
             isValid = false;
@@ -293,11 +289,9 @@
      */
     private static GLAutoDrawable getOffscreenDrawable(int width, int height) {
         GLDrawableFactory factory = GLDrawableFactory.getDesktopFactory();
-
         GLCapabilities capabilities = new GLCapabilities(GLProfile.getDefault());
-        capabilities.setPBuffer(true);
 
-        return factory.createOffscreenAutoDrawable(null, capabilities, null, width, height);
+        return factory.createGLPbuffer(null, capabilities, null, width, height, null);
     }
 
     // Implementation of function from GLEventListener.
