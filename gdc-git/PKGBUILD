# Contributor: Jerome Berger <jeberger@free.fr>
# Contributor: Jesus Alvarez <jeezusjr@gmail.com>

# Maintainer: Moritz Maxeiner <moritz@ucworks.org>

pkgname=gdc-git
pkgver=20130404
pkgrel=1
_gccver=4.9-20130331
pkgdesc="GDC, The D Programming Language (D2) frontend for GCC. GIT master branch compiled with GCC trunk snapshot."
arch=('i686' 'x86_64')
url="http://github.com/D-Programming-GDC/GDC"
license=('GPL')
provides=('gdc')
depends=('perl' 'libmpc' 'cloog')
makedepends=('binutils>=2.22' 'git')
conflicts=('gdc1-bin' 'gdc1-hg')
options=('!libtool' '!emptydirs')
source=(ftp://gcc.gnu.org/pub/gcc/snapshots/${_gccver}/gcc-${_gccver}.tar.bz2
        gcc_pure64.patch)
md5sums=('9089fe0a1a4bc3412a6cd127e58d3cee'
         '5bf9e483f908371157cdb8dc0bf6ac20')
sha256sums=('28fbc11b3cf3fe8a439b25957924b2dbb7cdcac4cf21c6f7e1facb6c439f9cb3'
            '01fbf2cabfa4022bcb0ea947fa2c57bd5e889256ca1941ada3afd7526f46ea7d')

_gitroot=https://github.com/D-Programming-GDC/GDC.git
_gitname=gdc

build()
{
  cd "${srcdir}"
  msg "Connecting to GIT server..."

  if [[ -d "${_gitname}" ]]; then
    cd "${_gitname}"
    git pull origin
    msg "The local files are updated."
  else
    git clone "${_gitroot}" "${_gitname}"
    cd "${_gitname}"
  fi

  msg "GIT checkout done or server timeout"

  msg "Starting build..."

  cd ""${srcdir}/gcc-${_gccver}""

  if [ "${CARCH}" = "x86_64" ]; then
    patch -p1 -i ${srcdir}/gcc_pure64.patch
  fi

  cd ${srcdir}/${_gitname}
  ./setup-gcc.sh ../gcc-${_gccver}

  cd "${srcdir}"
  if [ ! -d "gcc-build" ]; then
    mkdir gcc-build
  fi
  cd gcc-build

  ${srcdir}/gcc-${_gccver}/configure --prefix=/usr \
      --libdir=/usr/lib --libexecdir=/usr/lib \
      --mandir=/usr/share/man --infodir=/usr/share/info \
      --with-bugurl=http://gdcproject.org/bugzilla/ \
      --enable-languages=d \
      --disable-multilib --disable-nls --disable-bootstrap \
      --disable-libgomp --disable-libmudflap --disable-libquadmath \
      --disable-shared
  make 2>&1 | tee build.log
}

package()
{
  cd "${srcdir}"/gcc-build

  # Easier to just do a full install and remove the excess later
  make DESTDIR=${pkgdir} install

  # Delete all the stuff we don't need
  # rm -rf ${pkgdir}/usr/lib/gcc/${CHOST}/${_gccver}/{*.a,*.so*,lto-wrapper,lto1,plugin*}
  # rm -rf ${pkgdir}/usr/lib/gcc/${CHOST}/${_gccver}/{crt*,cc1,collect2,include*,install*}
  rm -rf ${pkgdir}/usr/share/info
  rm -rf ${pkgdir}/usr/lib/{libgcc*,libiberty*,libitm*,libstdc++*,libsupc++*,libasan*,libtsan*}
  rm -rf ${pkgdir}/usr/share/man/man1/{cpp,gc,g++}*
  rm -rf ${pkgdir}/usr/share/man/man7/{fsf,gfdl,gpl}*
  rm -rf ${pkgdir}/usr/bin/{gcc,gcov,cpp,${CHOST}-gcc,${CHOST}-gcc-${_gccver},c++,g++,${CHOST}-c++,${CHOST}-g++}
  rm -rf ${pkgdir}/usr/bin/{gcc-ar,gcc-nm,gcc-ranlib,${CHOST}-gcc-ar,${CHOST}-gcc-nm,${CHOST}-gcc-ranlib}

  # Fix permissions
  chmod 644 ${pkgdir}/usr/lib/*
  chmod 755 ${pkgdir}/usr/lib/gcc
}
