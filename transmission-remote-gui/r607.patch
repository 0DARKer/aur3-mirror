diff -ru TransGUI/about.lfm TransGUI_new/about.lfm
--- TransGUI/about.lfm	2011-02-20 14:30:14.000000000 +0100
+++ TransGUI_new/about.lfm	2011-09-18 12:30:27.000000000 +0200
@@ -1,956 +1,964 @@
-object AboutForm: TAboutForm
-  Left = 417
-  Height = 349
-  Top = 185
-  Width = 451
-  HorzScrollBar.Page = 423
-  VertScrollBar.Page = 316
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'About'
-  ClientHeight = 349
-  ClientWidth = 451
-  Constraints.MinHeight = 330
-  Constraints.MinWidth = 350
-  OnCreate = FormCreate
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object Page: TPageControl
-    Left = 8
-    Height = 299
-    Top = 8
-    Width = 435
-    ActivePage = tabAbout
-    Align = alClient
-    TabIndex = 0
-    TabOrder = 0
-    object tabAbout: TTabSheet
-      Caption = 'About'
-      ClientHeight = 273
-      ClientWidth = 427
-      object imgTransmission: TImage
-        Left = 10
-        Height = 48
-        Top = 14
-        Width = 48
-        AutoSize = True
-        Picture.Data = {
-          1754506F727461626C654E6574776F726B477261706869637D0B000089504E47
-          0D0A1A0A0000000D49484452000000300000003008060000005702F987000000
-          0473424954080808087C086488000000097048597300000DD700000DD7014228
-          9B780000001974455874536F667477617265007777772E696E6B73636170652E
-          6F72679BEE3C1A00000AFA494441546881D599EB6F5CC775C07F6766F6FD2497
-          942891122D8512E9C88AAD872D288E51C44E1CA44DBE0432ADA04D931645D104
-          4180C4823F150554D4FDE0A62860C429907FA0962A1445BE2406DAD46E6238AA
-          CBC4B2AA476C29922D4B862C71C97D2FF73E4E3FEC92E26B9794642BC80148DE
-          CB7BE7CCF9CD9C39E7CC5C51557E9FC5FCAE0DB85BF9BD07701FB5C2EF7FFFF9
-          3FC384CF01A9C5FF57A421C8DF1FF9DEB32F7C94FDC97AD6C08B2207813FB4F0
-          30F0C900362BD895DA84C67347D9F3C823E4725910E958AF54AA55A67E7992F8
-          DFFC2DE2792B9B42E0E00381F31E4C05F0F27754FFEBAE01FE59E4B9F4D6ADDF
-          DBF5F8E3B1DCD6AD1211E93A6D01702C1DE3F057FF18CF6B31AF5B448844A2FC
-          DBBF1EE38F4A75125DFAF4014F95F2D5ABFA9B575E69CC5CBCF82FDF54FD8B5E
-          F6ADE942013CFBE4638F39999AC23F760C82A08736871CFD6B32E92CBEEF2D7B
-          E43061082FBC00D56A57639CB5A4474765CBA38F264F5CBAF4273F1279E62F55
-          4B770C00B8607696DAE9D36BBE188461E7AF8F1FF84B9E891114A5EE7984AD56
-          6F45E7CF931C19C14622A137379700EE0A20BC78F1A2F1F379FC52097AB85C08
-          28100401BEBF14C0884115AE00915EBD896053296257AFD26AB56C0B7AD2AE09
-          60E047672F5CF85A261E4FB96C1647F7D8ABAEAD2EF00382650081B1A8088D6C
-          9696595D83021EE00701B50B176AA2FA1FDF552DDE15C0B754BFF903919FCC54
-          AB87041E0C61BB408CF680AF06100BC260850BD9D0A1AA7C502EB7A45259318D
-          0A46C013B824703A807FFFB6EAB1B5EC5B571EF8B6EA8F811FCFDFFF5024DD5A
-          A5AD373E1E1323578320B0CB5DC8B9002291E6DC17BFF8A03D7EFCC3E56D5B10
-          3CAB5A598F3DB70DB05CBEA5BA6A18397AF4683C85ACBA0682C047510DF7EF2F
-          3F73ECD8EC9DF4BB9A7CE499183A8B38580E10B49DFC23968F09C05F31037EAF
-          FC7117F2F1CDC00A17FA1D004C1E3E6480AF1963BEA3AA636B291311F6EDDB6B
-          BB018461903875FAD4DB4F7FF5A99ECE24224D557D5E555F3CFED289E61D0300
-          4FC762B11747464652996C16992FCED680F0431F3F585A4A04818F18C3AE071E
-          C82C5F0C8BD5AA42B3D1C85E79FFFDA3B56AEDC8E4E14363C75F3A51BB230063
-          CCF3DBB76D4F45A211EAF51A61B822F4AF90BE7CBEAB0B69A8D4AA5542EDAE47
-          4448C4E34C4C4CA4DE7EFB6DA9942BDF05FEEEB601260F1FEA8B44221B53E914
-          33B333A82AA5D912E57209CFF3576D2322ECDFBF8F300857F87C1006A82A972E
-          5DC25BA59C06C8A4D3A4D269C2304415B66CD9923C7BE6EC913B0200B6259289
-          A61FF8118072B94C241AE1C92F7C1E63572F059A8D2633C5AE751761A87CFAD1
-          83EDBDC28A6721B3A559DE383985751611A150282022C9C9C387FA8FBF7462D5
-          92A217C0F644228948BB142E972A3CF5F457E8EBCB776D70E1E2657A2D1311B0
-          36CAD6D12D5DDE1825E2229C7AF334E9741A630CF178BC51AFD77702BFBC6D80
-          54229900692FCCC0636464B8E7429E9D29F750D79672B5423A9DEEFA7CD3A621
-          A6DEF835D6B6377CA954CAD6EBF51DB70D608CF964329572460C61A82493A935
-          A3D0952B57C8673354AA55664BB75C4915442CF5468399D2EA9B9979E92FF4D3
-          683670D62108E9743A71F3E6CD896EEFF7029848A552F881471004E47259CC7C
-          19ACF381F056385485F7DEBF861D1DA154AE303D3DB3B4231BA15E6B70E3C39B
-          3D01DAB3A36DCDA2A4D36963ACD973DB0022725F2291A05A0BF0FD807C5F1E67
-          DD32B359D8E02850AFD6A9D6EA944B158ACB0062D138956A8D7ABDDE732050C8
-          E573789E87AA2193C902327E5B0093870F99783C5E8846A3B8A625F03D060706
-          702E72ABC3257D2AD54A95582C42BD56A7542E335D9CE9F0B55F4C2653546B35
-          C418023F24168B761D88814201AFD5C208A4D319C22018EE06D06D7335128BC5
-          3D630CD639020DE9EFEFC73A87B30E672338E770CE75FE17617A7A864C264DA9
-          5C69CFC0CC2C37A78B4C176798992D51AE5429976B64D249664B25ACEBE8B09D
-          1F1769EB728EA14D9B68B53C10211E8FE39C0B270F1FDABCEE1900B6A752294F
-          4412CE5A3CCFA3D05F5870A15B83766B0C67674B583154AA352EBFFB1E85FE81
-          794F46102EBF778552A542A190A754AEB275ABEBCCE232275265707090F3E7CE
-          E33A912893C978C5627127706DBD00DB72B9AC13C05ACB5CA349A1E342F3EEB3
-          68F902509C2EA21A6080D367CE608C69472D6D838661482A9940439F6AA5B264
-          3074994B0E6D1CA2D198C35A8B00F97C9F2B168B3B8057D605202263996C2E81
-          08C65AEAF53A8383838B3AD54523D6FE552AB737599F7A601CEB1CCB03AE02BE
-          E7512A9529CD968844220B80A12ABAA83EDAB871884AA58C750E15C8E7F30963
-          CCAED56C5D15C039B72B9BC988088441403C16271E8B2F3166A06F70219AF881
-          8FD7F2A8D56AB49A73744DC7AA8815E69A0D86068717DA8761C8F59B1F201DDD
-          A9B4239948E2792D0C2972B9AC586B1F5C37803166473A93C6F77D5A2D8F7C5F
-          DF82FBA8B63B7CF5E7AF3035F5064110748E0E1D20A433DDB32CC0CCEC2CBE1F
-          F08FFFF40F80128D46D9B3670F1313F7638C5998DB810D051A8D26B99C92CFF7
-          01EC583780B5764B221EA7D168D06A35290C166EC5EEF673F6EEDDCBD8D8182F
-          BFFC53AE5DBBC6FFFEEA4D6AB53A73ADD52BCD7969369BFCE69D0B4CEC1C636C
-          6C07070F1E241E6FCFEEA235CDE64D2354AB158C08B96C16DFF7374E1E3E648F
-          BF74624999BB0260F2F0A16426934944A3315A2D8F66738E8D1B36AE6A4C369B
-          E5A9A726397FEE1C89449C772E5EE2DCF977BAEE1B360C16F883471E65686888
-          271E7F82FE42A12BE8F0F0664E9D3A853116E7222493C9B95AAD360AFCB62700
-          B02D9BCB3545246D9DA5E5791406BA77043071FFFD6C1D1DE5673FFB4FB68C0C
-          F3DAEB6F7073FA56F59B49A738F0F05E86360CF0D9CF3EC17DDBB6F5D407B071
-          6813F5D75FC73A0B06FAFBFA835AADB6633D00DBF3B99C1A6370D631D798A3D0
-          DF1B0020994CF2A52F7D99772F5F26994870F1D265DE3C759607768DF389EDA3
-          3CBCFF111E7AE8A1852A732D19DAB88172A5DC2EEA5418181C885D79FFCA4EE0
-          E5B500B6F5F7F74755156B2D2DBF85ACB35380D1FBEEE34FBFFE75FEFBD55719
-          DD32CCF6ED9FE0339F798C6432B96E1D00896412AFE5B5810506060662CEB9DD
-          CBDF5B524A8888B1D6EEEACBF7C58C3138E7D834B489D75EFB05737373EBEE3C
-          1A89F2B9CF7D9E6F7CE3CF79F2C92FDCB6F1AACAFF9C3CC9E0E0065CE7C0B82F
-          DF8FB5F6415956D32FCC8088C8EEDDBB73C6D8BDF32710D65AC6C77772F2E449
-          8E1C7986443C8112A22AA08A8AB2907F3AF7289D0D407B0BB958C23044DA4D3B
-          D7C2F22F44F3597B707003FBF73FDCCEC662C8F7F51184E1D8D881031911A968
-          A7E102C0AE5DBB22128B0DAB865BC25029168B0BCA77EFFE14E3E313EDE34215
-          44B49DAC165F03CC5F7632EC7CA69D4FCB8BEF975FCF7348E77E3E6C4F4F4F63
-          AD259BCD12F87E3E1B8B8EECDBB7EF1DDA27F1B700B2D9ACAD05415F1886914A
-          A5CCCC4C1B60E7CE7152C9251F1CEF99349B4DCE9D3F8BB36EE17B4324D4C2F5
-          4CE6B72B000054D5A82AE55289EB1F5E4755B9FEE1F57B6FF93271CEB53F51A9
-          12FABEC3DD327BB5FD40D8F25A44A3B17B67E11AD26B2FBE02C0F383B76EDCBC
-          A1F97C7EDD31FBE31411219D4E53ABB54F17435D9AE617E622168B693D0C8372
-          A5FAD3772FBFFBE94422111FDE3CBC224ADC7311A1D59AE3C2850BA8EA294FCC
-          92C3DE05801B376E84D174BA7863A634158D447E70E6FFCEFC95B53662BA7C90
-          BB57A2AAF8BE6F55F5F27471F68746B558A854160A3A59F4355DC60E1CC8E49D
-          DB14FA7E9F15494463D1DEB5F13D923008BC7A1016250C67C246E3DA5B6FBD55
-          9FCF03FF0F6EF4D8137C7F96BD0000000049454E44AE426082
-        }
-      end
-      object imgSynapse: TImage
-        Cursor = crHandPoint
-        Left = 154
-        Height = 42
-        Top = 217
-        Width = 102
-        Anchors = [akLeft, akBottom]
-        AutoSize = True
-        OnClick = imgSynapseClick
-        Picture.Data = {
-          1754506F727461626C654E6574776F726B477261706869633E10000089504E47
-          0D0A1A0A0000000D49484452000000660000002A0803000000769BDE47000003
-          00504C5445B0191AB73639BE181EB51F29D058609A6366F8E7E8D16770DA7E85
-          C7787FFAEDEEBA2233BE3849DA8994F8E8EAC02840CE495EDB7182D1717FD47E
-          8CE29BA6E5A3ADF3D9DDF4DBDFF8DFE3B91C38CF204082172B5B101DAA1F3972
-          1626D12B4951141FD53C58AC3148C13850C14A6059232DE08D9BE8B4BDEFC7CE
-          F1CDD3F1D0D6BE2040812336581824CB5269D15870803E4BD2677CE1758BCF6C
-          80D57386D87689D9798CD07486DE92A2E6A8B5ECBCC5EDC3CBF2D3D9F6DDE2F4
-          DCE1F6E2E6F7E4E8CF284FC0304F43121D662131842D41AB3C55CE5F78D76B82
-          DA8095EFC8D1F5DFE4C018405B1224C0284FAB2446581D2CC0405ECB5674F3D6
-          DDF6DAE1F8E0E6811835C73E63D5758EAB1C46C0204FC32A57D5BFC6E1D1D6DC
-          CAD0560B2B580C423A2C378F38809A4C8CDED6DE5B0E5D8F5790AA82AC98679D
-          B692BBC3B3C5652A6F5D0F726F2F807C418B7D438C7E448D814990844D938650
-          94885396A177ACB08CB9C0A4C7DBCBDFE4D8E7EEE6F04A2056733A837F478F88
-          54978D5B9BAA83B6BA9AC4CCB5D3D8C7DDE2D4E6E9DFECE7DDEA2D093A996AA9
-          C6ABCFD5C1DCD1BDD8DCCBE2DFD0E4E8DCECEBE2EEF3EDF5560E715F107F5F10
-          7D400B556F278C732D8F7936938041998E56A4D9C6E0671C866F288C83469C87
-          4C9FE6DAEBE3D6E99C93B77A6F9E6059933D3975403F8F2B2A6053529AACADCC
-          8285B7F4F5F9BCC4DE6C7FB33F5B9F8B9CC53A548D4D54606C8BB64F77A76392
-          C21F69AE387EB7244D708BB4D774AAD2C1D8EA1F7EBE4698CF5EA0D09BC3DF84
-          BBDFCFE3F0185A8006415E108FCF1F95CF2899D247AADB53B0DF67B6DF92CFED
-          AAD6ECD6ECF7EAF6FC0F90CF0F8EC934A3D9297496BBE1F20087C107648C0C82
-          B419A8E21CA1DA3AB5E73FB0DE5DBDE575C4E3C9E8F5DEF1F90098D214516661
-          B2C317666A8AB6B4056548206249244C3C36614F8BA7876F8C5FB2B499C4C6A9
-          F4E9DAFAF2E8ECDCCBF4DFCEE5C8B5E8B89ED9906ECBA798E2A791C85B37DD98
-          81D8B5ABCC664CD17962BD948AF3DAD4BF4630A7817AAF3421BB3726AF231CB0
-          2B23000000B29299E7000000097048597300000B1200000B1201D2DD7EFC0000
-          000974455874436F6D6D656E740000892A8D0600000CCF49444154789CBD977D
-          5C53F7BDC753488D570A8110509CECAE3DC73C0A478A55C803818C1642309804
-          1573EF6E5C379EAC67C3873C31539290702121E03DCED5BA4B655AEF552FD4AD
-          6AC10758071A0243C0B64E82AC4E3729950407D5B6A968F73D49B46EBD7FEF73
-          7EE7F0E39CD72BEFD7E7FBF0FB9D43F9FA9F22CAD7BF3D1BD2364335C8DA0BF2
-          F5FA7CBEAE5F750F80C6C7C90B8C6E5D6348C73DC7DF79A75137E039DEED1B1C
-          FC4180C94C642526B25E4C6495B1CAB2620BB3625FCC5ACBCCCA4A6096AD95AD
-          892D4B94956D7E2184E9E9E93966AD24A5FBD5C0808FFCF5E3DD1ECF80E7D237
-          BA76E1AD882E5C3BDF01D73FFCE6D4B877F03F92626333166766C8B00C59C162
-          4CB60E46416C4156A20CCBCA285887251664AE2B50AC02CCD9B33D5D5D5DC7AB
-          407555A73C9E0BA73A8E1CFE51C7C8C8C845525761F45FBD7AF5CCFE9FEC0FE9
-          7FAF9EA9D95F73E6A377CF787CDE7F673116A32A0CC390F842A4104B4091421A
-          9291C1484FA431949B55884AA5429197F349CC6057F7C79E8EC315A08E4BE7DF
-          359BCD3BCC35E68BFDFD97FB868727872749751EC50982D8B7BDBC7C3B71E528
-          4CCF4D769E19F179EFC5D2A8D23C145568A44A0D8229E9C54AA418C1103E0AA7
-          0206AAE497AC5A19C678BABB2F8089F397AE9D3A52610EE9DDFEFEFEBEBE61F8
-          FDCECECEA36FE76BF3CBB76FDF9AFFECB3DAF2F2ADE5C4C9D10F4F8F8E4E4DDD
-          BF1F5C88A244A5D0632851D1D1D114500C5DC3877F290F6362A261121D9DFA9D
-          F580E9190408602E749C3AD51181986B8E9C3F730E28E7F090F2EFFC75FA0BAD
-          F65EE0AB2F025F693FD59EBCF5C9CDD3B7A66FDF999D9D7B78672E703F260AA6
-          B3943B73B38185187E319F42DEA40482D1147FCC9630A6274C395551F16A0D10
-          C2A41A7C077E06A24542F6E1DA19AD7626FFAF5F68B76ED5069EFDE2AB1B37EF
-          DCBEF167FF947F7E7E61C11FF5708642F13FA0443DF25328F31CCA739894E27F
-          B430F3687E9632F77974EAA63412D3D515C21C364372CC8FEDE0E471E46867C4
-          CD4CBE76E6CF01ED7682285F1DC80FDCBA7D1BCEE9A94FEFDEFD3CE87F743FF0
-          68E1D3BB9FC3348A169CBB8BD0680FFDF39FCD0583B377030F9E2B797965D84D
-          88028C279030272202272068F7A66E7EA985DC6FD77EA90DDC9ABE39FD97E9A9
-          A94F21520B77FC8160FC02390DFA1F32A23E9F0D2A180FC970069F0BDE093E83
-          864B208CE9200B8D3453118184FD440441DBFAF6CD1970B3AF7CF53DED27B7A7
-          6F4E7D320398F9FBCF2FF867EF3FA22EF81F227CB8D028B39FCD4B19147FF0E1
-          ECBC12B85234755308D31B3663AE78DACC530C480E048D206EDC0E68B5DA7CFF
-          EAAD7F3931357A6B06DC406E9E59F02F0482CF3FF03F084605FD94E0C2CC8374
-          348409DC471FF81F2995A961375DBDE1983D1D3412627E12345CEB87781DBD31
-          35732F10585DDE7973FAE6951BD3531F4F41683E8312B81F202B6DEEB305A8AF
-          C07C8A9281923537F70C150A0355A46EDAF08D9B9D55BA4A9D4EB7FBFFE5946F
-          7D8DD8B7EFF4FB3FD46AB7966F3FF7E1E887C370FAFE343F1F5C88894E4989A1
-          A7502851312951D037291ABAA698EC9BE8187E4C740C9D1EE99B2EB237ABF4B0
-          6E1A40969D91B43C6506C63E58033A27CF410D10A393972F5F1EBE3C79C9D733
-          C7A022F4E574188AE5F0EBA1834EE7F3A143F93051D0151ABEA6248C01371D55
-          D57A83C11652F5B75243900B0DE8282C3AF0E7CA24B9065DBEEAF11D9B63C44B
-          11854623D52C47107A1E9247E72BA49A3CA5869FA754C09CCE47A4E0262D8C39
-          5CA1AB36185CAEA61F1B8D4E5755C48BF909E431A873F23409EB1BEE1F1EEE1F
-          19F76E9BA329A9F1A8944AE52B314C49C5680A25239E8F3130298386295094AF
-          445124D237BDD0FFFAEA6DAEFACA1D2ED32193DBA2D3D535EE36E33FD9B96BD7
-          AE3DBB77BDB1EB8D3DFBDBDE6CDB0F84D3C41BE72F79AE5DEAEBBBFA91CFCB9E
-          5D0C51CBCC4CA015539548C19A02D9DA82445481210C8CB63936333153894995
-          68C9CB640978BBAA2A2AAA0DB61FD875669BC3D160B2189A9AAAAD7BF0D72B2D
-          160B6ED1EB2DFAB72CA47E419C3EF366776F97CFE7F58D5C1DF18D0560534B90
-          315959499B312483C9946527B1B26508A66014B2D664B3629358599B113452D0
-          EF90986D2EBB4357616B68004CA5ABC966D869AED3575BADB8D56A3558C36A24
-          7E71EC1DDFB11EEFE0A0D77BED9AEFAC40989DCDCE662765B35FA46666656733
-          05EC6C015B8621EB8040DE4E623395114C572560AC867A7BAB717715B90DFF54
-          E7AC77D91A718BC1D064256C4D2E9BABF14D97CB656B221AADDE1EEBC5C1B1B1
-          B1C1718FF7C71C8E40C0920905420E1BC966B3D9021953C015B2698CC42CF827
-          A3AC4828142622E1BEB102E648A5C1696AAD755BC822DBB1D3E932D6EBF06A9B
-          CD65C58DCE83CDCD6FB6C1A5D9493435FD9F4D3F393E01F279BCC95C21A70853
-          F1B8221E572310B085498A35225E91205D11CBCC660BD25570BF288B5F12AAB4
-          6AD24DD53697C9515BEB68AA238BCCE5AA77EB71ABABDEA8C39BDDEE43A6B6B6
-          F6F696F676C2E9723A8F4D0E0C0D0D4D0C8E77F9391C9E1A53A9D539A5C90A6E
-          5111974D2F538B789C743AC452C04BC7727272D402456A045307AB99CE666CA8
-          AD6D6D0043B8596F73BB0DB8D3E876EB7093FD504B6B08D3DA42B8C1DAB149DF
-          D0D0F5EB83BE6D222E4F2D5661A54B37E66E5C0EF3527156BC0A53A5FF9B82A4
-          A85F924924B972353DBCDF54EBAA6A2ACC3B2A9D6ED28EA95E8F9B1BC18D11B7
-          BBEDEE2AC2ED6E7038DADE6A6F6F753888B603070E9C1A9F00CAF531EF36112F
-          39676341424E695CDC4684BDB1541217C75D43438BA999023657228F5BB22437
-          2E4ECE7F21D43716081AB966D619203BAD0EB771B7B9AAC96934E12668A23ADC
-          DEDCDED2D2D666B7B7B438A0430FE8C7203143BFFFFD84772E99C713CBD7C992
-          9317C549A8055C39FCF2C665BC423AA6E408D471B94B96C42DCA8DCBE1BFB26A
-          43D84D64B9B4B85B5B6B1D6E2B6E76399BDB2B1D0D871AFE9B701F341D020C64
-          A8A585F865B5EBECD8C4D85018C3E3F2C462D5E264917C91848AA4172D55E7E6
-          262F136562520EBB2857C266B2982FC5C6F25F791C34738D4E67D15B7575F5A4
-          1F176EB6398D767D6B6BAB03C70F1E747F83A976BAC6C606C687AE03E6582C17
-          30CB54096AC02C8355006309E512716EB23003E108B88B72D761EB16A7676682
-          9BB450D0EACC158D7AABC15669B690716BC0712B04CD565B5BEB24C842683FF4
-          1863779E1D1B1C1E0861B631385C91585CB0582D922C92A36BD71626AC65E7E4
-          E42E2B6231386CDE1249014D22E289B891DCE8C9A0C1D2697359F046BB09EC98
-          711DB831EEDD5B6B030CC4EF09A6FDE0C484378439313447130A45C96255815A
-          24962CA38BA0556311D652B95C94880A84BC1C098688A0CA85F492486EEA2068
-          D54DAE7A8BB9D108DD0391AA72C1A2507B62AF1E8756798271102D90FEB09B13
-          0DB154A180AB1663985A2DDF28D788840241E1F232B558BEF4453E60968A551A
-          5E118FCB51840BDA42BAA9B23639DD06B3C56E6F6DADC7F11D3628EFBD27F65A
-          08C2E66AB63FC1405F5E1F1CF65D87A07DC9500A84DCD26519D09E1289842EE4
-          088532BA0C9CC90BE94C0EAFB43403DCF078CCC87E036E6ACCAF5B6DF5F60693
-          C96D72B45A6193B1B90E92181D81DB6C071F635A8909B231C72680728247038C
-          7AE9329E485C9A1B27C84B52177193D93CB524B75495B946A896E4088B4A79EA
-          A5898AF0466081A041726CF5C6860687C9E130FD14307A9B91C4B41144930D92
-          D3D6D6DC6C6F3F741AFA1F3406983B5CC070786209370EDA65D14B2826148978
-          4BD5E22512194665648944F2D24562919C892AC37DD315C298EB6C46B0D36032
-          D4C0BEB9CB6A331E020CEC9A4D24E7C001A88466F7647F2F24A7D707A9891350
-          A5103471EE3A96A4542EF8570C5132391C75B288CB92628A4C4C96942C4ACE29
-          624A11345CD0BDDD21CC0EBC4A076922ADC01660B5391B6AF756137F2778A51E
-          BE3872F1238FAF3729961A2F650B3862498246958E52355404C1A8CFBF9420C5
-          60F79432308C9F08DF36C5D813CCC0C0EB4F5E9AC9F7E6CE4E5C074D04A5D6F4
-          4BFC690AF912303CDCD737E2F11E839700A5345BC011252F56C66B102A3F9E4A
-          A562280329A6C5D3691843C9A066D21568318AA2CA1742B9F1793A8EBC1A7E99
-          7D15C73B2727FB8E1EF9CDE1B7748D3BFFDE0B7C39F50DC3D1FF07F87A62509F
-          93E6A932CAD624C4C723CBA5CAE58A78340FC150BA063EA394344483D2429F51
-          79A832D2370397FACF8DEE796DCFC993A3F07174E54352574EBEF65FE4F1B4DE
-          8647E4B8F8F1C795FF82BE02AF792529FC2D255B52E14C2929494D8159E82C49
-          D992929A9A9A5202972D70A67EF77B80193937FAC107EFBFF7FE074FEB7F7EFE
-          B39FFF83DE0B3F797FF4DDC3CFAE7E79D5A6EF6C82014778FCC33C3C0D69D577
-          577C1F30E73EF8E3EFBEA5FFFCB6224FFEF8DEAF7FBD323F2D6DC5FAF52BD2D2
-          D6AF589FB67EFD860DEB576C580967DA8AB4951BE084A7E4AD0DF0286DC5F7BE
-          4F62FE29FA1B8C064B4CAD4156FE0000000049454E44AE426082
-        }
-      end
-      object imgLazarus: TImage
-        Cursor = crHandPoint
-        Left = 10
-        Height = 57
-        Top = 202
-        Width = 125
-        Anchors = [akLeft, akBottom]
-        AutoSize = True
-        OnClick = imgLazarusClick
-        Picture.Data = {
-          1754506F727461626C654E6574776F726B477261706869630915000089504E47
-          0D0A1A0A0000000D494844520000007D0000003908030000002C97D46D000003
-          00504C5445000000000808080808000810001018080C100810180810210E0E11
-          240E030818291418252921081821292121292129293511024614044523044127
-          11582206552C0867260361310E4B3520573E1A643E0A61401F6F3A096F460C6D
-          441B6F501B162539262D3A1C33532E3C4E294161274072274D7E315079443E44
-          4A515F644B2F665248385478465271555F6F66626E25449026578E315A8C395A
-          8C215A94295A942D5E9431638C3D5E88425A8C465E884D6488526B84546D8964
-          6987637688202DA42E3CB2314AA53744B5394AB5394ABD395A94295A9C25639C
-          315A9C315AA531639431639C3163A5395A9C396394425294425A94396B944267
-          944A63944A6B94526394526B9439639C42639C4A5A9C5A6B944254AA525CAA4A
-          52BD5A63B9396B9C396BA5426B9C426BA54273A54A6B9C4A6BA54A7394527394
-          4A739C526B9C52739C527B9C4A73A95273A55278AA5A6B9C606F965A78996373
-          9C637B946875996B7B946B7B9C5A6BA56273A55E7BA56784A06B7BA56475B960
-          86B16B87AE81310885550A8356187A56377F672D7D6A467A67567D7357916210
-          9068248F71318E724B9E641A9D7731A9752ECF5012776B6B776775776F737476
-          767F77637E796E887B6B96796D7B7B7B737B847B73847B7B8473758E817B8E73
-          7B9C737BA59B853AAC8831908651A88D488E8664888879A2905F9D937ABF8E38
-          E7A51FB8914DCFA14AC39C5EC6A96BD9B567EDC76C7784947E89967384A57788
-          A57384AD7889AA7B8CAD7B94AD898C958484A5868AA98892A999909BA0A29CC1
-          B08EDCC995737BC6768FBB8A94B18A92C7809DB9919FB58E9FBD90A6C99C9FAF
-          A0A0B1A5A2B2ADAEB1A8AABEB7AFBDA2B3CCA1ADD8BDBDADBDBDB5C6BDB5ADBD
-          CEB5B5CEBDBDBDBDBDC6C1C1C1ADC1D6B5C0D3BAC6D6BDC6DEC6CAD2BDCEDEC6
-          CEDEC6D6DECEC6ADD6CEADCECEBDD6CBB7DECEADEBDEADE6DEB9E1DBC5CECED6
-          CED6DAD6D6DEDEDEDEDEE7DEEFE7CEEFE7D6EFEFDEC6D6E7CED6E7CEDEE7D6DE
-          E7D6DEEFDEE2E7DEE7EFE7E7EFE7EFEFE7EFF7EFEFE7EFEFF7EFF7F7F7F7F7F7
-          F7FFFFFFFF7A2CD351000000097048597300000B1200000B1201D2DD7EFC0000
-          000974455874436F6D6D656E740000892A8D060000119A49444154789CE59979
-          7013579EC7BB9C8A43E298C3C6D81890B08E18DF6BB4925528B627934C252A44
-          7A9CB6FC5AA34CA1EA2D958D546B9C561AC9B21205F942BE808A214006E15B46
-          3E485A085BD8D8190D181FE06477769390052AD9D9EC6C42CD5460CA86DA22F5
-          F6D7F22420CFFF933FF6B5A46E3DC9FABCEF7BBFEBB9893B3F6123883BF8276B
-          2704FABFFF44EDB315FA673FD1F1FE8AF6F74FFCFD0FFCA37638FDBDDB9DC7E9
-          3E9F8F638DC858858ACB9186A276EDA234945AAD50EF542814EA9507A5A634A5
-          A51A848C88A2A21F1457186D1684D4A4A28C4488ABB37336CECE2A762A1524C5
-          904AADF251FBEBB52AFA8463159DF7D939A3913396A25254AC81DFAD013CB54B
-          ADDEB50B98A5C5A555CFE7770E8C0E0EF79D44543942545939AAA86139470DA2
-          14652A85DE828CAC8BE743E729555191B2A850A52C2C149885F07CF965E1A250
-          A9821E9556785DADDDE70BF21FD879BBD04083CDF7BEDF1FE80DF4F60E0E8F0E
-          8F8E8C8E06C4E2B6A1E1D1A1517F2952C3002C6C8DADD6E7AAB5B91EE01BCBB7
-          CFA34AE8E242171CEA227A9F52F939769B948FE9D76A6134855A7A192B55AA55
-          DAC3C1F1F087BEF087C17090E76011FA077A07BB07070383C3232343A32343C3
-          8323C30D5B45ED43D0CE4287BFB882636BEDAE50D017E46EE3C40CFC8DA24855
-          A4D0BB2EB84805B3DF4CDDC089B9A49254EA743F8C41AB556915CADB9800FD31
-          F460586891703818B4DB79AEB4C7DB363C34ECF1785B02DDC3EDDDEDDEEEF6C0
-          50BB28FDD0D0E8D05047C7D0E0D0504F1357170CC19FF0C1259C988971FCDB6E
-          E58C9B9F59742BB5F4CC8DDB789D2FE4369D77EBB4FBAE5ED60A2F4A2D3573F9
-          3B4CA8547F33F341C7DEBDBF3EC3736FB2ECBB9B3DDEEEE17323BD1BD3D3BD81
-          EE91D6EE40606878A87D6B602B9C3BB61E6C4B4D3934747870F8C35030028F25
-          BC76021710CBD8FE2018FC5E732FA4BCFA30EF26CEB884BFD12C61F9FE87D5F7
-          EBAA1F9AEF7DA8FCCB5DD9FDBFD50EF497F6BEF5D15BAFDB8C6FDA0A366FF688
-          1B3A02D3D31E51BAA7757878B8B7C373A8ADBBA36D487C7068F0E0C60DE91B9E
-          DED4DD7DF6EC086FE7EB7C403F7D2D9FC8F80E3F9919BFF445DCEDFF913CB841
-          2CE275A7F1C2DA7B98F81CC7B1095770C6BD2519CE7F0A661E0C6F15FD572FBD
-          F5F1EF7EB7F775CE58D2902CEAE8EDED0D0C4D8F8844A20E8083F589368A0E8A
-          B67960D65352D6AFDFB07EC3C64D5B0647797B30C8D72EE1753BA4C596BB98C8
-          7C0E5F7BEA2E7E02CF2500BD042FAC5BC2C45D1CA795DFC2092823036749E05B
-          5A5DAC76FB817FF8C55B1F7FFCD1472F198DD99B5344DD1DED6DDEE1E9D1164F
-          AA07C611E8ED484F49DAE8A96F1B1AEC80716CDD08F84D8383E704170BB1402F
-          09F23CC8546A97679FB97D937870F39945BC76179E5FBB8C891B585AA8BC8133
-          E4EA5C5C2A11B4EB62B5BFC9C95FD8FB16687FD198BF654BF216714B8BC8DB31
-          323D2A16793CED9E96B6807863CA464FBAA7BDC3E349DDB2236DCBA6AD079344
-          5D1C6B3F5317BA8F0B4A821782F771BC4AEBFC346B591AFF5B5C720BE7E72DDF
-          2980CEEAE56F83EE7FBEFFED98BBF0C69D9207385E5746C6D03956FEB317F7EE
-          DDFB8BD7D91D9E1C4D52AAB8C193EEED989EAE1779C4A9629128651B884F49F1
-          B6B77BEAB91A4B99E6BDEEECA7BD7ED26C03FFD43C4948393E1C5E433CA77214
-          67E43E21D7E6C6CB1208A9439A90154FA83519F1127951C6531239298997C511
-          99BB57D16DC5F29FBDF0C20B2FD6946E161F3B93952CEAED181E19189CEED9BA
-          2DD5B3795B527AFAE6D4A4A4ADA9DBBCDE1341DE8A28887059476995C1CA3A90
-          D95A6BB40623BC852419BE5A2DFF47D52BDAC2E714266735CAB5CF045D0E4A5E
-          A4D516C99FD391DACC9D455A1D19EB7110DDDEF8E5CF5F7ADDC61588EB395F38
-          6B8337D03B3A12981EDEB471DBB64DE9499B52B7A6246D02C36F391D8E04ED08
-          C2BB2ADAA832B39946A8BA2EE442B4C1BCCF69D6EE7E45B947AB55EAA86A4B25
-          E98C5C702186D6BEFAAA8AD6D13A9D4EA5D36975742CDDCED9B9031CF726D724
-          EEF3857DE182FAE1C0E8E8F4F4D4860D5B376C488A4BDD26126DDAEAED7B9FE7
-          F9C8958B6778DE4A95912A55998A3430C208CCB45AA963CC66464B6A5F814345
-          3366C64C937A075FC990683F4DD22449EA48E10CA3889D79CE67F7F107EA0E94
-          8A034721F04DF44D0F0686A707A69345395B3666A7656FDE205EBF3E8DB3F310
-          885D179BDE8BCC9C814443AA499A31D12650A30549B4A08DD6A9F68076958E31
-          094229922169D377F715AFD126F23B7C1E06008F58FA1B80877017F67576B702
-          BB3FD0DBDEED09B4B7346E3865F3FDE6CC19AE7E9B78AB27DFCE0B1E56FB9B77
-          0E4F4E86CEB81049AAE0A75424848F3D4A950E905A1807C05570A58375D9A3D2
-          91BB41AD5B1667722F2A1671A29C8C4EC22AED9C6F3C181EF779FE6B76625CC8
-          2BEDA296B4A4A793767076B06A17B7639B28A5C1C70583A120CFE66C3A7C7812
-          26DF652D232165EA548C937EF9E5289DDCAD7D393A0FC28BCEEDDEEF76BB19B7
-          D3CDCAC71E2CCA1671C6D865134953B174A320DD171EF74FFB813E3A3AD2E53F
-          15DE11B731AD049276DDF93A3E47ECF50CF820A7DA5D75C677807E381CE178BE
-          1C26171299CE406BB5A4A01E26552B4C80EE55E1E23BCC8EE199E76EC9FF82E5
-          57F107D22BF8E4183E4093A655749B30EFE393DEA985D9B9C9C0E8F0ECECECC5
-          E4F5C9478D5550493088C91279BC23BCC502999F2B88D20FD7462E462CB48E7C
-          8D56EB143AC640EE56D156D604061DB56DC102F6E393AEE59BD2CBCF407875E3
-          ACED3338310B67C94C86D5DA61EAF99C91AF16262373734DA3D373737305EB93
-          1A781E15530A95B63047DC70681ACA180BEB60DF7967D33B403F1FB9505B0610
-          9232955154F9792BAD2BBF10423A66BFC1049606702825960E5CC31F90F215BA
-          04D6BD0A4E94C9104B879AAA64AAF5BF672722937373A7DBA617E6E7D3D66FC9
-          1E0BFA78BB45A1DCD9E0694C99AAD62B28CA9CBF42AFBDC03B185A986B9A2977
-          F0B535163D49B9CEB066A1190C60D93A9A5EC452193EB9BDE811DD08273D4DC5
-          D28B8B3FCCF14FCD072FCECECDCD5F6B3CF79FD7AFED4849178F878391319E21
-          1539E29EB6052BA2CBCACA0C15D930F547F75A283558978A26294AC3DAEC4623
-          7FDE8A42AC9932805123A79EA60DDC151C275BCED85E09C17DFFFDD9BCDB587A
-          018F4BF4ABD79D2BC8FED39713E1F0E4C4FCFCF5EB931D5F2F5CBF9E93ECF1F6
-          8F8F5D095A74AA5C8FA7E31242269234D1865FFD322BEBF5329560D77B764374
-          45AEC8C550848345416C39459206E40A8518A6C216B93241A89D4FC84DEA2708
-          354A7C26339190C9884413A38FA56735F65F02F8C4ECAC405F10777FFD874BF3
-          A74F741E9B9C8DB8F43A5A9D7AB0FD125569D699188856F4CF5FD50ACE0DD2B5
-          2A92A4908DE7ED4271ED3022C64039F9A00BE92DFC9588A35A4D9B7219938961
-          289362A781313034A35F4D2F5D97EC0FFBC627C0E4007EFDFAD1B4F6D196C6FA
-          C6D69E56783436F6C1B3BEFE92E99F84D8B27BB7E0DA1053A05AD4425C61ACD5
-          0E87DDE6B238F83AA3B5BA9CE5C3411764FE2BBE2AC644994833CD40D3938C5E
-          6FD2337A1881DE14AB3DBBF51438FCC4C4A4409F9F7FAF39BBBE3EA7B1B1B9B5
-          B109E26CF296ECECECA6D6050A7C5AA5DDAD62AADFD66A21BCC028F6903A6BA5
-          9E2A77B8603FC1434440888F84422E7B1D1FB2527A93C9604610FD69BD090158
-          C083FF1A502CFDF8D7B3DC69A8AB2F82CDCFCF778A1B9B72721A9B9A3BFB4FF4
-          F7373737A535B7D637B7FA2B21A892FB2E5F5D5C9C81525518CA1E2D2C3C499A
-          2DA0CE0AD833AE1A4805B62A071881C5A0A718CAF1B6AB1AF0827A3828810DD7
-          31F462E3C903361ECAF9D31072268E3DDBD97CEC48530E8CA0B9135E7276A4C1
-          F5F1F7403BB4D74CCB185FD69985F8AE133A48C602C995A9665997DDC55A581B
-          42FBF699CD88612C16D6E2626D560B62CA1904AB0E81CB0C7C14EBEFC508D96A
-          B903BCCB5EEB7271F969C7FA8F7576161C8576AA2027A7A0E0E8B12347FC537F
-          74479324731BE33C895403E18516C6A3676B180A7C18F637F0BB660A40519F67
-          CC1607CC005BCBBA58964508096B605EE1AFF2F7F20AF60D235217A9D5149597
-          F6EE89639DAD9D05D176B4A4A0E0C889237DCDCD9DFE31412A7517E3B5445E2D
-          64781DD25355E76132493D45D1144C2AB87B54A400A704A219C22307B2D86A21
-          649BCB2D51FDB139CE68B4D51483AFC2CEB468475A5A6753E7FB4D8D20F8D4A9
-          D3930BF39FCD1DF1371D3F7EACF58F6EF037819E48E45758B8FD56E77EE7CCE2
-          55D644516EF718E433B703199C6016FB18B3013A5C68E69A93BF108944E666C6
-          DC309899C519A713CE4BC2BF0D1EDB4DD88C55B087062D3960DF9D9D7D7D9D4D
-          CD4D4DC7FBFD973EF9E4937FBDD4EF3F3EE93F3E35A6A368E69EA03D9F7B83E7
-          DDCE9907EE19FCD04993F88B4518D5C36A74EB6EE816BE5F6D4033182FC222FD
-          3E82F152E4DFE04D75E5ED65F70DEC06B35FADDD02A5A29A428C05E88D3D9D3D
-          3D7D4DCDF59E86FAFA7AE17D7FDFF1D663C7FDF3426520D0D7112517EC3516E4
-          C40FF7AB81A0A0BE30642E611CCCE5F13263870B35EDC6F89B89DBF8B414CE25
-          3E8C23B92CBECBC8269E2F52C4FA3BD29497538AE87F0AD08EE4CD2DAD2D2D3D
-          5D8DA9E949A99B939F7DB6217B73436B5FFD7B9D53BF25218F92DF46B5BB6C30
-          542718E01A8C67E334E751165008428A1F6E075EFE1A05D03F23A45282C07801
-          BA711621C3F86646AE8C90C7D22975B94251B8B3505D0A2B9FFC6C4A434B578B
-          F7E041AFD7E3158B1BBA5A1AB61D0A0CF84F959ACDE063286A75BB389783E7F7
-          39AD89B318CF136B1DFC038C330842E6CE937E866153290BC11888045922D067
-          57E81298357C95DA9E199BE3288B5E51B47367FFB9737E5291959C9472E8D0A1
-          B6F6F6AEDEAE9E813E7F5F7F4BCB4055FEF34550C6409AA9BE2758DD2E9B152D
-          CE54B8FFE3CE1A819EE0F83D082388275D913B9F0ADA0969941ECF966B1ED1A9
-          45C08748456C454D51EA32C5C9D173D0469F575079796D80EFEAEAEA81E5EFEF
-          EFEB6FF6DFB1427E8BC6355217B5F95C8B01DD8FF8EEE32B9A281DE61927106B
-          7C6063E3BC8092CE08F41D2E3DFA912EAB64326EE2591919EB71BBD4E0E9E756
-          DA20A9A64ABBBB0F7577750D80F23E7F7F7FBFFFFBEFC11B21BF40DD46BE16A5
-          679AAB6FE3E038C663D228FD0B8CE7086236081F7E5010D51E89BEF256F343FC
-          29512AD0F36E3166093E49C862E9E5151AF4FCD9B302BC5BAC56AB4B7BBB00DE
-          33E017E0E393FFF2BFF87B54A427571AFB10E34FB3228BCBF83E0F967667ED12
-          BE238521E082FC4F31820558C880458897CC08AB2F417AFA73107F1A03350FDF
-          0A5D7D904024C466D88AE28A8A92B3801F3A74B0C1A2D1940480DEDDDB35D03B
-          D0373035F5A7E93FFFD9E982FA9D8225728E452E4B13138D6E77C8B99DB836B1
-          8628BD26253242EEACC444999BDC1E298923D860022109B98D8971128881FA99
-          FC358991FCC43819FBE6C9ABAC9AD81EAB1DA20F2A06FA5958EE7A548E4ABABC
-          8704F5BD3D30FB538191C0E8B493E36B516539AA62CF57AAE308225E2291AC21
-          E25D328288CB7C928893E51204B11DBA5EDB4E104FC9C1FED4E5F0598609321D
-          055D09E00FDB994C22512E8D53E857F9BB1AA97B56E80508594ABBBC2DDEDEC6
-          DE9E9EAEBEDEA9919191A969235B51819CFBAB205AABE599F2CCCCDC5C7856B0
-          B559929DA4262BCBBC53789F29979B764A242A3A53924B1932E5B9990AA82B28
-          934CA250C8F372A95DEA4C89946456E5B82A58F88A4EA07B4B601AB8D2DE86AE
-          06B0B9AE9E2E7FDFD4C897235F7E15E46A8C8815721A05BFA627D57A4A6F6091
-          D66A31A974E5BC95D4D2661D6C14844A5ED8C7D0B0ABA36992813468820444EB
-          F5A45E2F645721D50971FE115DA3D11457688ADF1D6C84CAFE800FE85D3D2D03
-          3DFE9EBE1EBF7F64EACBA9AFBE9AF0F9EA388EA1CA2B5C5686824CC6E8D58C81
-          16766B2AD83F322BCCBFEE256127235CE956366D300893C1441A2813A0A3BB93
-          EA18ED9A8A62AE5868A546B694E38A4B80DE0374B0B94BFE4F803EFD878989F0
-          C484CF66310679232AD7A04A8B5E8F1C08B64D241498B0A1D246376FDA5749ED
-          8A7CA8F5856A20CA874A9814F66F68A5555A1FA72FFD78B362E9B1F3D2635D4B
-          AB6E6A2C3DEA5FFAF1DB4B7762BFFAF80FFCF0F5E801D78FE83FC97D911FE8FF
-          7FEF8CFC0477457E38FEFEB74462DAFF01753F6628794018FB0000000049454E
-          44AE426082
-        }
-      end
-      object txAppName: TLabel
-        Left = 86
-        Height = 17
-        Top = 14
-        Width = 75
-        Caption = 'txAppName'
-        Font.Height = -13
-        Font.Style = [fsBold]
-        ParentColor = False
-        ParentFont = False
-      end
-      object txAuthor: TLabel
-        Left = 86
-        Height = 14
-        Top = 66
-        Width = 198
-        Caption = 'Copyright (c) 2008-2011 by Yury Sidorov'
-        ParentColor = False
-      end
-      object txVersion: TLabel
-        Left = 86
-        Height = 14
-        Top = 38
-        Width = 55
-        Caption = 'Version %s'
-        ParentColor = False
-      end
-      object Bevel1: TBevel
-        Left = 6
-        Height = 7
-        Top = 189
-        Width = 416
-        Anchors = [akLeft, akRight, akBottom]
-        Shape = bsTopLine
-      end
-      object imgDonate: TImage
-        Cursor = crHandPoint
-        Left = 86
-        Height = 23
-        Hint = 'Donate via Plimus'
-        Top = 138
-        Width = 84
-        AutoSize = True
-        OnClick = imgDonateClick
-        ParentShowHint = False
-        Picture.Data = {
-          1754506F727461626C654E6574776F726B477261706869638D06000089504E47
-          0D0A1A0A0000000D49484452000000540000001708020000001AC5FF54000000
-          0674524E53000000FF0000D03E337C000000097048597300000EC300000EC301
-          C76FA8640000000974455874436F6D6D656E740000892A8D0600000618494441
-          54789CE5980B50945514C79949450254B41194050204C940C2341FA91124B301
-          F21095144311C51431137C8538920DA09BF840DE0BAB82A082906048682868A8
-          3CD4149FA8A0800C4E4BBB64CB1BFBD7F9BC7D2C8B3336CD340E3BFFBD73EFB9
-          E79CEFFCEEBDDFDD9955537BAE06E9C774F72B113547BEF5E4ADEEFB07FB8900
-          CBF1F737F21EFCF8AA9CEEA8C991D75D69ACAF6EA8AD81D0C1B0F351EEFF5EF7
-          7F250EBEF5664C4FC5CA6B4BEBEA6AA552A9E20F45674717A45028306C68A8AF
-          389BDBA2ECFF5A8A836F2E8FE06967DDCDC2C6C6C6F6F6F6E77F7FE48AA6E696
-          DFA8DFD5D595945C10278A6C2EDFD133EAF51307FFB478135369FE81E2E26B84
-          DADDFDFCD2831F32CB44474B234A1F1690B1ADADC3D923A224EF303FAAB74256
-          D80AF486AABDF80CD154F7145AE5C779BF3CEA5FA830C9277BEFC28A632B5F35
-          9083AFC9FB82547B2ED46BD9BEBA274DC4592DBD1A51E8987E2530B5E2CBF042
-          87C6E607648F4E2A9C220C85330BEC2DFD91DA5519E66DE7DF253DCDB7107FAD
-          6FA43770E57C9B9744BDAA90CDDA6CF04C1B4D64BE20F17AA5580EFE76C60252
-          F1F7D1131DC39A640A82ACFAB520AC487B5F89C59E9FCDC28B86D7CBAE90BDA4
-          A2DA745A7051D67E16A8A483DBEC511023E72FC130AD372E88DD21FF799693C6
-          8D84EC270912836D11C58C686144C7DB716CDE5E27CA19E63F99FC372F99C0A2
-          B4DF1C889CC81CB29473E66776B3353E1AE6D057911C7CF9415752F47EB19593
-          E8C7F3F7B813DE213F75C721B95C0D3A53F55967572BD9737EBAFDDEECC83DBB
-          E359A092D62DB40C983F8280B13310B69D86A8D2CF6DACB9E150744E47BD0D65
-          861B62A5E6DA192F713623235A18D1D9B5460FF6E311F668BD3F1D46FEC84C51
-          5847B49416A70CCE0B1C4C606499F1500CA382A6AA2C92832F8A7324854466D9
-          F94A1605E7C89A5B5FF04B6BA492474D291D9DCD2F2E82EE801D05B64B2521A2
-          4C16A824E15401A3C50B1FBB711A8A60F0E897494C950E05CEADA6C600DA46BE
-          C0ECFA9121C094ECA0C514DF829CC8CC7FD720ACCE746B5D954572F079BB1D48
-          DBA3B25D02B39C8372228F7027BCF72735FFB6F3FA1CD7A0ACD0A8132C504926
-          A3B5090FCB6F65AA931166C78787589F01A00F7EF676305ABE1D39592CED3CF2
-          333776BE10EE32832B006B3152474365911CFCB1707B52547C925BF0495F51B1
-          7BE8E94BB71A95B0DB3BBA52CEDC9B137ADA475404B7FDC94758A092B0DB5413
-          181C3F34F0128E619038B4B43928CE689416F344F5A898F98084FA303260D0B2
-          4584CF38631D82478B3E9BE28B0A505924072F0EB1231D8E0FF5D89EBF22B6CC
-          27EA5280B842F6AC8D91CB9EB56F3B76C373D705BF98CB7098F3CDA9ECF46816
-          C8D77A6F1B76DB81D965A631FF34F28F00A618301F122BC2160BDB4E84582C03
-          5D2D7695E0111AEADC6B02C24F3E30600F8527BDF0C869FBBEFEB7ABA6A8AC93
-          83FF2ED09E14B7DD2B30F1DC92B8B28094CAC5095713CED63078E9EFADAB0FDD
-          5821B9BEFA50A54F7CD957094512D13216C897ABAD392B910E3923479F6D35DD
-          737438E957806DA3A940878E3DEC83D507901D4990965D0AC8C35E07E264F074
-          ADC08215F4148E535924C4C16FF59FC5949E1AEF1B57E29F7E676D66955FDA9D
-          F24772C67FB95AEE97761753BE0917530FC5F2A3F8B2B618CD6E3BA51338D152
-          60345A87BDA8FC5B4D7DD03FDBC87CD0A2DFFBB6C392E9BEA5CD3FE7F0C450E9
-          BEA4F0BEEAE4E0D7FA0A99D62D778A4F495B9B766DCDF1FB6B4E3CDE925F2B6F
-          E964FCC9179FF8A75C8D3E900A377E145F536CC6B01F1B12DD46E3DF315C3C77
-          86E3C7D6A812AB03006C26ED3FA6047AC3C919435323EEA70EBB47FE18020C2D
-          168212E22988420779202CDF246B13C4922732B3F0BEEAE4E0972D72E66BF9E7
-          B3A313C43B732B3766DF5D95519550D2D0D2DAD6A250C865B2C78FEB139392E0
-          A014C297D7DC5913C69B8FD21DC184A1BBD34CE6E0229C6E662218AE33444B53
-          C3C8404F68371946BB1913C8191D5860A73EA6683868E000B49616C694104FA1
-          07210F347DB215DF139959785FE2E0177ABAF5D6860D81A298E4C4DC1271C1F5
-          BBF71E56DEF8E5487ACA96CD412A9D5F4771F0EE1E1EFD501CBCCDA6932EEEF3
-          FA9580FC173CFD87D7AFF83972FA03B3DFFE7BFB27D75B4E5BC0DB2002000000
-          0049454E44AE426082
-        }
-        ShowHint = True
-        Transparent = True
-      end
-      object txHomePage: TLabel
-        Cursor = crHandPoint
-        Left = 86
-        Height = 14
-        Top = 86
-        Width = 242
-        Caption = 'http://code.google.com/p/transmisson-remote-gui'
-        Font.Color = clBlue
-        Font.Style = [fsUnderline]
-        ParentColor = False
-        ParentFont = False
-        OnClick = txHomePageClick
-      end
-      object txDonate: TLabel
-        Left = 86
-        Height = 14
-        Top = 118
-        Width = 195
-        Caption = 'Donate to support further development:'
-        ParentColor = False
-      end
-    end
-    object tabLicense: TTabSheet
-      Caption = 'License'
-      ClientHeight = 273
-      ClientWidth = 427
-      object edLicense: TMemo
-        Left = 4
-        Height = 265
-        Top = 4
-        Width = 419
-        Align = alClient
-        BorderSpacing.Around = 4
-        Lines.Strings = (
-          #9#9'    GNU GENERAL PUBLIC LICENSE'
-          #9#9'       Version 2, June 1991'
-          ''
-          ' Copyright (C) 1989, 1991 Free Software Foundation, Inc.,'
-          ' 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA'
-          ' Everyone is permitted to copy and distribute verbatim copies'
-          ' of this license document, but changing it is not allowed.'
-          ''
-          #9#9#9'    Preamble'
-          ''
-          '  The licenses for most software are designed to take away your'
-          'freedom to share and change it.  By contrast, the GNU General Public'
-          'License is intended to guarantee your freedom to share and change free'
-          'software--to make sure the software is free for all its users.  This'
-          'General Public License applies to most of the Free Software'
-          'Foundation''s software and to any other program whose authors commit to'
-          'using it.  (Some other Free Software Foundation software is covered by'
-          'the GNU Lesser General Public License instead.)  You can apply it to'
-          'your programs, too.'
-          ''
-          '  When we speak of free software, we are referring to freedom, not'
-          'price.  Our General Public Licenses are designed to make sure that you'
-          'have the freedom to distribute copies of free software (and charge for'
-          'this service if you wish), that you receive source code or can get it'
-          'if you want it, that you can change the software or use pieces of it'
-          'in new free programs; and that you know you can do these things.'
-          ''
-          '  To protect your rights, we need to make restrictions that forbid'
-          'anyone to deny you these rights or to ask you to surrender the rights.'
-          'These restrictions translate to certain responsibilities for you if you'
-          'distribute copies of the software, or if you modify it.'
-          ''
-          '  For example, if you distribute copies of such a program, whether'
-          'gratis or for a fee, you must give the recipients all the rights that'
-          'you have.  You must make sure that they, too, receive or can get the'
-          'source code.  And you must show them these terms so they know their'
-          'rights.'
-          ''
-          '  We protect your rights with two steps: (1) copyright the software, and'
-          '(2) offer you this license which gives you legal permission to copy,'
-          'distribute and/or modify the software.'
-          ''
-          '  Also, for each author''s protection and ours, we want to make certain'
-          'that everyone understands that there is no warranty for this free'
-          'software.  If the software is modified by someone else and passed on, we'
-          'want its recipients to know that what they have is not the original, so'
-          'that any problems introduced by others will not reflect on the original'
-          'authors'' reputations.'
-          ''
-          '  Finally, any free program is threatened constantly by software'
-          'patents.  We wish to avoid the danger that redistributors of a free'
-          'program will individually obtain patent licenses, in effect making the'
-          'program proprietary.  To prevent this, we have made it clear that any'
-          'patent must be licensed for everyone''s free use or not licensed at all.'
-          ''
-          '  The precise terms and conditions for copying, distribution and'
-          'modification follow.'
-          ''
-          #9#9'    GNU GENERAL PUBLIC LICENSE'
-          '   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION'
-          ''
-          '  0. This License applies to any program or other work which contains'
-          'a notice placed by the copyright holder saying it may be distributed'
-          'under the terms of this General Public License.  The "Program", below,'
-          'refers to any such program or work, and a "work based on the Program"'
-          'means either the Program or any derivative work under copyright law:'
-          'that is to say, a work containing the Program or a portion of it,'
-          'either verbatim or with modifications and/or translated into another'
-          'language.  (Hereinafter, translation is included without limitation in'
-          'the term "modification".)  Each licensee is addressed as "you".'
-          ''
-          'Activities other than copying, distribution and modification are not'
-          'covered by this License; they are outside its scope.  The act of'
-          'running the Program is not restricted, and the output from the Program'
-          'is covered only if its contents constitute a work based on the'
-          'Program (independent of having been made by running the Program).'
-          'Whether that is true depends on what the Program does.'
-          ''
-          '  1. You may copy and distribute verbatim copies of the Program''s'
-          'source code as you receive it, in any medium, provided that you'
-          'conspicuously and appropriately publish on each copy an appropriate'
-          'copyright notice and disclaimer of warranty; keep intact all the'
-          'notices that refer to this License and to the absence of any warranty;'
-          'and give any other recipients of the Program a copy of this License'
-          'along with the Program.'
-          ''
-          'You may charge a fee for the physical act of transferring a copy, and'
-          'you may at your option offer warranty protection in exchange for a fee.'
-          ''
-          '  2. You may modify your copy or copies of the Program or any portion'
-          'of it, thus forming a work based on the Program, and copy and'
-          'distribute such modifications or work under the terms of Section 1'
-          'above, provided that you also meet all of these conditions:'
-          ''
-          '    a) You must cause the modified files to carry prominent notices'
-          '    stating that you changed the files and the date of any change.'
-          ''
-          '    b) You must cause any work that you distribute or publish, that in'
-          '    whole or in part contains or is derived from the Program or any'
-          '    part thereof, to be licensed as a whole at no charge to all third'
-          '    parties under the terms of this License.'
-          ''
-          '    c) If the modified program normally reads commands interactively'
-          '    when run, you must cause it, when started running for such'
-          '    interactive use in the most ordinary way, to print or display an'
-          '    announcement including an appropriate copyright notice and a'
-          '    notice that there is no warranty (or else, saying that you provide'
-          '    a warranty) and that users may redistribute the program under'
-          '    these conditions, and telling the user how to view a copy of this'
-          '    License.  (Exception: if the Program itself is interactive but'
-          '    does not normally print such an announcement, your work based on'
-          '    the Program is not required to print an announcement.)'
-          ''
-          'These requirements apply to the modified work as a whole.  If'
-          'identifiable sections of that work are not derived from the Program,'
-          'and can be reasonably considered independent and separate works in'
-          'themselves, then this License, and its terms, do not apply to those'
-          'sections when you distribute them as separate works.  But when you'
-          'distribute the same sections as part of a whole which is a work based'
-          'on the Program, the distribution of the whole must be on the terms of'
-          'this License, whose permissions for other licensees extend to the'
-          'entire whole, and thus to each and every part regardless of who wrote it.'
-          ''
-          'Thus, it is not the intent of this section to claim rights or contest'
-          'your rights to work written entirely by you; rather, the intent is to'
-          'exercise the right to control the distribution of derivative or'
-          'collective works based on the Program.'
-          ''
-          'In addition, mere aggregation of another work not based on the Program'
-          'with the Program (or with a work based on the Program) on a volume of'
-          'a storage or distribution medium does not bring the other work under'
-          'the scope of this License.'
-          ''
-          '  3. You may copy and distribute the Program (or a work based on it,'
-          'under Section 2) in object code or executable form under the terms of'
-          'Sections 1 and 2 above provided that you also do one of the following:'
-          ''
-          '    a) Accompany it with the complete corresponding machine-readable'
-          '    source code, which must be distributed under the terms of Sections'
-          '    1 and 2 above on a medium customarily used for software interchange; or,'
-          ''
-          '    b) Accompany it with a written offer, valid for at least three'
-          '    years, to give any third party, for a charge no more than your'
-          '    cost of physically performing source distribution, a complete'
-          '    machine-readable copy of the corresponding source code, to be'
-          '    distributed under the terms of Sections 1 and 2 above on a medium'
-          '    customarily used for software interchange; or,'
-          ''
-          '    c) Accompany it with the information you received as to the offer'
-          '    to distribute corresponding source code.  (This alternative is'
-          '    allowed only for noncommercial distribution and only if you'
-          '    received the program in object code or executable form with such'
-          '    an offer, in accord with Subsection b above.)'
-          ''
-          'The source code for a work means the preferred form of the work for'
-          'making modifications to it.  For an executable work, complete source'
-          'code means all the source code for all modules it contains, plus any'
-          'associated interface definition files, plus the scripts used to'
-          'control compilation and installation of the executable.  However, as a'
-          'special exception, the source code distributed need not include'
-          'anything that is normally distributed (in either source or binary'
-          'form) with the major components (compiler, kernel, and so on) of the'
-          'operating system on which the executable runs, unless that component'
-          'itself accompanies the executable.'
-          ''
-          'If distribution of executable or object code is made by offering'
-          'access to copy from a designated place, then offering equivalent'
-          'access to copy the source code from the same place counts as'
-          'distribution of the source code, even though third parties are not'
-          'compelled to copy the source along with the object code.'
-          ''
-          '  4. You may not copy, modify, sublicense, or distribute the Program'
-          'except as expressly provided under this License.  Any attempt'
-          'otherwise to copy, modify, sublicense or distribute the Program is'
-          'void, and will automatically terminate your rights under this License.'
-          'However, parties who have received copies, or rights, from you under'
-          'this License will not have their licenses terminated so long as such'
-          'parties remain in full compliance.'
-          ''
-          '  5. You are not required to accept this License, since you have not'
-          'signed it.  However, nothing else grants you permission to modify or'
-          'distribute the Program or its derivative works.  These actions are'
-          'prohibited by law if you do not accept this License.  Therefore, by'
-          'modifying or distributing the Program (or any work based on the'
-          'Program), you indicate your acceptance of this License to do so, and'
-          'all its terms and conditions for copying, distributing or modifying'
-          'the Program or works based on it.'
-          ''
-          '  6. Each time you redistribute the Program (or any work based on the'
-          'Program), the recipient automatically receives a license from the'
-          'original licensor to copy, distribute or modify the Program subject to'
-          'these terms and conditions.  You may not impose any further'
-          'restrictions on the recipients'' exercise of the rights granted herein.'
-          'You are not responsible for enforcing compliance by third parties to'
-          'this License.'
-          ''
-          '  7. If, as a consequence of a court judgment or allegation of patent'
-          'infringement or for any other reason (not limited to patent issues),'
-          'conditions are imposed on you (whether by court order, agreement or'
-          'otherwise) that contradict the conditions of this License, they do not'
-          'excuse you from the conditions of this License.  If you cannot'
-          'distribute so as to satisfy simultaneously your obligations under this'
-          'License and any other pertinent obligations, then as a consequence you'
-          'may not distribute the Program at all.  For example, if a patent'
-          'license would not permit royalty-free redistribution of the Program by'
-          'all those who receive copies directly or indirectly through you, then'
-          'the only way you could satisfy both it and this License would be to'
-          'refrain entirely from distribution of the Program.'
-          ''
-          'If any portion of this section is held invalid or unenforceable under'
-          'any particular circumstance, the balance of the section is intended to'
-          'apply and the section as a whole is intended to apply in other'
-          'circumstances.'
-          ''
-          'It is not the purpose of this section to induce you to infringe any'
-          'patents or other property right claims or to contest validity of any'
-          'such claims; this section has the sole purpose of protecting the'
-          'integrity of the free software distribution system, which is'
-          'implemented by public license practices.  Many people have made'
-          'generous contributions to the wide range of software distributed'
-          'through that system in reliance on consistent application of that'
-          'system; it is up to the author/donor to decide if he or she is willing'
-          'to distribute software through any other system and a licensee cannot'
-          'impose that choice.'
-          ''
-          'This section is intended to make thoroughly clear what is believed to'
-          'be a consequence of the rest of this License.'
-          ''
-          '  8. If the distribution and/or use of the Program is restricted in'
-          'certain countries either by patents or by copyrighted interfaces, the'
-          'original copyright holder who places the Program under this License'
-          'may add an explicit geographical distribution limitation excluding'
-          'those countries, so that distribution is permitted only in or among'
-          'countries not thus excluded.  In such case, this License incorporates'
-          'the limitation as if written in the body of this License.'
-          ''
-          '  9. The Free Software Foundation may publish revised and/or new versions'
-          'of the General Public License from time to time.  Such new versions will'
-          'be similar in spirit to the present version, but may differ in detail to'
-          'address new problems or concerns.'
-          ''
-          'Each version is given a distinguishing version number.  If the Program'
-          'specifies a version number of this License which applies to it and "any'
-          'later version", you have the option of following the terms and conditions'
-          'either of that version or of any later version published by the Free'
-          'Software Foundation.  If the Program does not specify a version number of'
-          'this License, you may choose any version ever published by the Free Software'
-          'Foundation.'
-          ''
-          '  10. If you wish to incorporate parts of the Program into other free'
-          'programs whose distribution conditions are different, write to the author'
-          'to ask for permission.  For software which is copyrighted by the Free'
-          'Software Foundation, write to the Free Software Foundation; we sometimes'
-          'make exceptions for this.  Our decision will be guided by the two goals'
-          'of preserving the free status of all derivatives of our free software and'
-          'of promoting the sharing and reuse of software generally.'
-          ''
-          #9#9#9'    NO WARRANTY'
-          ''
-          '  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY'
-          'FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN'
-          'OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES'
-          'PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED'
-          'OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF'
-          'MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS'
-          'TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE'
-          'PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,'
-          'REPAIR OR CORRECTION.'
-          ''
-          '  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING'
-          'WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR'
-          'REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,'
-          'INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING'
-          'OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED'
-          'TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY'
-          'YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER'
-          'PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE'
-          'POSSIBILITY OF SUCH DAMAGES.'
-          ''
-          #9#9'     END OF TERMS AND CONDITIONS'
-          ''
-          #9'    How to Apply These Terms to Your New Programs'
-          ''
-          '  If you develop a new program, and you want it to be of the greatest'
-          'possible use to the public, the best way to achieve this is to make it'
-          'free software which everyone can redistribute and change under these terms.'
-          ''
-          '  To do so, attach the following notices to the program.  It is safest'
-          'to attach them to the start of each source file to most effectively'
-          'convey the exclusion of warranty; and each file should have at least'
-          'the "copyright" line and a pointer to where the full notice is found.'
-          ''
-          '    <one line to give the program''s name and a brief idea of what it does.>'
-          '    Copyright (C) <year>  <name of author>'
-          ''
-          '    This program is free software; you can redistribute it and/or modify'
-          '    it under the terms of the GNU General Public License as published by'
-          '    the Free Software Foundation; either version 2 of the License, or'
-          '    (at your option) any later version.'
-          ''
-          '    This program is distributed in the hope that it will be useful,'
-          '    but WITHOUT ANY WARRANTY; without even the implied warranty of'
-          '    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the'
-          '    GNU General Public License for more details.'
-          ''
-          '    You should have received a copy of the GNU General Public License along'
-          '    with this program; if not, write to the Free Software Foundation, Inc.,'
-          '    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.'
-          ''
-          'Also add information on how to contact you by electronic and paper mail.'
-          ''
-          'If the program is interactive, make it output a short notice like this'
-          'when it starts in an interactive mode:'
-          ''
-          '    Gnomovision version 69, Copyright (C) year name of author'
-          '    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w''.'
-          '    This is free software, and you are welcome to redistribute it'
-          '    under certain conditions; type `show c'' for details.'
-          ''
-          'The hypothetical commands `show w'' and `show c'' should show the appropriate'
-          'parts of the General Public License.  Of course, the commands you use may'
-          'be called something other than `show w'' and `show c''; they could even be'
-          'mouse-clicks or menu items--whatever suits your program.'
-          ''
-          'You should also get your employer (if you work as a programmer) or your'
-          'school, if any, to sign a "copyright disclaimer" for the program, if'
-          'necessary.  Here is a sample; alter the names:'
-          ''
-          '  Yoyodyne, Inc., hereby disclaims all copyright interest in the program'
-          '  `Gnomovision'' (which makes passes at compilers) written by James Hacker.'
-          ''
-          '  <signature of Ty Coon>, 1 April 1989'
-          '  Ty Coon, President of Vice'
-          ''
-          'This General Public License does not permit incorporating your program into'
-          'proprietary programs.  If your program is a subroutine library, you may'
-          'consider it more useful to permit linking proprietary applications with the'
-          'library.  If this is what you want to do, use the GNU Lesser General'
-          'Public License instead of this License.'
-        )
-        ReadOnly = True
-        ScrollBars = ssBoth
-        TabOrder = 0
-        WordWrap = False
-      end
-    end
-  end
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 26
-    Top = 315
-    Width = 435
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 1
-    Spacing = 8
-    ShowButtons = [pbOK]
-    ShowBevel = False
-  end
-end
+object AboutForm: TAboutForm
+  Left = 417
+  Height = 349
+  Top = 185
+  Width = 451
+  HorzScrollBar.Page = 423
+  VertScrollBar.Page = 316
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  BorderWidth = 8
+  Caption = 'About'
+  ClientHeight = 349
+  ClientWidth = 451
+  Constraints.MinHeight = 330
+  Constraints.MinWidth = 350
+  OnCreate = FormCreate
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object Page: TPageControl
+    Left = 8
+    Height = 299
+    Top = 8
+    Width = 435
+    ActivePage = tabAbout
+    Align = alClient
+    TabIndex = 0
+    TabOrder = 0
+    object tabAbout: TTabSheet
+      Caption = 'About'
+      ClientHeight = 273
+      ClientWidth = 427
+      object imgTransmission: TImage
+        Left = 10
+        Height = 48
+        Top = 14
+        Width = 48
+        AutoSize = True
+        Picture.Data = {
+          1754506F727461626C654E6574776F726B477261706869637D0B000089504E47
+          0D0A1A0A0000000D49484452000000300000003008060000005702F987000000
+          0473424954080808087C086488000000097048597300000DD700000DD7014228
+          9B780000001974455874536F667477617265007777772E696E6B73636170652E
+          6F72679BEE3C1A00000AFA494441546881D599EB6F5CC775C07F6766F6FD2497
+          942891122D8512E9C88AAD872D288E51C44E1CA44DBE0432ADA04D931645D104
+          4180C4823F150554D4FDE0A62860C429907FA0962A1445BE2406DAD46E6238AA
+          CBC4B2AA476C29922D4B862C71C97D2FF73E4E3FEC92E26B9794642BC80148DE
+          CB7BE7CCF9CD9C39E7CC5C51557E9FC5FCAE0DB85BF9BD07701FB5C2EF7FFFF9
+          3FC384CF01A9C5FF57A421C8DF1FF9DEB32F7C94FDC97AD6C08B2207813FB4F0
+          30F0C900362BD895DA84C67347D9F3C823E4725910E958AF54AA55A67E7992F8
+          DFFC2DE2792B9B42E0E00381F31E4C05F0F27754FFEBAE01FE59E4B9F4D6ADDF
+          DBF5F8E3B1DCD6AD1211E93A6D01702C1DE3F057FF18CF6B31AF5B448844A2FC
+          DBBF1EE38F4A75125DFAF4014F95F2D5ABFA9B575E69CC5CBCF82FDF54FD8B5E
+          F6ADE942013CFBE4638F39999AC23F760C82A08736871CFD6B32E92CBEEF2D7B
+          E43061082FBC00D56A57639CB5A4474765CBA38F264F5CBAF4273F1279E62F55
+          4B770C00B8607696DAE9D36BBE188461E7AF8F1FF84B9E891114A5EE7984AD56
+          6F45E7CF931C19C14622A137379700EE0A20BC78F1A2F1F379FC52097AB85C08
+          28100401BEBF14C0884115AE00915EBD896053296257AFD26AB56C0B7AD2AE09
+          60E047672F5CF85A261E4FB96C1647F7D8ABAEAD2EF00382650081B1A8088D6C
+          9696595D83021EE00701B50B176AA2FA1FDF552DDE15C0B754BFF903919FCC54
+          AB87041E0C61BB408CF680AF06100BC260850BD9D0A1AA7C502EB7A45259318D
+          0A46C013B824703A807FFFB6EAB1B5EC5B571EF8B6EA8F811FCFDFFF5024DD5A
+          A5AD373E1E1323578320B0CB5DC8B9002291E6DC17BFF8A03D7EFCC3E56D5B10
+          3CAB5A598F3DB70DB05CBEA5BA6A18397AF4683C85ACBA0682C047510DF7EF2F
+          3F73ECD8EC9DF4BB9A7CE499183A8B38580E10B49DFC23968F09C05F31037EAF
+          FC7117F2F1CDC00A17FA1D004C1E3E6480AF1963BEA3AA636B291311F6EDDB6B
+          BB018461903875FAD4DB4F7FF5A99ECE24224D557D5E555F3CFED289E61D0300
+          4FC762B11747464652996C16992FCED680F0431F3F585A4A04818F18C3AE071E
+          C82C5F0C8BD5AA42B3D1C85E79FFFDA3B56AEDC8E4E14363C75F3A51BB230063
+          CCF3DBB76D4F45A211EAF51A61B822F4AF90BE7CBEAB0B69A8D4AA5542EDAE47
+          4448C4E34C4C4CA4DE7EFB6DA9942BDF05FEEEB601260F1FEA8B44221B53E914
+          33B333A82AA5D912E57209CFF3576D2322ECDFBF8F300857F87C1006A82A972E
+          5DC25BA59C06C8A4D3A4D269C2304415B66CD9923C7BE6EC913B0200B6259289
+          A61FF8118072B94C241AE1C92F7C1E63572F059A8D2633C5AE751761A87CFAD1
+          83EDBDC28A6721B3A559DE383985751611A150282022C9C9C387FA8FBF7462D5
+          92A217C0F644228948BB142E972A3CF5F457E8EBCB776D70E1E2657A2D1311B0
+          36CAD6D12D5DDE1825E2229C7AF334E9741A630CF178BC51AFD77702BFBC6D80
+          54229900692FCCC0636464B8E7429E9D29F750D79672B5423A9DEEFA7CD3A621
+          A6DEF835D6B6377CA954CAD6EBF51DB70D608CF964329572460C61A82493A935
+          A3D0952B57C8673354AA55664BB75C4915442CF5468399D2EA9B9979E92FF4D3
+          683670D62108E9743A71F3E6CD896EEFF7029848A552F881471004E47259CC7C
+          19ACF381F056385485F7DEBF861D1DA154AE303D3DB3B4231BA15E6B70E3C39B
+          3D01DAB3A36DCDA2A4D36963ACD973DB0022725F2291A05A0BF0FD807C5F1E67
+          DD32B359D8E02850AFD6A9D6EA944B158ACB0062D138956A8D7ABDDE732050C8
+          E573789E87AA2193C902327E5B0093870F99783C5E8846A3B8A625F03D060706
+          702E72ABC3257D2AD54A95582C42BD56A7542E335D9CE9F0B55F4C2653546B35
+          C418023F24168B761D88814201AFD5C208A4D319C22018EE06D06D7335128BC5
+          3D630CD639020DE9EFEFC73A87B30E672338E770CE75FE17617A7A864C264DA9
+          5C69CFC0CC2C37A78B4C176798992D51AE5429976B64D249664B25ACEBE8B09D
+          1F1769EB728EA14D9B68B53C10211E8FE39C0B270F1FDABCEE1900B6A752294F
+          4412CE5A3CCFA3D05F5870A15B83766B0C67674B583154AA352EBFFB1E85FE81
+          794F46102EBF778552A542A190A754AEB275ABEBCCE232275265707090F3E7CE
+          E33A912893C978C5627127706DBD00DB72B9AC13C05ACB5CA349A1E342F3EEB3
+          68F902509C2EA21A6080D367CE608C69472D6D838661482A9940439F6AA5B264
+          3074994B0E6D1CA2D198C35A8B00F97C9F2B168B3B8057D605202263996C2E81
+          08C65AEAF53A8383838B3AD54523D6FE552AB737599F7A601CEB1CCB03AE02BE
+          E7512A9529CD968844220B80A12ABAA83EDAB871884AA58C750E15C8E7F30963
+          CCAED56C5D15C039B72B9BC988088441403C16271E8B2F3166A06F70219AF881
+          8FD7F2A8D56AB49A73744DC7AA8815E69A0D86068717DA8761C8F59B1F201DDD
+          A9B4239948E2792D0C2972B9AC586B1F5C37803166473A93C6F77D5A2D8F7C5F
+          DF82FBA8B63B7CF5E7AF3035F5064110748E0E1D20A433DDB32CC0CCEC2CBE1F
+          F08FFFF40F80128D46D9B3670F1313F7638C5998DB810D051A8D26B99C92CFF7
+          01EC583780B5764B221EA7D168D06A35290C166EC5EEF673F6EEDDCBD8D8182F
+          BFFC53AE5DBBC6FFFEEA4D6AB53A73ADD52BCD7969369BFCE69D0B4CEC1C636C
+          6C07070F1E241E6FCFEEA235CDE64D2354AB158C08B96C16DFF7374E1E3E648F
+          BF74624999BB0260F2F0A16426934944A3315A2D8F66738E8D1B36AE6A4C369B
+          E5A9A726397FEE1C89449C772E5EE2DCF977BAEE1B360C16F883471E65686888
+          271E7F82FE42A12BE8F0F0664E9D3A853116E7222493C9B95AAD360AFCB62700
+          B02D9BCB3545246D9DA5E5791406BA77043071FFFD6C1D1DE5673FFB4FB68C0C
+          F3DAEB6F7073FA56F59B49A738F0F05E86360CF0D9CF3EC17DDBB6F5D407B071
+          6813F5D75FC73A0B06FAFBFA835AADB6633D00DBF3B99C1A6370D631D798A3D0
+          DF1B0020994CF2A52F7D99772F5F26994870F1D265DE3C759607768DF389EDA3
+          3CBCFF111E7AE8A1852A732D19DAB88172A5DC2EEA5418181C885D79FFCA4EE0
+          E5B500B6F5F7F74755156B2D2DBF85ACB35380D1FBEEE34FBFFE75FEFBD55719
+          DD32CCF6ED9FE0339F798C6432B96E1D00896412AFE5B5810506060662CEB9DD
+          CBDF5B524A8888B1D6EEEACBF7C58C3138E7D834B489D75EFB05737373EBEE3C
+          1A89F2B9CF7D9E6F7CE3CF79F2C92FDCB6F1AACAFF9C3CC9E0E0065CE7C0B82F
+          DF8FB5F6415956D32FCC8088C8EEDDBB73C6D8BDF32710D65AC6C77772F2E449
+          8E1C7986443C8112A22AA08A8AB2907F3AF7289D0D407B0BB958C23044DA4D3B
+          D7C2F22F44F3597B707003FBF73FDCCEC662C8F7F51184E1D8D881031911A968
+          A7E102C0AE5DBB22128B0DAB865BC25029168B0BCA77EFFE14E3E313EDE34215
+          44B49DAC165F03CC5F7632EC7CA69D4FCB8BEF975FCF7348E77E3E6C4F4F4F63
+          AD259BCD12F87E3E1B8B8EECDBB7EF1DDA27F1B700B2D9ACAD05415F1886914A
+          A5CCCC4C1B60E7CE7152C9251F1CEF99349B4DCE9D3F8BB36EE17B4324D4C2F5
+          4CE6B72B000054D5A82AE55289EB1F5E4755B9FEE1F57B6FF93271CEB53F51A9
+          12FABEC3DD327BB5FD40D8F25A44A3B17B67E11AD26B2FBE02C0F383B76EDCBC
+          A1F97C7EDD31FBE31411219D4E53ABB54F17435D9AE617E622168B693D0C8372
+          A5FAD3772FBFFBE94422111FDE3CBC224ADC7311A1D59AE3C2850BA8EA294FCC
+          92C3DE05801B376E84D174BA7863A634158D447E70E6FFCEFC95B53662BA7C90
+          BB57A2AAF8BE6F55F5F27471F68746B558A854160A3A59F4355DC60E1CC8E49D
+          DB14FA7E9F15494463D1DEB5F13D923008BC7A1016250C67C246E3DA5B6FBD55
+          9FCF03FF0F6EF4D8137C7F96BD0000000049454E44AE426082
+        }
+      end
+      object imgSynapse: TImage
+        Cursor = crHandPoint
+        Left = 154
+        Height = 42
+        Top = 217
+        Width = 102
+        Anchors = [akLeft, akBottom]
+        AutoSize = True
+        OnClick = imgSynapseClick
+        Picture.Data = {
+          1754506F727461626C654E6574776F726B477261706869633E10000089504E47
+          0D0A1A0A0000000D49484452000000660000002A0803000000769BDE47000003
+          00504C5445B0191AB73639BE181EB51F29D058609A6366F8E7E8D16770DA7E85
+          C7787FFAEDEEBA2233BE3849DA8994F8E8EAC02840CE495EDB7182D1717FD47E
+          8CE29BA6E5A3ADF3D9DDF4DBDFF8DFE3B91C38CF204082172B5B101DAA1F3972
+          1626D12B4951141FD53C58AC3148C13850C14A6059232DE08D9BE8B4BDEFC7CE
+          F1CDD3F1D0D6BE2040812336581824CB5269D15870803E4BD2677CE1758BCF6C
+          80D57386D87689D9798CD07486DE92A2E6A8B5ECBCC5EDC3CBF2D3D9F6DDE2F4
+          DCE1F6E2E6F7E4E8CF284FC0304F43121D662131842D41AB3C55CE5F78D76B82
+          DA8095EFC8D1F5DFE4C018405B1224C0284FAB2446581D2CC0405ECB5674F3D6
+          DDF6DAE1F8E0E6811835C73E63D5758EAB1C46C0204FC32A57D5BFC6E1D1D6DC
+          CAD0560B2B580C423A2C378F38809A4C8CDED6DE5B0E5D8F5790AA82AC98679D
+          B692BBC3B3C5652A6F5D0F726F2F807C418B7D438C7E448D814990844D938650
+          94885396A177ACB08CB9C0A4C7DBCBDFE4D8E7EEE6F04A2056733A837F478F88
+          54978D5B9BAA83B6BA9AC4CCB5D3D8C7DDE2D4E6E9DFECE7DDEA2D093A996AA9
+          C6ABCFD5C1DCD1BDD8DCCBE2DFD0E4E8DCECEBE2EEF3EDF5560E715F107F5F10
+          7D400B556F278C732D8F7936938041998E56A4D9C6E0671C866F288C83469C87
+          4C9FE6DAEBE3D6E99C93B77A6F9E6059933D3975403F8F2B2A6053529AACADCC
+          8285B7F4F5F9BCC4DE6C7FB33F5B9F8B9CC53A548D4D54606C8BB64F77A76392
+          C21F69AE387EB7244D708BB4D774AAD2C1D8EA1F7EBE4698CF5EA0D09BC3DF84
+          BBDFCFE3F0185A8006415E108FCF1F95CF2899D247AADB53B0DF67B6DF92CFED
+          AAD6ECD6ECF7EAF6FC0F90CF0F8EC934A3D9297496BBE1F20087C107648C0C82
+          B419A8E21CA1DA3AB5E73FB0DE5DBDE575C4E3C9E8F5DEF1F90098D214516661
+          B2C317666A8AB6B4056548206249244C3C36614F8BA7876F8C5FB2B499C4C6A9
+          F4E9DAFAF2E8ECDCCBF4DFCEE5C8B5E8B89ED9906ECBA798E2A791C85B37DD98
+          81D8B5ABCC664CD17962BD948AF3DAD4BF4630A7817AAF3421BB3726AF231CB0
+          2B23000000B29299E7000000097048597300000B1200000B1201D2DD7EFC0000
+          000974455874436F6D6D656E740000892A8D0600000CCF49444154789CBD977D
+          5C53F7BDC753488D570A8110509CECAE3DC73C0A478A55C803818C1642309804
+          1573EF6E5C379EAC67C3873C31539290702121E03DCED5BA4B655AEF552FD4AD
+          6AC10758071A0243C0B64E82AC4E3729950407D5B6A968F73D49B46EBD7FEF73
+          7EE7F0E39CD72BEFD7E7FBF0FB9D43F9FA9F22CAD7BF3D1BD2364335C8DA0BF2
+          F5FA7CBEAE5F750F80C6C7C90B8C6E5D6348C73DC7DF79A75137E039DEED1B1C
+          FC4180C94C642526B25E4C6495B1CAB2620BB3625FCC5ACBCCCA4A6096AD95AD
+          892D4B94956D7E2184E9E9E93966AD24A5FBD5C0808FFCF5E3DD1ECF80E7D237
+          BA76E1AD882E5C3BDF01D73FFCE6D4B877F03F92626333166766C8B00C59C162
+          4CB60E46416C4156A20CCBCA285887251664AE2B50AC02CCD9B33D5D5D5DC7AB
+          407555A73C9E0BA73A8E1CFE51C7C8C8C845525761F45FBD7AF5CCFE9FEC0FE9
+          7FAF9EA9D95F73E6A377CF787CDE7F673116A32A0CC390F842A4104B4091421A
+          9291C1484FA431949B55884AA5429197F349CC6057F7C79E8EC315A08E4BE7DF
+          359BCD3BCC35E68BFDFD97FB868727872749751EC50982D8B7BDBC7C3B71E528
+          4CCF4D769E19F179EFC5D2A8D23C145568A44A0D8229E9C54AA418C1103E0AA7
+          0206AAE497AC5A19C678BABB2F8089F397AE9D3A52610EE9DDFEFEFEBEBE61F8
+          FDCECECEA36FE76BF3CBB76FDF9AFFECB3DAF2F2ADE5C4C9D10F4F8F8E4E4DDD
+          BF1F5C88A244A5D0632851D1D1D114500C5DC3877F290F6362A261121D9DFA9D
+          F580E9190408602E749C3AD51181986B8E9C3F730E28E7F090F2EFFC75FA0BAD
+          F65EE0AB2F025F693FD59EBCF5C9CDD3B7A66FDF999D9D7B78672E703F260AA6
+          B3943B73B38185187E319F42DEA40482D1147FCC9630A6274C395551F16A0D10
+          C2A41A7C077E06A24542F6E1DA19AD7626FFAF5F68B76ED5069EFDE2AB1B37EF
+          DCBEF167FF947F7E7E61C11FF5708642F13FA0443DF25328F31CCA739894E27F
+          B430F3687E9632F77974EAA63412D3D515C21C364372CC8FEDE0E471E46867C4
+          CD4CBE76E6CF01ED7682285F1DC80FDCBA7D1BCEE9A94FEFDEFD3CE87F743FF0
+          68E1D3BB9FC3348A169CBB8BD0680FFDF39FCD0583B377030F9E2B797965D84D
+          88028C279030272202272068F7A66E7EA985DC6FD77EA90DDC9ABE39FD97E9A9
+          A94F21520B77FC8160FC02390DFA1F32A23E9F0D2A180FC970069F0BDE093E83
+          864B208CE9200B8D3453118184FD440441DBFAF6CD1970B3AF7CF53DED27B7A7
+          6F4E7D320398F9FBCF2FF867EF3FA22EF81F227CB8D028B39FCD4B19147FF0E1
+          ECBC12B85234755308D31B3663AE78DACC530C480E048D206EDC0E68B5DA7CFF
+          EAAD7F3931357A6B06DC406E9E59F02F0482CF3FF03F084605FD94E0C2CC8374
+          348409DC471FF81F2995A961375DBDE1983D1D3412627E12345CEB87781DBD31
+          35732F10585DDE7973FAE6951BD3531F4F41683E8312B81F202B6DEEB305A8AF
+          C07C8A9281923537F70C150A0355A46EDAF08D9B9D55BA4A9D4EB7FBFFE5946F
+          7D8DD8B7EFF4FB3FD46AB7966F3FF7E1E887C370FAFE343F1F5C88894E4989A1
+          A7502851312951D037291ABAA698EC9BE8187E4C740C9D1EE99B2EB237ABF4B0
+          6E1A40969D91B43C6506C63E58033A27CF410D10A393972F5F1EBE3C79C9D733
+          C7A022F4E574188AE5F0EBA1834EE7F3A143F93051D0151ABEA6248C01371D55
+          D57A83C11652F5B75243900B0DE8282C3AF0E7CA24B9065DBEEAF11D9B63C44B
+          11854623D52C47107A1E9247E72BA49A3CA5869FA754C09CCE47A4E0262D8C39
+          5CA1AB36185CAEA61F1B8D4E5755C48BF909E431A873F23409EB1BEE1F1EEE1F
+          19F76E9BA329A9F1A8944AE52B314C49C5680A25239E8F3130298386295094AF
+          445124D237BDD0FFFAEA6DAEFACA1D2ED32193DBA2D3D535EE36E33FD9B96BD7
+          AE3DBB77BDB1EB8D3DFBDBDE6CDB0F84D3C41BE72F79AE5DEAEBBBFA91CFCB9E
+          5D0C51CBCC4CA015539548C19A02D9DA82445481210C8CB63936333153894995
+          68C9CB640978BBAA2A2AAA0DB61FD875669BC3D160B2189A9AAAAD7BF0D72B2D
+          160B6ED1EB2DFAB72CA47E419C3EF366776F97CFE7F58D5C1DF18D0560534B90
+          315959499B312483C9946527B1B26508A66014B2D664B3629358599B113452D0
+          EF90986D2EBB4357616B68004CA5ABC966D869AED3575BADB8D56A3558C36A24
+          7E71EC1DDFB11EEFE0A0D77BED9AEFAC40989DCDCE662765B35FA46666656733
+          05EC6C015B8621EB8040DE4E623395114C572560AC867A7BAB717715B90DFF54
+          E7AC77D91A718BC1D064256C4D2E9BABF14D97CB656B221AADDE1EEBC5C1B1B1
+          B1C1718FF7C71C8E40C0920905420E1BC966B3D9021953C015B2698CC42CF827
+          A3AC4828142622E1BEB102E648A5C1696AAD755BC822DBB1D3E932D6EBF06A9B
+          CD65C58DCE83CDCD6FB6C1A5D9493435FD9F4D3F393E01F279BCC95C21A70853
+          F1B8221E572310B085498A35225E91205D11CBCC660BD25570BF288B5F12AAB4
+          6AD24DD53697C9515BEB68AA238BCCE5AA77EB71ABABDEA8C39BDDEE43A6B6B6
+          F6F696F676C2E9723A8F4D0E0C0D0D4D0C8E77F9391C9E1A53A9D539A5C90A6E
+          5111974D2F538B789C743AC452C04BC7727272D402456A045307AB99CE666CA8
+          AD6D6D0043B8596F73BB0DB8D3E876EB7093FD504B6B08D3DA42B8C1DAB149DF
+          D0D0F5EB83BE6D222E4F2D5661A54B37E66E5C0EF3527156BC0A53A5FF9B82A4
+          A85F924924B972353DBCDF54EBAA6A2ACC3B2A9D6ED28EA95E8F9B1BC18D11B7
+          BBEDEE2AC2ED6E7038DADE6A6F6F753888B603070E9C1A9F00CAF531EF36112F
+          39676341424E695CDC4684BDB1541217C75D43438BA999023657228F5BB22437
+          2E4ECE7F21D43716081AB966D619203BAD0EB771B7B9AAC96934E12668A23ADC
+          DEDCDED2D2D666B7B7B438A0430FE8C7203143BFFFFD84772E99C713CBD7C992
+          9317C549A8055C39FCF2C665BC423AA6E408D471B94B96C42DCA8DCBE1BFB26A
+          43D84D64B9B4B85B5B6B1D6E2B6E76399BDB2B1D0D871AFE9B701F341D020C64
+          A8A585F865B5EBECD8C4D85018C3E3F2C462D5E264917C91848AA4172D55E7E6
+          262F136562520EBB2857C266B2982FC5C6F25F791C34738D4E67D15B7575F5A4
+          1F176EB6398D767D6B6BAB03C70F1E747F83A976BAC6C606C687AE03E6582C17
+          30CB54096AC02C8355006309E512716EB23003E108B88B72D761EB16A7676682
+          9BB450D0EACC158D7AABC15669B690716BC0712B04CD565B5BEB24C842683FF4
+          1863779E1D1B1C1E0861B631385C91585CB0582D922C92A36BD71626AC65E7E4
+          E42E2B6231386CDE1249014D22E289B891DCE8C9A0C1D2697359F046BB09EC98
+          711DB831EEDD5B6B030CC4EF09A6FDE0C484378439313447130A45C96255815A
+          24962CA38BA0556311D652B95C94880A84BC1C098688A0CA85F492486EEA2068
+          D54DAE7A8BB9D108DD0391AA72C1A2507B62AF1E8756798271102D90FEB09B13
+          0DB154A180AB1663985A2DDF28D788840241E1F232B558BEF4453E60968A551A
+          5E118FCB51840BDA42BAA9B23639DD06B3C56E6F6DADC7F11D3628EFBD27F65A
+          08C2E66AB63FC1405F5E1F1CF65D87A07DC9500A84DCD26519D09E1289842EE4
+          088532BA0C9CC90BE94C0EAFB43403DCF078CCC87E036E6ACCAF5B6DF5F60693
+          C96D72B45A6193B1B90E92181D81DB6C071F635A8909B231C72680728247038C
+          7AE9329E485C9A1B27C84B52177193D93CB524B75495B946A896E4088B4A79EA
+          A5898AF0466081A041726CF5C6860687C9E130FD14307A9B91C4B41144930D92
+          D3D6D6DC6C6F3F741AFA1F3406983B5CC070786209370EDA65D14B2826148978
+          4BD5E22512194665648944F2D24562919C892AC37DD315C298EB6C46B0D36032
+          D4C0BEB9CB6A331E020CEC9A4D24E7C001A88466F7647F2F24A7D707A9891350
+          A5103471EE3A96A4542EF8570C5132391C75B288CB92628A4C4C96942C4ACE29
+          624A11345CD0BDDD21CC0EBC4A076922ADC01660B5391B6AF756137F2778A51E
+          BE3872F1238FAF3729961A2F650B3862498246958E52355404C1A8CFBF9420C5
+          60F79432308C9F08DF36C5D813CCC0C0EB4F5E9AC9F7E6CE4E5C074D04A5D6F4
+          4BFC690AF912303CDCD737E2F11E839700A5345BC011252F56C66B102A3F9E4A
+          A562280329A6C5D3691843C9A066D21568318AA2CA1742B9F1793A8EBC1A7E99
+          7D15C73B2727FB8E1EF9CDE1B7748D3BFFDE0B7C39F50DC3D1FF07F87A62509F
+          93E6A932CAD624C4C723CBA5CAE58A78340FC150BA063EA394344483D2429F51
+          79A832D2370397FACF8DEE796DCFC993A3F07174E54352574EBEF65FE4F1B4DE
+          8647E4B8F8F1C795FF82BE02AF792529FC2D255B52E14C2929494D8159E82C49
+          D992929A9A9A5202972D70A67EF77B80193937FAC107EFBFF7FE074FEB7F7EFE
+          B39FFF83DE0B3F797FF4DDC3CFAE7E79D5A6EF6C82014778FCC33C3C0D69D577
+          577C1F30E73EF8E3EFBEA5FFFCB6224FFEF8DEAF7FBD323F2D6DC5FAF52BD2D2
+          D6AF589FB67EFD860DEB576C580967DA8AB4951BE084A7E4AD0DF0286DC5F7BE
+          4F62FE29FA1B8C064B4CAD4156FE0000000049454E44AE426082
+        }
+      end
+      object imgLazarus: TImage
+        Cursor = crHandPoint
+        Left = 10
+        Height = 57
+        Top = 202
+        Width = 125
+        Anchors = [akLeft, akBottom]
+        AutoSize = True
+        OnClick = imgLazarusClick
+        Picture.Data = {
+          1754506F727461626C654E6574776F726B477261706869630915000089504E47
+          0D0A1A0A0000000D494844520000007D0000003908030000002C97D46D000003
+          00504C5445000000000808080808000810001018080C100810180810210E0E11
+          240E030818291418252921081821292121292129293511024614044523044127
+          11582206552C0867260361310E4B3520573E1A643E0A61401F6F3A096F460C6D
+          441B6F501B162539262D3A1C33532E3C4E294161274072274D7E315079443E44
+          4A515F644B2F665248385478465271555F6F66626E25449026578E315A8C395A
+          8C215A94295A942D5E9431638C3D5E88425A8C465E884D6488526B84546D8964
+          6987637688202DA42E3CB2314AA53744B5394AB5394ABD395A94295A9C25639C
+          315A9C315AA531639431639C3163A5395A9C396394425294425A94396B944267
+          944A63944A6B94526394526B9439639C42639C4A5A9C5A6B944254AA525CAA4A
+          52BD5A63B9396B9C396BA5426B9C426BA54273A54A6B9C4A6BA54A7394527394
+          4A739C526B9C52739C527B9C4A73A95273A55278AA5A6B9C606F965A78996373
+          9C637B946875996B7B946B7B9C5A6BA56273A55E7BA56784A06B7BA56475B960
+          86B16B87AE81310885550A8356187A56377F672D7D6A467A67567D7357916210
+          9068248F71318E724B9E641A9D7731A9752ECF5012776B6B776775776F737476
+          767F77637E796E887B6B96796D7B7B7B737B847B73847B7B8473758E817B8E73
+          7B9C737BA59B853AAC8831908651A88D488E8664888879A2905F9D937ABF8E38
+          E7A51FB8914DCFA14AC39C5EC6A96BD9B567EDC76C7784947E89967384A57788
+          A57384AD7889AA7B8CAD7B94AD898C958484A5868AA98892A999909BA0A29CC1
+          B08EDCC995737BC6768FBB8A94B18A92C7809DB9919FB58E9FBD90A6C99C9FAF
+          A0A0B1A5A2B2ADAEB1A8AABEB7AFBDA2B3CCA1ADD8BDBDADBDBDB5C6BDB5ADBD
+          CEB5B5CEBDBDBDBDBDC6C1C1C1ADC1D6B5C0D3BAC6D6BDC6DEC6CAD2BDCEDEC6
+          CEDEC6D6DECEC6ADD6CEADCECEBDD6CBB7DECEADEBDEADE6DEB9E1DBC5CECED6
+          CED6DAD6D6DEDEDEDEDEE7DEEFE7CEEFE7D6EFEFDEC6D6E7CED6E7CEDEE7D6DE
+          E7D6DEEFDEE2E7DEE7EFE7E7EFE7EFEFE7EFF7EFEFE7EFEFF7EFF7F7F7F7F7F7
+          F7FFFFFFFF7A2CD351000000097048597300000B1200000B1201D2DD7EFC0000
+          000974455874436F6D6D656E740000892A8D060000119A49444154789CE59979
+          7013579EC7BB9C8A43E298C3C6D81890B08E18DF6BB4925528B627934C252A44
+          7A9CB6FC5AA34CA1EA2D958D546B9C561AC9B21205F942BE808A214006E15B46
+          3E485A085BD8D8190D181FE06477769390052AD9D9EC6C42CD5460CA86DA22F5
+          F6D7F22420CFFF933FF6B5A46E3DC9FABCEF7BBFEBB9893B3F6123883BF8276B
+          2704FABFFF44EDB315FA673FD1F1FE8AF6F74FFCFD0FFCA37638FDBDDB9DC7E9
+          3E9F8F638DC858858ACB9186A276EDA234945AAD50EF542814EA9507A5A634A5
+          A51A848C88A2A21F1457186D1684D4A4A28C4488ABB37336CECE2A762A1524C5
+          904AADF251FBEBB52AFA8463159DF7D939A3913396A25254AC81DFAD013CB54B
+          ADDEB50B98A5C5A555CFE7770E8C0E0EF79D44543942545939AAA86139470DA2
+          14652A85DE828CAC8BE743E729555191B2A850A52C2C149885F07CF965E1A250
+          A9821E9556785DADDDE70BF21FD879BBD04083CDF7BEDF1FE80DF4F60E0E8F0E
+          8F8E8C8E06C4E2B6A1E1D1A1517F2952C3002C6C8DADD6E7AAB5B91EE01BCBB7
+          CFA34AE8E242171CEA227A9F52F939769B948FE9D76A6134855A7A192B55AA55
+          DAC3C1F1F087BEF087C17090E76011FA077A07BB07070383C3232343A32343C3
+          8323C30D5B45ED43D0CE4287BFB882636BEDAE50D017E46EE3C40CFC8DA24855
+          A4D0BB2EB84805B3DF4CDDC089B9A49254EA743F8C41AB556915CADB9800FD31
+          F460586891703818B4DB79AEB4C7DB363C34ECF1785B02DDC3EDDDEDDEEEF6C0
+          50BB28FDD0D0E8D05047C7D0E0D0504F1357170CC19FF0C1259C988971FCDB6E
+          E58C9B9F59742BB5F4CC8DDB789D2FE4369D77EBB4FBAE5ED60A2F4A2D3573F9
+          3B4CA8547F33F341C7DEBDBF3EC3736FB2ECBB9B3DDEEEE17323BD1BD3D3BD81
+          EE91D6EE40606878A87D6B602B9C3BB61E6C4B4D3934747870F8C35030028F25
+          BC76021710CBD8FE2018FC5E732FA4BCFA30EF26CEB884BFD12C61F9FE87D5F7
+          EBAA1F9AEF7DA8FCCB5DD9FDBFD50EF497F6BEF5D15BAFDB8C6FDA0A366FF688
+          1B3A02D3D31E51BAA7757878B8B7C373A8ADBBA36D487C7068F0E0C60DE91B9E
+          DED4DD7DF6EC086FE7EB7C403F7D2D9FC8F80E3F9919BFF445DCEDFF913CB841
+          2CE275A7F1C2DA7B98F81CC7B1095770C6BD2519CE7F0A661E0C6F15FD572FBD
+          F5F1EF7EB7F775CE58D2902CEAE8EDED0D0C4D8F8844A20E8083F589368A0E8A
+          B67960D65352D6AFDFB07EC3C64D5B0647797B30C8D72EE1753BA4C596BB98C8
+          7C0E5F7BEA2E7E02CF2500BD042FAC5BC2C45D1CA795DFC2092823036749E05B
+          5A5DAC76FB817FF8C55B1F7FFCD1472F198DD99B5344DD1DED6DDEE1E9D1164F
+          AA07C611E8ED484F49DAE8A96F1B1AEC80716CDD08F84D8383E704170BB1402F
+          09F23CC8546A97679FB97D937870F39945BC76179E5FBB8C891B585AA8BC8133
+          E4EA5C5C2A11B4EB62B5BFC9C95FD8FB16687FD198BF654BF216714B8BC8DB31
+          323D2A16793CED9E96B6807863CA464FBAA7BDC3E349DDB2236DCBA6AD079344
+          5D1C6B3F5317BA8F0B4A821782F771BC4AEBFC346B591AFF5B5C720BE7E72DDF
+          2980CEEAE56F83EE7FBEFFED98BBF0C69D9207385E5746C6D03956FEB317F7EE
+          DDFB8BD7D91D9E1C4D52AAB8C193EEED989EAE1779C4A9629128651B884F49F1
+          B6B77BEAB91A4B99E6BDEEECA7BD7ED26C03FFD43C4948393E1C5E433CA77214
+          67E43E21D7E6C6CB1208A9439A90154FA83519F1127951C6531239298997C511
+          99BB57D16DC5F29FBDF0C20B2FD6946E161F3B93952CEAED181E19189CEED9BA
+          2DD5B3795B527AFAE6D4A4A4ADA9DBBCDE1341DE8A28887059476995C1CA3A90
+          D95A6BB40623BC852419BE5A2DFF47D52BDAC2E714266735CAB5CF045D0E4A5E
+          A4D516C99FD391DACC9D455A1D19EB7110DDDEF8E5CF5F7ADDC61588EB395F38
+          6B8337D03B3A12981EDEB471DBB64DE9499B52B7A6246D02C36F391D8E04ED08
+          C2BB2ADAA832B39946A8BA2EE442B4C1BCCF69D6EE7E45B947AB55EAA86A4B25
+          E98C5C702186D6BEFAAA8AD6D13A9D4EA5D36975742CDDCED9B9031CF726D724
+          EEF3857DE182FAE1C0E8E8F4F4D4860D5B376C488A4BDD26126DDAEAED7B9FE7
+          F9C8958B6778DE4A95912A55998A3430C208CCB45AA963CC66464B6A5F814345
+          3366C64C937A075FC990683F4DD22449EA48E10CA3889D79CE67F7F107EA0E94
+          8A034721F04DF44D0F0686A707A69345395B3666A7656FDE205EBF3E8DB3F310
+          885D179BDE8BCC9C814443AA499A31D12650A30549B4A08DD6A9F68076958E31
+          094229922169D377F715AFD126F23B7C1E06008F58FA1B80877017F67576B702
+          BB3FD0DBDEED09B4B7346E3865F3FDE6CC19AE7E9B78AB27DFCE0B1E56FB9B77
+          0E4F4E86CEB81049AAE0A75424848F3D4A950E905A1807C05570A58375D9A3D2
+          91BB41AD5B1667722F2A1671A29C8C4EC22AED9C6F3C181EF779FE6B76625CC8
+          2BEDA296B4A4A793767076B06A17B7639B28A5C1C70583A120CFE66C3A7C7812
+          26DF652D232165EA548C937EF9E5289DDCAD7D393A0FC28BCEEDDEEF76BB19B7
+          D3CDCAC71E2CCA1671C6D865134953B174A320DD171EF74FFB813E3A3AD2E53F
+          15DE11B731AD049276DDF93A3E47ECF50CF820A7DA5D75C677807E381CE178BE
+          1C26171299CE406BB5A4A01E26552B4C80EE55E1E23BCC8EE199E76EC9FF82E5
+          57F107D22BF8E4183E4093A655749B30EFE393DEA985D9B9C9C0E8F0ECECECC5
+          E4F5C9478D5550493088C91279BC23BCC502999F2B88D20FD7462E462CB48E7C
+          8D56EB143AC640EE56D156D604061DB56DC102F6E393AEE59BD2CBCF407875E3
+          ACED3338310B67C94C86D5DA61EAF99C91AF16262373734DA3D373737305EB93
+          1A781E15530A95B63047DC70681ACA180BEB60DF7967D33B403F1FB9505B0610
+          9232955154F9792BAD2BBF10423A66BFC1049606702825960E5CC31F90F215BA
+          04D6BD0A4E94C9104B879AAA64AAF5BF672722937373A7DBA617E6E7D3D66FC9
+          1E0BFA78BB45A1DCD9E0694C99AAD62B28CA9CBF42AFBDC03B185A986B9A2977
+          F0B535163D49B9CEB066A1190C60D93A9A5EC452193EB9BDE811DD08273D4DC5
+          D28B8B3FCCF14FCD072FCECECDCD5F6B3CF79FD7AFED4849178F878391319E21
+          1539E29EB6052BA2CBCACA0C15D930F547F75A283558978A26294AC3DAEC4623
+          7FDE8A42AC9932805123A79EA60DDC151C275BCED85E09C17DFFFDD9BCDB587A
+          018F4BF4ABD79D2BC8FED39713E1F0E4C4FCFCF5EB931D5F2F5CBF9E93ECF1F6
+          8F8F5D095A74AA5C8FA7E31242269234D1865FFD322BEBF5329560D77B764374
+          45AEC8C550848345416C39459206E40A8518A6C216B93241A89D4FC84DEA2708
+          354A7C26339190C9884413A38FA56735F65F02F8C4ECAC405F10777FFD874BF3
+          A74F741E9B9C8DB8F43A5A9D7AB0FD125569D699188856F4CF5FD50ACE0DD2B5
+          2A92A4908DE7ED4271ED3022C64039F9A00BE92DFC9588A35A4D9B7219938961
+          289362A781313034A35F4D2F5D97EC0FFBC627C0E4007EFDFAD1B4F6D196C6FA
+          C6D69E56783436F6C1B3BEFE92E99F84D8B27BB7E0DA1053A05AD4425C61ACD5
+          0E87DDE6B238F83AA3B5BA9CE5C3411764FE2BBE2AC644994833CD40D3938C5E
+          6FD2337A1881DE14AB3DBBF51438FCC4C4A4409F9F7FAF39BBBE3EA7B1B1B9B5
+          B109E26CF296ECECECA6D6050A7C5AA5DDAD62AADFD66A21BCC028F6903A6BA5
+          9E2A77B8603FC1434440888F84422E7B1D1FB2527A93C9604610FD69BD090158
+          C083FF1A502CFDF8D7B3DC69A8AB2F82CDCFCF778A1B9B72721A9B9A3BFB4FF4
+          F7373737A535B7D637B7FA2B21A892FB2E5F5D5C9C81525518CA1E2D2C3C499A
+          2DA0CE0AD833AE1A4805B62A071881C5A0A718CAF1B6AB1AF0827A3828810DD7
+          31F462E3C903361ECAF9D31072268E3DDBD97CEC48530E8CA0B9135E7276A4C1
+          F5F1F7403BB4D74CCB185FD69985F8AE133A48C602C995A9665997DDC55A581B
+          42FBF699CD88612C16D6E2626D560B62CA1904AB0E81CB0C7C14EBEFC508D96A
+          B903BCCB5EEB7271F969C7FA8F7576161C8576AA2027A7A0E0E8B12347FC537F
+          74479324731BE33C895403E18516C6A3676B180A7C18F637F0BB660A40519F67
+          CC1607CC005BCBBA58964508096B605EE1AFF2F7F20AF60D235217A9D5149597
+          F6EE89639DAD9D05D176B4A4A0E0C889237DCDCD9DFE31412A7517E3B5445E2D
+          64781DD25355E76132493D45D1144C2AB87B54A400A704A219C22307B2D86A21
+          649BCB2D51FDB139CE68B4D51483AFC2CEB468475A5A6753E7FB4D8D20F8D4A9
+          D3930BF39FCD1DF1371D3F7EACF58F6EF037819E48E45758B8FD56E77EE7CCE2
+          55D644516EF718E433B703199C6016FB18B3013A5C68E69A93BF108944E666C6
+          DC309899C519A713CE4BC2BF0D1EDB4DD88C55B087062D3960DF9D9D7D7D9D4D
+          CD4D4DC7FBFD973EF9E4937FBDD4EF3F3EE93F3E35A6A368E69EA03D9F7B83E7
+          DDCE9907EE19FCD04993F88B4518D5C36A74EB6EE816BE5F6D4033182FC222FD
+          3E82F152E4DFE04D75E5ED65F70DEC06B35FADDD02A5A29A428C05E88D3D9D3D
+          3D7D4DCDF59E86FAFA7AE17D7FDFF1D663C7FDF3426520D0D7112517EC3516E4
+          C40FF7AB81A0A0BE30642E611CCCE5F13263870B35EDC6F89B89DBF8B414CE25
+          3E8C23B92CBECBC8269E2F52C4FA3BD29497538AE87F0AD08EE4CD2DAD2D2D3D
+          5D8DA9E949A99B939F7DB6217B73436B5FFD7B9D53BF25218F92DF46B5BB6C30
+          542718E01A8C67E334E751165008428A1F6E075EFE1A05D03F23A45282C07801
+          BA711621C3F86646AE8C90C7D22975B94251B8B3505D0A2B9FFC6C4A434B578B
+          F7E041AFD7E3158B1BBA5A1AB61D0A0CF84F959ACDE063286A75BB389783E7F7
+          39AD89B318CF136B1DFC038C330842E6CE937E866153290BC11888045922D067
+          57E81298357C95DA9E199BE3288B5E51B47367FFB9737E5291959C9472E8D0A1
+          B6F6F6AEDEAE9E813E7F5F7F4BCB4055FEF34550C6409AA9BE2758DD2E9B152D
+          CE54B8FFE3CE1A819EE0F83D082388275D913B9F0ADA0969941ECF966B1ED1A9
+          45C08748456C454D51EA32C5C9D173D0469F575079796D80EFEAEAEA81E5EFEF
+          EFEB6FF6DFB1427E8BC6355217B5F95C8B01DD8FF8EEE32B9A281DE61927106B
+          7C6063E3BC8092CE08F41D2E3DFA912EAB64326EE2591919EB71BBD4E0E9E756
+          DA20A9A64ABBBB0F7577750D80F23E7F7F7FBFFFFBEFC11B21BF40DD46BE16A5
+          679AAB6FE3E038C663D228FD0B8CE7086236081F7E5010D51E89BEF256F343FC
+          29512AD0F36E3166093E49C862E9E5151AF4FCD9B302BC5BAC56AB4B7BBB00DE
+          33E017E0E393FFF2BFF87B54A427571AFB10E34FB3228BCBF83E0F967667ED12
+          BE238521E082FC4F31820558C880458897CC08AB2F417AFA73107F1A03350FDF
+          0A5D7D904024C466D88AE28A8A92B3801F3A74B0C1A2D1940480DEDDDB35D03B
+          D0373035F5A7E93FFFD9E982FA9D8225728E452E4B13138D6E77C8B99DB836B1
+          8628BD26253242EEACC444999BDC1E298923D860022109B98D8971128881FA99
+          FC358991FCC43819FBE6C9ABAC9AD81EAB1DA20F2A06FA5958EE7A548E4ABABC
+          8704F5BD3D30FB538191C0E8B493E36B516539AA62CF57AAE308225E2291AC21
+          E25D328288CB7C928893E51204B11DBA5EDB4E104FC9C1FED4E5F0598609321D
+          055D09E00FDB994C22512E8D53E857F9BB1AA97B56E80508594ABBBC2DDEDEC6
+          DE9E9EAEBEDEA9919191A969235B51819CFBAB205AABE599F2CCCCDC5C7856B0
+          B559929DA4262BCBBC53789F29979B764A242A3A53924B1932E5B9990AA82B28
+          934CA250C8F372A95DEA4C89946456E5B82A58F88A4EA07B4B601AB8D2DE86AE
+          06B0B9AE9E2E7FDFD4C897235F7E15E46A8C8815721A05BFA627D57A4A6F6091
+          D66A31A974E5BC95D4D2661D6C14844A5ED8C7D0B0ABA36992813468820444EB
+          F5A45E2F645721D50971FE115DA3D11457688ADF1D6C84CAFE800FE85D3D2D03
+          3DFE9EBE1EBF7F64EACBA9AFBE9AF0F9EA388EA1CA2B5C5686824CC6E8D58C81
+          16766B2AD83F322BCCBFEE256127235CE956366D300893C1441A2813A0A3BB93
+          EA18ED9A8A62AE5868A546B694E38A4B80DE0374B0B94BFE4F803EFD878989F0
+          C484CF66310679232AD7A04A8B5E8F1C08B64D241498B0A1D246376FDA5749ED
+          8A7CA8F5856A20CA874A9814F66F68A5555A1FA72FFD78B362E9B1F3D2635D4B
+          AB6E6A2C3DEA5FFAF1DB4B7762BFFAF80FFCF0F5E801D78FE83FC97D911FE8FF
+          7FEF8CFC0477457E38FEFEB74462DAFF01753F6628794018FB0000000049454E
+          44AE426082
+        }
+      end
+      object txAppName: TLabel
+        Left = 86
+        Height = 17
+        Top = 14
+        Width = 75
+        Caption = 'txAppName'
+        Font.Height = -13
+        Font.Style = [fsBold]
+        ParentColor = False
+        ParentFont = False
+      end
+      object txAuthor: TLabel
+        Left = 86
+        Height = 14
+        Top = 66
+        Width = 198
+        Caption = 'Copyright (c) 2008-2011 by Yury Sidorov'
+        ParentColor = False
+      end
+      object txVersion: TLabel
+        Left = 86
+        Height = 14
+        Top = 38
+        Width = 55
+        Caption = 'Version %s'
+        ParentColor = False
+      end
+      object Bevel1: TBevel
+        Left = 6
+        Height = 7
+        Top = 189
+        Width = 416
+        Anchors = [akLeft, akRight, akBottom]
+        Shape = bsTopLine
+      end
+      object imgDonate: TImage
+        Cursor = crHandPoint
+        Left = 86
+        Height = 23
+        Hint = 'Donate via Plimus'
+        Top = 138
+        Width = 84
+        AutoSize = True
+        OnClick = imgDonateClick
+        ParentShowHint = False
+        Picture.Data = {
+          1754506F727461626C654E6574776F726B477261706869638D06000089504E47
+          0D0A1A0A0000000D49484452000000540000001708020000001AC5FF54000000
+          0674524E53000000FF0000D03E337C000000097048597300000EC300000EC301
+          C76FA8640000000974455874436F6D6D656E740000892A8D0600000618494441
+          54789CE5980B50945514C79949450254B41194050204C940C2341FA91124B301
+          F21095144311C51431137C8538920DA09BF840DE0BAB82A082906048682868A8
+          3CD4149FA8A0800C4E4BBB64CB1BFBD7F9BC7D2C8B3336CD340E3BFFBD73EFB9
+          E79CEFFCEEBDDFDD9955537BAE06E9C774F72B113547BEF5E4ADEEFB07FB8900
+          CBF1F737F21EFCF8AA9CEEA8C991D75D69ACAF6EA8AD81D0C1B0F351EEFF5EF7
+          7F250EBEF5664C4FC5CA6B4BEBEA6AA552A9E20F45674717A45028306C68A8AF
+          389BDBA2ECFF5A8A836F2E8FE06967DDCDC2C6C6C6F6F6F6E77F7FE48AA6E696
+          DFA8DFD5D595945C10278A6C2EDFD133EAF51307FFB478135369FE81E2E26B84
+          DADDFDFCD2831F32CB44474B234A1F1690B1ADADC3D923A224EF303FAAB74256
+          D80AF486AABDF80CD154F7145AE5C779BF3CEA5FA830C9277BEFC28A632B5F35
+          9083AFC9FB82547B2ED46BD9BEBA274DC4592DBD1A51E8987E2530B5E2CBF042
+          87C6E607648F4E2A9C220C85330BEC2DFD91DA5519E66DE7DF253DCDB7107FAD
+          6FA43770E57C9B9744BDAA90CDDA6CF04C1B4D64BE20F17AA5580EFE76C60252
+          F1F7D1131DC39A640A82ACFAB520AC487B5F89C59E9FCDC28B86D7CBAE90BDA4
+          A2DA745A7051D67E16A8A483DBEC511023E72FC130AD372E88DD21FF799693C6
+          8D84EC270912836D11C58C686144C7DB716CDE5E27CA19E63F99FC372F99C0A2
+          B4DF1C889CC81CB29473E66776B3353E1AE6D057911C7CF9415752F47EB19593
+          E8C7F3F7B813DE213F75C721B95C0D3A53F55967572BD9737EBAFDDEECC83DBB
+          E359A092D62DB40C983F8280B13310B69D86A8D2CF6DACB9E150744E47BD0D65
+          861B62A5E6DA192F713623235A18D1D9B5460FF6E311F668BD3F1D46FEC84C51
+          5847B49416A70CCE0B1C4C606499F1500CA382A6AA2C92832F8A7324854466D9
+          F94A1605E7C89A5B5FF04B6BA492474D291D9DCD2F2E82EE801D05B64B2521A2
+          4C16A824E15401A3C50B1FBB711A8A60F0E897494C950E05CEADA6C600DA46BE
+          C0ECFA9121C094ECA0C514DF829CC8CC7FD720ACCE746B5D954572F079BB1D48
+          DBA3B25D02B39C8372228F7027BCF72735FFB6F3FA1CD7A0ACD0A8132C504926
+          A3B5090FCB6F65AA931166C78787589F01A00F7EF676305ABE1D39592CED3CF2
+          333776BE10EE32832B006B3152474365911CFCB1707B52547C925BF0495F51B1
+          7BE8E94BB71A95B0DB3BBA52CEDC9B137ADA475404B7FDC94758A092B0DB5413
+          181C3F34F0128E619038B4B43928CE689416F344F5A898F98084FA303260D0B2
+          4584CF38631D82478B3E9BE28B0A505924072F0EB1231D8E0FF5D89EBF22B6CC
+          27EA5280B842F6AC8D91CB9EB56F3B76C373D705BF98CB7098F3CDA9ECF46816
+          C8D77A6F1B76DB81D965A631FF34F28F00A618301F122BC2160BDB4E84582C03
+          5D2D7695E0111AEADC6B02C24F3E30600F8527BDF0C869FBBEFEB7ABA6A8AC93
+          83FF2ED09E14B7DD2B30F1DC92B8B28094CAC5095713CED63078E9EFADAB0FDD
+          5821B9BEFA50A54F7CD957094512D13216C897ABAD392B910E3923479F6D35DD
+          737438E957806DA3A940878E3DEC83D507901D4990965D0AC8C35E07E264F074
+          ADC08215F4148E535924C4C16FF59FC5949E1AEF1B57E29F7E676D66955FDA9D
+          F24772C67FB95AEE97761753BE0917530FC5F2A3F8B2B618CD6E3BA51338D152
+          60345A87BDA8FC5B4D7DD03FDBC87CD0A2DFFBB6C392E9BEA5CD3FE7F0C450E9
+          BEA4F0BEEAE4E0D7FA0A99D62D778A4F495B9B766DCDF1FB6B4E3CDE925F2B6F
+          E964FCC9179FF8A75C8D3E900A377E145F536CC6B01F1B12DD46E3DF315C3C77
+          86E3C7D6A812AB03006C26ED3FA6047AC3C919435323EEA70EBB47FE18020C2D
+          168212E22988420779202CDF246B13C4922732B3F0BEEAE4E0972D72E66BF9E7
+          B3A313C43B732B3766DF5D95519550D2D0D2DAD6A250C865B2C78FEB139392E0
+          A014C297D7DC5913C69B8FD21DC184A1BBD34CE6E0229C6E662218AE33444B53
+          C3C8404F68371946BB1913C8191D5860A73EA6683868E000B49616C694104FA1
+          07210F347DB215DF139959785FE2E0177ABAF5D6860D81A298E4C4DC1271C1F5
+          BBF71E56DEF8E5487ACA96CD412A9D5F4771F0EE1E1EFD501CBCCDA6932EEEF3
+          FA9580FC173CFD87D7AFF83972FA03B3DFFE7BFB27D75B4E5BC0DB2002000000
+          0049454E44AE426082
+        }
+        ShowHint = True
+        Transparent = True
+      end
+      object txHomePage: TLabel
+        Cursor = crHandPoint
+        Left = 86
+        Height = 14
+        Top = 86
+        Width = 242
+        Caption = 'http://code.google.com/p/transmisson-remote-gui'
+        Font.Color = clBlue
+        Font.Style = [fsUnderline]
+        ParentColor = False
+        ParentFont = False
+        OnClick = txHomePageClick
+      end
+      object txDonate: TLabel
+        Left = 86
+        Height = 14
+        Top = 118
+        Width = 195
+        Caption = 'Donate to support further development:'
+        ParentColor = False
+      end
+    end
+    object tabLicense: TTabSheet
+      Caption = 'License'
+      ClientHeight = 273
+      ClientWidth = 427
+      object edLicense: TMemo
+        Left = 4
+        Height = 265
+        Top = 4
+        Width = 419
+        Align = alClient
+        BorderSpacing.Around = 4
+        Lines.Strings = (
+          #9#9'    GNU GENERAL PUBLIC LICENSE'
+          #9#9'       Version 2, June 1991'
+          ''
+          ' Copyright (C) 1989, 1991 Free Software Foundation, Inc.,'
+          ' 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA'
+          ' Everyone is permitted to copy and distribute verbatim copies'
+          ' of this license document, but changing it is not allowed.'
+          ''
+          #9#9#9'    Preamble'
+          ''
+          '  The licenses for most software are designed to take away your'
+          'freedom to share and change it.  By contrast, the GNU General Public'
+          'License is intended to guarantee your freedom to share and change free'
+          'software--to make sure the software is free for all its users.  This'
+          'General Public License applies to most of the Free Software'
+          'Foundation''s software and to any other program whose authors commit to'
+          'using it.  (Some other Free Software Foundation software is covered by'
+          'the GNU Lesser General Public License instead.)  You can apply it to'
+          'your programs, too.'
+          ''
+          '  When we speak of free software, we are referring to freedom, not'
+          'price.  Our General Public Licenses are designed to make sure that you'
+          'have the freedom to distribute copies of free software (and charge for'
+          'this service if you wish), that you receive source code or can get it'
+          'if you want it, that you can change the software or use pieces of it'
+          'in new free programs; and that you know you can do these things.'
+          ''
+          '  To protect your rights, we need to make restrictions that forbid'
+          'anyone to deny you these rights or to ask you to surrender the rights.'
+          'These restrictions translate to certain responsibilities for you if you'
+          'distribute copies of the software, or if you modify it.'
+          ''
+          '  For example, if you distribute copies of such a program, whether'
+          'gratis or for a fee, you must give the recipients all the rights that'
+          'you have.  You must make sure that they, too, receive or can get the'
+          'source code.  And you must show them these terms so they know their'
+          'rights.'
+          ''
+          '  We protect your rights with two steps: (1) copyright the software, and'
+          '(2) offer you this license which gives you legal permission to copy,'
+          'distribute and/or modify the software.'
+          ''
+          '  Also, for each author''s protection and ours, we want to make certain'
+          'that everyone understands that there is no warranty for this free'
+          'software.  If the software is modified by someone else and passed on, we'
+          'want its recipients to know that what they have is not the original, so'
+          'that any problems introduced by others will not reflect on the original'
+          'authors'' reputations.'
+          ''
+          '  Finally, any free program is threatened constantly by software'
+          'patents.  We wish to avoid the danger that redistributors of a free'
+          'program will individually obtain patent licenses, in effect making the'
+          'program proprietary.  To prevent this, we have made it clear that any'
+          'patent must be licensed for everyone''s free use or not licensed at all.'
+          ''
+          '  The precise terms and conditions for copying, distribution and'
+          'modification follow.'
+          ''
+          #9#9'    GNU GENERAL PUBLIC LICENSE'
+          '   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION'
+          ''
+          '  0. This License applies to any program or other work which contains'
+          'a notice placed by the copyright holder saying it may be distributed'
+          'under the terms of this General Public License.  The "Program", below,'
+          'refers to any such program or work, and a "work based on the Program"'
+          'means either the Program or any derivative work under copyright law:'
+          'that is to say, a work containing the Program or a portion of it,'
+          'either verbatim or with modifications and/or translated into another'
+          'language.  (Hereinafter, translation is included without limitation in'
+          'the term "modification".)  Each licensee is addressed as "you".'
+          ''
+          'Activities other than copying, distribution and modification are not'
+          'covered by this License; they are outside its scope.  The act of'
+          'running the Program is not restricted, and the output from the Program'
+          'is covered only if its contents constitute a work based on the'
+          'Program (independent of having been made by running the Program).'
+          'Whether that is true depends on what the Program does.'
+          ''
+          '  1. You may copy and distribute verbatim copies of the Program''s'
+          'source code as you receive it, in any medium, provided that you'
+          'conspicuously and appropriately publish on each copy an appropriate'
+          'copyright notice and disclaimer of warranty; keep intact all the'
+          'notices that refer to this License and to the absence of any warranty;'
+          'and give any other recipients of the Program a copy of this License'
+          'along with the Program.'
+          ''
+          'You may charge a fee for the physical act of transferring a copy, and'
+          'you may at your option offer warranty protection in exchange for a fee.'
+          ''
+          '  2. You may modify your copy or copies of the Program or any portion'
+          'of it, thus forming a work based on the Program, and copy and'
+          'distribute such modifications or work under the terms of Section 1'
+          'above, provided that you also meet all of these conditions:'
+          ''
+          '    a) You must cause the modified files to carry prominent notices'
+          '    stating that you changed the files and the date of any change.'
+          ''
+          '    b) You must cause any work that you distribute or publish, that in'
+          '    whole or in part contains or is derived from the Program or any'
+          '    part thereof, to be licensed as a whole at no charge to all third'
+          '    parties under the terms of this License.'
+          ''
+          '    c) If the modified program normally reads commands interactively'
+          '    when run, you must cause it, when started running for such'
+          '    interactive use in the most ordinary way, to print or display an'
+          '    announcement including an appropriate copyright notice and a'
+          '    notice that there is no warranty (or else, saying that you provide'
+          '    a warranty) and that users may redistribute the program under'
+          '    these conditions, and telling the user how to view a copy of this'
+          '    License.  (Exception: if the Program itself is interactive but'
+          '    does not normally print such an announcement, your work based on'
+          '    the Program is not required to print an announcement.)'
+          ''
+          'These requirements apply to the modified work as a whole.  If'
+          'identifiable sections of that work are not derived from the Program,'
+          'and can be reasonably considered independent and separate works in'
+          'themselves, then this License, and its terms, do not apply to those'
+          'sections when you distribute them as separate works.  But when you'
+          'distribute the same sections as part of a whole which is a work based'
+          'on the Program, the distribution of the whole must be on the terms of'
+          'this License, whose permissions for other licensees extend to the'
+          'entire whole, and thus to each and every part regardless of who wrote it.'
+          ''
+          'Thus, it is not the intent of this section to claim rights or contest'
+          'your rights to work written entirely by you; rather, the intent is to'
+          'exercise the right to control the distribution of derivative or'
+          'collective works based on the Program.'
+          ''
+          'In addition, mere aggregation of another work not based on the Program'
+          'with the Program (or with a work based on the Program) on a volume of'
+          'a storage or distribution medium does not bring the other work under'
+          'the scope of this License.'
+          ''
+          '  3. You may copy and distribute the Program (or a work based on it,'
+          'under Section 2) in object code or executable form under the terms of'
+          'Sections 1 and 2 above provided that you also do one of the following:'
+          ''
+          '    a) Accompany it with the complete corresponding machine-readable'
+          '    source code, which must be distributed under the terms of Sections'
+          '    1 and 2 above on a medium customarily used for software interchange; or,'
+          ''
+          '    b) Accompany it with a written offer, valid for at least three'
+          '    years, to give any third party, for a charge no more than your'
+          '    cost of physically performing source distribution, a complete'
+          '    machine-readable copy of the corresponding source code, to be'
+          '    distributed under the terms of Sections 1 and 2 above on a medium'
+          '    customarily used for software interchange; or,'
+          ''
+          '    c) Accompany it with the information you received as to the offer'
+          '    to distribute corresponding source code.  (This alternative is'
+          '    allowed only for noncommercial distribution and only if you'
+          '    received the program in object code or executable form with such'
+          '    an offer, in accord with Subsection b above.)'
+          ''
+          'The source code for a work means the preferred form of the work for'
+          'making modifications to it.  For an executable work, complete source'
+          'code means all the source code for all modules it contains, plus any'
+          'associated interface definition files, plus the scripts used to'
+          'control compilation and installation of the executable.  However, as a'
+          'special exception, the source code distributed need not include'
+          'anything that is normally distributed (in either source or binary'
+          'form) with the major components (compiler, kernel, and so on) of the'
+          'operating system on which the executable runs, unless that component'
+          'itself accompanies the executable.'
+          ''
+          'If distribution of executable or object code is made by offering'
+          'access to copy from a designated place, then offering equivalent'
+          'access to copy the source code from the same place counts as'
+          'distribution of the source code, even though third parties are not'
+          'compelled to copy the source along with the object code.'
+          ''
+          '  4. You may not copy, modify, sublicense, or distribute the Program'
+          'except as expressly provided under this License.  Any attempt'
+          'otherwise to copy, modify, sublicense or distribute the Program is'
+          'void, and will automatically terminate your rights under this License.'
+          'However, parties who have received copies, or rights, from you under'
+          'this License will not have their licenses terminated so long as such'
+          'parties remain in full compliance.'
+          ''
+          '  5. You are not required to accept this License, since you have not'
+          'signed it.  However, nothing else grants you permission to modify or'
+          'distribute the Program or its derivative works.  These actions are'
+          'prohibited by law if you do not accept this License.  Therefore, by'
+          'modifying or distributing the Program (or any work based on the'
+          'Program), you indicate your acceptance of this License to do so, and'
+          'all its terms and conditions for copying, distributing or modifying'
+          'the Program or works based on it.'
+          ''
+          '  6. Each time you redistribute the Program (or any work based on the'
+          'Program), the recipient automatically receives a license from the'
+          'original licensor to copy, distribute or modify the Program subject to'
+          'these terms and conditions.  You may not impose any further'
+          'restrictions on the recipients'' exercise of the rights granted herein.'
+          'You are not responsible for enforcing compliance by third parties to'
+          'this License.'
+          ''
+          '  7. If, as a consequence of a court judgment or allegation of patent'
+          'infringement or for any other reason (not limited to patent issues),'
+          'conditions are imposed on you (whether by court order, agreement or'
+          'otherwise) that contradict the conditions of this License, they do not'
+          'excuse you from the conditions of this License.  If you cannot'
+          'distribute so as to satisfy simultaneously your obligations under this'
+          'License and any other pertinent obligations, then as a consequence you'
+          'may not distribute the Program at all.  For example, if a patent'
+          'license would not permit royalty-free redistribution of the Program by'
+          'all those who receive copies directly or indirectly through you, then'
+          'the only way you could satisfy both it and this License would be to'
+          'refrain entirely from distribution of the Program.'
+          ''
+          'If any portion of this section is held invalid or unenforceable under'
+          'any particular circumstance, the balance of the section is intended to'
+          'apply and the section as a whole is intended to apply in other'
+          'circumstances.'
+          ''
+          'It is not the purpose of this section to induce you to infringe any'
+          'patents or other property right claims or to contest validity of any'
+          'such claims; this section has the sole purpose of protecting the'
+          'integrity of the free software distribution system, which is'
+          'implemented by public license practices.  Many people have made'
+          'generous contributions to the wide range of software distributed'
+          'through that system in reliance on consistent application of that'
+          'system; it is up to the author/donor to decide if he or she is willing'
+          'to distribute software through any other system and a licensee cannot'
+          'impose that choice.'
+          ''
+          'This section is intended to make thoroughly clear what is believed to'
+          'be a consequence of the rest of this License.'
+          ''
+          '  8. If the distribution and/or use of the Program is restricted in'
+          'certain countries either by patents or by copyrighted interfaces, the'
+          'original copyright holder who places the Program under this License'
+          'may add an explicit geographical distribution limitation excluding'
+          'those countries, so that distribution is permitted only in or among'
+          'countries not thus excluded.  In such case, this License incorporates'
+          'the limitation as if written in the body of this License.'
+          ''
+          '  9. The Free Software Foundation may publish revised and/or new versions'
+          'of the General Public License from time to time.  Such new versions will'
+          'be similar in spirit to the present version, but may differ in detail to'
+          'address new problems or concerns.'
+          ''
+          'Each version is given a distinguishing version number.  If the Program'
+          'specifies a version number of this License which applies to it and "any'
+          'later version", you have the option of following the terms and conditions'
+          'either of that version or of any later version published by the Free'
+          'Software Foundation.  If the Program does not specify a version number of'
+          'this License, you may choose any version ever published by the Free Software'
+          'Foundation.'
+          ''
+          '  10. If you wish to incorporate parts of the Program into other free'
+          'programs whose distribution conditions are different, write to the author'
+          'to ask for permission.  For software which is copyrighted by the Free'
+          'Software Foundation, write to the Free Software Foundation; we sometimes'
+          'make exceptions for this.  Our decision will be guided by the two goals'
+          'of preserving the free status of all derivatives of our free software and'
+          'of promoting the sharing and reuse of software generally.'
+          ''
+          #9#9#9'    NO WARRANTY'
+          ''
+          '  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY'
+          'FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN'
+          'OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES'
+          'PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED'
+          'OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF'
+          'MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS'
+          'TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE'
+          'PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,'
+          'REPAIR OR CORRECTION.'
+          ''
+          '  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING'
+          'WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR'
+          'REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,'
+          'INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING'
+          'OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED'
+          'TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY'
+          'YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER'
+          'PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE'
+          'POSSIBILITY OF SUCH DAMAGES.'
+          ''
+          #9#9'     END OF TERMS AND CONDITIONS'
+          ''
+          #9'    How to Apply These Terms to Your New Programs'
+          ''
+          '  If you develop a new program, and you want it to be of the greatest'
+          'possible use to the public, the best way to achieve this is to make it'
+          'free software which everyone can redistribute and change under these terms.'
+          ''
+          '  To do so, attach the following notices to the program.  It is safest'
+          'to attach them to the start of each source file to most effectively'
+          'convey the exclusion of warranty; and each file should have at least'
+          'the "copyright" line and a pointer to where the full notice is found.'
+          ''
+          '    <one line to give the program''s name and a brief idea of what it does.>'
+          '    Copyright (C) <year>  <name of author>'
+          ''
+          '    This program is free software; you can redistribute it and/or modify'
+          '    it under the terms of the GNU General Public License as published by'
+          '    the Free Software Foundation; either version 2 of the License, or'
+          '    (at your option) any later version.'
+          ''
+          '    This program is distributed in the hope that it will be useful,'
+          '    but WITHOUT ANY WARRANTY; without even the implied warranty of'
+          '    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the'
+          '    GNU General Public License for more details.'
+          ''
+          '    You should have received a copy of the GNU General Public License along'
+          '    with this program; if not, write to the Free Software Foundation, Inc.,'
+          '    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.'
+          ''
+          'Also add information on how to contact you by electronic and paper mail.'
+          ''
+          'If the program is interactive, make it output a short notice like this'
+          'when it starts in an interactive mode:'
+          ''
+          '    Gnomovision version 69, Copyright (C) year name of author'
+          '    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w''.'
+          '    This is free software, and you are welcome to redistribute it'
+          '    under certain conditions; type `show c'' for details.'
+          ''
+          'The hypothetical commands `show w'' and `show c'' should show the appropriate'
+          'parts of the General Public License.  Of course, the commands you use may'
+          'be called something other than `show w'' and `show c''; they could even be'
+          'mouse-clicks or menu items--whatever suits your program.'
+          ''
+          'You should also get your employer (if you work as a programmer) or your'
+          'school, if any, to sign a "copyright disclaimer" for the program, if'
+          'necessary.  Here is a sample; alter the names:'
+          ''
+          '  Yoyodyne, Inc., hereby disclaims all copyright interest in the program'
+          '  `Gnomovision'' (which makes passes at compilers) written by James Hacker.'
+          ''
+          '  <signature of Ty Coon>, 1 April 1989'
+          '  Ty Coon, President of Vice'
+          ''
+          'This General Public License does not permit incorporating your program into'
+          'proprietary programs.  If your program is a subroutine library, you may'
+          'consider it more useful to permit linking proprietary applications with the'
+          'library.  If this is what you want to do, use the GNU Lesser General'
+          'Public License instead of this License.'
+        )
+        ReadOnly = True
+        ScrollBars = ssBoth
+        TabOrder = 0
+        WordWrap = False
+      end
+    end
+  end
+  object Buttons: TButtonPanel
+    Left = 8
+    Height = 26
+    Top = 315
+    Width = 435
+    BorderSpacing.Top = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 1
+    Spacing = 0
+    ShowButtons = [pbOK]
+    ShowBevel = False
+  end
+end
diff -ru TransGUI/addlink.lfm TransGUI_new/addlink.lfm
--- TransGUI/addlink.lfm	2011-02-20 14:30:14.000000000 +0100
+++ TransGUI_new/addlink.lfm	2011-09-18 12:30:41.000000000 +0200
@@ -1,54 +1,62 @@
-object AddLinkForm: TAddLinkForm
-  Left = 354
-  Height = 91
-  Top = 193
-  Width = 574
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'Add torrent link'
-  ClientHeight = 91
-  ClientWidth = 574
-  OnCreate = FormCreate
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 26
-    Top = 57
-    Width = 558
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 1
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-    ShowBevel = False
-  end
-  object Panel1: TPanel
-    Left = 8
-    Height = 41
-    Top = 8
-    Width = 558
-    Align = alClient
-    BevelOuter = bvNone
-    ClientHeight = 41
-    ClientWidth = 558
-    TabOrder = 0
-    object txLink: TLabel
-      Left = 0
-      Height = 14
-      Top = 0
-      Width = 183
-      Caption = 'URL of a .torrent file or a magnet link:'
-      ParentColor = False
-    end
-    object edLink: TEdit
-      Left = 0
-      Height = 21
-      Top = 20
-      Width = 558
-      Anchors = [akTop, akLeft, akRight]
-      TabOrder = 0
-    end
-  end
-end
+object AddLinkForm: TAddLinkForm
+  Left = 354
+  Height = 96
+  Top = 193
+  Width = 574
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  Caption = 'Add torrent link'
+  ClientHeight = 96
+  ClientWidth = 574
+  OnCreate = FormCreate
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 26
+    Top = 62
+    Width = 574
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 1
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+    ShowBevel = False
+  end
+  object Panel1: TPanel
+    Left = 8
+    Height = 46
+    Top = 8
+    Width = 558
+    Align = alClient
+    BorderSpacing.Around = 8
+    BevelOuter = bvNone
+    ClientHeight = 46
+    ClientWidth = 558
+    TabOrder = 0
+    object txLink: TLabel
+      Left = 0
+      Height = 14
+      Top = 0
+      Width = 183
+      Caption = 'URL of a .torrent file or a magnet link:'
+      ParentColor = False
+    end
+    object edLink: TEdit
+      Left = 0
+      Height = 21
+      Top = 20
+      Width = 558
+      Anchors = [akTop, akLeft, akRight]
+      TabOrder = 0
+    end
+  end
+end
diff -ru TransGUI/addtorrent.lfm TransGUI_new/addtorrent.lfm
--- TransGUI/addtorrent.lfm	2011-04-03 13:28:18.000000000 +0200
+++ TransGUI_new/addtorrent.lfm	2011-09-18 12:30:48.000000000 +0200
@@ -1,180 +1,193 @@
-object AddTorrentForm: TAddTorrentForm
-  Left = 376
-  Height = 440
-  Top = 186
-  Width = 497
-  HorzScrollBar.Page = 505
-  VertScrollBar.Page = 404
-  VertScrollBar.Range = 92
-  BorderIcons = [biSystemMenu]
-  BorderWidth = 8
-  Caption = 'Add new torrent'
-  ClientHeight = 440
-  ClientWidth = 497
-  Constraints.MinHeight = 300
-  Constraints.MinWidth = 470
-  OnCreate = FormCreate
-  OnShow = FormShow
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object gbSaveAs: TGroupBox
-    Left = 8
-    Height = 92
-    Top = 8
-    Width = 481
-    Align = alTop
-    Caption = ' '
-    ClientHeight = 74
-    ClientWidth = 477
-    TabOrder = 0
-    object txDestFolder: TLabel
-      Left = 10
-      Height = 14
-      Top = 0
-      Width = 90
-      Caption = 'Destination folder:'
-      ParentColor = False
-    end
-    object txPeerLimit: TLabel
-      Left = 340
-      Height = 14
-      Top = 49
-      Width = 48
-      Alignment = taRightJustify
-      Anchors = [akTop, akRight]
-      Caption = 'Peer limit:'
-      ParentColor = False
-    end
-    object cbDestFolder: TComboBox
-      Left = 10
-      Height = 21
-      Top = 16
-      Width = 360
-      Anchors = [akTop, akLeft, akRight]
-      ItemHeight = 13
-      TabOrder = 0
-    end
-    object cbStartTorrent: TCheckBox
-      Left = 10
-      Height = 17
-      Top = 47
-      Width = 79
-      Caption = 'Start torrent'
-      Checked = True
-      State = cbChecked
-      TabOrder = 2
-    end
-    object edPeerLimit: TSpinEdit
-      Left = 404
-      Height = 21
-      Top = 46
-      Width = 62
-      Anchors = [akTop, akRight]
-      MaxValue = 999
-      MinValue = 1
-      TabOrder = 3
-      Value = 1
-    end
-    object btBrowse: TButton
-      Left = 375
-      Height = 23
-      Top = 15
-      Width = 91
-      Anchors = [akTop, akRight]
-      Caption = 'Browse...'
-      OnClick = btBrowseClick
-      TabOrder = 1
-    end
-  end
-  object gbContents: TGroupBox
-    Left = 8
-    Height = 294
-    Top = 104
-    Width = 481
-    Align = alClient
-    BorderSpacing.Top = 4
-    Caption = 'Torrent contents'
-    ClientHeight = 276
-    ClientWidth = 477
-    TabOrder = 1
-    object txDiskSpace: TLabel
-      Left = 10
-      Height = 14
-      Top = 20
-      Width = 79
-      Caption = 'Free disk space:'
-      ParentColor = False
-    end
-    object txSize: TLabel
-      Left = 10
-      Height = 14
-      Top = 2
-      Width = 1
-      ParentColor = False
-    end
-    object lvFiles: TVarGrid
-      Left = 10
-      Height = 223
-      Top = 40
-      Width = 456
-      Anchors = [akTop, akLeft, akRight, akBottom]
-      Columns = <      
-        item
-          ReadOnly = True
-          Title.Caption = 'File name'
-          Width = 350
-        end      
-        item
-          ReadOnly = True
-          Title.Caption = 'Size'
-          Width = 80
-        end      
-        item
-          Title.Caption = ' '
-          Visible = False
-        end>
-      FixedCols = 0
-      Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goEditing, goRowSelect, goThumbTracking, goDblClickAutoSize]
-      RowCount = 1
-      TabOrder = 0
-      Images = MainForm.ImageList16
-      MultiSelect = True
-      HideSelection = True
-      OnCellAttributes = lvFilesCellAttributes
-    end
-    object btSelectAll: TButton
-      Left = 206
-      Height = 23
-      Top = 4
-      Width = 126
-      Anchors = [akTop, akRight]
-      Caption = 'Select all'
-      Constraints.MinWidth = 75
-      OnClick = btSelectAllClick
-      TabOrder = 1
-    end
-    object btSelectNone: TButton
-      Left = 340
-      Height = 23
-      Top = 4
-      Width = 126
-      Anchors = [akTop, akRight]
-      Caption = 'Select none'
-      Constraints.MinWidth = 75
-      OnClick = btSelectNoneClick
-      TabOrder = 2
-    end
-  end
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 26
-    Top = 406
-    Width = 481
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 2
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-    ShowBevel = False
-  end
-end
+object AddTorrentForm: TAddTorrentForm
+  Left = 376
+  Height = 440
+  Top = 186
+  Width = 497
+  HorzScrollBar.Page = 505
+  VertScrollBar.Page = 404
+  VertScrollBar.Range = 92
+  BorderIcons = [biSystemMenu]
+  Caption = 'Add new torrent'
+  ClientHeight = 440
+  ClientWidth = 497
+  Constraints.MinHeight = 300
+  Constraints.MinWidth = 470
+  OnCreate = FormCreate
+  OnShow = FormShow
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object gbSaveAs: TGroupBox
+    Left = 8
+    Height = 92
+    Top = 8
+    Width = 481
+    Align = alTop
+    BorderSpacing.Left = 8
+    BorderSpacing.Top = 8
+    BorderSpacing.Right = 8
+    Caption = ' '
+    ClientHeight = 74
+    ClientWidth = 477
+    TabOrder = 0
+    object txDestFolder: TLabel
+      Left = 10
+      Height = 14
+      Top = 0
+      Width = 90
+      Caption = 'Destination folder:'
+      ParentColor = False
+    end
+    object txPeerLimit: TLabel
+      Left = 340
+      Height = 14
+      Top = 49
+      Width = 48
+      Alignment = taRightJustify
+      Anchors = [akTop, akRight]
+      Caption = 'Peer limit:'
+      ParentColor = False
+    end
+    object cbDestFolder: TComboBox
+      Left = 10
+      Height = 21
+      Top = 16
+      Width = 360
+      Anchors = [akTop, akLeft, akRight]
+      ItemHeight = 13
+      TabOrder = 0
+    end
+    object cbStartTorrent: TCheckBox
+      Left = 10
+      Height = 17
+      Top = 47
+      Width = 79
+      Caption = 'Start torrent'
+      Checked = True
+      State = cbChecked
+      TabOrder = 2
+    end
+    object edPeerLimit: TSpinEdit
+      Left = 404
+      Height = 21
+      Top = 46
+      Width = 62
+      Anchors = [akTop, akRight]
+      MaxValue = 999
+      MinValue = 1
+      TabOrder = 3
+      Value = 1
+    end
+    object btBrowse: TButton
+      Left = 375
+      Height = 23
+      Top = 15
+      Width = 91
+      Anchors = [akTop, akRight]
+      Caption = 'Browse...'
+      OnClick = btBrowseClick
+      TabOrder = 1
+    end
+  end
+  object gbContents: TGroupBox
+    Left = 8
+    Height = 294
+    Top = 104
+    Width = 481
+    Align = alClient
+    BorderSpacing.Left = 8
+    BorderSpacing.Top = 4
+    BorderSpacing.Right = 8
+    BorderSpacing.Bottom = 8
+    Caption = 'Torrent contents'
+    ClientHeight = 276
+    ClientWidth = 477
+    TabOrder = 1
+    object txDiskSpace: TLabel
+      Left = 10
+      Height = 14
+      Top = 20
+      Width = 79
+      Caption = 'Free disk space:'
+      ParentColor = False
+    end
+    object txSize: TLabel
+      Left = 10
+      Height = 1
+      Top = 2
+      Width = 1
+      ParentColor = False
+    end
+    object lvFiles: TVarGrid
+      Left = 10
+      Height = 223
+      Top = 40
+      Width = 456
+      Anchors = [akTop, akLeft, akRight, akBottom]
+      Columns = <      
+        item
+          ReadOnly = True
+          Title.Caption = 'File name'
+          Width = 350
+        end      
+        item
+          ReadOnly = True
+          Title.Caption = 'Size'
+          Width = 80
+        end      
+        item
+          Title.Caption = ' '
+          Visible = False
+        end>
+      FixedCols = 0
+      Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goEditing, goRowSelect, goThumbTracking, goDblClickAutoSize]
+      RowCount = 1
+      TabOrder = 0
+      Images = MainForm.ImageList16
+      MultiSelect = True
+      HideSelection = True
+      OnCellAttributes = lvFilesCellAttributes
+    end
+    object btSelectAll: TButton
+      Left = 206
+      Height = 23
+      Top = 4
+      Width = 126
+      Anchors = [akTop, akRight]
+      Caption = 'Select all'
+      Constraints.MinWidth = 75
+      OnClick = btSelectAllClick
+      TabOrder = 1
+    end
+    object btSelectNone: TButton
+      Left = 340
+      Height = 23
+      Top = 4
+      Width = 126
+      Anchors = [akTop, akRight]
+      Caption = 'Select none'
+      Constraints.MinWidth = 75
+      OnClick = btSelectNoneClick
+      TabOrder = 2
+    end
+  end
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 26
+    Top = 406
+    Width = 497
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 2
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+    ShowBevel = False
+  end
+end
diff -ru TransGUI/addtracker.lfm TransGUI_new/addtracker.lfm
--- TransGUI/addtracker.lfm	2011-02-20 14:30:14.000000000 +0100
+++ TransGUI_new/addtracker.lfm	2011-09-18 12:30:56.000000000 +0200
@@ -1,54 +1,62 @@
-object AddTrackerForm: TAddTrackerForm
-  Left = 411
-  Height = 91
-  Top = 283
-  Width = 533
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'Add tracker'
-  ClientHeight = 91
-  ClientWidth = 533
-  OnCreate = FormCreate
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 26
-    Top = 57
-    Width = 517
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 1
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-    ShowBevel = False
-  end
-  object Panel1: TPanel
-    Left = 8
-    Height = 41
-    Top = 8
-    Width = 517
-    Align = alClient
-    BevelOuter = bvNone
-    ClientHeight = 41
-    ClientWidth = 517
-    TabOrder = 0
-    object txTrackerURL: TLabel
-      Left = 0
-      Height = 14
-      Top = 0
-      Width = 113
-      Caption = 'Tracker announce URL:'
-      ParentColor = False
-    end
-    object edTracker: TEdit
-      Left = 0
-      Height = 21
-      Top = 20
-      Width = 517
-      Anchors = [akTop, akLeft, akRight]
-      TabOrder = 0
-    end
-  end
-end
+object AddTrackerForm: TAddTrackerForm
+  Left = 411
+  Height = 96
+  Top = 283
+  Width = 533
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  Caption = 'Add tracker'
+  ClientHeight = 96
+  ClientWidth = 533
+  OnCreate = FormCreate
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 26
+    Top = 62
+    Width = 533
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 1
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+    ShowBevel = False
+  end
+  object Panel1: TPanel
+    Left = 8
+    Height = 46
+    Top = 8
+    Width = 517
+    Align = alClient
+    BorderSpacing.Around = 8
+    BevelOuter = bvNone
+    ClientHeight = 46
+    ClientWidth = 517
+    TabOrder = 0
+    object txTrackerURL: TLabel
+      Left = 0
+      Height = 14
+      Top = 0
+      Width = 113
+      Caption = 'Tracker announce URL:'
+      ParentColor = False
+    end
+    object edTracker: TEdit
+      Left = 0
+      Height = 21
+      Top = 20
+      Width = 516
+      Anchors = [akTop, akLeft, akRight]
+      TabOrder = 0
+    end
+  end
+end
diff -ru TransGUI/colsetup.lfm TransGUI_new/colsetup.lfm
--- TransGUI/colsetup.lfm	2011-02-20 14:30:14.000000000 +0100
+++ TransGUI_new/colsetup.lfm	2011-09-18 12:31:04.000000000 +0200
@@ -1,76 +1,84 @@
-object ColSetupForm: TColSetupForm
-  Left = 404
-  Height = 326
-  Top = 194
-  Width = 355
-  HorzScrollBar.Page = 399
-  VertScrollBar.Page = 299
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'Columns setup'
-  ClientHeight = 326
-  ClientWidth = 355
-  Constraints.MinHeight = 200
-  Constraints.MinWidth = 260
-  OnCreate = FormCreate
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 36
-    Top = 282
-    Width = 339
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 1
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-  end
-  object Panel1: TPanel
-    Left = 8
-    Height = 266
-    Top = 8
-    Width = 339
-    Align = alClient
-    BevelOuter = bvNone
-    ClientHeight = 266
-    ClientWidth = 339
-    TabOrder = 0
-    object lstColumns: TCheckListBox
-      Left = 0
-      Height = 266
-      Top = 0
-      Width = 256
-      Anchors = [akTop, akLeft, akRight, akBottom]
-      ItemHeight = 0
-      OnClick = lstColumnsClick
-      OnClickCheck = lstColumnsClickCheck
-      TabOrder = 0
-    end
-    object btUp: TButton
-      Left = 265
-      Height = 23
-      Top = 0
-      Width = 75
-      Anchors = [akTop, akRight]
-      AutoSize = True
-      Caption = 'Up'
-      Constraints.MinWidth = 75
-      OnClick = btUpClick
-      TabOrder = 1
-    end
-    object btDown: TButton
-      Left = 265
-      Height = 23
-      Top = 28
-      Width = 75
-      Anchors = [akTop, akRight]
-      AutoSize = True
-      Caption = 'Down'
-      Constraints.MinWidth = 75
-      OnClick = btDownClick
-      TabOrder = 2
-    end
-  end
-end
+object ColSetupForm: TColSetupForm
+  Left = 404
+  Height = 326
+  Top = 194
+  Width = 355
+  HorzScrollBar.Page = 399
+  VertScrollBar.Page = 299
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  Caption = 'Columns setup'
+  ClientHeight = 326
+  ClientWidth = 355
+  Constraints.MinHeight = 200
+  Constraints.MinWidth = 260
+  OnCreate = FormCreate
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 36
+    Top = 282
+    Width = 355
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 1
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+  end
+  object Panel1: TPanel
+    Left = 8
+    Height = 266
+    Top = 8
+    Width = 339
+    Align = alClient
+    BorderSpacing.Around = 8
+    BevelOuter = bvNone
+    ClientHeight = 266
+    ClientWidth = 339
+    TabOrder = 0
+    object lstColumns: TCheckListBox
+      Left = 0
+      Height = 266
+      Top = 0
+      Width = 256
+      Anchors = [akTop, akLeft, akRight, akBottom]
+      ItemHeight = 0
+      OnClick = lstColumnsClick
+      OnClickCheck = lstColumnsClickCheck
+      TabOrder = 0
+    end
+    object btUp: TButton
+      Left = 265
+      Height = 23
+      Top = 0
+      Width = 75
+      Anchors = [akTop, akRight]
+      AutoSize = True
+      Caption = 'Up'
+      Constraints.MinWidth = 75
+      OnClick = btUpClick
+      TabOrder = 1
+    end
+    object btDown: TButton
+      Left = 265
+      Height = 23
+      Top = 28
+      Width = 75
+      Anchors = [akTop, akRight]
+      AutoSize = True
+      Caption = 'Down'
+      Constraints.MinWidth = 75
+      OnClick = btDownClick
+      TabOrder = 2
+    end
+  end
+end
diff -ru TransGUI/colsetup.pas TransGUI_new/colsetup.pas
--- TransGUI/colsetup.pas	2011-02-20 14:30:14.000000000 +0100
+++ TransGUI_new/colsetup.pas	2011-09-18 12:31:13.000000000 +0200
@@ -1,183 +1,183 @@
-{*************************************************************************************
-  This file is part of Transmission Remote GUI.
-  Copyright (c) 2008-2010 by Yury Sidorov.
-
-  Transmission Remote GUI is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  Transmission Remote GUI is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with Transmission Remote GUI; if not, write to the Free Software
-  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-*************************************************************************************}
-
-unit ColSetup;
-
-{$mode objfpc}{$H+}
-
-interface
-
-uses
-  Classes, SysUtils, FileUtil, LResources, Forms, Controls, Graphics, Dialogs, ComCtrls, CheckLst, StdCtrls, ButtonPanel, ExtCtrls, VarGrid;
-
-type
-
-  { TColSetupForm }
-
-  TColSetupForm = class(TForm)
-    btDown: TButton;
-    btUp: TButton;
-    Buttons: TButtonPanel;
-    lstColumns: TCheckListBox;
-    Panel1: TPanel;
-    procedure btDownClick(Sender: TObject);
-    procedure btOkClick(Sender: TObject);
-    procedure btUpClick(Sender: TObject);
-    procedure FormCreate(Sender: TObject);
-    procedure lstColumnsClick(Sender: TObject);
-    procedure lstColumnsClickCheck(Sender: TObject);
-  private
-    FPersistentColumnId: integer;
-
-    procedure UpdateUI;
-    procedure MoveItem(Delta: integer);
-  public
-    { public declarations }
-  end; 
-
-function SetupColumns(LV: TVarGrid; PersistentColumnId: integer; const GridName: string): boolean;
-
-implementation
-
-uses main;
-
-function SetupColumns(LV: TVarGrid; PersistentColumnId: integer; const GridName: string): boolean;
-var
-  i, j: integer;
-begin
-  with TColSetupForm.Create(Application) do
-  try
-    if GridName <> '' then
-      Caption:=Caption + ' - ' + GridName;
-    FPersistentColumnId:=PersistentColumnId;
-    for i:=0 to LV.Columns.Count - 1 do
-      with LV.Columns[i] do begin
-        j:=lstColumns.Items.Add(Title.Caption);
-        lstColumns.Items.Objects[j]:=TObject(ptrint(ID));
-        if Width = 0 then
-          Visible:=False;
-        lstColumns.Checked[j]:=Visible;
-        if ID = PersistentColumnId then
-          lstColumns.Checked[j]:=True;
-      end;
-    UpdateUI;
-    Result:=ShowModal = mrOk;
-    if Result then begin
-      LV.BeginUpdate;
-      try
-        for i:=0 to lstColumns.Items.Count - 1 do
-          for j:=0 to LV.Columns.Count - 1 do
-            with LV.Columns[j] do
-              if ID = ptrint(lstColumns.Items.Objects[i]) then begin
-                Index:=i;
-                if ID - 1 = PersistentColumnId then
-                  lstColumns.Checked[i]:=True;
-                if not Visible and (Visible <> lstColumns.Checked[i]) then begin
-                  Visible:=True;
-                  if Width < 32 then
-                    Width:=32;
-                end
-                else
-                  Visible:=lstColumns.Checked[i];
-                if not Visible and (LV.SortColumn = ID - 1) and (PersistentColumnId >= 0) then
-                  LV.SortColumn:=PersistentColumnId;
-                break;
-              end;
-      finally
-        LV.EndUpdate;
-      end;
-    end;
-  finally
-    Free;
-  end;
-  Application.ProcessMessages;
-end;
-
-{ TColSetupForm }
-
-procedure TColSetupForm.btOkClick(Sender: TObject);
-var
-  i: integer;
-begin
-  for i:=0 to lstColumns.Items.Count - 1 do
-    if lstColumns.Checked[i] then begin
-      ModalResult:=mrOk;
-      exit;
-    end;
-  MessageDlg('At least single column must be visible.', mtError, [mbOK], 0);
-end;
-
-procedure TColSetupForm.btDownClick(Sender: TObject);
-begin
-  MoveItem(1);
-end;
-
-procedure TColSetupForm.btUpClick(Sender: TObject);
-begin
-  MoveItem(-1);
-end;
-
-procedure TColSetupForm.FormCreate(Sender: TObject);
-begin
-  Font.Size:=MainForm.Font.Size;
-  Buttons.OKButton.ModalResult:=mrNone;
-  Buttons.OKButton.OnClick:=@btOKClick;
-end;
-
-procedure TColSetupForm.lstColumnsClick(Sender: TObject);
-begin
-  UpdateUI;
-end;
-
-procedure TColSetupForm.lstColumnsClickCheck(Sender: TObject);
-var
-  i: integer;
-begin
-  if FPersistentColumnId >= 0 then
-    for i:=0 to lstColumns.Items.Count - 1 do
-      if ptrint(lstColumns.Items.Objects[i]) = FPersistentColumnId then begin
-        lstColumns.Checked[i]:=True;
-        break;
-      end;
-end;
-
-procedure TColSetupForm.UpdateUI;
-begin
-  btUp.Enabled:=lstColumns.ItemIndex > 0;
-  btDown.Enabled:=(lstColumns.ItemIndex >= 0) and (lstColumns.ItemIndex < lstColumns.Items.Count - 1);
-end;
-
-procedure TColSetupForm.MoveItem(Delta: integer);
-var
-  c: boolean;
-  OldIdx: integer;
-begin
-  OldIdx:=lstColumns.ItemIndex;
-  c:=lstColumns.Checked[OldIdx];
-  lstColumns.Items.Move(OldIdx, OldIdx+Delta);
-  lstColumns.Checked[OldIdx+Delta]:=c;
-  lstColumns.ItemIndex:=OldIdx+Delta;
-  UpdateUI;
-end;
-
-initialization
-  {$I colsetup.lrs}
-
-end.
-
+{*************************************************************************************
+  This file is part of Transmission Remote GUI.
+  Copyright (c) 2008-2010 by Yury Sidorov.
+
+  Transmission Remote GUI is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  Transmission Remote GUI is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with Transmission Remote GUI; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+*************************************************************************************}
+
+unit ColSetup;
+
+{$mode objfpc}{$H+}
+
+interface
+
+uses
+  Classes, SysUtils, FileUtil, LResources, Forms, Controls, Graphics, Dialogs, ComCtrls, CheckLst, StdCtrls, ButtonPanel, ExtCtrls, VarGrid;
+
+type
+
+  { TColSetupForm }
+
+  TColSetupForm = class(TForm)
+    btDown: TButton;
+    btUp: TButton;
+    Buttons: TButtonPanel;
+    lstColumns: TCheckListBox;
+    Panel1: TPanel;
+    procedure btDownClick(Sender: TObject);
+    procedure btOkClick(Sender: TObject);
+    procedure btUpClick(Sender: TObject);
+    procedure FormCreate(Sender: TObject);
+    procedure lstColumnsClick(Sender: TObject);
+    procedure lstColumnsClickCheck(Sender: TObject);
+  private
+    FPersistentColumnId: integer;
+
+    procedure UpdateUI;
+    procedure MoveItem(Delta: integer);
+  public
+    { public declarations }
+  end; 
+
+function SetupColumns(LV: TVarGrid; PersistentColumnId: integer; const GridName: string): boolean;
+
+implementation
+
+uses main;
+
+function SetupColumns(LV: TVarGrid; PersistentColumnId: integer; const GridName: string): boolean;
+var
+  i, j: integer;
+begin
+  with TColSetupForm.Create(Application) do
+  try
+    if GridName <> '' then
+      Caption:=Caption + ' - ' + GridName;
+    FPersistentColumnId:=PersistentColumnId;
+    for i:=0 to LV.Columns.Count - 1 do
+      with LV.Columns[i] do begin
+        j:=lstColumns.Items.Add(Title.Caption);
+        lstColumns.Items.Objects[j]:=TObject(ptrint(ID));
+        if Width = 0 then
+          Visible:=False;
+        lstColumns.Checked[j]:=Visible;
+        if ID = PersistentColumnId then
+          lstColumns.Checked[j]:=True;
+      end;
+    UpdateUI;
+    Result:=ShowModal = mrOk;
+    if Result then begin
+      LV.BeginUpdate;
+      try
+        for i:=0 to lstColumns.Items.Count - 1 do
+          for j:=0 to LV.Columns.Count - 1 do
+            with LV.Columns[j] do
+              if ID = ptrint(lstColumns.Items.Objects[i]) then begin
+                Index:=i;
+                if ID - 1 = PersistentColumnId then
+                  lstColumns.Checked[i]:=True;
+                if not Visible and (Visible <> lstColumns.Checked[i]) then begin
+                  Visible:=True;
+                  if Width < 32 then
+                    Width:=70;
+                end
+                else
+                  Visible:=lstColumns.Checked[i];
+                if not Visible and (LV.SortColumn = ID - 1) and (PersistentColumnId >= 0) then
+                  LV.SortColumn:=PersistentColumnId;
+                break;
+              end;
+      finally
+        LV.EndUpdate;
+      end;
+    end;
+  finally
+    Free;
+  end;
+  Application.ProcessMessages;
+end;
+
+{ TColSetupForm }
+
+procedure TColSetupForm.btOkClick(Sender: TObject);
+var
+  i: integer;
+begin
+  for i:=0 to lstColumns.Items.Count - 1 do
+    if lstColumns.Checked[i] then begin
+      ModalResult:=mrOk;
+      exit;
+    end;
+  MessageDlg('At least single column must be visible.', mtError, [mbOK], 0);
+end;
+
+procedure TColSetupForm.btDownClick(Sender: TObject);
+begin
+  MoveItem(1);
+end;
+
+procedure TColSetupForm.btUpClick(Sender: TObject);
+begin
+  MoveItem(-1);
+end;
+
+procedure TColSetupForm.FormCreate(Sender: TObject);
+begin
+  Font.Size:=MainForm.Font.Size;
+  Buttons.OKButton.ModalResult:=mrNone;
+  Buttons.OKButton.OnClick:=@btOKClick;
+end;
+
+procedure TColSetupForm.lstColumnsClick(Sender: TObject);
+begin
+  UpdateUI;
+end;
+
+procedure TColSetupForm.lstColumnsClickCheck(Sender: TObject);
+var
+  i: integer;
+begin
+  if FPersistentColumnId >= 0 then
+    for i:=0 to lstColumns.Items.Count - 1 do
+      if ptrint(lstColumns.Items.Objects[i]) = FPersistentColumnId then begin
+        lstColumns.Checked[i]:=True;
+        break;
+      end;
+end;
+
+procedure TColSetupForm.UpdateUI;
+begin
+  btUp.Enabled:=lstColumns.ItemIndex > 0;
+  btDown.Enabled:=(lstColumns.ItemIndex >= 0) and (lstColumns.ItemIndex < lstColumns.Items.Count - 1);
+end;
+
+procedure TColSetupForm.MoveItem(Delta: integer);
+var
+  c: boolean;
+  OldIdx: integer;
+begin
+  OldIdx:=lstColumns.ItemIndex;
+  c:=lstColumns.Checked[OldIdx];
+  lstColumns.Items.Move(OldIdx, OldIdx+Delta);
+  lstColumns.Checked[OldIdx+Delta]:=c;
+  lstColumns.ItemIndex:=OldIdx+Delta;
+  UpdateUI;
+end;
+
+initialization
+  {$I colsetup.lrs}
+
+end.
+
diff -ru TransGUI/connoptions.lfm TransGUI_new/connoptions.lfm
--- TransGUI/connoptions.lfm	2011-02-21 23:11:09.000000000 +0100
+++ TransGUI_new/connoptions.lfm	2011-09-18 12:31:22.000000000 +0200
@@ -1,336 +1,347 @@
-object ConnOptionsForm: TConnOptionsForm
-  Left = 401
-  Height = 313
-  Top = 186
-  Width = 471
-  HorzScrollBar.Page = 349
-  VertScrollBar.Page = 238
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'Connection options'
-  ClientHeight = 313
-  ClientWidth = 471
-  Constraints.MinHeight = 280
-  Constraints.MinWidth = 471
-  OnCreate = FormCreate
-  OnShow = FormShow
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object Page: TPageControl
-    Left = 8
-    Height = 207
-    Top = 64
-    Width = 455
-    ActivePage = tabProxy
-    Align = alClient
-    TabIndex = 1
-    TabOrder = 1
-    object tabConnection: TTabSheet
-      Caption = 'Connection'
-      ClientHeight = 181
-      ClientWidth = 447
-      object txPassword: TLabel
-        Left = 8
-        Height = 14
-        Top = 97
-        Width = 51
-        Caption = 'Password:'
-        ParentColor = False
-      end
-      object txUserName: TLabel
-        Left = 8
-        Height = 14
-        Top = 69
-        Width = 56
-        Caption = 'User name:'
-        ParentColor = False
-      end
-      object txPort: TLabel
-        Left = 8
-        Height = 14
-        Top = 41
-        Width = 25
-        Caption = 'Port:'
-        ParentColor = False
-      end
-      object txHost: TLabel
-        Left = 8
-        Height = 14
-        Top = 13
-        Width = 66
-        Caption = 'Remote host:'
-        ParentColor = False
-      end
-      object edPassword: TEdit
-        Left = 180
-        Height = 21
-        Top = 94
-        Width = 258
-        Anchors = [akTop, akLeft, akRight]
-        EchoMode = emPassword
-        PasswordChar = '*'
-        TabOrder = 4
-      end
-      object edUserName: TEdit
-        Left = 180
-        Height = 21
-        Top = 66
-        Width = 258
-        Anchors = [akTop, akLeft, akRight]
-        TabOrder = 3
-      end
-      object edPort: TSpinEdit
-        Left = 180
-        Height = 21
-        Top = 38
-        Width = 70
-        MaxValue = 65535
-        MinValue = 1
-        TabOrder = 1
-        Value = 65535
-      end
-      object cbSSL: TCheckBox
-        Left = 260
-        Height = 17
-        Top = 40
-        Width = 56
-        Caption = 'Use SSL'
-        TabOrder = 2
-      end
-      object edHost: TEdit
-        Left = 180
-        Height = 21
-        Top = 10
-        Width = 258
-        Anchors = [akTop, akLeft, akRight]
-        OnChange = edHostChange
-        TabOrder = 0
-      end
-    end
-    object tabProxy: TTabSheet
-      Caption = 'Proxy'
-      ClientHeight = 181
-      ClientWidth = 447
-      object txProxy: TLabel
-        Left = 8
-        Height = 14
-        Top = 37
-        Width = 67
-        Caption = 'Proxy server:'
-        ParentColor = False
-      end
-      object txProxyPort: TLabel
-        Left = 8
-        Height = 14
-        Top = 65
-        Width = 56
-        Caption = 'Proxy port:'
-        ParentColor = False
-      end
-      object txProxyUserName: TLabel
-        Left = 8
-        Height = 14
-        Top = 93
-        Width = 86
-        Caption = 'Proxy user name:'
-        ParentColor = False
-      end
-      object txProxyPassword: TLabel
-        Left = 8
-        Height = 14
-        Top = 121
-        Width = 82
-        Caption = 'Proxy password:'
-        ParentColor = False
-      end
-      object cbUseProxy: TCheckBox
-        Left = 8
-        Height = 17
-        Top = 10
-        Width = 101
-        Caption = 'Use proxy server'
-        OnClick = cbUseProxyClick
-        TabOrder = 0
-      end
-      object edProxy: TEdit
-        Left = 180
-        Height = 21
-        Top = 34
-        Width = 258
-        Anchors = [akTop, akLeft, akRight]
-        TabOrder = 1
-      end
-      object edProxyPort: TSpinEdit
-        Left = 180
-        Height = 21
-        Top = 62
-        Width = 70
-        MaxValue = 65535
-        MinValue = 1
-        TabOrder = 2
-        Value = 65535
-      end
-      object edProxyUserName: TEdit
-        Left = 180
-        Height = 21
-        Top = 90
-        Width = 258
-        Anchors = [akTop, akLeft, akRight]
-        TabOrder = 3
-      end
-      object edProxyPassword: TEdit
-        Left = 180
-        Height = 21
-        Top = 118
-        Width = 258
-        Anchors = [akTop, akLeft, akRight]
-        EchoMode = emPassword
-        PasswordChar = '*'
-        TabOrder = 4
-      end
-    end
-    object tabPaths: TTabSheet
-      Caption = 'Paths'
-      ClientHeight = 181
-      ClientWidth = 447
-      OnShow = tabPathsShow
-      object txPaths: TLabel
-        Left = 8
-        Height = 66
-        Top = 8
-        Width = 430
-        Anchors = [akTop, akLeft, akRight]
-        Caption = 'Remote to local path mappings.'#13#10#13#10'Examples:'#13#10'/share=\\pch\share'#13#10'/var/downloads/music=Z:\music'
-        ParentColor = False
-        WordWrap = True
-      end
-      object edPaths: TMemo
-        Left = 8
-        Height = 87
-        Top = 82
-        Width = 430
-        Anchors = [akTop, akLeft, akRight, akBottom]
-        ScrollBars = ssAutoVertical
-        TabOrder = 0
-      end
-    end
-    object tabMisc: TTabSheet
-      Caption = 'Misc'
-      ClientHeight = 181
-      ClientWidth = 447
-      object gbSpeed: TGroupBox
-        Left = 8
-        Height = 125
-        Top = 6
-        Width = 430
-        Anchors = [akTop, akLeft, akRight]
-        Caption = 'Speed limit menu items'
-        ClientHeight = 107
-        ClientWidth = 426
-        TabOrder = 0
-        object txDownSpeeds: TLabel
-          Left = 8
-          Height = 14
-          Top = 4
-          Width = 121
-          Caption = 'Download speeds (KB/s):'
-          ParentColor = False
-        end
-        object txUpSpeeds: TLabel
-          Left = 8
-          Height = 14
-          Top = 52
-          Width = 107
-          Caption = 'Upload speeds (KB/s):'
-          ParentColor = False
-        end
-        object edDownSpeeds: TEdit
-          Left = 8
-          Height = 21
-          Top = 24
-          Width = 410
-          Anchors = [akTop, akLeft, akRight]
-          TabOrder = 0
-        end
-        object edUpSpeeds: TEdit
-          Left = 8
-          Height = 21
-          Top = 72
-          Width = 410
-          Anchors = [akTop, akLeft, akRight]
-          TabOrder = 1
-        end
-      end
-    end
-  end
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 26
-    Top = 279
-    Width = 455
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 2
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-    ShowBevel = False
-  end
-  object panTop: TPanel
-    Left = 8
-    Height = 56
-    Top = 8
-    Width = 455
-    Align = alTop
-    BevelOuter = bvNone
-    ClientHeight = 56
-    ClientWidth = 455
-    TabOrder = 0
-    object Label1: TLabel
-      Left = 0
-      Height = 14
-      Top = 4
-      Width = 59
-      Caption = 'Connection:'
-      ParentColor = False
-    end
-    object cbConnection: TComboBox
-      Left = 112
-      Height = 21
-      Top = 1
-      Width = 343
-      Anchors = [akTop, akLeft, akRight]
-      ItemHeight = 13
-      OnSelect = cbConnectionSelect
-      Style = csDropDownList
-      TabOrder = 0
-    end
-    object btNew: TButton
-      Left = 112
-      Height = 23
-      Top = 28
-      Width = 111
-      Caption = 'New'
-      OnClick = btNewClick
-      TabOrder = 1
-    end
-    object btDel: TButton
-      Left = 344
-      Height = 23
-      Top = 28
-      Width = 111
-      Caption = 'Delete'
-      OnClick = btDelClick
-      TabOrder = 3
-    end
-    object btRename: TButton
-      Left = 228
-      Height = 23
-      Top = 28
-      Width = 111
-      Caption = 'Rename'
-      OnClick = btRenameClick
-      TabOrder = 2
-    end
-  end
-end
+object ConnOptionsForm: TConnOptionsForm
+  Left = 401
+  Height = 313
+  Top = 186
+  Width = 471
+  HorzScrollBar.Page = 349
+  VertScrollBar.Page = 238
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  Caption = 'Connection options'
+  ClientHeight = 313
+  ClientWidth = 471
+  Constraints.MinHeight = 280
+  Constraints.MinWidth = 471
+  OnCreate = FormCreate
+  OnShow = FormShow
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object Page: TPageControl
+    Left = 8
+    Height = 202
+    Top = 69
+    Width = 455
+    ActivePage = tabMisc
+    Align = alClient
+    BorderSpacing.Left = 8
+    BorderSpacing.Right = 8
+    TabIndex = 3
+    TabOrder = 1
+    object tabConnection: TTabSheet
+      Caption = 'Connection'
+      ClientHeight = 176
+      ClientWidth = 447
+      object txPassword: TLabel
+        Left = 8
+        Height = 14
+        Top = 97
+        Width = 51
+        Caption = 'Password:'
+        ParentColor = False
+      end
+      object txUserName: TLabel
+        Left = 8
+        Height = 14
+        Top = 69
+        Width = 56
+        Caption = 'User name:'
+        ParentColor = False
+      end
+      object txPort: TLabel
+        Left = 8
+        Height = 14
+        Top = 41
+        Width = 25
+        Caption = 'Port:'
+        ParentColor = False
+      end
+      object txHost: TLabel
+        Left = 8
+        Height = 14
+        Top = 13
+        Width = 66
+        Caption = 'Remote host:'
+        ParentColor = False
+      end
+      object edPassword: TEdit
+        Left = 180
+        Height = 21
+        Top = 94
+        Width = 258
+        Anchors = [akTop, akLeft, akRight]
+        EchoMode = emPassword
+        PasswordChar = '*'
+        TabOrder = 4
+      end
+      object edUserName: TEdit
+        Left = 180
+        Height = 21
+        Top = 66
+        Width = 258
+        Anchors = [akTop, akLeft, akRight]
+        TabOrder = 3
+      end
+      object edPort: TSpinEdit
+        Left = 180
+        Height = 21
+        Top = 38
+        Width = 70
+        MaxValue = 65535
+        MinValue = 1
+        TabOrder = 1
+        Value = 65535
+      end
+      object cbSSL: TCheckBox
+        Left = 260
+        Height = 17
+        Top = 40
+        Width = 56
+        Caption = 'Use SSL'
+        TabOrder = 2
+      end
+      object edHost: TEdit
+        Left = 180
+        Height = 21
+        Top = 10
+        Width = 258
+        Anchors = [akTop, akLeft, akRight]
+        OnChange = edHostChange
+        TabOrder = 0
+      end
+    end
+    object tabProxy: TTabSheet
+      Caption = 'Proxy'
+      ClientHeight = 176
+      ClientWidth = 447
+      object txProxy: TLabel
+        Left = 8
+        Height = 14
+        Top = 37
+        Width = 67
+        Caption = 'Proxy server:'
+        ParentColor = False
+      end
+      object txProxyPort: TLabel
+        Left = 8
+        Height = 14
+        Top = 65
+        Width = 56
+        Caption = 'Proxy port:'
+        ParentColor = False
+      end
+      object txProxyUserName: TLabel
+        Left = 8
+        Height = 14
+        Top = 93
+        Width = 86
+        Caption = 'Proxy user name:'
+        ParentColor = False
+      end
+      object txProxyPassword: TLabel
+        Left = 8
+        Height = 14
+        Top = 121
+        Width = 82
+        Caption = 'Proxy password:'
+        ParentColor = False
+      end
+      object cbUseProxy: TCheckBox
+        Left = 8
+        Height = 17
+        Top = 10
+        Width = 101
+        Caption = 'Use proxy server'
+        OnClick = cbUseProxyClick
+        TabOrder = 0
+      end
+      object edProxy: TEdit
+        Left = 180
+        Height = 21
+        Top = 34
+        Width = 258
+        Anchors = [akTop, akLeft, akRight]
+        TabOrder = 1
+      end
+      object edProxyPort: TSpinEdit
+        Left = 180
+        Height = 21
+        Top = 62
+        Width = 70
+        MaxValue = 65535
+        MinValue = 1
+        TabOrder = 2
+        Value = 65535
+      end
+      object edProxyUserName: TEdit
+        Left = 180
+        Height = 21
+        Top = 90
+        Width = 258
+        Anchors = [akTop, akLeft, akRight]
+        TabOrder = 3
+      end
+      object edProxyPassword: TEdit
+        Left = 180
+        Height = 21
+        Top = 118
+        Width = 258
+        Anchors = [akTop, akLeft, akRight]
+        EchoMode = emPassword
+        PasswordChar = '*'
+        TabOrder = 4
+      end
+    end
+    object tabPaths: TTabSheet
+      Caption = 'Paths'
+      ClientHeight = 176
+      ClientWidth = 447
+      OnShow = tabPathsShow
+      object txPaths: TLabel
+        Left = 8
+        Height = 66
+        Top = 8
+        Width = 430
+        Anchors = [akTop, akLeft, akRight]
+        Caption = 'Remote to local path mappings.'#13#10#13#10'Examples:'#13#10'/share=\\pch\share'#13#10'/var/downloads/music=Z:\music'
+        ParentColor = False
+        WordWrap = True
+      end
+      object edPaths: TMemo
+        Left = 8
+        Height = 82
+        Top = 82
+        Width = 430
+        Anchors = [akTop, akLeft, akRight, akBottom]
+        ScrollBars = ssAutoVertical
+        TabOrder = 0
+      end
+    end
+    object tabMisc: TTabSheet
+      Caption = 'Misc'
+      ClientHeight = 176
+      ClientWidth = 447
+      object gbSpeed: TGroupBox
+        Left = 8
+        Height = 125
+        Top = 6
+        Width = 430
+        Anchors = [akTop, akLeft, akRight]
+        Caption = 'Speed limit menu items'
+        ClientHeight = 107
+        ClientWidth = 426
+        TabOrder = 0
+        object txDownSpeeds: TLabel
+          Left = 8
+          Height = 14
+          Top = 4
+          Width = 121
+          Caption = 'Download speeds (KB/s):'
+          ParentColor = False
+        end
+        object txUpSpeeds: TLabel
+          Left = 8
+          Height = 14
+          Top = 52
+          Width = 107
+          Caption = 'Upload speeds (KB/s):'
+          ParentColor = False
+        end
+        object edDownSpeeds: TEdit
+          Left = 8
+          Height = 21
+          Top = 24
+          Width = 410
+          Anchors = [akTop, akLeft, akRight]
+          TabOrder = 0
+        end
+        object edUpSpeeds: TEdit
+          Left = 8
+          Height = 21
+          Top = 72
+          Width = 410
+          Anchors = [akTop, akLeft, akRight]
+          TabOrder = 1
+        end
+      end
+    end
+  end
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 26
+    Top = 279
+    Width = 471
+    BorderSpacing.Top = 8
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 2
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+    ShowBevel = False
+  end
+  object panTop: TPanel
+    Left = 8
+    Height = 53
+    Top = 8
+    Width = 455
+    Align = alTop
+    BorderSpacing.Around = 8
+    BevelOuter = bvNone
+    ClientHeight = 53
+    ClientWidth = 455
+    TabOrder = 0
+    object Label1: TLabel
+      Left = 0
+      Height = 14
+      Top = 4
+      Width = 59
+      Caption = 'Connection:'
+      ParentColor = False
+    end
+    object cbConnection: TComboBox
+      Left = 112
+      Height = 21
+      Top = 1
+      Width = 343
+      Anchors = [akTop, akLeft, akRight]
+      ItemHeight = 13
+      OnSelect = cbConnectionSelect
+      Style = csDropDownList
+      TabOrder = 0
+    end
+    object btNew: TButton
+      Left = 112
+      Height = 23
+      Top = 28
+      Width = 111
+      Caption = 'New'
+      OnClick = btNewClick
+      TabOrder = 1
+    end
+    object btDel: TButton
+      Left = 344
+      Height = 23
+      Top = 28
+      Width = 111
+      Caption = 'Delete'
+      OnClick = btDelClick
+      TabOrder = 3
+    end
+    object btRename: TButton
+      Left = 228
+      Height = 23
+      Top = 28
+      Width = 111
+      Caption = 'Rename'
+      OnClick = btRenameClick
+      TabOrder = 2
+    end
+  end
+end
diff -ru TransGUI/daemonoptions.lfm TransGUI_new/daemonoptions.lfm
--- TransGUI/daemonoptions.lfm	2011-04-03 12:16:31.000000000 +0200
+++ TransGUI_new/daemonoptions.lfm	2011-09-18 12:31:30.000000000 +0200
@@ -1,493 +1,505 @@
-object DaemonOptionsForm: TDaemonOptionsForm
-  Left = 354
-  Height = 349
-  Top = 216
-  Width = 586
-  HorzScrollBar.Page = 409
-  VertScrollBar.Page = 302
-  VertScrollBar.Range = 169
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'Transmission options'
-  ClientHeight = 349
-  ClientWidth = 586
-  Constraints.MinHeight = 340
-  Constraints.MinWidth = 400
-  OnCreate = FormCreate
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object Page: TPageControl
-    Left = 8
-    Height = 299
-    Top = 8
-    Width = 570
-    ActivePage = tabNetwork
-    Align = alClient
-    TabIndex = 1
-    TabOrder = 0
-    object tabDownload: TTabSheet
-      Caption = 'Download'
-      ClientHeight = 273
-      ClientWidth = 562
-      object txDownloadDir: TLabel
-        Left = 8
-        Height = 14
-        Top = 8
-        Width = 67
-        Caption = 'Download dir:'
-        ParentColor = False
-      end
-      object txCacheSize: TLabel
-        Left = 8
-        Height = 14
-        Top = 191
-        Width = 76
-        Caption = 'Disk cache size:'
-        ParentColor = False
-      end
-      object txMB: TLabel
-        Left = 476
-        Height = 14
-        Top = 191
-        Width = 15
-        Caption = 'MB'
-        ParentColor = False
-      end
-      object txMinutes: TLabel
-        Left = 476
-        Height = 14
-        Top = 164
-        Width = 38
-        Caption = 'minutes'
-        ParentColor = False
-      end
-      object edDownloadDir: TEdit
-        Left = 8
-        Height = 21
-        Top = 28
-        Width = 546
-        Anchors = [akTop, akLeft, akRight]
-        TabOrder = 0
-      end
-      object cbIncompleteDir: TCheckBox
-        Left = 8
-        Height = 17
-        Top = 80
-        Width = 159
-        Caption = 'Directory for incomplete files:'
-        OnClick = cbIncompleteDirClick
-        TabOrder = 2
-      end
-      object edIncompleteDir: TEdit
-        Left = 8
-        Height = 21
-        Top = 103
-        Width = 546
-        Anchors = [akTop, akLeft, akRight]
-        TabOrder = 3
-      end
-      object cbPartExt: TCheckBox
-        Left = 8
-        Height = 17
-        Top = 56
-        Width = 203
-        Caption = 'Add .part extension to incomplete files'
-        TabOrder = 1
-      end
-      object cbSeedRatio: TCheckBox
-        Left = 8
-        Height = 17
-        Top = 134
-        Width = 71
-        Caption = 'Seed ratio:'
-        OnClick = cbSeedRatioClick
-        TabOrder = 4
-      end
-      object edSeedRatio: TFloatSpinEdit
-        Left = 400
-        Height = 21
-        Top = 134
-        Width = 66
-        Increment = 0.1
-        MaxValue = 9999
-        MinValue = 0
-        TabOrder = 5
-        Value = 0
-      end
-      object edCacheSize: TSpinEdit
-        Left = 400
-        Height = 21
-        Top = 188
-        Width = 66
-        MaxValue = 9999
-        TabOrder = 8
-      end
-      object cbIdleSeedLimit: TCheckBox
-        Left = 8
-        Height = 17
-        Top = 163
-        Width = 170
-        Caption = 'Stop seeding when inactive for:'
-        OnClick = cbIdleSeedLimitClick
-        TabOrder = 6
-      end
-      object edIdleSeedLimit: TSpinEdit
-        Left = 400
-        Height = 21
-        Top = 161
-        Width = 66
-        MaxValue = 999999
-        MinValue = 1
-        TabOrder = 7
-        Value = 1
-      end
-    end
-    object tabNetwork: TTabSheet
-      Caption = 'Network'
-      ClientHeight = 273
-      ClientWidth = 562
-      object txPort: TLabel
-        Left = 8
-        Height = 14
-        Top = 13
-        Width = 71
-        Caption = 'Incoming port:'
-        ParentColor = False
-      end
-      object txEncryption: TLabel
-        Left = 8
-        Height = 14
-        Top = 69
-        Width = 56
-        Caption = 'Encryption:'
-        ParentColor = False
-      end
-      object txPeerLimit: TLabel
-        Left = 8
-        Height = 14
-        Top = 99
-        Width = 80
-        Caption = 'Global peer limit:'
-        ParentColor = False
-      end
-      object edPort: TSpinEdit
-        Left = 192
-        Height = 21
-        Top = 10
-        Width = 90
-        MaxValue = 65535
-        MinValue = 1
-        TabOrder = 0
-        Value = 1
-      end
-      object cbEncryption: TComboBox
-        Left = 192
-        Height = 21
-        Top = 66
-        Width = 362
-        Anchors = [akTop, akLeft, akRight]
-        ItemHeight = 13
-        Style = csDropDownList
-        TabOrder = 4
-      end
-      object cbPortForwarding: TCheckBox
-        Left = 292
-        Height = 17
-        Top = 38
-        Width = 128
-        Caption = 'Enable port forwarding'
-        TabOrder = 3
-      end
-      object cbPEX: TCheckBox
-        Left = 192
-        Height = 17
-        Top = 126
-        Width = 125
-        Caption = 'Enable Peer Exchange'
-        TabOrder = 6
-      end
-      object edMaxPeers: TSpinEdit
-        Left = 192
-        Height = 21
-        Top = 96
-        Width = 66
-        MaxValue = 99999
-        MinValue = 1
-        TabOrder = 5
-        Value = 1
-      end
-      object cbDHT: TCheckBox
-        Left = 192
-        Height = 17
-        Top = 146
-        Width = 73
-        Caption = 'Enable DHT'
-        TabOrder = 7
-      end
-      object cbRandomPort: TCheckBox
-        Left = 292
-        Height = 17
-        Top = 13
-        Width = 193
-        Caption = 'Peek random port on daemon launch'
-        OnClick = cbRandomPortClick
-        TabOrder = 1
-      end
-      object btTestPort: TButton
-        Left = 192
-        Height = 23
-        Top = 35
-        Width = 90
-        Caption = 'Test port'
-        OnClick = btTestPortClick
-        TabOrder = 2
-      end
-      object cbBlocklist: TCheckBox
-        Left = 8
-        Height = 17
-        Top = 210
-        Width = 94
-        Caption = 'Enable blocklist:'
-        OnClick = cbBlocklistClick
-        TabOrder = 10
-      end
-      object edBlocklistURL: TEdit
-        Left = 8
-        Height = 21
-        Top = 233
-        Width = 546
-        Anchors = [akTop, akLeft, akRight]
-        TabOrder = 11
-      end
-      object cbLPD: TCheckBox
-        Left = 192
-        Height = 17
-        Top = 166
-        Width = 152
-        Caption = 'Enable Local Peer Discovery'
-        TabOrder = 8
-      end
-      object cbUTP: TCheckBox
-        Left = 192
-        Height = 17
-        Top = 186
-        Width = 71
-        Caption = 'Enable µTP'
-        TabOrder = 9
-      end
-    end
-    object tabBandwidth: TTabSheet
-      Caption = 'Bandwidth'
-      ClientHeight = 273
-      ClientWidth = 562
-      object gbBandwidth: TGroupBox
-        Left = 8
-        Height = 76
-        Top = 6
-        Width = 545
-        Anchors = [akTop, akLeft, akRight]
-        Caption = 'Global bandwidth settings'
-        ClientHeight = 58
-        ClientWidth = 541
-        TabOrder = 0
-        object txKbs1: TLabel
-          Left = 505
-          Height = 14
-          Top = 5
-          Width = 22
-          Anchors = [akTop, akRight]
-          Caption = 'KB/s'
-          ParentColor = False
-        end
-        object txKbs2: TLabel
-          Left = 505
-          Height = 14
-          Top = 32
-          Width = 22
-          Anchors = [akTop, akRight]
-          Caption = 'KB/s'
-          ParentColor = False
-        end
-        object cbMaxDown: TCheckBox
-          Left = 8
-          Height = 17
-          Top = 4
-          Width = 147
-          Caption = 'Maximum download speed:'
-          OnClick = cbMaxDownClick
-          TabOrder = 0
-        end
-        object edMaxDown: TSpinEdit
-          Left = 424
-          Height = 21
-          Top = 2
-          Width = 66
-          Anchors = [akTop, akRight]
-          Increment = 10
-          MaxValue = 999999
-          TabOrder = 1
-        end
-        object cbMaxUp: TCheckBox
-          Left = 8
-          Height = 17
-          Top = 30
-          Width = 133
-          Caption = 'Maximum upload speed:'
-          OnClick = cbMaxUpClick
-          TabOrder = 2
-        end
-        object edMaxUp: TSpinEdit
-          Left = 424
-          Height = 21
-          Top = 28
-          Width = 66
-          Anchors = [akTop, akRight]
-          Increment = 10
-          MaxValue = 999999
-          TabOrder = 3
-        end
-      end
-      object gbAltSpeed: TGroupBox
-        Left = 8
-        Height = 175
-        Top = 86
-        Width = 545
-        Anchors = [akTop, akLeft, akRight]
-        Caption = 'Alternate bandwidth settings'
-        ClientHeight = 157
-        ClientWidth = 541
-        TabOrder = 1
-        object txKbs3: TLabel
-          Left = 505
-          Height = 14
-          Top = 5
-          Width = 22
-          Anchors = [akTop, akRight]
-          Caption = 'KB/s'
-          ParentColor = False
-        end
-        object txKbs4: TLabel
-          Left = 505
-          Height = 14
-          Top = 32
-          Width = 22
-          Anchors = [akTop, akRight]
-          Caption = 'KB/s'
-          ParentColor = False
-        end
-        object txAltDown: TLabel
-          Left = 8
-          Height = 14
-          Top = 5
-          Width = 130
-          Caption = 'Maximum download speed:'
-          ParentColor = False
-        end
-        object txAltUp: TLabel
-          Left = 8
-          Height = 14
-          Top = 31
-          Width = 116
-          Caption = 'Maximum upload speed:'
-          ParentColor = False
-        end
-        object txFrom: TLabel
-          Left = 26
-          Height = 14
-          Top = 103
-          Width = 29
-          Caption = 'From:'
-          ParentColor = False
-        end
-        object txDays: TLabel
-          Left = 26
-          Height = 14
-          Top = 132
-          Width = 29
-          Caption = 'Days:'
-          ParentColor = False
-        end
-        object txTo: TLabel
-          Left = 150
-          Height = 14
-          Top = 104
-          Width = 49
-          Alignment = taCenter
-          AutoSize = False
-          Caption = 'to:'
-          ParentColor = False
-        end
-        object edAltDown: TSpinEdit
-          Left = 424
-          Height = 21
-          Top = 2
-          Width = 66
-          Anchors = [akTop, akRight]
-          Increment = 10
-          MaxValue = 999999
-          TabOrder = 0
-        end
-        object edAltUp: TSpinEdit
-          Left = 424
-          Height = 21
-          Top = 28
-          Width = 66
-          Anchors = [akTop, akRight]
-          Increment = 10
-          MaxValue = 999999
-          TabOrder = 1
-        end
-        object cbAltEnabled: TCheckBox
-          Left = 8
-          Height = 17
-          Top = 54
-          Width = 177
-          Caption = 'Use alternate bandwidth settings'
-          TabOrder = 2
-        end
-        object cbAutoAlt: TCheckBox
-          Left = 8
-          Height = 17
-          Top = 76
-          Width = 252
-          Caption = 'Apply alternate bandwidth settings automatically'
-          OnClick = cbAutoAltClick
-          TabOrder = 3
-        end
-        object edAltTimeBegin: TMaskEdit
-          Left = 82
-          Height = 21
-          Top = 100
-          Width = 64
-          TabOrder = 4
-          EditMask = '!99:99;1; '
-          Text = '  :  '
-          SpaceChar = ' '
-        end
-        object edAltTimeEnd: TMaskEdit
-          Left = 202
-          Height = 21
-          Top = 100
-          Width = 64
-          TabOrder = 5
-          EditMask = '!99:99;1; '
-          Text = '  :  '
-          SpaceChar = ' '
-        end
-      end
-    end
-  end
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 26
-    Top = 315
-    Width = 570
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 1
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-    ShowBevel = False
-  end
-end
+object DaemonOptionsForm: TDaemonOptionsForm
+  Left = 354
+  Height = 349
+  Top = 216
+  Width = 586
+  HorzScrollBar.Page = 409
+  VertScrollBar.Page = 302
+  VertScrollBar.Range = 169
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  Caption = 'Transmission options'
+  ClientHeight = 349
+  ClientWidth = 586
+  Constraints.MinHeight = 340
+  Constraints.MinWidth = 400
+  OnCreate = FormCreate
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object Page: TPageControl
+    Left = 8
+    Height = 299
+    Top = 8
+    Width = 570
+    ActivePage = tabDownload
+    Align = alClient
+    BorderSpacing.Around = 8
+    TabIndex = 0
+    TabOrder = 0
+    object tabDownload: TTabSheet
+      Caption = 'Download'
+      ClientHeight = 273
+      ClientWidth = 562
+      object txDownloadDir: TLabel
+        Left = 8
+        Height = 14
+        Top = 8
+        Width = 67
+        Caption = 'Download dir:'
+        ParentColor = False
+      end
+      object txCacheSize: TLabel
+        Left = 8
+        Height = 14
+        Top = 191
+        Width = 76
+        Caption = 'Disk cache size:'
+        ParentColor = False
+      end
+      object txMB: TLabel
+        Left = 476
+        Height = 14
+        Top = 191
+        Width = 15
+        Caption = 'MB'
+        ParentColor = False
+      end
+      object txMinutes: TLabel
+        Left = 476
+        Height = 14
+        Top = 164
+        Width = 38
+        Caption = 'minutes'
+        ParentColor = False
+      end
+      object edDownloadDir: TEdit
+        Left = 8
+        Height = 21
+        Top = 28
+        Width = 546
+        Anchors = [akTop, akLeft, akRight]
+        TabOrder = 0
+      end
+      object cbIncompleteDir: TCheckBox
+        Left = 8
+        Height = 17
+        Top = 80
+        Width = 159
+        Caption = 'Directory for incomplete files:'
+        OnClick = cbIncompleteDirClick
+        TabOrder = 2
+      end
+      object edIncompleteDir: TEdit
+        Left = 8
+        Height = 21
+        Top = 103
+        Width = 546
+        Anchors = [akTop, akLeft, akRight]
+        TabOrder = 3
+      end
+      object cbPartExt: TCheckBox
+        Left = 8
+        Height = 17
+        Top = 56
+        Width = 203
+        Caption = 'Add .part extension to incomplete files'
+        TabOrder = 1
+      end
+      object cbSeedRatio: TCheckBox
+        Left = 8
+        Height = 17
+        Top = 134
+        Width = 71
+        Caption = 'Seed ratio:'
+        OnClick = cbSeedRatioClick
+        TabOrder = 4
+      end
+      object edSeedRatio: TFloatSpinEdit
+        Left = 400
+        Height = 21
+        Top = 134
+        Width = 66
+        Increment = 0.1
+        MaxValue = 9999
+        MinValue = 0
+        TabOrder = 5
+        Value = 0
+      end
+      object edCacheSize: TSpinEdit
+        Left = 400
+        Height = 21
+        Top = 188
+        Width = 66
+        MaxValue = 9999
+        TabOrder = 8
+      end
+      object cbIdleSeedLimit: TCheckBox
+        Left = 8
+        Height = 17
+        Top = 163
+        Width = 170
+        Caption = 'Stop seeding when inactive for:'
+        OnClick = cbIdleSeedLimitClick
+        TabOrder = 6
+      end
+      object edIdleSeedLimit: TSpinEdit
+        Left = 400
+        Height = 21
+        Top = 161
+        Width = 66
+        MaxValue = 999999
+        MinValue = 1
+        TabOrder = 7
+        Value = 1
+      end
+    end
+    object tabNetwork: TTabSheet
+      Caption = 'Network'
+      ClientHeight = 273
+      ClientWidth = 562
+      object txPort: TLabel
+        Left = 8
+        Height = 14
+        Top = 13
+        Width = 71
+        Caption = 'Incoming port:'
+        ParentColor = False
+      end
+      object txEncryption: TLabel
+        Left = 8
+        Height = 14
+        Top = 69
+        Width = 56
+        Caption = 'Encryption:'
+        ParentColor = False
+      end
+      object txPeerLimit: TLabel
+        Left = 8
+        Height = 14
+        Top = 99
+        Width = 80
+        Caption = 'Global peer limit:'
+        ParentColor = False
+      end
+      object edPort: TSpinEdit
+        Left = 192
+        Height = 21
+        Top = 10
+        Width = 90
+        MaxValue = 65535
+        MinValue = 1
+        TabOrder = 0
+        Value = 1
+      end
+      object cbEncryption: TComboBox
+        Left = 192
+        Height = 21
+        Top = 66
+        Width = 362
+        Anchors = [akTop, akLeft, akRight]
+        ItemHeight = 13
+        Style = csDropDownList
+        TabOrder = 4
+      end
+      object cbPortForwarding: TCheckBox
+        Left = 292
+        Height = 17
+        Top = 38
+        Width = 128
+        Caption = 'Enable port forwarding'
+        TabOrder = 3
+      end
+      object cbPEX: TCheckBox
+        Left = 192
+        Height = 17
+        Top = 126
+        Width = 125
+        Caption = 'Enable Peer Exchange'
+        TabOrder = 6
+      end
+      object edMaxPeers: TSpinEdit
+        Left = 192
+        Height = 21
+        Top = 96
+        Width = 66
+        MaxValue = 99999
+        MinValue = 1
+        TabOrder = 5
+        Value = 1
+      end
+      object cbDHT: TCheckBox
+        Left = 192
+        Height = 17
+        Top = 146
+        Width = 73
+        Caption = 'Enable DHT'
+        TabOrder = 7
+      end
+      object cbRandomPort: TCheckBox
+        Left = 292
+        Height = 17
+        Top = 13
+        Width = 193
+        Caption = 'Peek random port on daemon launch'
+        OnClick = cbRandomPortClick
+        TabOrder = 1
+      end
+      object btTestPort: TButton
+        Left = 192
+        Height = 23
+        Top = 35
+        Width = 90
+        Caption = 'Test port'
+        OnClick = btTestPortClick
+        TabOrder = 2
+      end
+      object cbBlocklist: TCheckBox
+        Left = 8
+        Height = 17
+        Top = 210
+        Width = 94
+        Caption = 'Enable blocklist:'
+        OnClick = cbBlocklistClick
+        TabOrder = 10
+      end
+      object edBlocklistURL: TEdit
+        Left = 8
+        Height = 21
+        Top = 233
+        Width = 546
+        Anchors = [akTop, akLeft, akRight]
+        TabOrder = 11
+      end
+      object cbLPD: TCheckBox
+        Left = 192
+        Height = 17
+        Top = 166
+        Width = 152
+        Caption = 'Enable Local Peer Discovery'
+        TabOrder = 8
+      end
+      object cbUTP: TCheckBox
+        Left = 192
+        Height = 17
+        Top = 186
+        Width = 71
+        Caption = 'Enable µTP'
+        TabOrder = 9
+      end
+    end
+    object tabBandwidth: TTabSheet
+      Caption = 'Bandwidth'
+      ClientHeight = 273
+      ClientWidth = 562
+      object gbBandwidth: TGroupBox
+        Left = 8
+        Height = 76
+        Top = 6
+        Width = 545
+        Anchors = [akTop, akLeft, akRight]
+        Caption = 'Global bandwidth settings'
+        ClientHeight = 58
+        ClientWidth = 541
+        TabOrder = 0
+        object txKbs1: TLabel
+          Left = 505
+          Height = 14
+          Top = 5
+          Width = 22
+          Anchors = [akTop, akRight]
+          Caption = 'KB/s'
+          ParentColor = False
+        end
+        object txKbs2: TLabel
+          Left = 505
+          Height = 14
+          Top = 32
+          Width = 22
+          Anchors = [akTop, akRight]
+          Caption = 'KB/s'
+          ParentColor = False
+        end
+        object cbMaxDown: TCheckBox
+          Left = 8
+          Height = 17
+          Top = 4
+          Width = 147
+          Caption = 'Maximum download speed:'
+          OnClick = cbMaxDownClick
+          TabOrder = 0
+        end
+        object edMaxDown: TSpinEdit
+          Left = 424
+          Height = 21
+          Top = 2
+          Width = 66
+          Anchors = [akTop, akRight]
+          Increment = 10
+          MaxValue = 999999
+          TabOrder = 1
+        end
+        object cbMaxUp: TCheckBox
+          Left = 8
+          Height = 17
+          Top = 30
+          Width = 133
+          Caption = 'Maximum upload speed:'
+          OnClick = cbMaxUpClick
+          TabOrder = 2
+        end
+        object edMaxUp: TSpinEdit
+          Left = 424
+          Height = 21
+          Top = 28
+          Width = 66
+          Anchors = [akTop, akRight]
+          Increment = 10
+          MaxValue = 999999
+          TabOrder = 3
+        end
+      end
+      object gbAltSpeed: TGroupBox
+        Left = 8
+        Height = 175
+        Top = 86
+        Width = 545
+        Anchors = [akTop, akLeft, akRight]
+        Caption = 'Alternate bandwidth settings'
+        ClientHeight = 157
+        ClientWidth = 541
+        TabOrder = 1
+        object txKbs3: TLabel
+          Left = 505
+          Height = 14
+          Top = 5
+          Width = 22
+          Anchors = [akTop, akRight]
+          Caption = 'KB/s'
+          ParentColor = False
+        end
+        object txKbs4: TLabel
+          Left = 505
+          Height = 14
+          Top = 32
+          Width = 22
+          Anchors = [akTop, akRight]
+          Caption = 'KB/s'
+          ParentColor = False
+        end
+        object txAltDown: TLabel
+          Left = 8
+          Height = 14
+          Top = 5
+          Width = 130
+          Caption = 'Maximum download speed:'
+          ParentColor = False
+        end
+        object txAltUp: TLabel
+          Left = 8
+          Height = 14
+          Top = 31
+          Width = 116
+          Caption = 'Maximum upload speed:'
+          ParentColor = False
+        end
+        object txFrom: TLabel
+          Left = 26
+          Height = 14
+          Top = 103
+          Width = 29
+          Caption = 'From:'
+          ParentColor = False
+        end
+        object txDays: TLabel
+          Left = 26
+          Height = 14
+          Top = 132
+          Width = 29
+          Caption = 'Days:'
+          ParentColor = False
+        end
+        object txTo: TLabel
+          Left = 150
+          Height = 14
+          Top = 104
+          Width = 49
+          Alignment = taCenter
+          AutoSize = False
+          Caption = 'to:'
+          ParentColor = False
+        end
+        object edAltDown: TSpinEdit
+          Left = 424
+          Height = 21
+          Top = 2
+          Width = 66
+          Anchors = [akTop, akRight]
+          Increment = 10
+          MaxValue = 999999
+          TabOrder = 0
+        end
+        object edAltUp: TSpinEdit
+          Left = 424
+          Height = 21
+          Top = 28
+          Width = 66
+          Anchors = [akTop, akRight]
+          Increment = 10
+          MaxValue = 999999
+          TabOrder = 1
+        end
+        object cbAltEnabled: TCheckBox
+          Left = 8
+          Height = 17
+          Top = 54
+          Width = 177
+          Caption = 'Use alternate bandwidth settings'
+          TabOrder = 2
+        end
+        object cbAutoAlt: TCheckBox
+          Left = 8
+          Height = 17
+          Top = 76
+          Width = 252
+          Caption = 'Apply alternate bandwidth settings automatically'
+          OnClick = cbAutoAltClick
+          TabOrder = 3
+        end
+        object edAltTimeBegin: TMaskEdit
+          Left = 82
+          Height = 21
+          Top = 100
+          Width = 64
+          CharCase = ecNormal
+          MaxLength = 5
+          TabOrder = 4
+          EditMask = '!99:99;1; '
+          Text = '  :  '
+          SpaceChar = ' '
+        end
+        object edAltTimeEnd: TMaskEdit
+          Left = 202
+          Height = 21
+          Top = 100
+          Width = 64
+          CharCase = ecNormal
+          MaxLength = 5
+          TabOrder = 5
+          EditMask = '!99:99;1; '
+          Text = '  :  '
+          SpaceChar = ' '
+        end
+      end
+    end
+  end
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 26
+    Top = 315
+    Width = 586
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 1
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+    ShowBevel = False
+  end
+end
Tylko w TransGUI/: lib
diff -ru TransGUI/main.lfm TransGUI_new/main.lfm
--- TransGUI/main.lfm	2011-04-03 11:53:50.000000000 +0200
+++ TransGUI_new/main.lfm	2011-09-18 12:31:44.000000000 +0200
@@ -1,4077 +1,4077 @@
-object MainForm: TMainForm
-  Left = 220
-  Height = 506
-  Top = 156
-  Width = 780
-  HorzScrollBar.Page = 740
-  VertScrollBar.Page = 420
-  VertScrollBar.Range = 24
-  ActiveControl = panTop
-  AllowDropFiles = True
-  Caption = ' '
-  ClientHeight = 486
-  ClientWidth = 780
-  Constraints.MinHeight = 300
-  Constraints.MinWidth = 300
-  Menu = MainMenu
-  OnClose = FormClose
-  OnCreate = FormCreate
-  OnDestroy = FormDestroy
-  OnDropFiles = FormDropFiles
-  OnResize = FormResize
-  OnShow = FormShow
-  OnWindowStateChange = FormWindowStateChange
-  LCLVersion = '0.9.28.2'
-  object panTop: TPanel
-    Left = 0
-    Height = 128
-    Top = 24
-    Width = 780
-    Align = alClient
-    BevelOuter = bvNone
-    ClientHeight = 128
-    ClientWidth = 780
-    Constraints.MinHeight = 80
-    TabOrder = 0
-    object HSplitter: TSplitter
-      Left = 130
-      Height = 128
-      Top = 0
-      Width = 5
-      AutoSnap = False
-      MinSize = 50
-    end
-    object panFilter: TPanel
-      Left = 0
-      Height = 128
-      Top = 0
-      Width = 130
-      Align = alLeft
-      BevelOuter = bvNone
-      ClientHeight = 128
-      ClientWidth = 130
-      TabOrder = 2
-      object panSearch: TPanel
-        Left = 0
-        Height = 21
-        Top = 105
-        Width = 130
-        Align = alBottom
-        AutoSize = True
-        BorderSpacing.Top = 2
-        BorderSpacing.Bottom = 2
-        BevelOuter = bvNone
-        ClientHeight = 21
-        ClientWidth = 130
-        TabOrder = 0
-        object imgSearch: TImage
-          Left = 0
-          Height = 21
-          Top = 0
-          Width = 24
-          Align = alLeft
-          Center = True
-          Picture.Data = {
-            055449636F6E7E05000000000100010010100000010008006805000016000000
-            2800000010000000200000000100080000000000000000000000000000000000
-            0000000000000000FFFFFC00FFFFF700FFFEEA00FFFFE600FFF7EA00F5EFE000
-            FFFFDA00FFFED400FFF2D700FFFCCD00FFF9C700FFF5CA00FFF5C300F3EDDA00
-            F1E5DD00EFDAC200E2CECE00DCC5C500C9D0D400FFF1BE00FFEEBD00FFE5B900
-            FFE4B100FFDEAB00F3D2A800F1CFA900F5CFA400E0C0B600EFC9A600E0C7AE00
-            E0BDB300E5BEA500E0B89E00D8BCBA00DCB3A000D2B4A400D2B19E00CCB29900
-            CEB09600CCAC9300CEA88E00BDE3FF00A5D8FF008DCDFF0089B0CA00ABABAB00
-            A1A1A100BC9A8600B9938A00B79E8C00B7948100AD8A8D00AA878E0096969600
-            9F8581008C8C8C0081818100987D8200907676008B75740053B8FF00588CCF00
-            4088DF004385D9004483D6007979A7007376A80073758900777777007B616100
-            6C6C6C00626262005F5B5B005757570000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            0000000000000000000000000000000000000000000000000000000000000000
-            00000000FFFFFF004A3749444A4A4A4A4A4A4A4A4A4A4A4A2D433448444A4A4A
-            4A4A4A4A4A4A4A4A2C3E423348444A4A4A4A4A4A4A4A4A4A293C3F413348444A
-            4A4A4A4A4A4A4A4A4A2A3C3F413348354A4A4A4A4A4A4A4A4A4A2B3C40413938
-            2E46494947374A4A4A4A4A2B3C3D373B2F261D233B49374A4A4A4A4A2A123319
-            0C070606053649374A4A4A4A4A101C0C0C060200000D45464A4A4A4A4A1E0C16
-            0A060200010631494A4A4A4A4A1F0B170C070302030625494A4A4A4A4A1F0B15
-            14090706060727464A4A4A4A4A1B0B0815130C0A0C0C32374A4A4A4A4A110F00
-            0414171613183A4A4A4A4A4A4A4A210E0209140C1A304A4A4A4A4A4A4A4A4A11
-            24282022374A4A4A8FFF000007FF000003FF000001FF000080FF0000C0030000
-            E0010000F0000000F8000000F8000000F8000000F8000000F8000000F8010000
-            FC030000FE070000
-          }
-        end
-        object edSearch: TEdit
-          Left = 24
-          Height = 21
-          Top = 0
-          Width = 106
-          Align = alClient
-          OnChange = edSearchChange
-          TabOrder = 0
-        end
-      end
-      object lvFilter: TVarGrid
-        Left = 0
-        Height = 103
-        Top = 0
-        Width = 130
-        Align = alClient
-        Columns = <        
-          item
-            Width = 10
-          end>
-        Constraints.MinWidth = 50
-        FixedCols = 0
-        FixedRows = 0
-        Options = [goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize]
-        RowCount = 1
-        ScrollBars = ssAutoVertical
-        TabOrder = 1
-        OnClick = lvFilterClick
-        OnResize = lvFilterResize
-        Images = ImageList16
-        OnCellAttributes = lvFilterCellAttributes
-        OnDrawCell = lvFilterDrawCell
-      end
-    end
-    object gTorrents: TVarGrid
-      Left = 135
-      Height = 128
-      Top = 0
-      Width = 645
-      Align = alClient
-      Columns = <      
-        item
-          Title.Caption = 'Name'
-          Width = 200
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'Size'
-          Width = 60
-        end      
-        item
-          Alignment = taCenter
-          Title.Caption = 'Done'
-        end      
-        item
-          Title.Caption = 'Status'
-          Width = 70
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'Seeds'
-          Width = 55
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'Peers'
-          Width = 55
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'Down speed'
-          Width = 75
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'Up speed'
-          Width = 75
-        end      
-        item
-          Title.Caption = 'ETA'
-          Width = 80
-        end      
-        item
-          Title.Caption = 'Ratio'
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'Downloaded'
-          Width = 60
-          Visible = False
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'Uploaded'
-          Width = 60
-          Visible = False
-        end      
-        item
-          Title.Caption = 'Tracker'
-          Width = 120
-          Visible = False
-        end      
-        item
-          Title.Caption = 'Tracker status'
-          Width = 100
-          Visible = False
-        end      
-        item
-          Title.Caption = 'Added on'
-          Width = 120
-          Visible = False
-        end      
-        item
-          Title.Caption = 'Completed on'
-          Width = 120
-          Visible = False
-        end      
-        item
-          Title.Caption = 'Last active'
-          Width = 120
-          Visible = False
-        end      
-        item
-          Title.Caption = 'Path'
-          Width = 150
-          Visible = False
-        end      
-        item
-          Title.Caption = 'Priority'
-          Width = 90
-          Visible = False
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'Size to download'
-          Width = 60
-          Visible = False
-        end      
-        item
-          Alignment = taRightJustify
-          Title.Caption = 'ID'
-          Visible = False
-        end>
-      FixedCols = 0
-      Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize, goHeaderHotTracking, goHeaderPushedLook]
-      PopupMenu = pmTorrents
-      RowCount = 1
-      TabOrder = 0
-      OnClick = gTorrentsClick
-      OnDblClick = gTorrentsDblClick
-      OnResize = gTorrentsResize
-      Images = ImageList16
-      MultiSelect = True
-      SortColumn = 0
-      OnCellAttributes = gTorrentsCellAttributes
-      OnDrawCell = gTorrentsDrawCell
-      OnSortColumn = gTorrentsSortColumn
-    end
-  end
-  object StatusBar: TStatusBar
-    Left = 0
-    Height = 23
-    Top = 463
-    Width = 780
-    Panels = <    
-      item
-        Width = 300
-      end    
-      item
-        Width = 120
-      end    
-      item
-        Width = 120
-      end    
-      item
-        Width = 120
-      end    
-      item
-        Width = 50
-      end>
-    SimplePanel = False
-    OnMouseDown = StatusBarMouseDown
-  end
-  object PageInfo: TPageControl
-    Left = 0
-    Height = 306
-    Top = 157
-    Width = 780
-    ActivePage = tabGeneral
-    Align = alBottom
-    Constraints.MinHeight = 50
-    Images = ImageList16
-    TabIndex = 0
-    TabOrder = 1
-    OnChange = PageInfoChange
-    OnPageChanged = PageInfoChange
-    object tabGeneral: TTabSheet
-      Caption = 'General'
-      ClientHeight = 279
-      ClientWidth = 772
-      ImageIndex = 4
-      object sbGenInfo: TScrollBox
-        Left = 0
-        Height = 253
-        Top = 26
-        Width = 772
-        Align = alClient
-        ClientHeight = 249
-        ClientWidth = 768
-        TabOrder = 0
-        OnResize = sbGenInfoResize
-        object panGeneralInfo: TPanel
-          Left = 0
-          Height = 78
-          Top = 153
-          Width = 768
-          Align = alTop
-          BevelOuter = bvNone
-          ChildSizing.LeftRightSpacing = 4
-          ChildSizing.TopBottomSpacing = 4
-          ChildSizing.HorizontalSpacing = 16
-          ChildSizing.VerticalSpacing = 4
-          ChildSizing.EnlargeHorizontal = crsHomogenousChildResize
-          ChildSizing.ControlsPerLine = 4
-          ClientHeight = 78
-          ClientWidth = 768
-          TabOrder = 0
-          object txTorrentNameLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 4
-            Width = 32
-            Caption = 'Name:'
-            ParentColor = False
-          end
-          object txTorrentName: TLabel
-            Left = 181
-            Height = 14
-            Top = 4
-            Width = 74
-            Caption = 'txTorrentName'
-            ParentColor = False
-            ShowAccelChar = False
-          end
-          object txCreatedLabel: TLabel
-            Left = 381
-            Height = 14
-            Top = 4
-            Width = 59
-            Caption = 'Created on:'
-            ParentColor = False
-          end
-          object txCreated: TLabel
-            Left = 578
-            Height = 14
-            Top = 4
-            Width = 50
-            Caption = 'txCreated'
-            ParentColor = False
-          end
-          object txTotalSizeLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 22
-            Width = 50
-            Caption = 'Total size:'
-            ParentColor = False
-          end
-          object txTotalSize: TLabel
-            Left = 181
-            Height = 14
-            Top = 22
-            Width = 54
-            Caption = 'txTotalSize'
-            ParentColor = False
-          end
-          object txPiecesLabel: TLabel
-            Left = 381
-            Height = 14
-            Top = 22
-            Width = 35
-            Caption = 'Pieces:'
-            ParentColor = False
-          end
-          object txPieces: TLabel
-            Left = 578
-            Height = 14
-            Top = 22
-            Width = 41
-            Caption = 'txPieces'
-            ParentColor = False
-          end
-          object txHashLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 40
-            Width = 29
-            Caption = 'Hash:'
-            ParentColor = False
-          end
-          object txHash: TLabel
-            Left = 181
-            Height = 14
-            Top = 40
-            Width = 35
-            Caption = 'txHash'
-            ParentColor = False
-            ShowAccelChar = False
-          end
-          object txCommentLabel: TLabel
-            Left = 381
-            Height = 14
-            Top = 40
-            Width = 181
-            AutoSize = False
-            Caption = 'Comment:'
-            ParentColor = False
-          end
-          object txComment: TLabel
-            Left = 578
-            Height = 14
-            Top = 40
-            Width = 56
-            Caption = 'txComment'
-            ParentColor = False
-            ShowAccelChar = False
-          end
-          object txAddedOnLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 58
-            Width = 51
-            Caption = 'Added on:'
-            ParentColor = False
-          end
-          object txAddedOn: TLabel
-            Left = 181
-            Height = 14
-            Top = 58
-            Width = 56
-            Caption = 'txAddedOn'
-            ParentColor = False
-          end
-          object txCompletedOnLabel: TLabel
-            Left = 381
-            Height = 14
-            Top = 58
-            Width = 71
-            Caption = 'Completed on:'
-            ParentColor = False
-          end
-          object txCompletedOn: TLabel
-            Left = 578
-            Height = 14
-            Top = 58
-            Width = 76
-            Caption = 'txCompletedOn'
-            ParentColor = False
-          end
-        end
-        object panTransfer: TPanel
-          Left = 0
-          Height = 111
-          Top = 21
-          Width = 768
-          Align = alTop
-          BevelOuter = bvNone
-          ChildSizing.LeftRightSpacing = 4
-          ChildSizing.TopBottomSpacing = 4
-          ChildSizing.HorizontalSpacing = 16
-          ChildSizing.VerticalSpacing = 4
-          ChildSizing.EnlargeHorizontal = crsHomogenousChildResize
-          ChildSizing.ControlsPerLine = 6
-          ClientHeight = 111
-          ClientWidth = 768
-          TabOrder = 1
-          object txStatusLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 4
-            Width = 36
-            Caption = 'Status:'
-            ParentColor = False
-          end
-          object txStatus: TLabel
-            Left = 140
-            Height = 14
-            Top = 4
-            Width = 42
-            Caption = 'txStatus'
-            ParentColor = False
-          end
-          object txErrorLabel: TLabel
-            Left = 262
-            Height = 14
-            Top = 4
-            Width = 29
-            Caption = 'Error:'
-            ParentColor = False
-          end
-          object txError: TLabel
-            Left = 407
-            Height = 14
-            Top = 4
-            Width = 35
-            Caption = 'txError'
-            ParentColor = False
-          end
-          object txRemainingLabel: TLabel
-            Left = 541
-            Height = 14
-            Top = 4
-            Width = 54
-            Caption = 'Remaining:'
-            ParentColor = False
-          end
-          object txRemaining: TLabel
-            Left = 651
-            Height = 14
-            Top = 4
-            Width = 60
-            Caption = 'txRemaining'
-            ParentColor = False
-          end
-          object txDownloadedLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 22
-            Width = 64
-            Caption = 'Downloaded:'
-            ParentColor = False
-          end
-          object txDownloaded: TLabel
-            Left = 140
-            Height = 14
-            Top = 22
-            Width = 70
-            Caption = 'txDownloaded'
-            ParentColor = False
-          end
-          object txUploadedLabel: TLabel
-            Left = 262
-            Height = 14
-            Top = 22
-            Width = 50
-            Caption = 'Uploaded:'
-            ParentColor = False
-          end
-          object txUploaded: TLabel
-            Left = 407
-            Height = 14
-            Top = 22
-            Width = 56
-            Caption = 'txUploaded'
-            ParentColor = False
-          end
-          object txWastedLabel: TLabel
-            Left = 541
-            Height = 14
-            Top = 22
-            Width = 42
-            Caption = 'Wasted:'
-            ParentColor = False
-          end
-          object txWasted: TLabel
-            Left = 651
-            Height = 14
-            Top = 22
-            Width = 48
-            Caption = 'txWasted'
-            ParentColor = False
-          end
-          object txDownSpeedLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 40
-            Width = 84
-            Caption = 'Download speed:'
-            ParentColor = False
-          end
-          object txDownSpeed: TLabel
-            Left = 140
-            Height = 14
-            Top = 40
-            Width = 68
-            Caption = 'txDownSpeed'
-            ParentColor = False
-          end
-          object txUpSpeedLabel: TLabel
-            Left = 262
-            Height = 14
-            Top = 40
-            Width = 70
-            Caption = 'Upload speed:'
-            ParentColor = False
-          end
-          object txUpSpeed: TLabel
-            Left = 407
-            Height = 14
-            Top = 40
-            Width = 54
-            Caption = 'txUpSpeed'
-            ParentColor = False
-          end
-          object txRatioLabel: TLabel
-            Left = 541
-            Height = 14
-            Top = 40
-            Width = 58
-            Caption = 'Share ratio:'
-            ParentColor = False
-          end
-          object txRatio: TLabel
-            Left = 651
-            Height = 14
-            Top = 40
-            Width = 36
-            Caption = 'txRatio'
-            ParentColor = False
-          end
-          object txDownLimitLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 58
-            Width = 53
-            Caption = 'Down limit:'
-            ParentColor = False
-          end
-          object txDownLimit: TLabel
-            Left = 140
-            Height = 14
-            Top = 58
-            Width = 59
-            Caption = 'txDownLimit'
-            ParentColor = False
-          end
-          object txUpLimitLabel: TLabel
-            Left = 262
-            Height = 14
-            Top = 58
-            Width = 39
-            Caption = 'Up limit:'
-            ParentColor = False
-          end
-          object txUpLimit: TLabel
-            Left = 407
-            Height = 14
-            Top = 58
-            Width = 45
-            Caption = 'txUpLimit'
-            ParentColor = False
-          end
-          object txDummy1: TLabel
-            Left = 541
-            Height = 14
-            Top = 58
-            Width = 1
-            ParentColor = False
-          end
-          object txDummy2: TLabel
-            Left = 651
-            Height = 14
-            Top = 58
-            Width = 1
-            ParentColor = False
-          end
-          object txSeedsLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 76
-            Width = 34
-            Caption = 'Seeds:'
-            ParentColor = False
-          end
-          object txSeeds: TLabel
-            Left = 140
-            Height = 14
-            Top = 76
-            Width = 40
-            Caption = 'txSeeds'
-            ParentColor = False
-          end
-          object txPeersLabel: TLabel
-            Left = 262
-            Height = 14
-            Top = 76
-            Width = 32
-            Caption = 'Peers:'
-            ParentColor = False
-          end
-          object txPeers: TLabel
-            Left = 407
-            Height = 14
-            Top = 76
-            Width = 38
-            Caption = 'txPeers'
-            ParentColor = False
-          end
-          object txMaxPeersLabel: TLabel
-            Left = 541
-            Height = 14
-            Top = 76
-            Width = 55
-            Caption = 'Max peers:'
-            ParentColor = False
-          end
-          object txMaxPeers: TLabel
-            Left = 651
-            Height = 14
-            Top = 76
-            Width = 58
-            Caption = 'txMaxPeers'
-            ParentColor = False
-          end
-          object txTrackerLabel: TLabel
-            Left = 4
-            Height = 14
-            Top = 94
-            Width = 41
-            Caption = 'Tracker:'
-            ParentColor = False
-          end
-          object txTracker: TLabel
-            Left = 140
-            Height = 14
-            Top = 94
-            Width = 47
-            Caption = 'txTracker'
-            ParentColor = False
-          end
-          object txTrackerUpdateLabel: TLabel
-            Left = 262
-            Height = 14
-            Top = 94
-            Width = 93
-            Caption = 'Tracker update on:'
-            ParentColor = False
-          end
-          object txTrackerUpdate: TLabel
-            Left = 407
-            Height = 14
-            Top = 94
-            Width = 82
-            Caption = 'txTrackerUpdate'
-            ParentColor = False
-          end
-          object txLastActiveLabel: TLabel
-            Left = 541
-            Height = 14
-            Top = 94
-            Width = 57
-            Caption = 'Last active:'
-            ParentColor = False
-          end
-          object txLastActive: TLabel
-            Left = 651
-            Height = 14
-            Top = 94
-            Width = 61
-            Caption = 'txLastActive'
-            ParentColor = False
-          end
-        end
-        object txTransferHeader: TPanel
-          Left = 2
-          Height = 17
-          Top = 2
-          Width = 764
-          Align = alTop
-          Alignment = taLeftJustify
-          AutoSize = True
-          BorderSpacing.Around = 2
-          BevelOuter = bvNone
-          Caption = 'Transfer'
-          Font.Height = -13
-          Font.Style = [fsBold]
-          ParentColor = False
-          ParentFont = False
-          TabOrder = 2
-        end
-        object txTorrentHeader: TPanel
-          Left = 2
-          Height = 17
-          Top = 134
-          Width = 764
-          Align = alTop
-          Alignment = taLeftJustify
-          BorderSpacing.Around = 2
-          BevelOuter = bvNone
-          Caption = 'Torrent'
-          Font.Height = -13
-          Font.Style = [fsBold]
-          ParentColor = False
-          ParentFont = False
-          TabOrder = 3
-        end
-      end
-      object panProgress: TPanel
-        Left = 0
-        Height = 26
-        Top = 0
-        Width = 772
-        Align = alTop
-        BevelOuter = bvNone
-        ClientHeight = 26
-        ClientWidth = 772
-        TabOrder = 1
-        object txDownProgressLabel: TLabel
-          Left = 8
-          Height = 26
-          Top = 0
-          Width = 64
-          Align = alLeft
-          BorderSpacing.Left = 8
-          Caption = 'Downloaded:'
-          Layout = tlCenter
-          ParentColor = False
-        end
-        object txDownProgress: TLabel
-          Left = 724
-          Height = 26
-          Top = 0
-          Width = 40
-          Align = alRight
-          Alignment = taRightJustify
-          Anchors = [akTop, akRight]
-          BorderSpacing.Right = 8
-          Caption = '100.0%'
-          Layout = tlCenter
-          ParentColor = False
-        end
-        object pbDownloaded: TPaintBox
-          Left = 78
-          Height = 14
-          Top = 6
-          Width = 640
-          Align = alClient
-          Anchors = [akTop, akLeft, akRight]
-          BorderSpacing.Around = 6
-          OnPaint = pbDownloadedPaint
-          OnResize = pbDownloadedResize
-        end
-      end
-    end
-    object tabTrackers: TTabSheet
-      Caption = 'Trackers'
-      ClientHeight = 279
-      ClientWidth = 772
-      ImageIndex = 5
-      object lvTrackers: TVarGrid
-        Left = 0
-        Height = 279
-        Top = 0
-        Width = 772
-        Align = alClient
-        Columns = <        
-          item
-            Title.Caption = 'Name'
-            Width = 200
-          end        
-          item
-            Title.Caption = 'Status'
-            Width = 200
-          end        
-          item
-            Title.Caption = 'Update in'
-            Width = 80
-          end        
-          item
-            Title.Caption = 'Seeds'
-          end>
-        FixedCols = 0
-        Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize, goHeaderHotTracking, goHeaderPushedLook]
-        PopupMenu = pmTrackers
-        RowCount = 1
-        TabOrder = 0
-        OnDblClick = lvTrackersDblClick
-        OnKeyDown = lvTrackersKeyDown
-        SortColumn = 0
-        HideSelection = True
-        OnCellAttributes = lvTrackersCellAttributes
-      end
-    end
-    object tabPeers: TTabSheet
-      Caption = 'Peers'
-      ClientHeight = 279
-      ClientWidth = 772
-      ImageIndex = 6
-      object lvPeers: TVarGrid
-        Left = 0
-        Height = 279
-        Top = 0
-        Width = 772
-        Align = alClient
-        Columns = <        
-          item
-            Title.Caption = 'Host'
-            Width = 150
-          end        
-          item
-            Alignment = taRightJustify
-            Title.Caption = 'Port'
-            Width = 50
-            Visible = False
-          end        
-          item
-            Title.Caption = 'Country'
-            Width = 100
-          end        
-          item
-            Title.Caption = 'Client'
-            Width = 150
-          end        
-          item
-            Title.Caption = 'Flags'
-            Width = 70
-          end        
-          item
-            Alignment = taRightJustify
-            Title.Caption = 'Have'
-          end        
-          item
-            Alignment = taRightJustify
-            Title.Caption = 'Up speed'
-            Width = 80
-          end        
-          item
-            Alignment = taRightJustify
-            Title.Caption = 'Down speed'
-            Width = 80
-          end>
-        FixedCols = 0
-        Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize, goHeaderHotTracking, goHeaderPushedLook]
-        PopupMenu = pmPeers
-        RowCount = 1
-        TabOrder = 0
-        Images = imgFlags
-        SortColumn = 0
-        HideSelection = True
-        OnCellAttributes = lvPeersCellAttributes
-      end
-    end
-    object tabFiles: TTabSheet
-      Caption = 'Files'
-      ClientHeight = 279
-      ClientWidth = 772
-      ImageIndex = 7
-      object lvFiles: TVarGrid
-        Left = 0
-        Height = 279
-        Top = 0
-        Width = 772
-        Align = alClient
-        Columns = <        
-          item
-            Title.Caption = 'File name'
-            Width = 350
-          end        
-          item
-            Alignment = taRightJustify
-            Title.Caption = 'Size'
-            Width = 80
-          end        
-          item
-            Alignment = taCenter
-            Title.Caption = 'Done'
-            Width = 70
-          end        
-          item
-            Alignment = taCenter
-            Title.Alignment = taCenter
-            Title.Caption = '%'
-            Width = 70
-          end        
-          item
-            Title.Caption = 'Priority'
-            Width = 100
-          end>
-        FixedCols = 0
-        Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize, goHeaderHotTracking, goHeaderPushedLook]
-        PopupMenu = pmFiles
-        RowCount = 1
-        TabOrder = 0
-        OnDblClick = lvFilesDblClick
-        OnKeyPress = lvFilesKeyPress
-        Images = ImageList16
-        MultiSelect = True
-        SortColumn = 0
-        HideSelection = True
-        OnCellAttributes = lvFilesCellAttributes
-        OnDrawCell = lvFilesDrawCell
-      end
-    end
-  end
-  object VSplitter: TSplitter
-    Cursor = crVSplit
-    Left = 0
-    Height = 5
-    Top = 152
-    Width = 780
-    Align = alBottom
-    AutoSnap = False
-    MinSize = 80
-    ResizeAnchor = akBottom
-  end
-  object MainToolBar: TToolBar
-    Left = 0
-    Height = 24
-    Top = 0
-    Width = 780
-    AutoSize = True
-    Caption = 'MainToolBar'
-    Images = ImageList16
-    ParentShowHint = False
-    ShowHint = True
-    TabOrder = 2
-    object ToolButton1: TToolButton
-      Left = 39
-      Top = 2
-      Action = acAddTorrent
-    end
-    object ToolButton2: TToolButton
-      Left = 85
-      Top = 2
-      Width = 3
-      Caption = 'ToolButton2'
-      Style = tbsDivider
-    end
-    object ToolButton3: TToolButton
-      Left = 88
-      Top = 2
-      Action = acStartTorrent
-    end
-    object ToolButton4: TToolButton
-      Left = 111
-      Top = 2
-      Action = acStopTorrent
-    end
-    object ToolButton5: TToolButton
-      Left = 134
-      Top = 2
-      Action = acRemoveTorrent
-    end
-    object ToolButton6: TToolButton
-      Left = 36
-      Top = 2
-      Width = 3
-      Caption = 'ToolButton6'
-      Style = tbsDivider
-    end
-    object ToolButton7: TToolButton
-      Left = 183
-      Top = 2
-      Width = 3
-      Caption = 'ToolButton7'
-      Style = tbsDivider
-    end
-    object ToolButton8: TToolButton
-      Left = 186
-      Top = 2
-      Action = acDaemonOptions
-    end
-    object ToolButton9: TToolButton
-      Left = 62
-      Top = 2
-      Action = acAddLink
-    end
-    object pbStatus: TPaintBox
-      Left = 756
-      Height = 22
-      Top = 2
-      Width = 24
-      Align = alRight
-      Visible = False
-      OnPaint = pbStatusPaint
-    end
-    object tbConnect: TToolButton
-      Left = 1
-      Top = 2
-      Action = acConnect
-      DropdownMenu = pmConnections
-      Style = tbsDropDown
-    end
-    object ToolButton10: TToolButton
-      Left = 160
-      Top = 2
-      Action = acAltSpeed
-    end
-    object sepAltSpeed: TToolButton
-      Left = 157
-      Top = 2
-      Width = 3
-      Caption = 'sepAltSpeed'
-      Style = tbsDivider
-    end
-  end
-  object panReconnect: TPanel
-    Left = 532
-    Height = 71
-    Top = 64
-    Width = 161
-    BevelOuter = bvNone
-    ClientHeight = 71
-    ClientWidth = 161
-    Color = clInfoBk
-    Font.Color = clInfoText
-    ParentColor = False
-    ParentFont = False
-    TabOrder = 5
-    Visible = False
-    OnResize = panReconnectResize
-    object txConnErrorLabel: TLabel
-      Left = 16
-      Height = 14
-      Top = 8
-      Width = 129
-      Align = alTop
-      Alignment = taCenter
-      BorderSpacing.Left = 16
-      BorderSpacing.Top = 8
-      BorderSpacing.Right = 16
-      BorderSpacing.Bottom = 4
-      Caption = 'Connection error occured:'
-      ParentColor = False
-    end
-    object txConnError: TLabel
-      Left = 16
-      Height = 14
-      Top = 26
-      Width = 129
-      Align = alTop
-      Alignment = taCenter
-      BorderSpacing.Left = 16
-      BorderSpacing.Right = 16
-      Font.Color = clInfoText
-      Font.Style = [fsBold]
-      ParentColor = False
-      ParentFont = False
-    end
-    object txReconnectSecs: TLabel
-      Left = 16
-      Height = 14
-      Top = 48
-      Width = 129
-      Align = alTop
-      Alignment = taCenter
-      BorderSpacing.Left = 16
-      BorderSpacing.Top = 8
-      BorderSpacing.Right = 16
-      BorderSpacing.Bottom = 8
-      ParentColor = False
-    end
-    object panReconnectFrame: TShape
-      Left = 8
-      Height = 19
-      Top = 32
-      Width = 24
-      Brush.Style = bsClear
-      Pen.Color = clBtnShadow
-    end
-  end
-  object MainMenu: TMainMenu
-    Images = ImageList16
-    left = 8
-    top = 28
-    object miTorrent: TMenuItem
-      Caption = '&Torrent'
-      object miConnect: TMenuItem
-        Caption = 'Connect to daemon'
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          2000000000000004000064000000640000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          00FF000000FF0000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000FF6666
-          00FF666600FF000000FF000000FF000000000000000000000000000000000000
-          0000000000000000000000000000000000FF000000FF000000FF666600FF8080
-          00FF808000FF808000FF808000FF000000FF000000FF00000000000000000000
-          00000000000000000000000000FF868686FF868686FF000000FF006666FF0080
-          80FF008080FFC0C0C0FFC0C0C0FF808000FF808000FF000000FF000000000000
-          000000000000000000FF868686FFC0C0C0FFF8F8F8FF000000FF000000FF00FF
-          FFFF00FFFFFF008080FFD7D7D7FFF8F8F8FFF8F8F8FF808000FF000000000000
-          0000000000FF868686FFC0C0C0FFF8F8F8FFC0C0C0FFB2B2B2FF868686FF0000
-          00FF000000FFC0C0C0FFD7D7D7FFF8F8F8FF808000FF00000000000000000000
-          00FF868686FFC0C0C0FFF8F8F8FFC0C0C0FFC0C0C0FFC0C0C0FFB2B2B2FFA4A0
-          A0FF868686FF000000FF000000FFC0C0C0FF000000FF00000000000000FF8686
-          86FFC0C0C0FFF8F8F8FFDDDDDDFFDDDDDDFFC0C0C0FFB2B2B2FFC0C0C0FFB2B2
-          B2FFB2B2B2FF868686FF868686FF000000FF000000FF00000000868686FFC0C0
-          C0FFF8F8F8FF868686FF868686FFC0C0C0FFC0C0C0FFC0C0C0FFB2B2B2FFB2B2
-          B2FFB2B2B2FFA4A0A0FFA4A0A0FF868686FF868686FF00000000868686FFF8F8
-          F8FFDDDDDDFFDDDDDDFFC0C0C0FF868686FF868686FFB2B2B2FFC0C0C0FFB2B2
-          B2FFB2B2B2FFB2B2B2FFA4A0A0FFA4A0A0FF868686FF00000000000000008686
-          86FF868686FFDDDDDDFFDDDDDDFFCCCCCCFFCCCCCCFF868686FF868686FFB2B2
-          B2FFB2B2B2FFA4A0A0FFA4A0A0FF868686FF0000000000000000000000000000
-          000000000000868686FF868686FFDDDDDDFFCCCCCCFFCCCCCCFFC0C0C0FF8686
-          86FF868686FFB2B2B2FF868686FF000000000000000000000000000000000000
-          0000000000FF868686FF00000000868686FF868686FFCCCCCCFFCCCCCCFFC0C0
-          C0FFC0C0C0FF868686FF00000000000000000000000000000000000000000000
-          00FF868686FF00000000000000000000000000000000868686FF868686FFCCCC
-          CCFF868686FF0000000000000000000000000000000000000000000000FF8686
-          86FF000000000000000000000000000000000000000000000000000000008686
-          86FF000000000000000000000000000000000000000000000000
-        }
-        ImageIndex = 18
-        object sepCon1: TMenuItem
-          Tag = 1
-          Caption = '-'
-        end
-        object MenuItem71: TMenuItem
-          Tag = 1
-          Action = acNewConnection
-          OnClick = acNewConnectionExecute
-        end
-        object MenuItem75: TMenuItem
-          Tag = 1
-          Action = acConnOptions
-          OnClick = acConnOptionsExecute
-        end
-      end
-      object MenuItem73: TMenuItem
-        Action = acDisconnect
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          2000000000000004000064000000640000000000000000000000FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF000268D0FF0268D0FFFF00FF00FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000066
-          CEFF0268D0FF0268D0FF0268D0FF2A90EEFF3FA5FAFF0268D0FFFF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000268D0FF1177
-          DEFF2A90EEFF5DC3FFFF58BDFFFF278CECFF0268D0FFFF00FF00FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000268D0FF3FA5
-          FAFF2288E0FF3BA0EEFF45ABFFFF379CFFFF0268D0FFFF00FF00FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000268
-          D0FF58BDFFFF187EE0FF2186EEFF379CFFFF0268D0FFFF00FF00FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-          FF000268D0FF379CFFFF1177DEFF1C82E9FF0268D0FFFF00FF00FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00898A8CFF535558FFFF00FF00FF00
-          FF00FF00FF000268D0FF379CFFFF0D73DBFF0268D0FFFF00FF00FF00FF00FF00
-          FF00FF00FF00118413FF006D00FF898A8CFF535558FFFF00FF00898A8CFF898A
-          8CFFFF00FF00FF00FF000268D0FF0268D0FFFF00FF00FF00FF00FF00FF00FF00
-          FF0006720AFF128921FF4BE47EFF006D00FFFF00FF00898A8CFF535558FFFF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-          FF0009780EFF2EC65CFF249D38FF44DD65FF006D00FF535558FFFF00FF00898A
-          8CFF535558FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-          FF0009780EFF2EC65CFF1A9E35FF0C8513FF059F07FF006D00FF898A8CFF5355
-          58FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-          FF0009780EFF27B84CFF18A32EFF07800CFF037A05FF009700FF006D00FFFF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-          FF00128921FF0D8819FF088C0DFF038403FF037A05FF006D00FF006D00FFFF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF001D93
-          2EFF33C34EFF047607FF006500FF006500FF006D00FF006500FFFF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00108019FF36CF
-          54FF088C0DFF006500FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00046E08FF0476
-          07FF006500FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        }
-        OnClick = acDisconnectExecute
-      end
-      object MenuItem3: TMenuItem
-        Caption = '-'
-      end
-      object MenuItem2: TMenuItem
-        Action = acAddTorrent
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF26FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFF
-          FF66FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFFFF40FFFFFF00FFFFFF007B7B
-          7B9F363636FF373737FF373737FF373737FF373737FF373737FF373737FF3737
-          37FF373737FF373737FF373737FF363636FF535353C5FFFFFF00FFFFFF192C2C
-          2CFF333333FF333333FF333333FF333333FF333333FF333333FF333333FF3333
-          33FF333333FF333333FF333333FF333333FF2C2C2CFFFFFFFF19505050572929
-          29FF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E
-          2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF292929FF505050575A5A5A722626
-          26FF292929FF292929FF292929FF292929FF292929FF292929FF292929FF2929
-          29FF292929FF292929FF292929FF292929FF262626FF5A5A5A724545459F2323
-          23FF252525FF252525FF252525FF252525FF252525FF252525FF252525FF2525
-          25FF252525FF252525FF252525FF252525FF232323FF4545459F3A3A3ABC1F1F
-          1FFF202020FF202020FF202020FF202020FF202020FF202020FF202020FF2020
-          20FF202020FF202020FF202020FF202020FF1F1F1FFF3A3A3ABC2C2C2CD71616
-          16FF171717FF171717FF171717FF171717FF171717FF171717FF171717FF1717
-          17FF171717FF171717FF171717FF171717FF161616FF2C2C2CD70A0A0AEF0C0C
-          0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C
-          0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0A0A0AEF2F2F2F302F2F
-          2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F
-          2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F4FFFFFFF003030
-          3060303030FF303030FF303030FF303030FF303030FF303030FF303030FF3030
-          30FF303030FF303030FF303030FF303030FF3030309FFFFFFF00FFFFFF00FFFF
-          FF001F1F1FBF1F1F1FFF1F1F1FFF1F1F1FFF1F1F1FFF1F1F1FBFFFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF0017171740171717FF171717FF171717FF171717FF17171740FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
-        }
-        OnClick = acAddTorrentExecute
-      end
-      object MenuItem49: TMenuItem
-        Action = acAddLink
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          20000000000000040000640000006400000000000000000000000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF00AE9B8BFF81654EFF745840FF968170FF0000FF000000FF000000
-          FF00AE9B8BFF81654EFF745840FF968170FF0000FF000000FF000000FF000000
-          FF00B79F8EFFCFB8A9FFEBD6C8FFE5CBBBFFB3957FFF80624CFFBAA99BFFB79F
-          8EFFCFB8A9FFEBD6C8FFE5CBBBFFB3957FFF80624CFF0000FF000000FF00C9B5
-          A6FFE6D6CBFFB4A091FFA08672FFC1A895FF4F2C12FF472409FF472409FF4724
-          09FF735642FFA08672FFC1A895FFD2BCAEFFB99C88FF8A7361FF0000FF00BBA0
-          8DFFFFFFFFFF60412AFF0000FF00DBC2B1FFFFFFFFFFFFFEF7FFFFF1E6FFFAE3
-          D4FFF3D7C7FF9D897AFF0000FF00C0A592FFEFD6C7FF6B4B32FF0000FF00CDBA
-          ACFFF2E6DEFFB4A193FF6B4E39FF816450FFCAB19EFFD3B5A2FFCDB19CFFDAC0
-          AFFFCDB39FFF6F543EFF816450FFBFAB9CFFCBB1A1FF9D8674FF0000FF000000
-          FF00E6DBD2FFEDE1D7FFFFFFFDFFFFF7F1FFD8C4B7FFAB9180FFCBBAAEFFCFBA
-          AAFFEDE1D7FFFFFFFDFFFFF7F1FFD8C4B7FFAB9180FF0000FF000000FF000000
-          FF0043854BFF407D47FF467A4AFFDDD0C6FFC7B4A8FF0000FF000000FF000000
-          FF00D2C0B4FFC0A795FFBAA18DFFC7B4A8FF0000FF000000FF000000FF000000
-          FF00488E50FF7BC88DFF3F7D47FF0000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF006BB271FF76B3
-          7BFF4D9554FF8AD29AFF43854BFF66986CFF6C9871FF0000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF0059AE60FFA4E3
-          B2FF9FE0ADFF9ADCA8FF94D9A3FF8ED59FFF528A58FF0000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF005CB463FF59AE
-          60FF55A65CFFAAE7B7FF4C9653FF6AA270FF619867FF0000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF005BAF62FFB9F0C3FF509E58FF0000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF0067B86DFF59AE60FF5BAA62FF0000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF00
-        }
-        OnClick = acAddLinkExecute
-      end
-      object MenuItem4: TMenuItem
-        Action = acStartTorrent
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF19FFFFFF46FFFFFF66FFFFFF66FFFF
-          FF53FFFFFF260000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF269B9B9B8C505050CF313131FF313131FF4141
-          41E27C7C7C9FFFFFFF4000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF0C7B7B7B9F303030FF282828FF202020FF1E1E1EFF2222
-          22FF282828FF4E4E4EC5FFFFFF26FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00A9A9A9572D2D2DFF272727FF161616AF04040420020202100909
-          0950151515BF1E1E1EFF5D5D5D8BFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00494949C12A2A2AFF242424C6FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF0008080840191919B5FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00323232EC272727FF0B0B0B40FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF000000000005050530FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00232323FF252525FFFFFFFF13FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00202020F3232323FF92929268FFFFFF00FFFFFF00FFFFFF40FFFF
-          FF06FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF001D1D1DB71E1E1EFF424242CFFFFFFF40FFFFFF0C484848C5D7D7
-          D75DFFFFFF130000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF0006060640161616FF1C1C1CFF494949C5C3C3C379212121FF3333
-          33E2A5A5A57DFFFFFF2600000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF0007070760121212FF161616FF1A1A1AFF1E1E1EFF1D1D
-          1DFF1E1E1EF53C3C3C7700000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00040404400B0B0BB0121212FF171717FF1616
-          16FF121212F00707076000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000F0F0FFF0E0E
-          0ED0030303300000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000707079F0101
-          0110FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
-        }
-        OnClick = acStartTorrentExecute
-      end
-      object MenuItem22: TMenuItem
-        Action = acStartAllTorrents
-        OnClick = acStartAllTorrentsExecute
-      end
-      object MenuItem5: TMenuItem
-        Action = acStopTorrent
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          2000000000000004000064000000640000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF33FFFFFF66FFFFFF33FFFFFF00FFFFFF00FFFFFF33FFFF
-          FF66FFFFFF33FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00656565B2373737FF656565B2FFFFFF00FFFFFF00656565B23737
-          37FF656565B2FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF002D2D2DFF363636FF2D2D2DFFFFFFFF00FFFFFF002D2D2DFF3636
-          36FF2D2D2DFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF002B2B2BFF333333FF2B2B2BFFFFFFFF00FFFFFF002B2B2BFF3333
-          33FF2B2B2BFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00282828FF303030FF282828FFFFFFFF00FFFFFF00282828FF3030
-          30FF282828FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00252525FF2C2C2CFF252525FFFFFFFF00FFFFFF00252525FF2C2C
-          2CFF252525FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00222222FF292929FF222222FFFFFFFF00FFFFFF00222222FF2929
-          29FF222222FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00202020FF262626FF202020FFFFFFFF00FFFFFF00202020FF2626
-          26FF202020FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF001D1D1DFF232323FF1D1D1DFFFFFFFF00FFFFFF001D1D1DFF2323
-          23FF1D1D1DFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF001B1B1BFF202020FF1B1B1BFFFFFFFF00FFFFFF001B1B1BFF2020
-          20FF1B1B1BFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00171717FF1C1C1CFF171717FFFFFFFF00FFFFFF00171717FF1C1C
-          1CFF171717FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00111111FF141414FF111111FFFFFFFF00FFFFFF00111111FF1414
-          14FF111111FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00060606800B0B0BFF06060680FFFFFF00FFFFFF00060606800B0B
-          0BFF06060680FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000000000000000
-        }
-        OnClick = acStopTorrentExecute
-      end
-      object MenuItem23: TMenuItem
-        Action = acStopAllTorrents
-        OnClick = acStopAllTorrentsExecute
-      end
-      object MenuItem6: TMenuItem
-        Action = acRemoveTorrent
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF06FFFFFF33FFFFFF53FFFFFF66FFFFFF66FFFF
-          FF53FFFFFF33FFFFFF06FFFFFF000000000000000000FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF26DDDDDD69696969B2424242E2303030FF303030FF4141
-          41E2696969B2DDDDDD69FFFFFF260000000000000000FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF267E7E7E9F3A3A3AF5313131FF272727FF1E1E1EFF1D1D1DFF2222
-          22FF292929FF353535F57C7C7C9FFFFFFF2600000000FFFFFF00FFFFFF00FFFF
-          FF067676769B323232FF333333FF404040E34F4F4F6AFFFFFF00FFFFFF000808
-          0840161616C0242424FF2D2D2DFF7676769BFFFFFF06FFFFFF00FFFFFF00C4C4
-          C43F313131F52D2D2DFF2E2E2EFF2F2F2FFF7A7A7AA0FFFFFF26FFFFFF00FFFF
-          FF00FFFFFF0011111180252525FF303030F5C4C4C43FFFFFFF00FFFFFF005656
-          56A9292929FF252525F2232323FF2A2A2AFF2D2D2DFF7A7A7AA0FFFFFF26FFFF
-          FF00FFFFFF00FFFFFF00212121C6282828FF565656A9FFFFFF00FFFFFF003636
-          36E2252525FF0D0D0D50111111A01F1F1FFF282828FF2A2A2AFF797979A0FFFF
-          FF26FFFFFF00FFFFFF000A0A0A40252525FF363636E2FFFFFF00FFFFFF002222
-          22FF222222FFFFFFFF00FFFFFF00101010A01D1D1DFF252525FF272727FF7777
-          77A0FFFFFF26FFFFFF00FFFFFF00232323FF222222FFFFFFFF00FFFFFF001E1E
-          1EFF212121FFFFFFFF1AFFFFFF00FFFFFF000F0F0FA01C1C1CFF232323FF2525
-          25FF767676A0FFFFFF26FFFFFF20212121FF1E1E1EFFFFFFFF00FFFFFF002121
-          21D91F1F1FFF81818179FFFFFF00FFFFFF00FFFFFF000E0E0EA0191919FF2020
-          20FF232323FF777777A07A7A7A891F1F1FFF212121D9FFFFFF00FFFFFF001212
-          12821A1A1AFF373737D9FFFFFF33FFFFFF00FFFFFF00FFFFFF000D0D0DA01919
-          19FF1F1F1FFF212121FF323232E21A1A1AFF12121282FFFFFF00FFFFFF000101
-          0110161616F11A1A1AFF5B5B5BB2FFFFFF4CFFFFFF19FFFFFF00FFFFFF002525
-          25AC1C1C1CFF1E1E1EFF1A1A1AFF161616F101010110FFFFFF00FFFFFF00FFFF
-          FF0007070760121212FF161616FF333333D99494948CFFFFFF66FFFFFF668282
-          82951E1E1EF5161616FF121212FF0707076000000000FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00060606600D0D0DEF111111FF141414FF151515FF151515FF1414
-          14FF111111FF0D0D0DEF060606600000000000000000FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF0001010110060606800A0A0ACF0C0C0CFF0C0C0CFF0A0A
-          0ACF0606068001010110FFFFFF000000000000000000FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
-        }
-        OnClick = acRemoveTorrentExecute
-      end
-      object MenuItem38: TMenuItem
-        Action = acRemoveTorrentAndData
-        OnClick = acRemoveTorrentAndDataExecute
-      end
-      object MenuItem59: TMenuItem
-        Caption = '-'
-      end
-      object miPriority: TMenuItem
-        Caption = 'Priority'
-        object MenuItem60: TMenuItem
-          Action = acSetHighPriority
-          Bitmap.Data = {
-            36040000424D3604000000000000360000002800000010000000100000000100
-            200000000000000400006400000064000000000000000000000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF0000404CD8FF162FD0FF162FD0FF404C
-            D8FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF0000173CE5FF6699FFFF99CCFFFF99CCFFFF6699
-            FFFF193EE5FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF00000F38EBFF5084FFFF6699FFFF74A7FFFF74A7FFFF6699
-            FFFF5488FFFF0F38EBFF00FF000000FF000000FF000000FF000000FF000000FF
-            000000FF00004B67F2FF2254FDFF3C6FFFFF4E81FFFF5A8DFFFF5A8DFFFF5084
-            FFFF3F73FFFF275AFFFF4B67F2FF00FF000000FF000000FF000000FF000000FF
-            000000FF00001A43F9FF184BFFFF275AFFFF3366FFFF3D71FFFF3D71FFFF3D71
-            FFFF275AFFFF184BFFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
-            000000FF00001A43F9FF0033FFFF184BFFFF3366FFFF3F73FFFF3F73FFFF3366
-            FFFF184BFFFF0033FFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
-            000000FF00005273FEFF103DF9FF486CFEFF5B7DFFFF6B8AFEFF6B8AFEFF5B7D
-            FFFF4368FEFF0B39FAFF5273FEFF00FF000000FF000000FF000000FF000000FF
-            000000FF000000FF00000033FFFF4F6DF8FF7991FCFF899EFDFF899EFDFF758E
-            FBFF4F6DF8FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF00000033FFFF4969F7FF91A2F7FF91A2F7FF4969
-            F7FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF00005273FEFF193FFDFF193FFDFF5273
-            FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF0000
-          }
-          OnClick = acSetHighPriorityExecute
-        end
-        object MenuItem61: TMenuItem
-          Action = acSetNormalPriority
-          Bitmap.Data = {
-            36040000424D3604000000000000360000002800000010000000100000000100
-            20000000000000040000640000006400000000000000000000000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF001D915CFF0D8145FF0D8145FF1D91
-            5CFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000D8E46FF00E03FFF01FF1FFF01FF1FFF00E0
-            3FFF0F8E47FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF00089344FF00D142FF00E03FFF00E83AFF00E83AFF00E0
-            3FFF00D442FF089344FF0000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000CB85AFF00B146FF00C546FF00D043FF00D842FF00D842FF00D1
-            42FF00C744FF00B845FF0CB85AFF0000FF000000FF000000FF000000FF000000
-            FF000000FF0004A74AFF00AF44FF00B845FF00BF46FF00C644FF00C644FF00C6
-            44FF00B845FF00AF44FF04A74AFF0000FF000000FF000000FF000000FF000000
-            FF000000FF0004A74AFF009F42FF00AF44FF00BF46FF00C744FF00C744FF00BF
-            46FF00AF44FF009F42FF04A74AFF0000FF000000FF000000FF000000FF000000
-            FF000000FF0000D159FF03A147FF00CA55FF00D858FF01DF5CFF01DF5CFF00D8
-            58FF00C854FF02A045FF00D159FF0000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF00009F42FF07C45BFF05E466FF04F06BFF04F06BFF06DF
-            64FF07C45BFF009F42FF0000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF00009F42FF07BF57FF10E570FF10E570FF07BF
-            57FF009F42FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF0000D159FF00AC4EFF00AC4EFF00D1
-            59FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-            FF000000FF000000FF000000FF000000FF000000FF000000FF00
-          }
-          OnClick = acSetNormalPriorityExecute
-        end
-        object MenuItem62: TMenuItem
-          Action = acSetLowPriority
-          Bitmap.Data = {
-            36040000424D3604000000000000360000002800000010000000100000000100
-            200000000000000400006400000064000000000000000000000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF00003F97D7FF168BCFFF168BCFFF3F97
-            D7FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000017A2E4FF65E5FFFF98FFFFFF98FFFFFF65E5
-            FFFF19A3E4FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF00000FA5EAFF4FDBFFFF65E5FFFF73ECFFFF73ECFFFF65E5
-            FFFF53DDFFFF0FA5EAFF00FF000000FF000000FF000000FF000000FF000000FF
-            000000FF00004ABAF2FF21C1FDFF3BD0FFFF4DD9FFFF59DFFFFF59DFFFFF4FDB
-            FFFF3ED2FFFF26C5FFFF4ABAF2FF00FF000000FF000000FF000000FF000000FF
-            000000FF000019B2F9FF17BEFFFF26C5FFFF32CBFFFF3CD1FFFF3CD1FFFF3CD1
-            FFFF26C5FFFF17BEFFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
-            000000FF000019B2F9FF00B2FFFF17BEFFFF32CBFFFF3ED2FFFF3ED2FFFF32CB
-            FFFF17BEFFFF00B2FFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
-            000000FF000051C8FEFF0FB1F9FF47C6FEFF5ACEFFFF6AD3FEFF6AD3FEFF5ACE
-            FFFF42C5FEFF0AB0FAFF51C8FEFF00FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000B2FFFF4EC1F8FF78D2FCFF88D7FDFF88D7FDFF74D0
-            FBFF4EC1F8FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000B2FFFF48BFF7FF90D4F7FF90D4F7FF48BF
-            F7FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000051C8FEFF18B0FDFF18B0FDFF51C8
-            FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-            000000FF000000FF000000FF000000FF000000FF000000FF0000
-          }
-          OnClick = acSetLowPriorityExecute
-        end
-      end
-      object MenuItem51: TMenuItem
-        Action = acReannounceTorrent
-        OnClick = acReannounceTorrentExecute
-      end
-      object MenuItem7: TMenuItem
-        Action = acVerifyTorrent
-        OnClick = acVerifyTorrentExecute
-      end
-      object MenuItem54: TMenuItem
-        Action = acMoveTorrent
-        OnClick = acMoveTorrentExecute
-      end
-      object MenuItem21: TMenuItem
-        Action = acTorrentProps
-        OnClick = acTorrentPropsExecute
-      end
-      object MenuItem1: TMenuItem
-        Caption = '-'
-      end
-      object miExit: TMenuItem
-        Action = acExit
-        OnClick = acExitExecute
-      end
-    end
-    object miTools: TMenuItem
-      Caption = 'T&ools'
-      object MenuItem18: TMenuItem
-        Action = acDaemonOptions
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          2000000000000004000064000000640000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          000000000000292946FF7F5586FF7F5586FF0000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000292946FF7F5586FFBF9CC2FFBF9CC2FF1A47D9FF00000000000000000000
-          0000000000000000000000000000000000000000000000000000000000002929
-          46FF0323D2FF8C89E6FF001ACEFF8380CBFF1A47D9FF00000000000000000000
-          0000000000000000000000000000000000000000000000000000292946FF0323
-          D2FF93A9FFFF0436FFFF001ACEFFB7B4E4FF1A47D9FF00000000000000000000
-          00000000000000000000000000000000000000000000292946FF0323D2FF93A9
-          FFFF0033FFFF001ACEFF9BA7EAFF1A47D9FF0000000000000000000000000000
-          000000000000000000000000000000000000292946FF0323D2FF93A9FFFF0033
-          FFFF001ACEFF93A3EEFF1A47D9FF000000000000000000000000000000000000
-          0000000000000000000000000000292946FF0323D2FF93A9FFFF0033FFFF001A
-          CEFF93A3EEFF1A47D9FF00000000000000000000000000000000000000000000
-          0000595959FF595959FF595959FF0323D2FF93A9FFFF0033FFFF001ACEFF93A3
-          EEFF1A47D9FF0000000000000000000000000000000000000000000000005959
-          59FF595959FFABABABFF999999FF7A83BDFF0031FCFF001ACEFF93A3EEFF1A47
-          D9FF000000000000000000000000000000000000000000000000595959FF5959
-          59FF9C9C9CFFB9B9B9FFC4C4C4FFA8A8A8FF5665AEFF7393EEFF1A47D9FF0000
-          0000000000000000000000000000000000000000000000000000595959FFABAB
-          ABFFCDCDCDFFC7C7C7FFC3C3C3FFCFCFCFFFA7A7A7FF595959FF000000000000
-          0000000000000000000000000000000000000000000000000000595959FFDEDE
-          DEFF595959FF595959FFB7B7B7FFD6D6D6FFBCBCBCFF595959FF000000000000
-          0000000000000000000000000000000000000000000000000000595959FF5959
-          59FF00000000999999FF595959FFDEDEDEFFC8C8C8FF595959FF000000000000
-          0000000000000000000000000000000000000000000000000000595959FF0000
-          0000999999FF595959FFD4D4D4FFE0E0E0FF595959FF999999FF000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000595959FFCBCBCBFFCBCBCBFF575757FF595959FF00000000000000000000
-          000000000000000000000000000000000000000000000000000000000000ABAB
-          ABFF595959FF595959FF595959FF999999FF0000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000
-        }
-        OnClick = acDaemonOptionsExecute
-      end
-      object MenuItem68: TMenuItem
-        Action = acConnOptions
-        OnClick = acConnOptionsExecute
-      end
-      object MenuItem17: TMenuItem
-        Action = acOptions
-        OnClick = acOptionsExecute
-      end
-      object MenuItem35: TMenuItem
-        Caption = '-'
-      end
-      object MenuItem41: TMenuItem
-        Action = acSelectAll
-        OnClick = acSelectAllExecute
-      end
-      object MenuItem34: TMenuItem
-        Action = acSetupColumns
-        OnClick = acSetupColumnsExecute
-      end
-      object MenuItem32: TMenuItem
-        Caption = '-'
-      end
-      object MenuItem70: TMenuItem
-        Action = acAltSpeed
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          2000000000000004000064000000640000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          000000000000000000001067B84F0C5EACCF0A5AA9F30958A5FD0754A0FF034E
-          63FE00493DFE004737FF004737FE00493BE50050415300000000000000000F69
-          C3111267BBBC146CC2DC1F73C5FE3B8AD6FF4491DBFF3A8AD6FF1469B4FF0067
-          51FF007A5FFF00896BFF009272FF006F56FF00503EFA00504040000000001D7D
-          D9352484DFFF65ADF2FF6EB2F3FF5BA3E7FF357EA7FF16637EFF0E617FFF005E
-          49FF087E64FF138D72FF19A083FF029071FF006D54FF005545C5000000004095
-          EA0C56A6F4EF68B2F6FF7CBEFBFF0B5750FF00503EFF005442FF00755AFF0481
-          65FF0C9B7CFF159E7FFF16987BFF1AA284FF008768FF005B48F2000000002288
-          EE1E409AF0EA57A6F3BE3893ECE3025C4BE400614BFF02795EFF01A882FF0380
-          65FF0EA483FF168972FF157866FF179B7EFF007C60FF00624CF90C70CFEB1173
-          D2FC69B1F7791176D6A22287E88600614C9D006952FF048F70FF02C79BFF0083
-          65FF0CA281FF20AF90FF20AA8DFF0E9174FF00785DFF006651C1278AE9E72588
-          E8D7000000001379D9D72288EE1E006B5232007158FD017E62FF08CDA1FF01D2
-          A4FF007B5FFF037259FF047E63FF038669FF017D62FF006A5152000000000000
-          00000A6DD0311E83E3BD000000000000000000775C85007E62FF018E6FFF07CE
-          A2FF06DEAFFF06D6A8FF08C198FF028A6CFF00765C8D00000000000000000000
-          00000C70D0ED0C6FD0EF00000000000000000000000000816553008B6CC00093
-          72F7009473FF008C6CDE008366A8007A5F430000000000000000000000000000
-          00002287E8C82187E8C600000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000000000000000
-          0000000000000000000000000000000000000000000000000000
-        }
-        OnClick = acAltSpeedExecute
-      end
-      object MenuItem52: TMenuItem
-        Action = acUpdateBlocklist
-        OnClick = acUpdateBlocklistExecute
-      end
-      object MenuItem33: TMenuItem
-        Action = acUpdateGeoIP
-        OnClick = acUpdateGeoIPExecute
-      end
-    end
-    object miHelp: TMenuItem
-      Caption = '&Help'
-      object miAbout: TMenuItem
-        Caption = 'About...'
-        OnClick = miAboutClick
-      end
-    end
-  end
-  object ActionList: TActionList
-    left = 40
-    top = 28
-    object acConnect: TAction
-      Caption = 'Connect to daemon'
-      Hint = 'Connect to daemon'
-      ImageIndex = 18
-      OnExecute = acConnectExecute
-    end
-    object acAddTorrent: TAction
-      Category = 'Torrent'
-      Caption = '&Add torrent...'
-      Hint = 'Add torrent'
-      ImageIndex = 0
-      OnExecute = acAddTorrentExecute
-      ShortCut = 45
-    end
-    object acStartTorrent: TAction
-      Category = 'Torrent'
-      Caption = 'Start'
-      Hint = 'Start torrent'
-      ImageIndex = 1
-      OnExecute = acStartTorrentExecute
-    end
-    object acStopTorrent: TAction
-      Category = 'Torrent'
-      Caption = 'Stop'
-      Hint = 'Stop torrent'
-      ImageIndex = 2
-      OnExecute = acStopTorrentExecute
-    end
-    object acRemoveTorrent: TAction
-      Category = 'Torrent'
-      Caption = 'Remove'
-      Hint = 'Remove torrent'
-      ImageIndex = 3
-      OnExecute = acRemoveTorrentExecute
-      ShortCut = 46
-    end
-    object acSetHighPriority: TAction
-      Category = 'Files'
-      Caption = 'High priority'
-      ImageIndex = 26
-      OnExecute = acSetHighPriorityExecute
-    end
-    object acSetNormalPriority: TAction
-      Category = 'Files'
-      Caption = 'Normal priority'
-      ImageIndex = 25
-      OnExecute = acSetNormalPriorityExecute
-    end
-    object acSetLowPriority: TAction
-      Category = 'Files'
-      Caption = 'Low priority'
-      ImageIndex = 24
-      OnExecute = acSetLowPriorityExecute
-    end
-    object acSetNotDownload: TAction
-      Category = 'Files'
-      Caption = 'Don''t download'
-      ImageIndex = 23
-      OnExecute = acSetNotDownloadExecute
-    end
-    object acOptions: TAction
-      Category = 'Tools'
-      Caption = 'Options...'
-      OnExecute = acOptionsExecute
-    end
-    object acDaemonOptions: TAction
-      Category = 'Tools'
-      Caption = 'Transmission options...'
-      Hint = 'Transmission options'
-      ImageIndex = 8
-      OnExecute = acDaemonOptionsExecute
-    end
-    object acExit: TAction
-      Caption = 'E&xit'
-      OnExecute = acExitExecute
-    end
-    object acResolveHost: TAction
-      Category = 'Peers'
-      Caption = 'Resolve host name'
-      OnExecute = acResolveHostExecute
-    end
-    object acResolveCountry: TAction
-      Category = 'Peers'
-      Caption = 'Resolve country'
-      OnExecute = acResolveCountryExecute
-    end
-    object acShowCountryFlag: TAction
-      Category = 'Peers'
-      Caption = 'Show country flag'
-      OnExecute = acShowCountryFlagExecute
-    end
-    object acUpdateGeoIP: TAction
-      Category = 'Tools'
-      Caption = 'Update GeoIP database'
-      OnExecute = acUpdateGeoIPExecute
-    end
-    object acRemoveTorrentAndData: TAction
-      Category = 'Torrent'
-      Caption = 'Remove torrent and Data'
-      OnExecute = acRemoveTorrentAndDataExecute
-      ShortCut = 8238
-    end
-    object acVerifyTorrent: TAction
-      Category = 'Torrent'
-      Caption = '&Verify'
-      Hint = 'Verify torrent'
-      OnExecute = acVerifyTorrentExecute
-    end
-    object acTorrentProps: TAction
-      Category = 'Torrent'
-      Caption = 'Properties...'
-      OnExecute = acTorrentPropsExecute
-    end
-    object acStartAllTorrents: TAction
-      Category = 'Torrent'
-      Caption = 'Start all torrents'
-      Hint = 'Start all torrents'
-      OnExecute = acStartAllTorrentsExecute
-    end
-    object acStopAllTorrents: TAction
-      Category = 'Torrent'
-      Caption = 'Stop all torrents'
-      Hint = 'Stop all'
-      OnExecute = acStopAllTorrentsExecute
-    end
-    object acSetupColumns: TAction
-      Category = 'Torrent'
-      Caption = 'Setup columns...'
-      OnExecute = acSetupColumnsExecute
-    end
-    object acOpenFile: TAction
-      Category = 'Files'
-      Caption = 'Open'
-      ImageIndex = 28
-      OnExecute = acOpenFileExecute
-    end
-    object acOpenContainingFolder: TAction
-      Category = 'Files'
-      Caption = 'Open containing folder'
-      ImageIndex = 22
-      OnExecute = acOpenContainingFolderExecute
-    end
-    object acAddLink: TAction
-      Category = 'Torrent'
-      Caption = 'Add torrent link...'
-      Hint = 'Add torrent link'
-      ImageIndex = 21
-      OnExecute = acAddLinkExecute
-    end
-    object acReannounceTorrent: TAction
-      Category = 'Torrent'
-      Caption = 'Reannounce (get more peers)'
-      OnExecute = acReannounceTorrentExecute
-    end
-    object acUpdateBlocklist: TAction
-      Category = 'Tools'
-      Caption = 'Update blocklist'
-      OnExecute = acUpdateBlocklistExecute
-    end
-    object acMoveTorrent: TAction
-      Category = 'Torrent'
-      Caption = 'Set data location...'
-      OnExecute = acMoveTorrentExecute
-    end
-    object acSelectAll: TAction
-      Category = 'Tools'
-      Caption = 'Select all'
-      OnExecute = acSelectAllExecute
-      ShortCut = 16449
-    end
-    object acShowApp: TAction
-      Caption = 'Show'
-      OnExecute = acShowAppExecute
-    end
-    object acHideApp: TAction
-      Caption = 'Hide'
-      OnExecute = acHideAppExecute
-    end
-    object acAddTracker: TAction
-      Category = 'Trackers'
-      Caption = 'Add tracker...'
-      OnExecute = acAddTrackerExecute
-    end
-    object acEditTracker: TAction
-      Category = 'Trackers'
-      Caption = 'Edit tracker...'
-      OnExecute = acEditTrackerExecute
-    end
-    object acDelTracker: TAction
-      Category = 'Trackers'
-      Caption = 'Remove tracker'
-      OnExecute = acDelTrackerExecute
-    end
-    object acConnOptions: TAction
-      Category = 'Tools'
-      Caption = 'Connection options...'
-      OnExecute = acConnOptionsExecute
-    end
-    object acNewConnection: TAction
-      Caption = 'New connection...'
-      OnExecute = acNewConnectionExecute
-    end
-    object acDisconnect: TAction
-      Caption = 'Disconnect'
-      ImageIndex = 27
-      OnExecute = acDisconnectExecute
-    end
-    object acAltSpeed: TAction
-      Category = 'Tools'
-      Caption = 'Use alternate bandwidth settings'
-      Hint = 'Use alternate bandwidth settings'
-      ImageIndex = 38
-      OnExecute = acAltSpeedExecute
-    end
-  end
-  object TorrentsListTimer: TTimer
-    Enabled = False
-    Interval = 100
-    OnTimer = TorrentsListTimerTimer
-    left = 253
-    top = 55
-  end
-  object OpenTorrentDlg: TOpenDialog
-    Title = 'Select a .torrent to open'
-    Filter = 'Torrents (*.torrent)|*.torrent|All files (*.*)|*.*'
-    left = 213
-    top = 55
-  end
-  object pmTorrents: TPopupMenu
-    Images = ImageList16
-    OnPopup = pmTorrentsPopup
-    left = 149
-    top = 55
-    object MenuItem42: TMenuItem
-      Action = acOpenContainingFolder
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        2000000000000004000064000000640000000000000000000000FF00FF00078D
-        BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
-        BEFF078DBEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00078DBEFF25A1
-        D1FF71C6E8FF84D7FAFF66CDF9FF65CDF9FF65CDF9FF65CDF9FF65CDF8FF65CD
-        F9FF65CDF8FF66CEF9FF3AADD8FF1999C9FFFF00FF00FF00FF00078DBEFF4CBC
-        E7FF39A8D1FFA0E2FBFF6FD4FAFF6FD4F9FF6ED4FAFF6FD4F9FF6FD4FAFF6FD4
-        FAFF6FD4FAFF6ED4F9FF3EB1D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF72D6
-        FAFF078DBEFFAEE9FCFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF7ADC
-        FBFF79DCFAFF79DCFAFF44B5D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF79DD
-        FBFF1899C7FF9ADFF3FF92E7FCFF84E4FBFF83E4FCFF83E4FCFF84E4FCFF83E4
-        FCFF83E4FBFF84E5FCFF48B9DAFFC9F0F3FF1496C4FFFF00FF00078DBEFF82E3
-        FCFF43B7DCFF65C2E0FFABF0FCFF8DEBFCFF8DEBFCFF8DEBFDFF8DEBFDFF8DEB
-        FCFF8DEBFDFF8DEBFCFF4CBBDAFFC9F0F3FFC9F0F3FF078DBEFF078DBEFF8AEA
-        FCFF77DCF3FF219CC7FFFEFFFFFFC8F7FDFFC9F7FDFFC9F7FDFFC9F7FEFFC8F7
-        FEFFC9F7FDFFC8F7FEFF9BD5E6FFEAFEFEFFD2F3F8FF078DBEFF078DBEFF93F0
-        FEFF93F0FDFF1697C5FF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
-        BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF9BF5
-        FEFF9AF6FEFF9AF6FEFF9BF5FDFF9BF6FEFF9AF6FEFF9BF5FEFF9AF6FDFF9BF5
-        FEFF9AF6FEFF9AF6FEFF0989BAFFFF00FF00FF00FF00FF00FF00078DBEFFFEFE
-        FEFFA0FBFFFFA0FBFEFFA0FBFEFFA1FAFEFFA1FBFEFFA0FAFEFFA1FBFEFFA1FB
-        FFFFA0FBFFFFA1FBFFFF0989BAFFFF00FF00FF00FF00FF00FF00FF00FF00078D
-        BEFFFEFEFEFFA5FEFFFFA5FEFFFFA5FEFFFF078DBEFF078DBEFF078DBEFF078D
-        BEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00078DBEFF078DBEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      }
-      OnClick = acOpenContainingFolderExecute
-    end
-    object pmSepOpen1: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem8: TMenuItem
-      Action = acStartTorrent
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF19FFFFFF46FFFFFF66FFFFFF66FFFF
-        FF53FFFFFF260000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF269B9B9B8C505050CF313131FF313131FF4141
-        41E27C7C7C9FFFFFFF4000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF0C7B7B7B9F303030FF282828FF202020FF1E1E1EFF2222
-        22FF282828FF4E4E4EC5FFFFFF26FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00A9A9A9572D2D2DFF272727FF161616AF04040420020202100909
-        0950151515BF1E1E1EFF5D5D5D8BFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00494949C12A2A2AFF242424C6FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF0008080840191919B5FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00323232EC272727FF0B0B0B40FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF000000000005050530FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00232323FF252525FFFFFFFF13FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00202020F3232323FF92929268FFFFFF00FFFFFF00FFFFFF40FFFF
-        FF06FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF001D1D1DB71E1E1EFF424242CFFFFFFF40FFFFFF0C484848C5D7D7
-        D75DFFFFFF130000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF0006060640161616FF1C1C1CFF494949C5C3C3C379212121FF3333
-        33E2A5A5A57DFFFFFF2600000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF0007070760121212FF161616FF1A1A1AFF1E1E1EFF1D1D
-        1DFF1E1E1EF53C3C3C7700000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00040404400B0B0BB0121212FF171717FF1616
-        16FF121212F00707076000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000F0F0FFF0E0E
-        0ED0030303300000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000707079F0101
-        0110FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
-      }
-      OnClick = acStartTorrentExecute
-    end
-    object MenuItem9: TMenuItem
-      Action = acStopTorrent
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        2000000000000004000064000000640000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF33FFFFFF66FFFFFF33FFFFFF00FFFFFF00FFFFFF33FFFF
-        FF66FFFFFF33FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00656565B2373737FF656565B2FFFFFF00FFFFFF00656565B23737
-        37FF656565B2FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF002D2D2DFF363636FF2D2D2DFFFFFFFF00FFFFFF002D2D2DFF3636
-        36FF2D2D2DFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF002B2B2BFF333333FF2B2B2BFFFFFFFF00FFFFFF002B2B2BFF3333
-        33FF2B2B2BFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00282828FF303030FF282828FFFFFFFF00FFFFFF00282828FF3030
-        30FF282828FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00252525FF2C2C2CFF252525FFFFFFFF00FFFFFF00252525FF2C2C
-        2CFF252525FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00222222FF292929FF222222FFFFFFFF00FFFFFF00222222FF2929
-        29FF222222FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00202020FF262626FF202020FFFFFFFF00FFFFFF00202020FF2626
-        26FF202020FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF001D1D1DFF232323FF1D1D1DFFFFFFFF00FFFFFF001D1D1DFF2323
-        23FF1D1D1DFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF001B1B1BFF202020FF1B1B1BFFFFFFFF00FFFFFF001B1B1BFF2020
-        20FF1B1B1BFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00171717FF1C1C1CFF171717FFFFFFFF00FFFFFF00171717FF1C1C
-        1CFF171717FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00111111FF141414FF111111FFFFFFFF00FFFFFF00111111FF1414
-        14FF111111FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00060606800B0B0BFF06060680FFFFFF00FFFFFF00060606800B0B
-        0BFF06060680FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000000000000000
-      }
-      OnClick = acStopTorrentExecute
-    end
-    object MenuItem10: TMenuItem
-      Action = acRemoveTorrent
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF06FFFFFF33FFFFFF53FFFFFF66FFFFFF66FFFF
-        FF53FFFFFF33FFFFFF06FFFFFF000000000000000000FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF26DDDDDD69696969B2424242E2303030FF303030FF4141
-        41E2696969B2DDDDDD69FFFFFF260000000000000000FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF267E7E7E9F3A3A3AF5313131FF272727FF1E1E1EFF1D1D1DFF2222
-        22FF292929FF353535F57C7C7C9FFFFFFF2600000000FFFFFF00FFFFFF00FFFF
-        FF067676769B323232FF333333FF404040E34F4F4F6AFFFFFF00FFFFFF000808
-        0840161616C0242424FF2D2D2DFF7676769BFFFFFF06FFFFFF00FFFFFF00C4C4
-        C43F313131F52D2D2DFF2E2E2EFF2F2F2FFF7A7A7AA0FFFFFF26FFFFFF00FFFF
-        FF00FFFFFF0011111180252525FF303030F5C4C4C43FFFFFFF00FFFFFF005656
-        56A9292929FF252525F2232323FF2A2A2AFF2D2D2DFF7A7A7AA0FFFFFF26FFFF
-        FF00FFFFFF00FFFFFF00212121C6282828FF565656A9FFFFFF00FFFFFF003636
-        36E2252525FF0D0D0D50111111A01F1F1FFF282828FF2A2A2AFF797979A0FFFF
-        FF26FFFFFF00FFFFFF000A0A0A40252525FF363636E2FFFFFF00FFFFFF002222
-        22FF222222FFFFFFFF00FFFFFF00101010A01D1D1DFF252525FF272727FF7777
-        77A0FFFFFF26FFFFFF00FFFFFF00232323FF222222FFFFFFFF00FFFFFF001E1E
-        1EFF212121FFFFFFFF1AFFFFFF00FFFFFF000F0F0FA01C1C1CFF232323FF2525
-        25FF767676A0FFFFFF26FFFFFF20212121FF1E1E1EFFFFFFFF00FFFFFF002121
-        21D91F1F1FFF81818179FFFFFF00FFFFFF00FFFFFF000E0E0EA0191919FF2020
-        20FF232323FF777777A07A7A7A891F1F1FFF212121D9FFFFFF00FFFFFF001212
-        12821A1A1AFF373737D9FFFFFF33FFFFFF00FFFFFF00FFFFFF000D0D0DA01919
-        19FF1F1F1FFF212121FF323232E21A1A1AFF12121282FFFFFF00FFFFFF000101
-        0110161616F11A1A1AFF5B5B5BB2FFFFFF4CFFFFFF19FFFFFF00FFFFFF002525
-        25AC1C1C1CFF1E1E1EFF1A1A1AFF161616F101010110FFFFFF00FFFFFF00FFFF
-        FF0007070760121212FF161616FF333333D99494948CFFFFFF66FFFFFF668282
-        82951E1E1EF5161616FF121212FF0707076000000000FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00060606600D0D0DEF111111FF141414FF151515FF151515FF1414
-        14FF111111FF0D0D0DEF060606600000000000000000FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF0001010110060606800A0A0ACF0C0C0CFF0C0C0CFF0A0A
-        0ACF0606068001010110FFFFFF000000000000000000FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
-      }
-      OnClick = acRemoveTorrentExecute
-    end
-    object MenuItem39: TMenuItem
-      Action = acRemoveTorrentAndData
-      OnClick = acRemoveTorrentAndDataExecute
-    end
-    object MenuItem55: TMenuItem
-      Caption = '-'
-    end
-    object pmiPriority: TMenuItem
-      Caption = 'Priority'
-      object MenuItem57: TMenuItem
-        Action = acSetHighPriority
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          200000000000000400006400000064000000000000000000000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF0000404CD8FF162FD0FF162FD0FF404C
-          D8FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF0000173CE5FF6699FFFF99CCFFFF99CCFFFF6699
-          FFFF193EE5FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF00000F38EBFF5084FFFF6699FFFF74A7FFFF74A7FFFF6699
-          FFFF5488FFFF0F38EBFF00FF000000FF000000FF000000FF000000FF000000FF
-          000000FF00004B67F2FF2254FDFF3C6FFFFF4E81FFFF5A8DFFFF5A8DFFFF5084
-          FFFF3F73FFFF275AFFFF4B67F2FF00FF000000FF000000FF000000FF000000FF
-          000000FF00001A43F9FF184BFFFF275AFFFF3366FFFF3D71FFFF3D71FFFF3D71
-          FFFF275AFFFF184BFFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
-          000000FF00001A43F9FF0033FFFF184BFFFF3366FFFF3F73FFFF3F73FFFF3366
-          FFFF184BFFFF0033FFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
-          000000FF00005273FEFF103DF9FF486CFEFF5B7DFFFF6B8AFEFF6B8AFEFF5B7D
-          FFFF4368FEFF0B39FAFF5273FEFF00FF000000FF000000FF000000FF000000FF
-          000000FF000000FF00000033FFFF4F6DF8FF7991FCFF899EFDFF899EFDFF758E
-          FBFF4F6DF8FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF00000033FFFF4969F7FF91A2F7FF91A2F7FF4969
-          F7FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF00005273FEFF193FFDFF193FFDFF5273
-          FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF0000
-        }
-        OnClick = acSetHighPriorityExecute
-      end
-      object MenuItem56: TMenuItem
-        Action = acSetNormalPriority
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          20000000000000040000640000006400000000000000000000000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF001D915CFF0D8145FF0D8145FF1D91
-          5CFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000D8E46FF00E03FFF01FF1FFF01FF1FFF00E0
-          3FFF0F8E47FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF00089344FF00D142FF00E03FFF00E83AFF00E83AFF00E0
-          3FFF00D442FF089344FF0000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000CB85AFF00B146FF00C546FF00D043FF00D842FF00D842FF00D1
-          42FF00C744FF00B845FF0CB85AFF0000FF000000FF000000FF000000FF000000
-          FF000000FF0004A74AFF00AF44FF00B845FF00BF46FF00C644FF00C644FF00C6
-          44FF00B845FF00AF44FF04A74AFF0000FF000000FF000000FF000000FF000000
-          FF000000FF0004A74AFF009F42FF00AF44FF00BF46FF00C744FF00C744FF00BF
-          46FF00AF44FF009F42FF04A74AFF0000FF000000FF000000FF000000FF000000
-          FF000000FF0000D159FF03A147FF00CA55FF00D858FF01DF5CFF01DF5CFF00D8
-          58FF00C854FF02A045FF00D159FF0000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF00009F42FF07C45BFF05E466FF04F06BFF04F06BFF06DF
-          64FF07C45BFF009F42FF0000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF00009F42FF07BF57FF10E570FF10E570FF07BF
-          57FF009F42FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF0000D159FF00AC4EFF00AC4EFF00D1
-          59FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-          FF000000FF000000FF000000FF000000FF000000FF000000FF00
-        }
-        OnClick = acSetNormalPriorityExecute
-      end
-      object MenuItem58: TMenuItem
-        Action = acSetLowPriority
-        Bitmap.Data = {
-          36040000424D3604000000000000360000002800000010000000100000000100
-          200000000000000400006400000064000000000000000000000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF00003F97D7FF168BCFFF168BCFFF3F97
-          D7FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000017A2E4FF65E5FFFF98FFFFFF98FFFFFF65E5
-          FFFF19A3E4FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF00000FA5EAFF4FDBFFFF65E5FFFF73ECFFFF73ECFFFF65E5
-          FFFF53DDFFFF0FA5EAFF00FF000000FF000000FF000000FF000000FF000000FF
-          000000FF00004ABAF2FF21C1FDFF3BD0FFFF4DD9FFFF59DFFFFF59DFFFFF4FDB
-          FFFF3ED2FFFF26C5FFFF4ABAF2FF00FF000000FF000000FF000000FF000000FF
-          000000FF000019B2F9FF17BEFFFF26C5FFFF32CBFFFF3CD1FFFF3CD1FFFF3CD1
-          FFFF26C5FFFF17BEFFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
-          000000FF000019B2F9FF00B2FFFF17BEFFFF32CBFFFF3ED2FFFF3ED2FFFF32CB
-          FFFF17BEFFFF00B2FFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
-          000000FF000051C8FEFF0FB1F9FF47C6FEFF5ACEFFFF6AD3FEFF6AD3FEFF5ACE
-          FFFF42C5FEFF0AB0FAFF51C8FEFF00FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000B2FFFF4EC1F8FF78D2FCFF88D7FDFF88D7FDFF74D0
-          FBFF4EC1F8FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000B2FFFF48BFF7FF90D4F7FF90D4F7FF48BF
-          F7FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000051C8FEFF18B0FDFF18B0FDFF51C8
-          FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-          000000FF000000FF000000FF000000FF000000FF000000FF0000
-        }
-        OnClick = acSetLowPriorityExecute
-      end
-    end
-    object MenuItem50: TMenuItem
-      Action = acReannounceTorrent
-      OnClick = acReannounceTorrentExecute
-    end
-    object MenuItem11: TMenuItem
-      Action = acVerifyTorrent
-      OnClick = acVerifyTorrentExecute
-    end
-    object MenuItem53: TMenuItem
-      Action = acMoveTorrent
-      OnClick = acMoveTorrentExecute
-    end
-    object MenuItem19: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem20: TMenuItem
-      Action = acTorrentProps
-      Default = True
-      OnClick = acTorrentPropsExecute
-    end
-    object MenuItem36: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem37: TMenuItem
-      Action = acSetupColumns
-      OnClick = acSetupColumnsExecute
-    end
-  end
-  object ApplicationProperties: TApplicationProperties
-    ShowButtonGlyphs = sbgSystem
-    OnException = ApplicationPropertiesException
-    OnIdle = ApplicationPropertiesIdle
-    OnMinimize = ApplicationPropertiesMinimize
-    OnRestore = ApplicationPropertiesRestore
-    left = 348
-    top = 56
-  end
-  object pmFiles: TPopupMenu
-    Images = ImageList16
-    OnPopup = pmFilesPopup
-    left = 304
-    top = 92
-    object MenuItem40: TMenuItem
-      Action = acOpenFile
-      Default = True
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        2000000000000004000064000000640000000000000000000000FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFFF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF009933
-        00FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00993300FF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00993300FFAA5F1FFF993300FFFF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00993300FFBA7D48FF993300FF993300FFFF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00993300FFCDA27CFFD8B596FF993300FF9933
-        00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFE1C6B0FFECDCCDFFEDDD
-        D1FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFF4E9E2FFFDF9
-        F5FFFBF4ECFF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFE1C0ABFFF7E9
-        DAFFF4E0CCFFE1BA9CFF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFF6E6D6FFF3DEC8FFF0D5
-        BAFFE3B995FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFEDCAA8FFEAC1
-        99FFE7B98BFFDFA875FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFE3AE
-        79FFE0A56BFFDD9C5CFFDA944FFF993300FFFF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF009933
-        00FF993300FF993300FF993300FF993300FF993300FFFF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      }
-      OnClick = acOpenFileExecute
-    end
-    object MenuItem44: TMenuItem
-      Action = acOpenContainingFolder
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        2000000000000004000064000000640000000000000000000000FF00FF00078D
-        BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
-        BEFF078DBEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00078DBEFF25A1
-        D1FF71C6E8FF84D7FAFF66CDF9FF65CDF9FF65CDF9FF65CDF9FF65CDF8FF65CD
-        F9FF65CDF8FF66CEF9FF3AADD8FF1999C9FFFF00FF00FF00FF00078DBEFF4CBC
-        E7FF39A8D1FFA0E2FBFF6FD4FAFF6FD4F9FF6ED4FAFF6FD4F9FF6FD4FAFF6FD4
-        FAFF6FD4FAFF6ED4F9FF3EB1D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF72D6
-        FAFF078DBEFFAEE9FCFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF7ADC
-        FBFF79DCFAFF79DCFAFF44B5D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF79DD
-        FBFF1899C7FF9ADFF3FF92E7FCFF84E4FBFF83E4FCFF83E4FCFF84E4FCFF83E4
-        FCFF83E4FBFF84E5FCFF48B9DAFFC9F0F3FF1496C4FFFF00FF00078DBEFF82E3
-        FCFF43B7DCFF65C2E0FFABF0FCFF8DEBFCFF8DEBFCFF8DEBFDFF8DEBFDFF8DEB
-        FCFF8DEBFDFF8DEBFCFF4CBBDAFFC9F0F3FFC9F0F3FF078DBEFF078DBEFF8AEA
-        FCFF77DCF3FF219CC7FFFEFFFFFFC8F7FDFFC9F7FDFFC9F7FDFFC9F7FEFFC8F7
-        FEFFC9F7FDFFC8F7FEFF9BD5E6FFEAFEFEFFD2F3F8FF078DBEFF078DBEFF93F0
-        FEFF93F0FDFF1697C5FF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
-        BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF9BF5
-        FEFF9AF6FEFF9AF6FEFF9BF5FDFF9BF6FEFF9AF6FEFF9BF5FEFF9AF6FDFF9BF5
-        FEFF9AF6FEFF9AF6FEFF0989BAFFFF00FF00FF00FF00FF00FF00078DBEFFFEFE
-        FEFFA0FBFFFFA0FBFEFFA0FBFEFFA1FAFEFFA1FBFEFFA0FAFEFFA1FBFEFFA1FB
-        FFFFA0FBFFFFA1FBFFFF0989BAFFFF00FF00FF00FF00FF00FF00FF00FF00078D
-        BEFFFEFEFEFFA5FEFFFFA5FEFFFFA5FEFFFF078DBEFF078DBEFF078DBEFF078D
-        BEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00078DBEFF078DBEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      }
-      OnClick = acOpenContainingFolderExecute
-    end
-    object pmSepOpen2: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem12: TMenuItem
-      Action = acSetHighPriority
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        200000000000000400006400000064000000000000000000000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF0000404CD8FF162FD0FF162FD0FF404C
-        D8FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF0000173CE5FF6699FFFF99CCFFFF99CCFFFF6699
-        FFFF193EE5FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF00000F38EBFF5084FFFF6699FFFF74A7FFFF74A7FFFF6699
-        FFFF5488FFFF0F38EBFF00FF000000FF000000FF000000FF000000FF000000FF
-        000000FF00004B67F2FF2254FDFF3C6FFFFF4E81FFFF5A8DFFFF5A8DFFFF5084
-        FFFF3F73FFFF275AFFFF4B67F2FF00FF000000FF000000FF000000FF000000FF
-        000000FF00001A43F9FF184BFFFF275AFFFF3366FFFF3D71FFFF3D71FFFF3D71
-        FFFF275AFFFF184BFFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
-        000000FF00001A43F9FF0033FFFF184BFFFF3366FFFF3F73FFFF3F73FFFF3366
-        FFFF184BFFFF0033FFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
-        000000FF00005273FEFF103DF9FF486CFEFF5B7DFFFF6B8AFEFF6B8AFEFF5B7D
-        FFFF4368FEFF0B39FAFF5273FEFF00FF000000FF000000FF000000FF000000FF
-        000000FF000000FF00000033FFFF4F6DF8FF7991FCFF899EFDFF899EFDFF758E
-        FBFF4F6DF8FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF00000033FFFF4969F7FF91A2F7FF91A2F7FF4969
-        F7FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF00005273FEFF193FFDFF193FFDFF5273
-        FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF0000
-      }
-      OnClick = acSetHighPriorityExecute
-    end
-    object MenuItem13: TMenuItem
-      Action = acSetNormalPriority
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        20000000000000040000640000006400000000000000000000000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF001D915CFF0D8145FF0D8145FF1D91
-        5CFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000D8E46FF00E03FFF01FF1FFF01FF1FFF00E0
-        3FFF0F8E47FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF00089344FF00D142FF00E03FFF00E83AFF00E83AFF00E0
-        3FFF00D442FF089344FF0000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000CB85AFF00B146FF00C546FF00D043FF00D842FF00D842FF00D1
-        42FF00C744FF00B845FF0CB85AFF0000FF000000FF000000FF000000FF000000
-        FF000000FF0004A74AFF00AF44FF00B845FF00BF46FF00C644FF00C644FF00C6
-        44FF00B845FF00AF44FF04A74AFF0000FF000000FF000000FF000000FF000000
-        FF000000FF0004A74AFF009F42FF00AF44FF00BF46FF00C744FF00C744FF00BF
-        46FF00AF44FF009F42FF04A74AFF0000FF000000FF000000FF000000FF000000
-        FF000000FF0000D159FF03A147FF00CA55FF00D858FF01DF5CFF01DF5CFF00D8
-        58FF00C854FF02A045FF00D159FF0000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF00009F42FF07C45BFF05E466FF04F06BFF04F06BFF06DF
-        64FF07C45BFF009F42FF0000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF00009F42FF07BF57FF10E570FF10E570FF07BF
-        57FF009F42FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF0000D159FF00AC4EFF00AC4EFF00D1
-        59FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF00
-      }
-      OnClick = acSetNormalPriorityExecute
-    end
-    object MenuItem14: TMenuItem
-      Action = acSetLowPriority
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        200000000000000400006400000064000000000000000000000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF00003F97D7FF168BCFFF168BCFFF3F97
-        D7FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000017A2E4FF65E5FFFF98FFFFFF98FFFFFF65E5
-        FFFF19A3E4FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF00000FA5EAFF4FDBFFFF65E5FFFF73ECFFFF73ECFFFF65E5
-        FFFF53DDFFFF0FA5EAFF00FF000000FF000000FF000000FF000000FF000000FF
-        000000FF00004ABAF2FF21C1FDFF3BD0FFFF4DD9FFFF59DFFFFF59DFFFFF4FDB
-        FFFF3ED2FFFF26C5FFFF4ABAF2FF00FF000000FF000000FF000000FF000000FF
-        000000FF000019B2F9FF17BEFFFF26C5FFFF32CBFFFF3CD1FFFF3CD1FFFF3CD1
-        FFFF26C5FFFF17BEFFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
-        000000FF000019B2F9FF00B2FFFF17BEFFFF32CBFFFF3ED2FFFF3ED2FFFF32CB
-        FFFF17BEFFFF00B2FFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
-        000000FF000051C8FEFF0FB1F9FF47C6FEFF5ACEFFFF6AD3FEFF6AD3FEFF5ACE
-        FFFF42C5FEFF0AB0FAFF51C8FEFF00FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000B2FFFF4EC1F8FF78D2FCFF88D7FDFF88D7FDFF74D0
-        FBFF4EC1F8FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000B2FFFF48BFF7FF90D4F7FF90D4F7FF48BF
-        F7FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000051C8FEFF18B0FDFF18B0FDFF51C8
-        FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-        000000FF000000FF000000FF000000FF000000FF000000FF0000
-      }
-      OnClick = acSetLowPriorityExecute
-    end
-    object MenuItem15: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem16: TMenuItem
-      Action = acSetNotDownload
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        20000000000000040000640000006400000000000000000000000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF00ADADADFFA3A3A3FFA3A3A3FFADAD
-        ADFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF00A7A7A7FFBCBCBCFFC5C5C5FFC5C5C5FFBCBC
-        BCFFA7A7A7FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF00A7A7A7FFB7B7B7FFBCBCBCFFBEBEBEFFBEBEBEFFBCBC
-        BCFFB8B8B8FFA7A7A7FF0000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF00B4B4B4FFAEAEAEFFB4B4B4FFB7B7B7FFB9B9B9FFB9B9B9FFB7B7
-        B7FFB4B4B4FFAFAFAFFFB4B4B4FF0000FF000000FF000000FF000000FF000000
-        FF000000FF00ACACACFFADADADFFAFAFAFFFB2B2B2FFB4B4B4FFB4B4B4FFB4B4
-        B4FFAFAFAFFFADADADFFACACACFF0000FF000000FF000000FF000000FF000000
-        FF000000FF00ACACACFFA8A8A8FFADADADFFB2B2B2FFB4B4B4FFB4B4B4FFB2B2
-        B2FFADADADFFA8A8A8FFACACACFF0000FF000000FF000000FF000000FF000000
-        FF000000FF00B8B8B8FFAAAAAAFFB6B6B6FFB9B9B9FFBCBCBCFFBCBCBCFFB9B9
-        B9FFB5B5B5FFA9A9A9FFB8B8B8FF0000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF00A8A8A8FFB6B6B6FFBFBFBFFFC2C2C2FFC2C2C2FFBEBE
-        BEFFB6B6B6FFA8A8A8FF0000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF00A8A8A8FFB4B4B4FFC2C2C2FFC2C2C2FFB4B4
-        B4FFA8A8A8FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF00B8B8B8FFACACACFFACACACFFB8B8
-        B8FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-        FF000000FF000000FF000000FF000000FF000000FF000000FF00
-      }
-      OnClick = acSetNotDownloadExecute
-    end
-    object MenuItem46: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem47: TMenuItem
-      Action = acSetupColumns
-      OnClick = acSetupColumnsExecute
-    end
-  end
-  object TickTimer: TTimer
-    Enabled = False
-    Interval = 300
-    OnTimer = TickTimerTimer
-    left = 408
-    top = 55
-  end
-  object ImageList16: TImageList
-    left = 412
-    top = 92
-    Bitmap = {
-      4C69270000001000000010000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      00000000000000000000007308FF087B08FF088C10FF088C10FF087B08FF0000
-      0000000000000000000000000000000000000000000031B5DEFF29ADD6FF18A5
-      C6FF18A5C6FF00000000000000000000000000000000088C10FF08A518FF0884
-      10FF0000000000000000000000000000000021ADD6FF9CDEEFFFC6FFFFFFC6FF
-      FFFF9CDEEFFF18ADD6FF18A5C6FF18A5C6FF18A5C6FF18A5C6FF088C10FF08A5
-      18FF0000000000000000000000000000000029ADD6FFC6FFFFFF94FFFFFF9CFF
-      FFFFD6FFFFFFD6FFFFFF8CEFFFFF94EFFFFF73DEF7FF73DEF7FF088410FF18AD
-      29FF088410FF00000000000000000000000029ADD6FF9CFFFFFF94F7FFFF94F7
-      FFFF94F7FFFF94F7FFFF73DEF7FF73DEF7FF29ADD6FF18A5C6FF108C21FF31C6
-      4AFF109C21FF18A5C6FF000000000000000029ADD6FF9CFFFFFF94F7FFFF73DE
-      F7FF73DEF7FF73DEF7FF6BDEF7FF29ADD6FFADDEEFFF007308FF52D67BFF42D6
-      6BFF31C64AFF007308FF000000000000000029ADD6FF9CFFFFFF73DEF7FF29AD
-      D6FF18A5C6FF18A5C6FF18A5C6FFADDEEFFF8CF7FFFF84EFFFFF007308FF5AE7
-      8CFF007308FF18A5C6FF000000000000000029ADD6FF94F7FFFF29ADD6FFADDE
-      EFFFA5EFF7FFA5EFF7FFA5F7FFFF8CEFFFFF8CEFFFFF8CEFFFFF73DEF7FF0073
-      08FF18A5C6FF00000000000000000000000029ADD6FF73DEF7FF29ADD6FF9CFF
-      FFFF8CF7FFFF8CF7FFFF8CF7FFFF8CEFFFFF8CEFFFFF8CEFFFFF73DEF7FF73DE
-      F7FF18A5C6FF00000000000000000000000029ADD6FF29ADD6FFADDEEFFF94F7
-      FFFF94F7FFFF8CEFFFFF8CEFFFFF8CEFFFFF8CEFFFFF73DEF7FF73DEF7FF4AC6
-      EFFF0000000000000000000000000000000029ADD6FF52BDE7FFADFFFFFF8CF7
-      FFFF8CEFFFFF8CEFFFFF8CEFFFFF73DEF7FF73DEF7FF73DEF7FF4AC6EFFF21AD
-      D6FF0000000000000000000000000000000029ADD6FF52BDE7FF9CFFFFFF94FF
-      FFFF73DEF7FF73DEF7FF73DEF7FF73DEF7FF4AC6E7FF21ADD6FF18A5C6FF0000
-      00000000000000000000000000000000000029ADD6FF9CDEEFFF84EFFFFF4AC6
-      E7FF21ADD6FF18A5C6FF18A5C6FF18A5C6FF0000000000000000000000000000
-      00000000000000000000000000000000000029ADD6FF31B5DEFF21ADD6FF0000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00005A
-      00FF005A00FF005A00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF42CE42FF007300FF005A00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF73EF73FFADFFADFF007300FF005A00FFFF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF84EF84FF94FF94FF94FF94FF007300FF005A00FFFF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF6BEF6BFF84EF84FF84EF73FF5AE763FF007300FF005A00FFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF63E763FF6BE763FF5AE763FF5AE763FF5AE763FF007300FF006300FFFF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF18DE5AFF10CE42FF10CE42FF10CE42FF10C631FF007300FF006300FFFF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF10DE42FF10C631FF08BD21FF08BD21FF007300FF005A00FFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF10C631FF10C631FF08BD21FF007300FF005A00FFFF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF10BD21FF08BD21FF007300FF005A00FFFF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
-      00FF08BD21FF007300FF005A00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00005A
-      00FF005A00FF005A00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF001F7DDEFF1F84ECFF1F86F0FF1F81E6FF1F7EE0FF1F7AD8FFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00207DDDFF0676
-      E7FF46A1FFFF7CBCFFFF95C9FFFF83C0FFFF4FA6FFFF007EFFFF005BB8FF0656
-      A9FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00207EDFFF2C94FFFFADD6
-      FFFFCFE7FFFFB5DAFFFF91C7FFFF75B9FFFF5FAEFFFF399BFFFF007CFAFF166E
-      C9FF095BAFFFFF00FF00FF00FF00FF00FF001E7CDCFF2B94FFFFC1E0FFFFCDE6
-      FFFF9DCDFFFF97CAFFFF6BB4FFFF60AEFFFF54A9FFFF429FFFFF3494F6FF2185
-      EAFF0D6AC9FF0252A3FFFF00FF00FF00FF00016FDEFF9BCCFFFFC7E3FFFF7ABC
-      FFFF7EBEFFFF6DB5FFFF5DAEFFFF51A8FFFF44A2FFFF3F9FFFFF2C96FFFF1582
-      EEFF0774E2FF0156ACFFFF00FF001E7DDEFF2D95FFFFAFD7FFFF85C1FFFF66B2
-      FFFFD8ECFFFFFFFFFFFF6BB6FFFF62B1FFFFFFFFFFFFC6E3FFFF1087FFFF0579
-      EFFF016EDDFF0061C4FF004C9BFF1E7CDCFF51A7FFFF90C6FFFF62B0FFFF47A4
-      FFFFCFE7FFFFFFFFFFFF51A8FFFF4AA4FFFFFFFFFFFFC1DFFEFF027BF9FF0071
-      E5FF006AD6FF0066CEFF004C9BFF1E82E8FF47A2FFFF62B0FFFF45A1FFFF2793
-      FFFFC8E3FFFFFFFFFFFF419EFDFF409CF9FFFFFFFFFFC0DDFBFF0373E7FF006C
-      DCFF0066CFFF0066CEFF004FA0FF1E80E4FF198BFFFF3097FFFF2792FFFF0E85
-      FDFFC5E1FEFFFFFFFFFF4096F1FF4094ECFFFFFFFFFFC0DBF6FF036CD6FF0068
-      D2FF0064CBFF0066CEFF004D9CFF1E7CDCFF0076EEFF0A83FEFF0E83FBFF0278
-      F2FFC5DFF9FFFFFFFFFF4090E3FF408FDFFFFFFFFFFFC0D9F3FF0268D0FF0065
-      CBFF0065CCFF0064CAFF004C9AFF1E7AD8FF0065CCFF0073E8FF0074E9FF006D
-      DEFFC5DDF6FFFFFFFFFF408CD9FF408CD9FFFFFFFFFFC1D9F3FF0369D0FF0065
-      CCFF0066CFFF0060C3FF004C9AFFFF00FF000058B2FF0069D4FF0068D1FF0065
-      CCFF1A76D4FF066AD0FF0065CCFF0065CDFF0065CCFF0569D0FF026AD4FF0065
-      CCFF0068D2FF0053A9FFFF00FF00FF00FF000052A6FF005EBFFF0067D1FF0064
-      CBFF0068D2FF0068D1FF0065CBFF0065CBFF0065CCFF0065CCFF0065CCFF0067
-      D0FF005FBFFF004C9BFFFF00FF00FF00FF00FF00FF000051A5FF005EBEFF0067
-      D1FF0067D0FF0066CFFF0064CBFF0065CCFF0065CCFF0066CDFF0068D2FF005F
-      BFFF004E9FFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00004F9FFF0053
-      A8FF005EBFFF0062C6FF0065CCFF0065CCFF0064CAFF005FC1FF0054ABFF004C
-      9BFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00004B98FF004D9CFF0052A6FF0052A6FF004D9CFF004B98FFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      00000000000000000000000000000031F7FF0031F7FF00000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      00000000000000000000000000000031F7FF0031F7FF0031F7FF000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000031F7FF0031F7FF0031F7FF0000
-      0000000000000000000000000000000000000000000000000000000000000000
-      00000031F7FF000000000000000000000000000000000031F7FF0031F7FF0031
-      FFFF0000000000000000000000000000000000000000000000000031F7FF0031
-      F7FF0000000000000000000000000000000000000000000000000031FFFF0031
-      EFFF0031F7FF000000000000000000000000000000000031FFFF0031F7FF0000
-      0000000000000000000000000000000000000000000000000000000000000031
-      F7FF0031EFFF0031E7FF00000000000000000031F7FF0031F7FF000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      00000031DEFF0031EFFF0031E7FF0031EFFF0031F7FF00000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000031E7FF0031E7FF0031EFFF0000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      00000031DEFF0031E7FF0031E7FF0031E7FF0031DEFF00000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000031
-      DEFF0031DEFF0031DEFF000000000031DEFF0031DEFF0031DEFF000000000000
-      000000000000000000000000000000000000000000000031EFFF0031DEFF0031
-      DEFF0031DEFF000000000000000000000000000000000031DEFF0031DEFF0000
-      0000000000000000000000000000000000000031DEFF0031DEFF0031DEFF0031
-      DEFF0000000000000000000000000000000000000000000000000031DEFF0031
-      DEFF000000000000000000000000000000000031DEFF0031DEFF0031DEFF0000
-      0000000000000000000000000000000000000000000000000000000000000031
-      DEFF0031DEFF0000000000000000000000000031DEFF0031DEFF000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      00000031DEFF0031DEFF00000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000031DEFF0031DEFF0000FF000000FF000000FF000000FF000000
-      FF000000FF00FFC42BFFFFC42BFFFFC42BFFFFC42BFF0000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF00FFBF
-      30FFFFCC53FFFFD66FFFFFDC81FFFFDC81FFFFD66FFFFFCC53FFFFC134FF0000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF00FFC245FFFFD4
-      76FFFFD67CFFFFD67CFFFFD67CFFFFD67CFFFFD67CFFFFD67CFFFFD475FFFFC1
-      44FF0000FF000000FF000000FF000000FF000000FF00FFBA43FFFFCF73FFFFCF
-      74FFFFCF74FFFFCF74FFFFD585FFFFFCF6FFFFEAC2FFFFCF74FFFFCF74FFFFCE
-      73FFFFBB43FF0000FF000000FF000000FF00FFA92EFFFFC667FFFFC86CFFFFC8
-      6CFFFFC86CFFFFC86CFFFFCF7EFFFFFCF6FFFFE7BEFFFFC86CFFFFC86CFFFFC8
-      6CFFFFC566FFFFA92EFF0000FF000000FF00FFAF43FFFFC064FFFFC064FFFFC0
-      64FFFFC064FFFFC064FFFFD08BFFFFC877FFFFC064FFFFC064FFFFC064FFFFC0
-      64FFFFC065FFFFAE43FF0000FF00FF922BFFFFB151FFFFB85CFFFFB85CFFFFB8
-      5CFFFFBC66FFFFF2E0FFFFFFFFFFFFFBF5FFFFB454FFFFAF47FFFFAA3DFFFFA8
-      38FFFFA633FFFFA130FFFF922BFFFF922BFFFFAE53FFFFAF54FFFFAF54FFFFAF
-      54FFFFD7A9FFFFCD94FFFFFFFFFFFFF9F3FFFFA033FFFFA033FFFFA033FFFFA0
-      33FFFFA033FFFF9F32FFFF922BFFFF8A2BFFFFA44BFFFFA54CFFFFA54CFFFFA5
-      4CFFFFA144FFFFC68EFFFFFFFFFFFFD9B2FFFF9933FFFF9933FFFF9933FFFF99
-      33FFFF9933FFFF9832FFFF8A2BFFFF922BFFFF963DFFFF9B43FFFF9B42FFFF95
-      37FFFF9333FFFFE4CCFFFFFFFFFFFFB573FFFF9333FFFF9333FFFF9333FFFF93
-      33FFFF9333FFFF8D30FFFF922BFF0000FF00FF8231FFFF9039FFFF8C33FFFF8C
-      33FFFF8C33FFFFFFFFFFFFFFFFFFFFA966FFFFBF8DFFFF8C33FFFF8C33FFFF8C
-      33FFFF8C33FFFF802EFF0000FF000000FF00FF742CFFFF8332FFFF8633FFFF86
-      33FFFF8E40FFFFF7F2FFFFFFFFFFFFE1CCFFFF8E40FFFF8633FFFF8633FFFF86
-      33FFFF8131FFFF742CFF0000FF000000FF000000FF00FF722DFFFF7E32FFFF80
-      33FFFF8033FFFF904DFFFFA066FFFF8033FFFF8033FFFF8033FFFF8033FFFF7E
-      32FFFF712DFF0000FF000000FF000000FF000000FF000000FF00FF692CFFFF76
-      32FFFF7933FFFF7933FFFF7933FFFF7933FFFF7933FFFF7933FFFF7531FFFF69
-      2CFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF00FF63
-      2CFFFF662DFFFF6C30FFFF7032FFFF7032FFFF6C30FFFF662DFFFF632CFF0000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF00FF5C2BFFFF5C2BFFFF5C2BFFFF5C2BFF0000FF000000FF000000
-      FF000000FF000000FF000000FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF0051515140959595DF959595DF51515140FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FF009919FFFFFF00FFFFFF00FF009919FFFF
-      FF00FFFFFF009F9F9FF0DCDCDCFFDCDCDCFF9F9F9FF0FFFFFF00FFFFFF00FF00
-      9919FFFFFF00FFFFFF00FF009919FF009933FFFFFF00FFFFFF00FF009933FFFF
-      FF00FFFFFF00ABABABF3BBBBBBFFBBBBBBFFABABABF3FFFFFF00FFFFFF00FF00
-      9933FFFFFF00FFFFFF00FF009933FF00993EFF00990EFFFFFF00FF009934FF00
-      9918FFFFFF00B1B1B16CB7B7B7E7B7B7B7E7B1B1B16CFFFFFF00FF009918FF00
-      9934FFFFFF00FF00990EFF00993EFF009940FF009933FFFFFF00FF009920FF00
-      9959FF009906FFFFFF10FFFFFF38FFFFFF38FFFFFF10FF009906FF009959FF00
-      9920FFFFFF00FF009933FF009940FF00990FFF00996FFF009908FFFFFF00FF00
-      9947FF00992F3D3D3D308A8A8AFF8A8A8AFF3D3D3D30FF00992FFF009947FFFF
-      FF00FF009908FF00996FFF00990FFFFFFF00FF009955FF00995FFFFFFF00FFFF
-      FF00FFFFFF00777777A4909090FF909090FF777777A4FFFFFF00FFFFFF00FFFF
-      FF00FF00995FFF009955FFFFFF00FFFFFF00FFFFFF00FF009990FF00996FFF00
-      990B181818107D7D7DF3666666F7666666F77D7D7DF318181810FF00990BFF00
-      996FFF009990FFFFFF00FFFFFF00FFFFFF00FFFFFF00FF00990CFF009972FF00
-      990C5B5B5B626A6A6AFF787878C3787878C36A6A6AFF5B5B5B62FF00990CFF00
-      9972FF00990CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00767676D4545454FF858585FF858585FF545454FF767676D4FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF003434
-      34306A6A6AFF5F5F5FE5FFFFFF40FFFFFF405F5F5FE56A6A6AFF34343430FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF006363
-      63A4585858FF6B6B6BFF717171FF717171FF6B6B6BFF585858FF636363A4FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00131313106868
-      68F2494949F7D5D5D54CFFFFFF40FFFFFF40D5D5D54C494949F7686868F21313
-      1310FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00484848625858
-      58FF555555FF676767FF636363FF636363FF676767FF555555FF585858FF4848
-      4862FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF005C5C5CD44545
-      45FF9090906EFFFFFF40FFFFFF40FFFFFF40FFFFFF409090906E454545FF5C5C
-      5CD4FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF34FFFF
-      FF40FFFFFF0CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0CFFFFFF40FFFF
-      FF34FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF004A4A4A164E4E4EBF4D4D4DFF4D4D4DFF4E4E4EBF4A4A4A16FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
-      00024A4A4ABE515151FF5E5E5EFF5E5E5EFF515151FF4A4A4ABE00000002FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
-      0006454545FF575757FF585858FF585858FF575757FF454545FF00000006FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
-      0009404040FF505050FF505050FF505050FF505050FF404040FF00000009FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
-      00093C3C3CFF494949FF494949FF494949FF494949FF3C3C3CFF00000009FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
-      0009373737FF424242FF424242FF424242FF424242FF373737FF00000009FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
-      0009313131D9373737FF3A3A3AFF3A3A3AFF373737FF313131D900000009FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
-      0007282828752E2E2EFF333333FF333333FF2E2E2EFF2828287500000007FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
-      000400000010252525B02A2A2AFF2A2A2AFF252525B00000001000000004FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002020
-      20252020207B212121D7232323FF242424FF212121E42121219A20202035FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF001A1A1A241A1A1A761B1B1BD41B1B
-      1BFF1C1C1CFF1D1D1DFF1D1D1DFF1D1D1DFF1D1D1DFF1C1C1CFF1B1B1BFF1B1B
-      1BE21B1B1B961A1A1A34FFFFFF0014141435151515FF151515FF161616FF1616
-      16FF161616FF161616FF161616FF161616FF161616FF161616FF161616FF1616
-      16FF151515FF151515FF141414350E0E0E960E0E0EFF0F0F0FFF0F0F0FFF0F0F
-      0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F
-      0FFF0F0F0FFF0E0E0EFF0E0E0E96080808E2080808FF080808FF080808FF0808
-      08FF080808FF080808FF080808FF080808FF080808FF080808FF080808FF0808
-      08FF080808FF080808FF080808E2000000120000001B0000001C0000001C0000
-      001C0000001C0000001C0000001C0000001C0000001C0000001C0000001C0000
-      001C0000001C0000001B00000012000000060000000900000009000000090000
-      0009000000090000000900000009000000090000000900000009000000090000
-      0009000000090000000900000006000000000000000000000000000000000000
-      000000000000999999FF9A9A9AFF9A9A9AFF9A9A9AFF9A9A9AFF9A9A9AFF9A9A
-      9AFF000000000000000000000000000000000000000000000000000000000000
-      000000000000999999FFFAFAFAFFFAFAFAFFFAFAFAFFD5D5D5FFFFFFFFFFC8C8
-      C8FF999999FF0000000000000000000000000000000000000000000000000000
-      000000000000999999FFF5F5F5FFF5F5F5FFF5F5F5FFD0D0D0FFFFFFFFFFFFFF
-      FFFF999999FF0000000000000000000000000000000000000000000000000000
-      000000000000999999FFF0F0F0FFF0F0F0FFF0F0F0FFCCCCCCFFCCCCCCFFCCCC
-      CCFF999999FF0000000000000000000000000000000000000000000000000000
-      0000000000008A8A8AFFD4D4D4FFD4D4D4FFDCDCDCFFEBEBEBFFEBEBEBFFEBEB
-      EBFF999999FF00000000000000000000000000000000999999FF9A9A9AFF9A9A
-      9AFF9A9A9AFF9A9A9AFF9A9A9AFFB9B9B9FFCFCFCFFFD8D8D8FFE6E6E6FFE6E6
-      E6FF999999FF00000000000000000000000000000000999999FFFAFAFAFFFAFA
-      FAFFFAFAFAFFD5D5D5FFFFFFFFFFC8C8C8FFB7B7B7FFCACACAFFE1E1E1FFE1E1
-      E1FF999999FF00000000000000000000000000000000999999FFF5F5F5FFF5F5
-      F5FFF5F5F5FFD0D0D0FFFFFFFFFFFFFFFFFF999999FFC5C5C5FFDBDBDBFFDBDB
-      DBFF999999FF00000000000000000000000000000000999999FFF0F0F0FFF0F0
-      F0FFF0F0F0FFCCCCCCFFCCCCCCFFCCCCCCFF999999FFC0C0C0FFD6D6D6FFD6D6
-      D6FF999999FF00000000000000000000000000000000999999FFEBEBEBFFEBEB
-      EBFFEBEBEBFFEBEBEBFFEBEBEBFFEBEBEBFF999999FF898989FF999999FF9999
-      99FF999999FF00000000000000000000000000000000999999FFE6E6E6FFE6E6
-      E6FFE6E6E6FFE6E6E6FFE6E6E6FFE6E6E6FF999999FF00000000000000000000
-      00000000000000000000000000000000000000000000999999FFE1E1E1FFE1E1
-      E1FFE1E1E1FFE1E1E1FFE1E1E1FFE1E1E1FF999999FF00000000000000000000
-      00000000000000000000000000000000000000000000999999FFDBDBDBFFDBDB
-      DBFFDBDBDBFFDBDBDBFFDBDBDBFFDBDBDBFF999999FF00000000000000000000
-      00000000000000000000000000000000000000000000999999FFD6D6D6FFD6D6
-      D6FFD6D6D6FFD6D6D6FFD6D6D6FFD6D6D6FF999999FF00000000000000000000
-      00000000000000000000000000000000000000000000999999FF999999FF9999
-      99FF999999FF999999FF999999FF999999FF999999FF00000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      000000000000000000000000000000000000ABABABFF595959FF595959FF5959
-      59FF999999FF0000000000000000000000000000000000000000000000000000
-      00000000000000000000000000000000000000000000595959FFCBCBCBFFCBCB
-      CBFF575757FF595959FF00000000000000000000000000000000000000000000
-      0000000000000000000000000000595959FF00000000999999FF595959FFD4D4
-      D4FFE0E0E0FF595959FF999999FF000000000000000000000000000000000000
-      0000000000000000000000000000595959FF595959FF00000000999999FF5959
-      59FFDEDEDEFFC8C8C8FF595959FF000000000000000000000000000000000000
-      0000000000000000000000000000595959FFDEDEDEFF595959FF595959FFB7B7
-      B7FFD6D6D6FFBCBCBCFF595959FF000000000000000000000000000000000000
-      0000000000000000000000000000595959FFABABABFFCDCDCDFFC7C7C7FFC3C3
-      C3FFCFCFCFFFA7A7A7FF595959FF000000000000000000000000000000000000
-      0000000000000000000000000000595959FF595959FF9C9C9CFFB9B9B9FFC4C4
-      C4FFA8A8A8FF5665AEFF7393EEFF1A47D9FF0000000000000000000000000000
-      000000000000000000000000000000000000595959FF595959FFABABABFF9999
-      99FF7A83BDFF0031FCFF001ACEFF93A3EEFF1A47D9FF00000000000000000000
-      00000000000000000000000000000000000000000000595959FF595959FF5959
-      59FF0323D2FF93A9FFFF0033FFFF001ACEFF93A3EEFF1A47D9FF000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000292946FF0323D2FF93A9FFFF0033FFFF001ACEFF93A3EEFF1A47D9FF0000
-      0000000000000000000000000000000000000000000000000000000000000000
-      000000000000292946FF0323D2FF93A9FFFF0033FFFF001ACEFF93A3EEFF1A47
-      D9FF000000000000000000000000000000000000000000000000000000000000
-      00000000000000000000292946FF0323D2FF93A9FFFF0033FFFF001ACEFF9BA7
-      EAFF1A47D9FF0000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000292946FF0323D2FF93A9FFFF0436FFFF001A
-      CEFFB7B4E4FF1A47D9FF00000000000000000000000000000000000000000000
-      000000000000000000000000000000000000292946FF0323D2FF8C89E6FF001A
-      CEFF8380CBFF1A47D9FF00000000000000000000000000000000000000000000
-      00000000000000000000000000000000000000000000292946FF7F5586FFBF9C
-      C2FFBF9CC2FF1A47D9FF00000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000292946FF7F55
-      86FF7F5586FF0000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDBD56FFFDBD
-      56FFFDBD56FFFCBD55FFFDBD56FFFCBD55FFFCBD55FFFCBD55FFFCBC55FFFBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDBD56FFFD8B1DFFFD8B
-      1DFFF57D03FFF47C03FFF57D03FFF47C03FFCF6801FFCF6801FFCF6801FFFBBC
-      54FFFDFDFD00FDFDFD0000000000FDFDFD00FDBD56FFFD9633FFFD9633FFFD8B
-      1DFFFD8B1DFFF47C03FFF57D03FFF47C03FFCF6801FFCF6801FFCF6801FFCE67
-      01FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFD9633FFFD9633FFFD8B
-      1DFFFD8B1DFFFCFCFCFFFDFDFDFFFCFCFCFFF47C03FFCF6801FFCF6801FFCE67
-      01FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA149FFFD9633FFFD96
-      33FFFD8B1DFFFCFCFCFFFDFDFDFFFCFCFCFF945312FFF47C03FFCF6801FFCE67
-      01FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA149FFFDA149FFFD96
-      33FFFD9633FFFCFCFCFFFDFDFDFFFCFCFCFF945312FFF47C03FFF47C02FFCE67
-      01FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA149FFFDA149FFFDFD
-      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFFFCFCFCFFF47C02FFF37B
-      02FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA959FFFDA149FFFDA1
-      49FFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFF945312FF935311FFF37B
-      02FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA959FFFDA959FFFDA1
-      49FFFDA149FFFCFCFCFFFDFDFDFFFCFCFCFF945312FF945312FFFC8A1CFFF37B
-      02FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDAF65FFFDA959FFFDA9
-      59FFFDA149FFFCA149FFFDFDFDFF945312FF945312FFFC8B1DFFFC8A1CFFFB8A
-      1CFFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDAF65FFFDAF65FFFDA9
-      59FFFDA959FFFCA149FFFDA149FF945312FFFC9633FFFC9633FFFC8A1CFFFB8A
-      1CFFA8402BFFFDFDFD0000000000FDFDFD00FDFDFD00A8402BFFFDAF65FFFDAF
-      65FFFDA959FFFCA958FFFDA149FFFCA149FFFC9633FFFC9633FFFC9532FFA73F
-      2AFFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00A8402BFFA840
-      2BFFA8402BFFA8402BFFA8402BFFA8402BFFA8402BFFA8402BFFA73F2AFFFBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
-      FB00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD0041D241FF41D2
-      41FF41D241FF41D141FF41D241FF41D141FF41D141FF41D141FF40D140FFFBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD0041D241FF14B014FF14B0
-      14FF0AA60AFF0AA60AFF019701FF019701FF018001FF018001FF018001FF40D0
-      40FFFDFDFD00FDFDFD0000000000FDFDFD0041D241FF1FB81FFF1FB81FFF14B0
-      14FF14B014FF0AA60AFF0AA60AFF019701FF019701FF018001FF018001FF0180
-      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF28C428FF1FB81FFF1FB8
-      1FFF14B014FF14B014FFFDFDFDFF0AA60AFF019701FF019701FF018001FF0180
-      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF28C428FF28C428FF1FB8
-      1FFF1FB81FFFFCFCFCFFFDFDFDFFFCFCFCFF018001FF019701FF019601FF0180
-      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF3AC83AFF28C428FF28C4
-      28FFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFF018001FF019601FF0196
-      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF3AC83AFF3AC83AFFFDFD
-      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFFFCFCFCFF018001FF0196
-      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF41D241FF3AC83AFF3AC8
-      3AFF1FB81FFFFCFCFCFFFDFDFDFFFCFCFCFF0B680BFF0B680BFF018001FF0196
-      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF58C858FF41D241FF3AC8
-      3AFF3AC83AFFFCFCFCFFFDFDFDFFFCFCFCFF136F13FF119011FF13AF13FF09A5
-      09FF018001FFFDFDFD0000000000FDFDFD0041D241FF58C858FF58C858FF41D2
-      41FF3AC83AFFFCFCFCFFFDFDFDFFFCFCFCFF136F13FF1FB81FFF13AF13FF09A5
-      09FF018001FFFDFDFD0000000000FDFDFD0041D241FF58C858FF58C858FF58C8
-      58FF41D241FF3AC83AFF1B771BFF1B761BFF136F13FF1FB81FFF13AF13FF13AF
-      13FF018001FFFDFDFD0000000000FDFDFD00FDFDFD00018001FF58C858FF58C8
-      58FF58C858FF41D141FF3AC83AFF28C428FF28C428FF28C428FF1EB71EFF0180
-      01FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00018001FF0180
-      01FF018001FF018001FF018001FF018001FF018001FF018001FF018001FFFBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
-      FB00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD006867FBFF6867
-      FBFF6867FBFF6766FAFF6867FBFF6766FAFF6766FAFF6766FAFF6766FAFFFBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD006867FBFF2E2DFBFF2322
-      FBFF2322FBFF1615FAFF0D0CFBFF0201F5FF0201E1FF0C0BCEFF0201BCFF6665
-      F9FFFDFDFD00FDFDFD0000000000FDFDFD006867FBFF4645FBFF3938FBFF2E2D
-      FBFF2322FBFF2322FAFF1615FBFF0D0CFAFF0201F5FF0201E1FF0B0ACDFF0101
-      BCFF0201A6FFFDFDFD0000000000FDFDFD006867FBFF4645FBFF4645FBFF3938
-      FBFF2E2DFBFFFCFCFCFFFDFDFDFFFCFCFCFF0D0CFAFF0201F5FF0201E1FF0B0A
-      CCFF0201A6FFFDFDFD0000000000FDFDFD006867FBFF5251FBFF4645FBFF4645
-      FBFF3938FBFFFCFCFCFFFDFDFDFFFCFCFCFF171692FF0605FAFF0201F5FF0101
-      E0FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF5A59FBFF5251FBFF4645
-      FBFF4645FBFFFCFCFCFFFDFDFDFFFCFCFCFF171692FF0D0CFAFF0504FAFF0101
-      F4FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF6261FBFF5A59FBFFFDFD
-      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFFFCFCFCFF0C0BFAFF0504
-      F9FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF6867FBFF6261FBFF5A59
-      FBFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFF171692FF0B0ACDFF0C0B
-      F9FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF7170FBFF6867FBFF6261
-      FBFF4847CDFFFCFCFCFFFDFDFDFFFCFCFCFF171692FF171692FF0B0BCDFF1514
-      F9FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF7574FBFF7170FBFF6867
-      FBFF6261FBFF4847CDFFFDFDFDFF2E2E92FF2E2E92FF3534CDFF2D2CFAFF2221
-      F9FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF7574FBFF7574FBFF7170
-      FBFF6867FBFF6160FAFF4847CDFF2E2E92FF3534CDFF3938FAFF3837FAFF2D2C
-      F9FF0201A6FFFDFDFD0000000000FDFDFD00FDFDFD000201A6FF7574FBFF7574
-      FBFF7170FBFF6665FAFF6261FBFF5958FAFF5151FAFF4645FAFF3837FAFF0101
-      A5FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD000201A6FF0201
-      A6FF0201A6FF0201A6FF0201A6FF0201A6FF0201A6FF0201A6FF0201A5FFFBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
-      FB00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD006767FDFF6767
-      FDFF6767FDFF6666FCFF6767FDFF6666FCFF6666FCFF6666FCFF6666FCFFFBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD006767FDFF2D2DFDFF2222
-      FDFF2222FDFF1515FCFF0C0CFDFF0101F7FF0101E3FF0B0BD0FF0101BEFF6565
-      FBFFFDFDFD00FDFDFD0000000000FDFDFD006767FDFF4545FDFF3838FDFF2D2D
-      FDFF2222FDFF2222FCFF1515FDFF0C0CFCFF0101F7FF0101E3FF0A0ACFFF0101
-      BEFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF4545FDFF4545FDFF3838
-      FDFF2D2DFDFF2222FCFFFDFDFDFF1515FCFF0C0CFCFF0101F7FF0101E3FF0A0A
-      CEFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF5151FDFF4545FDFF4545
-      FDFF3838FDFFFCFCFCFFFDFDFDFFFCFCFCFF0B0BD0FF0505FCFF0101F7FF0101
-      E2FF0101A7FFFDFDFD0000000000FDFDFD006767FDFF5959FDFF5151FDFF4545
-      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFF0B0BD0FF0404FCFF0101
-      F6FF0101A7FFFDFDFD0000000000FDFDFD006767FDFF6161FDFF5959FDFFFDFD
-      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFFFCFCFCFF0A0ACFFF0404
-      FBFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF6767FDFF6161FDFF5959
-      FDFF4747CFFFFCFCFCFFFDFDFDFFFCFCFCFF161694FF161694FF0A0ACFFF0B0B
-      FBFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF7070FDFF6767FDFF6161
-      FDFF5959FDFFFCFCFCFFFDFDFDFFFCFCFCFF161694FF3434CFFF2121FCFF1414
-      FBFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF7474FDFF7070FDFF6767
-      FDFF6161FDFFFCFCFCFFFDFDFDFFFCFCFCFF2E2E94FF3838FCFF2C2CFCFF2121
-      FBFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF7474FDFF7474FDFF7070
-      FDFF6767FDFF6060FCFF2E2E94FF2E2E94FF2E2E94FF3838FCFF3737FCFF2C2C
-      FBFF0101A7FFFDFDFD0000000000FDFDFD00FDFDFD000101A7FF7474FDFF7474
-      FDFF7070FDFF6565FCFF6161FDFF5858FCFF5051FCFF4545FCFF3737FCFF0101
-      A6FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD000101A7FF0101
-      A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A6FFFBFB
-      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
-      FB00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FCFCFB00FCFCFB00FBFCFB00FBFCFB00FBFBFB00FBFBFB00FBFBFB00FBFB
-      FB00FBFBFB00FBFBFB0000000000FDFDFD00FDFDFD00FDFDFD006767FCFF6666
-      FBFF6666FBFF6666FBFF6666FBFF6666FBFF6666FBFF6566FBFF6566FBFFFBFB
-      FB00FBFBFB00FBFBFB0000000000FDFDFD00FDFDFD006767FCFF2D2DFCFF2222
-      FBFF2121FBFF1415FBFF0B0CFBFF0101F6FF0101E2FF0A0ACEFF0101BDFF6566
-      FBFFFDFDFD00FDFDFD0000000000FCFCFC006666FCFF4545FCFF3838FCFF2D2D
-      FCFF2222FCFF2222FCFF1515FCFF0C0CFCFF0101F7FF0101E3FF0B0BD0FF0101
-      BFFF0101A7FFFCFCFC0000000000FDFDFD006767FCFF4545FCFF4545FCFFFCFC
-      FCFFFCFCFCFF2222FCFF1515FCFF1515FCFFFCFCFCFFFDFDFDFF0101E4FF0B0B
-      D0FF0101A7FFFDFDFD0000000000FCFCFC006666FCFF5050FCFF4545FCFFFCFC
-      FCFFFCFCFCFFFCFCFCFF0B0BD0FFFCFCFCFFFCFCFCFFFCFCFCFF0101A7FF0101
-      E3FF0101A7FFFCFCFC0000000000FCFCFC006666FCFF5858FCFF5051FCFF4545
-      FCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFF161694FF0101A7FF0101
-      F7FF0101A7FFFCFCFC0000000000FCFCFC006666FCFF6060FCFF5858FCFF5051
-      FCFF3434CFFFFCFCFCFFFCFCFCFFFCFCFCFF161694FF161694FF0B0BD0FF0505
-      FCFF0101A7FFFCFCFC0000000000FCFCFC006666FCFF6666FCFF6060FCFF5858
-      FCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFF0B0BD0FF1515FCFF0C0C
-      FCFF0101A7FFFCFCFC0000000000FCFCFC006666FCFF6F6FFCFF6666FCFFFCFC
-      FCFFFCFCFCFFFCFCFCFF2E2E94FFFCFCFCFFFCFCFCFFFCFCFCFF0B0BD0FF1515
-      FCFF0101A7FFFCFCFC0000000000FDFDFD006767FCFF7474FCFF7070FCFFFCFC
-      FCFFFCFCFCFF2E2E94FF2E2E94FF3434CFFFFCFCFCFFFCFCFCFF161694FF2222
-      FCFF0101A7FFFDFDFD0000000000FCFCFC006666FCFF7373FCFF7373FCFF6F6F
-      FCFF2E2E94FF2E2E94FF4747CFFF5050FCFF3434CFFF2E2E94FF161694FF2D2D
-      FCFF0101A7FFFCFCFC0000000000FCFCFC00FCFCFC000101A7FF7373FCFF7373
-      FCFF6F6FFCFF6666FCFF6060FCFF5858FCFF5050FCFF4545FCFF3838FCFF0101
-      A7FFFCFCFC00FCFCFC0000000000FCFCFC00FCFCFC00FCFCFC000101A7FF0101
-      A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FFFCFC
-      FC00FCFCFC00FCFCFC0000000000FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFC
-      FC00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFC
-      FC00FCFCFC00FCFCFC0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00A5C64DFFA5C6
-      4DFFA5C64DFFA5C64DFFA5C64DFFA5C64DFFA5C64DFFA5C64DFFA5C64DFFFDFD
-      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00A5C64DFF7F9242FF7789
-      3BFF6F8133FF667B2AFF667B2AFF5C7024FF556B18FF556B18FF4A5C16FFA5C6
-      4DFFFDFDFD00FDFDFD0000000000FDFDFD00A5C64DFF849A4AFF7F9242FF7789
-      3BFF77893BFF6F8133FF667B2AFF667B2AFF5C7024FF556B18FF556B18FF4A5C
-      16FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF849A4AFF849A4AFF7F92
-      42FF77893BFF6F8133FF6F8133FF667B2AFF667B2AFFFDFDFDFFFDFDFDFF4A5C
-      16FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF91A757FF849A4AFF849A
-      4AFF7F9242FF77893BFF6F8133FF6F8133FFFDFDFDFFFDFDFDFFFDFDFDFF3340
-      0FFF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF91A757FFFDFDFDFFFDFD
-      FDFF849A4AFF7F9242FF77893BFFFDFDFDFFFDFDFDFFFDFDFDFF3C4918FF4A5C
-      16FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF91A757FFFDFDFDFFFDFD
-      FDFFFDFDFDFF7F9242FFFDFDFDFFFDFDFDFFFDFDFDFF3C4918FF5C7024FF5C70
-      24FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF99AF5FFF91A757FFFDFD
-      FDFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFF4D5A29FF5C7024FF6F8133FF667B
-      2AFF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF99AF5FFF99AF5FFF91A7
-      57FFFDFDFDFFFDFDFDFFFDFDFDFF4D5A29FF667B2AFF77893BFF6F8133FF6F81
-      33FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF9FB36DFF99AF5FFF99AF
-      5FFF91A757FFFDFDFDFF4D5A29FF6F8133FF7F9242FF7F9242FF77893BFF6F81
-      33FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF9FB36DFF9FB36DFF99AF
-      5FFF99AF5FFF91A757FF77893BFF849A4AFF849A4AFF7F9242FF7F9242FF7789
-      3BFF3C4918FFFDFDFD0000000000FDFDFD00FDFDFD003C4918FF9FB36DFF9FB3
-      6DFF99AF5FFF99AF5FFF91A757FF91A757FF849A4AFF849A4AFF7F9242FF3C49
-      18FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD003C4918FF3C49
-      18FF3C4918FF3C4918FF3C4918FF3C4918FF3C4918FF3C4918FF3C4918FFFDFD
-      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD007B7B7BFF7B7B
-      7BFF7B7B7BFF7B7B7BFF7B7B7BFF7B7B7BFF7B7B7BFF7B7B7BFF7B7B7BFFFDFD
-      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD007B7B7BFF735D73FF735D
-      73FF6B556BFF644E64FF5C465CFF5C465CFF533D53FF4B374BFF4B374BFF7B7B
-      7BFFFDFDFD00FDFDFD0000000000FDFDFD007B7B7BFF806D80FF7B657BFF735D
-      73FF735D73FF6B556BFF644E64FF5C465CFF5C465CFF533D53FF4B374BFF4B37
-      4BFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF806D80FF806D80FF7B65
-      7BFF735D73FF6B556BFF6B556BFF644E64FF5C465CFF5C465CFF533D53FF4B37
-      4BFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF867386FF806D80FF7B65
-      7BFF7B657BFFFDFDFDFFFDFDFDFFFDFDFDFF644E64FF5C465CFF5C465CFF533D
-      53FF010101FFFDFDFD0000000000FDFDFD007B7B7BFF8A778AFF867386FF806D
-      80FFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFF644E64FF5C465CFF5C46
-      5CFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF917E91FF8A778AFF8673
-      86FFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFF413441FF644E64FF5C46
-      5CFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF917E91FF917E91FF8A77
-      8AFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFF413441FF6B556BFF644E
-      64FF010101FFFDFDFD0000000000FDFDFD007B7B7BFF998399FF917E91FF917E
-      91FF8A778AFFFDFDFDFFFDFDFDFFFDFDFDFF4B374BFF413441FF6B556BFF6B55
-      6BFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF998399FF998399FF917E
-      91FF917E91FF8A778AFF533D53FF4C484CFF4B374BFF7B657BFF735D73FF6B55
-      6BFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF9E889EFF998399FF9983
-      99FF917E91FF917E91FF8A778AFF867386FF806D80FF7B657BFF7B657BFF735D
-      73FF010101FFFDFDFD0000000000FDFDFD00FDFDFD00010101FF9E889EFF9983
-      99FF998399FF917E91FF917E91FF8A778AFF867386FF806D80FF7B657BFF0101
-      01FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00010101FF0101
-      01FF010101FF010101FF010101FF010101FF010101FF010101FF010101FFFDFD
-      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
-      FD00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00BDBDBDFFBDBD
-      BDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFFFFF
-      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00BDBDBDFF858585FF8080
-      80FF7B7B7BFF757575FF707070FF6B6B6BFF646464FF5F5F5FFF575757FFBDBD
-      BDFFFFFFFF00FFFFFF0000000000FFFFFF00BDBDBDFF939393FF8C8C8CFF8585
-      85FF808080FF7B7B7BFF757575FF707070FF6B6B6BFF646464FF5F5F5FFF5757
-      57FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFF939393FF939393FF8C8C
-      8CFF858585FFFFFFFFFFFFFFFFFFFFFFFFFF707070FF6B6B6BFF646464FF5F5F
-      5FFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFF9D9D9DFF939393FF9393
-      93FF8C8C8CFFFFFFFFFFFFFFFFFFFFFFFFFF4C484CFF707070FF6B6B6BFF6464
-      64FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA2A2A2FF9D9D9DFF9393
-      93FF939393FFFFFFFFFFFFFFFFFFFFFFFFFF4C484CFF757575FF707070FF6B6B
-      6BFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA2A2A2FF9D9D9DFFFFFF
-      FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF757575FF7070
-      70FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA7A7A7FFA2A2A2FF9D9D
-      9DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4C484CFF4C484CFF7575
-      75FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFACACACFFA7A7A7FFA2A2
-      A2FF9D9D9DFFFFFFFFFFFFFFFFFFFFFFFFFF575757FF4C484CFF808080FF7A7A
-      7AFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFACACACFFACACACFFA7A7
-      A7FFA2A2A2FF9D9D9DFFFFFFFFFF575757FF575757FF8C8C8CFF858585FF8080
-      80FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFB3B3B3FFACACACFFACAC
-      ACFFA7A7A7FFA2A2A2FF9D9D9DFF5F5F5FFF939393FF8C8C8CFF8C8C8CFF8585
-      85FF566056FFFFFFFF0000000000FFFFFF00FFFFFF00566056FFB3B3B3FFACAC
-      ACFFACACACFFA7A7A7FFA2A2A2FF9D9D9DFF9D9D9DFF939393FF8C8C8CFF5660
-      56FFFFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00566056FF5660
-      56FF566056FF566056FF566056FF566056FF566056FF566056FF566056FFFFFF
-      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00BDBDBDFFBDBD
-      BDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFFFFF
-      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00BDBDBDFF858585FF8080
-      80FF7B7B7BFF757575FF707070FF6B6B6BFF646464FF5F5F5FFF575757FFBDBD
-      BDFFFFFFFF00FFFFFF0000000000FFFFFF00BDBDBDFF939393FF8C8C8CFF8585
-      85FF808080FF7B7B7BFF757575FF707070FF6B6B6BFF646464FF5F5F5FFF5757
-      57FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFF939393FF939393FF8C8C
-      8CFF858585FF808080FFFFFFFFFF757575FF707070FF6B6B6BFF646464FF5F5F
-      5FFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFF9D9D9DFF939393FF9393
-      93FF8C8C8CFFFFFFFFFFFFFFFFFFFFFFFFFF5F5F5FFF707070FF6B6B6BFF6464
-      64FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA2A2A2FF9D9D9DFF9393
-      93FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F5F5FFF707070FF6B6B
-      6BFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA2A2A2FF9D9D9DFFFFFF
-      FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F5F5FFF7070
-      70FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA7A7A7FFA2A2A2FF9D9D
-      9DFF808080FFFFFFFFFFFFFFFFFFFFFFFFFF4C484CFF4C484CFF646464FF7575
-      75FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFACACACFFA7A7A7FFA2A2
-      A2FF9D9D9DFFFFFFFFFFFFFFFFFFFFFFFFFF575757FF6B6B6BFF808080FF7A7A
-      7AFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFACACACFFACACACFFA7A7
-      A7FFA2A2A2FFFFFFFFFFFFFFFFFFFFFFFFFF575757FF8C8C8CFF858585FF8080
-      80FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFB3B3B3FFACACACFFACAC
-      ACFFA7A7A7FFA2A2A2FF5F5F5FFF5F5F5FFF575757FF8C8C8CFF8C8C8CFF8585
-      85FF566056FFFFFFFF0000000000FFFFFF00FFFFFF00566056FFB3B3B3FFACAC
-      ACFFACACACFFA7A7A7FFA2A2A2FF9D9D9DFF9D9D9DFF939393FF8C8C8CFF5660
-      56FFFFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00566056FF5660
-      56FF566056FF566056FF566056FF566056FF566056FF566056FF566056FFFFFF
-      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF0000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000148E28FF006E00FFFF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00006E00FF046E08FF047607FF006500FFFF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00108019FF36CF54FF088C0DFF0065
-      00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF001D932EFF33C34EFF0476
-      07FF006500FF006500FF006E00FF006500FFFF00FF00FF00FF00FF00FF0011EE
-      EDFF00CCFFFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00128921FF0D88
-      19FF088C0DFF018401FF037A05FF006E00FF006E00FFFF00FF0011EEEDFF00CC
-      FFFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF27B8
-      4CFF18A32EFF07800CFF037A05FF059F07FF037A05FF026C5BFFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF2EC6
-      5CFF1A9E35FF0C8513FF059F07FF018401FF006053FF1277E6FF076DD4FFFF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF2EC6
-      5CFF249D38FF44DD65FF129611FF006053FF197EEAFF379CFFFF0A70D8FF076D
-      D4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0006720AFF1289
-      21FF4BE47EFF36BA51FF00635FFF2186EEFF379CFFFF1177DEFF1C82E9FF076D
-      D4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF001184
-      13FF1B9A2DFF006375FF288EEEFF58BDFFFF187EE0FF2186EEFF379CFFFF0268
-      D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00005F78FF1277E6FF3FA5FAFF2288E0FF3BA0EEFF45ABFFFF379CFFFF0268
-      D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF000B6DD7FF0B6DD7FF278CECFF58BDFFFF58BDFFFF278CECFF076D
-      D4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0011EEEDFF00CC
-      FFFFFF00FF00FF00FF00076DD4FF076DD4FF076DD4FF076DD4FF278CECFF3FA5
-      FAFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF0011EEEDFF00CCFFFFFF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00076DD4FF2F95
-      EDFF4AAFFFFF076DD4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00076D
-      D4FF197FDEFF076DD4FF076DD4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF000A70D8FFFF00FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00E5E5E5FFE5E5
-      E5FFE5E5E5FFE5E5E5FFE5E5E5FFE5E5E5FFE5E5E5FFE5E5E5FFE5E5E5FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00E5E5E5FFCCCCCCFFC5C5
-      C5FFC5C5C5FFC1C1C1FFBDBDBDFFBABABAFFBABABAFFB6B6B6FFB3B3B3FFE5E5
-      E5FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00E5E5E5FFCCCCCCFFCCCCCCFFCCCC
-      CCFFC5C5C5FFC5C5C5FFC1C1C1FFBDBDBDFFBABABAFFBABABAFFB6B6B6FFB3B3
-      B3FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFD4D4D4FFCCCCCCFFCCCC
-      CCFFCCCCCCFFC5C5C5FF000000FFC1C1C1FFBDBDBDFFBABABAFFBABABAFFB6B6
-      B6FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFD4D4D4FFD4D4D4FFCCCC
-      CCFF000000FFCCCCCCFF000000FF636363FF000000FFBDBDBDFFBABABAFFB6B6
-      B6FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFD4D4D4FFD4D4D4FFD4D4
-      D4FF000000FF000000FF000000FF000000FF000000FF5E5E5EFFBDBDBDFFBABA
-      BAFFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFD4D4D4FFD4D4
-      D4FFD4D4D4FF000000FF000000FF000000FF636363FF636363FFC1C1C1FFBDBD
-      BDFFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFD4D4D4FFD4D4
-      D4FF000000FF000000FF000000FF000000FF000000FFC5C5C5FFC5C5C5FFC1C1
-      C1FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFDBDBDBFFD4D4
-      D4FF000000FF6A6A6AFF000000FF636363FF000000FF636363FFC5C5C5FFC1C1
-      C1FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFDBDBDBFFDBDB
-      DBFFD4D4D4FF6A6A6AFF000000FF6A6A6AFFCCCCCCFF636363FFC5C5C5FFC5C5
-      C5FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFDBDBDBFFDBDB
-      DBFFDBDBDBFFD4D4D4FFD4D4D4FF6A6A6AFFCCCCCCFFCCCCCCFFCCCCCCFFC5C5
-      C5FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFDBDB
-      DBFFDBDBDBFFDBDBDBFFD4D4D4FFD4D4D4FFD4D4D4FFCCCCCCFFCCCCCCFFB3B3
-      B3FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00B3B3B3FFB3B3
-      B3FFB3B3B3FFB3B3B3FFB3B3B3FFB3B3B3FFB3B3B3FFB3B3B3FFB3B3B3FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF0000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF00005790D4FF5790
-      D4FF5790D4FF5790D4FF5790D4FF5790D4FF5790D4FF5790D4FF5790D4FF00FF
-      000000FF000000FF000000FF000000FF000000FF00005790D4FF0E70E1FF0060
-      CCFF0060CCFF0060CCFF0056B7FF0056B7FF004BA0FF004BA0FF004BA0FF5790
-      D4FF00FF000000FF000000FF000000FF00005790D4FF0E70E1FF0E70E1FF0E70
-      E1FFFFFFFFFF0060CCFF0060CCFF0056B7FF0056B7FF004BA0FF004BA0FF004B
-      A0FF0035AAFF00FF000000FF000000FF00005790D4FF2C83E7FF0E70E1FFFFFF
-      FFFFFFFFFFFFFFFFFFFF0060CCFF0060CCFFFFFFFFFF0056B7FF004BA0FF004B
-      A0FF0035AAFF00FF000000FF000000FF00005790D4FF2C83E7FFFFFFFFFFFFFF
-      FFFFFFFFFFFFFFFFFFFFFFFFFFFF0060CCFFFFFFFFFF09386DFF0056B7FF004B
-      A0FF0035AAFF00FF000000FF000000FF00005790D4FF2C83E7FF2C83E7FF2C83
-      E7FFFFFFFFFF09386DFF09386DFF09386DFFFFFFFFFF09386DFF0056B7FF0056
-      B7FF0035AAFF00FF000000FF000000FF00005790D4FF4591E7FF2C83E7FF2C83
-      E7FFFFFFFFFF09386DFF27588FFF0E70E1FFFFFFFFFF09386DFF0060CCFF0056
-      B7FF0035AAFF00FF000000FF000000FF00005790D4FF4591E7FF4591E7FF2C83
-      E7FFFFFFFFFF09386DFF0E70E1FF0E70E1FFFFFFFFFF09386DFF0060CCFF0060
-      CCFF0035AAFF00FF000000FF000000FF00005790D4FF599CE7FF4591E7FF4591
-      E7FFFFFFFFFF09386DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0060
-      CCFF0035AAFF00FF000000FF000000FF00005790D4FF599CE7FF599CE7FF4591
-      E7FFFFFFFFFF09386DFF2C83E7FFFFFFFFFFFFFFFFFFFFFFFFFF09386DFF2758
-      8FFF0035AAFF00FF000000FF000000FF00005790D4FF599CE7FF599CE7FF599C
-      E7FF4591E7FF09386DFF2C83E7FF2C83E7FFFFFFFFFF09386DFF27588FFF0E70
-      E1FF0035AAFF00FF000000FF000000FF000000FF00000035AAFF599CE7FF599C
-      E7FF599CE7FF4591E7FF4591E7FF2C83E7FF2C83E7FF27588FFF0E70E1FF0035
-      AAFF00FF000000FF000000FF000000FF000000FF000000FF00000035AAFF0035
-      AAFF0035AAFF0035AAFF0035AAFF0035AAFF0035AAFF0035AAFF0035AAFF00FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF00000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF0067B86DFF59AE60FF5BAA
-      62FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF005BAF62FFB9F0C3FF509E
-      58FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF005CB463FF59AE60FF55A65CFFAAE7B7FF4C96
-      53FF6AA270FF619867FF0000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF0059AE60FFA4E3B2FF9FE0ADFF9ADCA8FF94D9
-      A3FF8ED59FFF528A58FF0000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF006BB271FF76B37BFF4D9554FF8AD29AFF4385
-      4BFF66986CFF6C9871FF0000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF00488E50FF7BC88DFF3F7D
-      47FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF0043854BFF407D47FF467A
-      4AFFDDD0C6FFC7B4A8FF0000FF000000FF000000FF00D2C0B4FFC0A795FFBAA1
-      8DFFC7B4A8FF0000FF000000FF000000FF000000FF00E6DBD2FFEDE1D7FFFFFF
-      FDFFFFF7F1FFD8C4B7FFAB9180FFCBBAAEFFCFBAAAFFEDE1D7FFFFFFFDFFFFF7
-      F1FFD8C4B7FFAB9180FF0000FF000000FF00CDBAACFFF2E6DEFFB4A193FF6B4E
-      39FF816450FFCAB19EFFD3B5A2FFCDB19CFFDAC0AFFFCDB39FFF6F543EFF8164
-      50FFBFAB9CFFCBB1A1FF9D8674FF0000FF00BBA08DFFFFFFFFFF60412AFF0000
-      FF00DBC2B1FFFFFFFFFFFFFEF7FFFFF1E6FFFAE3D4FFF3D7C7FF9D897AFF0000
-      FF00C0A592FFEFD6C7FF6B4B32FF0000FF00C9B5A6FFE6D6CBFFB4A091FFA086
-      72FFC1A895FF4F2C12FF472409FF472409FF472409FF735642FFA08672FFC1A8
-      95FFD2BCAEFFB99C88FF8A7361FF0000FF000000FF00B79F8EFFCFB8A9FFEBD6
-      C8FFE5CBBBFFB3957FFF80624CFFBAA99BFFB79F8EFFCFB8A9FFEBD6C8FFE5CB
-      BBFFB3957FFF80624CFF0000FF000000FF000000FF000000FF00AE9B8BFF8165
-      4EFF745840FF968170FF0000FF000000FF000000FF00AE9B8BFF81654EFF7458
-      40FF968170FF0000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00078DBEFF078DBEFF078D
-      BEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00078DBEFFFEFEFEFFA5FEFFFFA5FE
-      FFFFA5FEFFFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFFFF00
-      FF00FF00FF00FF00FF00FF00FF00078DBEFFFEFEFEFFA0FBFFFFA0FBFEFFA0FB
-      FEFFA1FAFEFFA1FBFEFFA0FAFEFFA1FBFEFFA1FBFFFFA0FBFFFFA1FBFFFF0989
-      BAFFFF00FF00FF00FF00FF00FF00078DBEFF9BF5FEFF9AF6FEFF9AF6FEFF9BF5
-      FDFF9BF6FEFF9AF6FEFF9BF5FEFF9AF6FDFF9BF5FEFF9AF6FEFF9AF6FEFF0989
-      BAFFFF00FF00FF00FF00FF00FF00078DBEFF93F0FEFF93F0FDFF1697C5FF078D
-      BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
-      BEFF078DBEFF078DBEFF078DBEFF078DBEFF8AEAFCFF77DCF3FF219CC7FFFEFF
-      FFFFC8F7FDFFC9F7FDFFC9F7FDFFC9F7FEFFC8F7FEFFC9F7FDFFC8F7FEFF9BD5
-      E6FFEAFEFEFFD2F3F8FF078DBEFF078DBEFF82E3FCFF43B7DCFF65C2E0FFABF0
-      FCFF8DEBFCFF8DEBFCFF8DEBFDFF8DEBFDFF8DEBFCFF8DEBFDFF8DEBFCFF4CBB
-      DAFFC9F0F3FFC9F0F3FF078DBEFF078DBEFF79DDFBFF1899C7FF9ADFF3FF92E7
-      FCFF84E4FBFF83E4FCFF83E4FCFF84E4FCFF83E4FCFF83E4FBFF84E5FCFF48B9
-      DAFFC9F0F3FF1496C4FFFF00FF00078DBEFF72D6FAFF078DBEFFAEE9FCFF79DC
-      FBFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF7ADCFBFF79DCFAFF79DCFAFF44B5
-      D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF4CBCE7FF39A8D1FFA0E2FBFF6FD4
-      FAFF6FD4F9FF6ED4FAFF6FD4F9FF6FD4FAFF6FD4FAFF6FD4FAFF6ED4F9FF3EB1
-      D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF25A1D1FF71C6E8FF84D7FAFF66CD
-      F9FF65CDF9FF65CDF9FF65CDF9FF65CDF8FF65CDF9FF65CDF8FF66CEF9FF3AAD
-      D8FF1999C9FFFF00FF00FF00FF00FF00FF00078DBEFF078DBEFF078DBEFF078D
-      BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
-      BEFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF00B8B8B8FFACACACFFACACACFFB8B8B8FF0000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF00A8A8A8FFB4B4B4FFC2C2C2FFC2C2C2FFB4B4B4FFA8A8A8FF0000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF00A8A8
-      A8FFB6B6B6FFBFBFBFFFC2C2C2FFC2C2C2FFBEBEBEFFB6B6B6FFA8A8A8FF0000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF00B8B8B8FFAAAA
-      AAFFB6B6B6FFB9B9B9FFBCBCBCFFBCBCBCFFB9B9B9FFB5B5B5FFA9A9A9FFB8B8
-      B8FF0000FF000000FF000000FF000000FF000000FF000000FF00ACACACFFA8A8
-      A8FFADADADFFB2B2B2FFB4B4B4FFB4B4B4FFB2B2B2FFADADADFFA8A8A8FFACAC
-      ACFF0000FF000000FF000000FF000000FF000000FF000000FF00ACACACFFADAD
-      ADFFAFAFAFFFB2B2B2FFB4B4B4FFB4B4B4FFB4B4B4FFAFAFAFFFADADADFFACAC
-      ACFF0000FF000000FF000000FF000000FF000000FF000000FF00B4B4B4FFAEAE
-      AEFFB4B4B4FFB7B7B7FFB9B9B9FFB9B9B9FFB7B7B7FFB4B4B4FFAFAFAFFFB4B4
-      B4FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF00A7A7
-      A7FFB7B7B7FFBCBCBCFFBEBEBEFFBEBEBEFFBCBCBCFFB8B8B8FFA7A7A7FF0000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF00A7A7A7FFBCBCBCFFC5C5C5FFC5C5C5FFBCBCBCFFA7A7A7FF0000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF00ADADADFFA3A3A3FFA3A3A3FFADADADFF0000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF0000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000051C8FEFF18B0FDFF18B0FDFF51C8FEFF00FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000B2FFFF48BFF7FF90D4F7FF90D4F7FF48BFF7FF00B2FFFF00FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000B2
-      FFFF4EC1F8FF78D2FCFF88D7FDFF88D7FDFF74D0FBFF4EC1F8FF00B2FFFF00FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000051C8FEFF0FB1
-      F9FF47C6FEFF5ACEFFFF6AD3FEFF6AD3FEFF5ACEFFFF42C5FEFF0AB0FAFF51C8
-      FEFF00FF000000FF000000FF000000FF000000FF000000FF000019B2F9FF00B2
-      FFFF17BEFFFF32CBFFFF3ED2FFFF3ED2FFFF32CBFFFF17BEFFFF00B2FFFF19B2
-      F9FF00FF000000FF000000FF000000FF000000FF000000FF000019B2F9FF17BE
-      FFFF26C5FFFF32CBFFFF3CD1FFFF3CD1FFFF3CD1FFFF26C5FFFF17BEFFFF19B2
-      F9FF00FF000000FF000000FF000000FF000000FF000000FF00004ABAF2FF21C1
-      FDFF3BD0FFFF4DD9FFFF59DFFFFF59DFFFFF4FDBFFFF3ED2FFFF26C5FFFF4ABA
-      F2FF00FF000000FF000000FF000000FF000000FF000000FF000000FF00000FA5
-      EAFF4FDBFFFF65E5FFFF73ECFFFF73ECFFFF65E5FFFF53DDFFFF0FA5EAFF00FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000017A2E4FF65E5FFFF98FFFFFF98FFFFFF65E5FFFF19A3E4FF00FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF00003F97D7FF168BCFFF168BCFFF3F97D7FF00FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF00000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF0000D159FF00AC4EFF00AC4EFF00D159FF0000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF00009F42FF07BF57FF10E570FF10E570FF07BF57FF009F42FF0000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF00009F
-      42FF07C45BFF05E466FF04F06BFF04F06BFF06DF64FF07C45BFF009F42FF0000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF0000D159FF03A1
-      47FF00CA55FF00D858FF01DF5CFF01DF5CFF00D858FF00C854FF02A045FF00D1
-      59FF0000FF000000FF000000FF000000FF000000FF000000FF0004A74AFF009F
-      42FF00AF44FF00BF46FF00C744FF00C744FF00BF46FF00AF44FF009F42FF04A7
-      4AFF0000FF000000FF000000FF000000FF000000FF000000FF0004A74AFF00AF
-      44FF00B845FF00BF46FF00C644FF00C644FF00C644FF00B845FF00AF44FF04A7
-      4AFF0000FF000000FF000000FF000000FF000000FF000000FF000CB85AFF00B1
-      46FF00C546FF00D043FF00D842FF00D842FF00D142FF00C744FF00B845FF0CB8
-      5AFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000893
-      44FF00D142FF00E03FFF00E83AFF00E83AFF00E03FFF00D442FF089344FF0000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000D8E46FF00E03FFF01FF1FFF01FF1FFF00E03FFF0F8E47FF0000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF001D915CFF0D8145FF0D8145FF1D915CFF0000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF0000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF00005273FEFF193FFDFF193FFDFF5273FEFF00FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      00000033FFFF4969F7FF91A2F7FF91A2F7FF4969F7FF0033FFFF00FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF00000033
-      FFFF4F6DF8FF7991FCFF899EFDFF899EFDFF758EFBFF4F6DF8FF0033FFFF00FF
-      000000FF000000FF000000FF000000FF000000FF000000FF00005273FEFF103D
-      F9FF486CFEFF5B7DFFFF6B8AFEFF6B8AFEFF5B7DFFFF4368FEFF0B39FAFF5273
-      FEFF00FF000000FF000000FF000000FF000000FF000000FF00001A43F9FF0033
-      FFFF184BFFFF3366FFFF3F73FFFF3F73FFFF3366FFFF184BFFFF0033FFFF1A43
-      F9FF00FF000000FF000000FF000000FF000000FF000000FF00001A43F9FF184B
-      FFFF275AFFFF3366FFFF3D71FFFF3D71FFFF3D71FFFF275AFFFF184BFFFF1A43
-      F9FF00FF000000FF000000FF000000FF000000FF000000FF00004B67F2FF2254
-      FDFF3C6FFFFF4E81FFFF5A8DFFFF5A8DFFFF5084FFFF3F73FFFF275AFFFF4B67
-      F2FF00FF000000FF000000FF000000FF000000FF000000FF000000FF00000F38
-      EBFF5084FFFF6699FFFF74A7FFFF74A7FFFF6699FFFF5488FFFF0F38EBFF00FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      0000173CE5FF6699FFFF99CCFFFF99CCFFFF6699FFFF193EE5FF00FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF0000404CD8FF162FD0FF162FD0FF404CD8FF00FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
-      000000FF000000FF000000FF0000046E08FF047607FF006500FFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00108019FF36CF54FF088C0DFF006500FFFF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF001D932EFF33C34EFF047607FF0065
-      00FF006500FF006D00FF006500FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00128921FF0D8819FF088C
-      0DFF038403FF037A05FF006D00FF006D00FFFF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF27B84CFF18A3
-      2EFF07800CFF037A05FF009700FF006D00FFFF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF2EC65CFF1A9E
-      35FF0C8513FF059F07FF006D00FF898A8CFF535558FFFF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF2EC65CFF249D
-      38FF44DD65FF006D00FF535558FFFF00FF00898A8CFF535558FFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0006720AFF128921FF4BE4
-      7EFF006D00FFFF00FF00898A8CFF535558FFFF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00118413FF006D
-      00FF898A8CFF535558FFFF00FF00898A8CFF898A8CFFFF00FF00FF00FF000268
-      D0FF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00898A8CFF535558FFFF00FF00FF00FF00FF00FF000268D0FF379C
-      FFFF0D73DBFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000268D0FF379CFFFF1177
-      DEFF1C82E9FF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF000268D0FF58BDFFFF187EE0FF2186
-      EEFF379CFFFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF000268D0FF3FA5FAFF2288E0FF3BA0EEFF45AB
-      FFFF379CFFFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF000268D0FF1177DEFF2A90EEFF5DC3FFFF58BD
-      FFFF278CECFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF000066CEFF0268D0FF0268D0FF0268
-      D0FF2A90EEFF3FA5FAFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF000268D0FF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FF993300FF993300FF9933
-      00FF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00993300FFE3AE79FFE0A56BFFDD9C5CFFDA94
-      4FFF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00993300FFEDCAA8FFEAC199FFE7B98BFFDFA875FF9933
-      00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00993300FFF6E6D6FFF3DEC8FFF0D5BAFFE3B995FF993300FFFF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00993300FFE1C0ABFFF7E9DAFFF4E0CCFFE1BA9CFF9933
-      00FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00993300FFF4E9E2FFFDF9F5FFFBF4ECFF993300FF9933
-      00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00993300FFE1C6B0FFECDCCDFFEDDDD1FF993300FFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00993300FFCDA27CFFD8B596FF993300FF993300FFFF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF009933
-      00FFBA7D48FF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFAA5F
-      1FFF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FF993300FF9933
-      00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FF993300FFFF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00993300FFFF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
-      FF00FF00FF00FF00FF00FF00FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF0056C9D6FF56C9
-      D6FF56C9D6FF56C9D6FF56C9D6FF56C9D6FF56C9D6FF56C9D6FF56C9D6FF0000
-      FF000000FF000000FF000000FF000000FF000000FF0056C9D6FF00B4C8FF02A6
-      B7FF02A6B7FF0098A9FF0098A9FF0098A9FF008998FF008998FF017885FF56C9
-      D6FF0000FF000000FF000000FF000000FF0056C9D6FF00B4C8FF00B4C8FF00B4
-      C8FF02A6B7FF02A6B7FF0098A9FF0098A9FF008998FF008998FF008998FF0178
-      85FF007FAAFF0000FF000000FF000000FF0056C9D6FF04C3D8FF00B4C8FF00B4
-      C8FF00B4C8FF02A6B7FF02A6B7FF0098A9FF0098A9FF008998FF008998FF0089
-      98FF007FAAFF0000FF000000FF000000FF0056C9D6FF04C3D8FF04C3D8FF00B4
-      C8FFFFFFFFFFFFFFFFFF008998FFFFFFFFFFFFFFFFFF017885FF008998FF0089
-      98FF007FAAFF0000FF000000FF000000FF0056C9D6FF04C3D8FF04C3D8FF04C3
-      D8FFFFFFFFFFFFFFFFFF006671FFFFFFFFFFFFFFFFFF006671FF017885FF0089
-      98FF007FAAFF0000FF000000FF000000FF0056C9D6FF12CFE4FF04C3D8FF04C3
-      D8FFFFFFFFFFFFFFFFFF006671FFFFFFFFFFFFFFFFFF006671FF017885FF0098
-      A9FF007FAAFF0000FF000000FF000000FF0056C9D6FF12CFE4FF12CFE4FF04C3
-      D8FFFFFFFFFFFFFFFFFF006671FFFFFFFFFFFFFFFFFF006671FF008998FF0098
-      A9FF007FAAFF0000FF000000FF000000FF0056C9D6FF2ED5E7FF12CFE4FF12CF
-      E4FFFFFFFFFFFFFFFFFF017885FFFFFFFFFFFFFFFFFF006671FF008998FF02A6
-      B7FF007FAAFF0000FF000000FF000000FF0056C9D6FF2ED5E7FF2ED5E7FF12CF
-      E4FF02A6B7FF017885FF017885FF0098A9FF006671FF006671FF008998FF02A6
-      B7FF007FAAFF0000FF000000FF000000FF0056C9D6FF56C9D6FF2ED5E7FF12CF
-      E4FF12CFE4FF02A6B7FF02A6B7FF04C3D8FF0098A9FF0098A9FF00B4C8FF02A6
-      B7FF007FAAFF0000FF000000FF000000FF000000FF00007FAAFF56C9D6FF2ED5
-      E7FF12CFE4FF12CFE4FF12CFE4FF04C3D8FF04C3D8FF04C3D8FF00B4C8FF007F
-      AAFF0000FF000000FF000000FF000000FF000000FF000000FF00007FAAFF007F
-      AAFF007FAAFF007FAAFF007FAAFF007FAAFF007FAAFF007FAAFF007FAAFF0000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
-      FF000000FF000000FF000000FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
-      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF9292
-      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
-      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF929292FF9292
-      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
-      00FF424242FFC2C2C2FF626262FF828282FFC2C2C2FF929292FF828282FF8282
-      82FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
-      42FFC2C2C2FF626262FF424242FF424242FF626262FFFFFFFF00929292FF9292
-      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00828282FF424242FF424242FF626262FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FF626262FF828282FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF000000FF424242FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF000000FF424242FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF6262
-      62FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
-      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF4242
-      42FF828282FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
-      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00828282FF424242FF4242
-      42FF828282FFC2C2C2FF929292FF929292FFC2C2C2FFC2C2C2FFC2C2C2FFC2C2
-      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF8282
-      82FFC2C2C2FF929292FF929292FF929292FFC2C2C2FFFFFFFF00C2C2C2FFC2C2
-      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00929292FF828282FF828282FF929292FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FFC2C2C2FF929292FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
-      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
-      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
-      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
-      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF626262FFC2C2C2FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF424242FF828282FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00828282FF424242FF424242FF626262FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF828282FFC2C2C2FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF9292
-      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF929292FF9292
-      92FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF828282FF8282
-      82FF929292FFFFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FF9292
-      92FFC2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00424242FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF828282FF6262
-      62FFC2C2C2FF424242FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF4242
-      42FF828282FF929292FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00828282FF424242FF4242
-      42FF626262FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF8282
-      82FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF929292FFC2C2C2FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00929292FF929292FF929292FF929292FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00929292FF828282FF828282FF929292FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FF929292FFC2C2C2FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
-      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
-      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
-      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
-      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FF828282FF626262FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00626262FF424242FF424242FF828282FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF9292
-      92FFC2C2C2FF828282FF424242FF424242FF626262FFC2C2C2FF424242FF4242
-      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF929292FF9292
-      92FF929292FFC2C2C2FF626262FF828282FFC2C2C2FF424242FF000000FF0000
-      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF828282FF8282
-      82FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
-      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FF9292
-      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
-      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FF929292FF929292FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00929292FF929292FF929292FF929292FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
-      C2FFFFFFFF00929292FF828282FF828282FF929292FFC2C2C2FF828282FF6262
-      62FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
-      C2FFC2C2C2FFC2C2C2FFC2C2C2FF929292FFC2C2C2FF828282FF424242FF4242
-      42FF828282FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
-      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF4242
-      42FF626262FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
-      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF828282FF6262
-      62FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF004242
-      42FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF004242
-      42FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FF929292FF9292
-      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00C2C2C2FF828282FF9292
-      92FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF828282FF9292
-      92FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF9292
-      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FF828282FF626262FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF008282
-      82FF424242FF424242FF828282FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF006262
-      62FF424242FF424242FF626262FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FF828282FF626262FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
-      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
-      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
-      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
-      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
-      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
-      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
-      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
-      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FF929292FF929292FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FF828282FF929292FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF009292
-      92FF828282FF828282FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
-      C2FFC2C2C2FF929292FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF8282
-      82FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF4242
-      42FF626262FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FF828282FF424242FF4242
-      42FF828282FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00424242FF000000FF000000FF424242FFC2C2C2FF626262FF8282
-      82FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00424242FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      000000000000000000000000000000000000000000002287E8C82187E8C60000
-      0000000000000000000000000000000000000000000000000000000000000000
-      000000000000000000000000000000000000000000000C70D0ED0C6FD0EF0000
-      0000000000000000000000816553008B6CC0009372F7009473FF008C6CDE0083
-      66A8007A5F43000000000000000000000000000000000A6DD0311E83E3BD0000
-      00000000000000775C85007E62FF018E6FFF07CEA2FF06DEAFFF06D6A8FF08C1
-      98FF028A6CFF00765C8D00000000278AE9E72588E8D7000000001379D9D72288
-      EE1E006B5232007158FD017E62FF08CDA1FF01D2A4FF007B5FFF037259FF047E
-      63FF038669FF017D62FF006A51520C70CFEB1173D2FC69B1F7791176D6A22287
-      E88600614C9D006952FF048F70FF02C79BFF008365FF0CA281FF20AF90FF20AA
-      8DFF0E9174FF00785DFF006651C1000000002288EE1E409AF0EA57A6F3BE3893
-      ECE3025C4BE400614BFF02795EFF01A882FF038065FF0EA483FF168972FF1578
-      66FF179B7EFF007C60FF00624CF9000000004095EA0C56A6F4EF68B2F6FF7CBE
-      FBFF0B5750FF00503EFF005442FF00755AFF048165FF0C9B7CFF159E7FFF1698
-      7BFF1AA284FF008768FF005B48F2000000001D7DD9352484DFFF65ADF2FF6EB2
-      F3FF5BA3E7FF357EA7FF16637EFF0E617FFF005E49FF087E64FF138D72FF19A0
-      83FF029071FF006D54FF005545C5000000000F69C3111267BBBC146CC2DC1F73
-      C5FE3B8AD6FF4491DBFF3A8AD6FF1469B4FF006751FF007A5FFF00896BFF0092
-      72FF006F56FF00503EFA00504040000000000000000000000000000000001067
-      B84F0C5EACCF0A5AA9F30958A5FD0754A0FF034E63FE00493DFE004737FF0047
-      37FE00493BE50050415300000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000000000000000000000000000000000000000
-      0000000000000000000000000000
-    }
-  end
-  object pmLabels: TPopupMenu
-    left = 268
-    top = 92
-    object miCopyLabel: TMenuItem
-      Caption = 'Copy'
-      OnClick = miCopyLabelClick
-    end
-  end
-  object TrayIcon: TTrayIcon
-    BalloonFlags = bfInfo
-    BalloonTimeout = 10000
-    PopUpMenu = pmTray
-    OnClick = TrayIconDblClick
-    OnDblClick = TrayIconDblClick
-    left = 456
-    top = 56
-  end
-  object pmTray: TPopupMenu
-    Images = ImageList16
-    left = 460
-    top = 88
-    object MenuItem43: TMenuItem
-      Action = acShowApp
-      Default = True
-      OnClick = acShowAppExecute
-    end
-    object MenuItem63: TMenuItem
-      Action = acHideApp
-      OnClick = acHideAppExecute
-    end
-    object miTSep1: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem26: TMenuItem
-      Action = acStartAllTorrents
-      OnClick = acStartAllTorrentsExecute
-    end
-    object MenuItem27: TMenuItem
-      Action = acStopAllTorrents
-      OnClick = acStopAllTorrentsExecute
-    end
-    object MenuItem28: TMenuItem
-      Caption = '-'
-    end
-    object pmiDownSpeedLimit: TMenuItem
-      Caption = 'Maximum download speed'
-    end
-    object pmiUpSpeedLimit: TMenuItem
-      Caption = 'Maximum upload speed'
-    end
-    object MenuItem76: TMenuItem
-      Action = acAltSpeed
-      Bitmap.Data = {
-        36040000424D3604000000000000360000002800000010000000100000000100
-        2000000000000004000064000000640000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        000000000000000000001067B84F0C5EACCF0A5AA9F30958A5FD0754A0FF034E
-        63FE00493DFE004737FF004737FE00493BE50050415300000000000000000F69
-        C3111267BBBC146CC2DC1F73C5FE3B8AD6FF4491DBFF3A8AD6FF1469B4FF0067
-        51FF007A5FFF00896BFF009272FF006F56FF00503EFA00504040000000001D7D
-        D9352484DFFF65ADF2FF6EB2F3FF5BA3E7FF357EA7FF16637EFF0E617FFF005E
-        49FF087E64FF138D72FF19A083FF029071FF006D54FF005545C5000000004095
-        EA0C56A6F4EF68B2F6FF7CBEFBFF0B5750FF00503EFF005442FF00755AFF0481
-        65FF0C9B7CFF159E7FFF16987BFF1AA284FF008768FF005B48F2000000002288
-        EE1E409AF0EA57A6F3BE3893ECE3025C4BE400614BFF02795EFF01A882FF0380
-        65FF0EA483FF168972FF157866FF179B7EFF007C60FF00624CF90C70CFEB1173
-        D2FC69B1F7791176D6A22287E88600614C9D006952FF048F70FF02C79BFF0083
-        65FF0CA281FF20AF90FF20AA8DFF0E9174FF00785DFF006651C1278AE9E72588
-        E8D7000000001379D9D72288EE1E006B5232007158FD017E62FF08CDA1FF01D2
-        A4FF007B5FFF037259FF047E63FF038669FF017D62FF006A5152000000000000
-        00000A6DD0311E83E3BD000000000000000000775C85007E62FF018E6FFF07CE
-        A2FF06DEAFFF06D6A8FF08C198FF028A6CFF00765C8D00000000000000000000
-        00000C70D0ED0C6FD0EF00000000000000000000000000816553008B6CC00093
-        72F7009473FF008C6CDE008366A8007A5F430000000000000000000000000000
-        00002287E8C82187E8C600000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000000000000000
-        0000000000000000000000000000000000000000000000000000
-      }
-      OnClick = acAltSpeedExecute
-    end
-    object MenuItem72: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem24: TMenuItem
-      Action = acExit
-      OnClick = acExitExecute
-    end
-  end
-  object imgFlags: TImageList
-    Height = 12
-    Width = 18
-    left = 144
-    top = 92
-    Bitmap = {
-      4C6901000000120000000C000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
-      FF00FFFFFF00FFFFFF00FFFFFF00
-    }
-  end
-  object pmPeers: TPopupMenu
-    left = 340
-    top = 92
-    object MenuItem29: TMenuItem
-      Action = acResolveHost
-      OnClick = acResolveHostExecute
-    end
-    object MenuItem30: TMenuItem
-      Action = acResolveCountry
-      OnClick = acResolveCountryExecute
-    end
-    object MenuItem31: TMenuItem
-      Action = acShowCountryFlag
-      OnClick = acShowCountryFlagExecute
-    end
-    object MenuItem25: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem45: TMenuItem
-      Action = acSetupColumns
-      OnClick = acSetupColumnsExecute
-    end
-  end
-  object FilterTimer: TTimer
-    Interval = 100
-    OnTimer = FilterTimerTimer
-    left = 76
-    top = 28
-  end
-  object pmTrackers: TPopupMenu
-    Images = ImageList16
-    left = 376
-    top = 92
-    object MenuItem65: TMenuItem
-      Action = acAddTracker
-      OnClick = acAddTrackerExecute
-    end
-    object MenuItem66: TMenuItem
-      Action = acEditTracker
-      OnClick = acEditTrackerExecute
-    end
-    object MenuItem67: TMenuItem
-      Action = acDelTracker
-      OnClick = acDelTrackerExecute
-    end
-    object sepTrackers: TMenuItem
-      Caption = '-'
-    end
-    object MenuItem48: TMenuItem
-      Action = acSetupColumns
-      OnClick = acSetupColumnsExecute
-    end
-  end
-  object AnimateTimer: TTimer
-    Enabled = False
-    Interval = 100
-    OnTimer = AnimateTimerTimer
-    left = 732
-    top = 60
-  end
-  object pmConnections: TPopupMenu
-    left = 12
-    top = 72
-    object sepCon2: TMenuItem
-      Tag = 1
-      Caption = '-'
-    end
-    object MenuItem69: TMenuItem
-      Tag = 1
-      Action = acNewConnection
-      OnClick = acNewConnectionExecute
-    end
-    object MenuItem74: TMenuItem
-      Tag = 1
-      Action = acConnOptions
-      OnClick = acConnOptionsExecute
-    end
-  end
-  object pmDownSpeeds: TPopupMenu
-    left = 700
-    top = 96
-  end
-  object pmUpSpeeds: TPopupMenu
-    left = 732
-    top = 96
-  end
-end
+object MainForm: TMainForm
+  Left = 220
+  Height = 506
+  Top = 156
+  Width = 780
+  HorzScrollBar.Page = 740
+  VertScrollBar.Page = 420
+  VertScrollBar.Range = 24
+  ActiveControl = panTop
+  AllowDropFiles = True
+  Caption = ' '
+  ClientHeight = 486
+  ClientWidth = 780
+  Constraints.MinHeight = 300
+  Constraints.MinWidth = 300
+  Menu = MainMenu
+  OnClose = FormClose
+  OnCreate = FormCreate
+  OnDestroy = FormDestroy
+  OnDropFiles = FormDropFiles
+  OnResize = FormResize
+  OnShow = FormShow
+  OnWindowStateChange = FormWindowStateChange
+  LCLVersion = '0.9.30.1'
+  object panTop: TPanel
+    Left = 0
+    Height = 128
+    Top = 24
+    Width = 780
+    Align = alClient
+    BevelOuter = bvNone
+    ClientHeight = 128
+    ClientWidth = 780
+    Constraints.MinHeight = 80
+    TabOrder = 0
+    object HSplitter: TSplitter
+      Left = 130
+      Height = 128
+      Top = 0
+      Width = 5
+      AutoSnap = False
+      MinSize = 50
+    end
+    object panFilter: TPanel
+      Left = 0
+      Height = 128
+      Top = 0
+      Width = 130
+      Align = alLeft
+      BevelOuter = bvNone
+      ClientHeight = 128
+      ClientWidth = 130
+      TabOrder = 2
+      object panSearch: TPanel
+        Left = 0
+        Height = 21
+        Top = 105
+        Width = 130
+        Align = alBottom
+        AutoSize = True
+        BorderSpacing.Top = 2
+        BorderSpacing.Bottom = 2
+        BevelOuter = bvNone
+        ClientHeight = 21
+        ClientWidth = 130
+        TabOrder = 0
+        object imgSearch: TImage
+          Left = 0
+          Height = 21
+          Top = 0
+          Width = 24
+          Align = alLeft
+          Center = True
+          Picture.Data = {
+            055449636F6E7E05000000000100010010100000010008006805000016000000
+            2800000010000000200000000100080000000000000000000000000000000000
+            0000000000000000FFFFFC00FFFFF700FFFEEA00FFFFE600FFF7EA00F5EFE000
+            FFFFDA00FFFED400FFF2D700FFFCCD00FFF9C700FFF5CA00FFF5C300F3EDDA00
+            F1E5DD00EFDAC200E2CECE00DCC5C500C9D0D400FFF1BE00FFEEBD00FFE5B900
+            FFE4B100FFDEAB00F3D2A800F1CFA900F5CFA400E0C0B600EFC9A600E0C7AE00
+            E0BDB300E5BEA500E0B89E00D8BCBA00DCB3A000D2B4A400D2B19E00CCB29900
+            CEB09600CCAC9300CEA88E00BDE3FF00A5D8FF008DCDFF0089B0CA00ABABAB00
+            A1A1A100BC9A8600B9938A00B79E8C00B7948100AD8A8D00AA878E0096969600
+            9F8581008C8C8C0081818100987D8200907676008B75740053B8FF00588CCF00
+            4088DF004385D9004483D6007979A7007376A80073758900777777007B616100
+            6C6C6C00626262005F5B5B005757570000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            0000000000000000000000000000000000000000000000000000000000000000
+            00000000FFFFFF004A3749444A4A4A4A4A4A4A4A4A4A4A4A2D433448444A4A4A
+            4A4A4A4A4A4A4A4A2C3E423348444A4A4A4A4A4A4A4A4A4A293C3F413348444A
+            4A4A4A4A4A4A4A4A4A2A3C3F413348354A4A4A4A4A4A4A4A4A4A2B3C40413938
+            2E46494947374A4A4A4A4A2B3C3D373B2F261D233B49374A4A4A4A4A2A123319
+            0C070606053649374A4A4A4A4A101C0C0C060200000D45464A4A4A4A4A1E0C16
+            0A060200010631494A4A4A4A4A1F0B170C070302030625494A4A4A4A4A1F0B15
+            14090706060727464A4A4A4A4A1B0B0815130C0A0C0C32374A4A4A4A4A110F00
+            0414171613183A4A4A4A4A4A4A4A210E0209140C1A304A4A4A4A4A4A4A4A4A11
+            24282022374A4A4A8FFF000007FF000003FF000001FF000080FF0000C0030000
+            E0010000F0000000F8000000F8000000F8000000F8000000F8000000F8010000
+            FC030000FE070000
+          }
+        end
+        object edSearch: TEdit
+          Left = 24
+          Height = 21
+          Top = 0
+          Width = 106
+          Align = alClient
+          OnChange = edSearchChange
+          TabOrder = 0
+        end
+      end
+      object lvFilter: TVarGrid
+        Left = 0
+        Height = 103
+        Top = 0
+        Width = 130
+        Align = alClient
+        Columns = <        
+          item
+            Title.Caption = 'Title'
+            Width = 10
+          end>
+        Constraints.MinWidth = 50
+        FixedCols = 0
+        FixedRows = 0
+        Options = [goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize]
+        RowCount = 1
+        ScrollBars = ssAutoVertical
+        TabOrder = 1
+        OnClick = lvFilterClick
+        OnResize = lvFilterResize
+        Images = ImageList16
+        OnCellAttributes = lvFilterCellAttributes
+        OnDrawCell = lvFilterDrawCell
+      end
+    end
+    object gTorrents: TVarGrid
+      Left = 135
+      Height = 128
+      Top = 0
+      Width = 645
+      Align = alClient
+      Columns = <      
+        item
+          Title.Caption = 'Name'
+          Width = 200
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'Size'
+          Width = 60
+        end      
+        item
+          Alignment = taCenter
+          Title.Caption = 'Done'
+        end      
+        item
+          Title.Caption = 'Status'
+          Width = 70
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'Seeds'
+          Width = 55
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'Peers'
+          Width = 55
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'Down speed'
+          Width = 75
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'Up speed'
+          Width = 75
+        end      
+        item
+          Title.Caption = 'ETA'
+          Width = 80
+        end      
+        item
+          Title.Caption = 'Ratio'
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'Downloaded'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'Uploaded'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Title.Caption = 'Tracker'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Title.Caption = 'Tracker status'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Title.Caption = 'Added on'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Title.Caption = 'Completed on'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Title.Caption = 'Last active'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Title.Caption = 'Path'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Title.Caption = 'Priority'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'Size to download'
+          Width = 0
+          Visible = False
+        end      
+        item
+          Alignment = taRightJustify
+          Title.Caption = 'ID'
+          Width = 0
+          Visible = False
+        end>
+      FixedCols = 0
+      Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize, goHeaderHotTracking, goHeaderPushedLook]
+      PopupMenu = pmTorrents
+      RowCount = 1
+      TabOrder = 0
+      OnClick = gTorrentsClick
+      OnDblClick = gTorrentsDblClick
+      OnResize = gTorrentsResize
+      Images = ImageList16
+      MultiSelect = True
+      SortColumn = 0
+      OnCellAttributes = gTorrentsCellAttributes
+      OnDrawCell = gTorrentsDrawCell
+      OnSortColumn = gTorrentsSortColumn
+    end
+  end
+  object StatusBar: TStatusBar
+    Left = 0
+    Height = 23
+    Top = 463
+    Width = 780
+    Panels = <    
+      item
+        Width = 300
+      end    
+      item
+        Width = 120
+      end    
+      item
+        Width = 120
+      end    
+      item
+        Width = 120
+      end    
+      item
+        Width = 50
+      end>
+    SimplePanel = False
+    OnMouseDown = StatusBarMouseDown
+  end
+  object PageInfo: TPageControl
+    Left = 0
+    Height = 306
+    Top = 157
+    Width = 780
+    ActivePage = tabGeneral
+    Align = alBottom
+    Constraints.MinHeight = 50
+    Images = ImageList16
+    TabIndex = 0
+    TabOrder = 1
+    OnChange = PageInfoChange
+    OnPageChanged = PageInfoChange
+    object tabGeneral: TTabSheet
+      Caption = 'General'
+      ClientHeight = 279
+      ClientWidth = 772
+      ImageIndex = 4
+      object sbGenInfo: TScrollBox
+        Left = 0
+        Height = 253
+        Top = 26
+        Width = 772
+        Align = alClient
+        ClientHeight = 249
+        ClientWidth = 768
+        TabOrder = 0
+        object panGeneralInfo: TPanel
+          Left = 0
+          Height = 78
+          Top = 136
+          Width = 768
+          Align = alTop
+          BevelOuter = bvNone
+          ChildSizing.LeftRightSpacing = 4
+          ChildSizing.TopBottomSpacing = 4
+          ChildSizing.HorizontalSpacing = 16
+          ChildSizing.VerticalSpacing = 4
+          ChildSizing.EnlargeHorizontal = crsHomogenousChildResize
+          ChildSizing.ControlsPerLine = 4
+          ClientHeight = 78
+          ClientWidth = 768
+          TabOrder = 0
+          object txTorrentNameLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 4
+            Width = 32
+            Caption = 'Name:'
+            ParentColor = False
+          end
+          object txTorrentName: TLabel
+            Left = 181
+            Height = 14
+            Top = 4
+            Width = 74
+            Caption = 'txTorrentName'
+            ParentColor = False
+            ShowAccelChar = False
+          end
+          object txCreatedLabel: TLabel
+            Left = 381
+            Height = 14
+            Top = 4
+            Width = 59
+            Caption = 'Created on:'
+            ParentColor = False
+          end
+          object txCreated: TLabel
+            Left = 578
+            Height = 14
+            Top = 4
+            Width = 50
+            Caption = 'txCreated'
+            ParentColor = False
+          end
+          object txTotalSizeLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 22
+            Width = 50
+            Caption = 'Total size:'
+            ParentColor = False
+          end
+          object txTotalSize: TLabel
+            Left = 181
+            Height = 14
+            Top = 22
+            Width = 54
+            Caption = 'txTotalSize'
+            ParentColor = False
+          end
+          object txPiecesLabel: TLabel
+            Left = 381
+            Height = 14
+            Top = 22
+            Width = 35
+            Caption = 'Pieces:'
+            ParentColor = False
+          end
+          object txPieces: TLabel
+            Left = 578
+            Height = 14
+            Top = 22
+            Width = 41
+            Caption = 'txPieces'
+            ParentColor = False
+          end
+          object txHashLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 40
+            Width = 29
+            Caption = 'Hash:'
+            ParentColor = False
+          end
+          object txHash: TLabel
+            Left = 181
+            Height = 14
+            Top = 40
+            Width = 35
+            Caption = 'txHash'
+            ParentColor = False
+            ShowAccelChar = False
+          end
+          object txCommentLabel: TLabel
+            Left = 381
+            Height = 14
+            Top = 40
+            Width = 181
+            AutoSize = False
+            Caption = 'Comment:'
+            ParentColor = False
+          end
+          object txComment: TLabel
+            Left = 578
+            Height = 14
+            Top = 40
+            Width = 56
+            Caption = 'txComment'
+            ParentColor = False
+            ShowAccelChar = False
+          end
+          object txAddedOnLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 58
+            Width = 51
+            Caption = 'Added on:'
+            ParentColor = False
+          end
+          object txAddedOn: TLabel
+            Left = 181
+            Height = 14
+            Top = 58
+            Width = 56
+            Caption = 'txAddedOn'
+            ParentColor = False
+          end
+          object txCompletedOnLabel: TLabel
+            Left = 381
+            Height = 14
+            Top = 58
+            Width = 71
+            Caption = 'Completed on:'
+            ParentColor = False
+          end
+          object txCompletedOn: TLabel
+            Left = 578
+            Height = 14
+            Top = 58
+            Width = 76
+            Caption = 'txCompletedOn'
+            ParentColor = False
+          end
+        end
+        object panTransfer: TPanel
+          Left = 0
+          Height = 111
+          Top = 4
+          Width = 768
+          Align = alTop
+          BevelOuter = bvNone
+          ChildSizing.LeftRightSpacing = 4
+          ChildSizing.TopBottomSpacing = 4
+          ChildSizing.HorizontalSpacing = 16
+          ChildSizing.VerticalSpacing = 4
+          ChildSizing.EnlargeHorizontal = crsHomogenousChildResize
+          ChildSizing.ControlsPerLine = 6
+          ClientHeight = 111
+          ClientWidth = 768
+          TabOrder = 1
+          object txStatusLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 4
+            Width = 36
+            Caption = 'Status:'
+            ParentColor = False
+          end
+          object txStatus: TLabel
+            Left = 140
+            Height = 14
+            Top = 4
+            Width = 42
+            Caption = 'txStatus'
+            ParentColor = False
+          end
+          object txErrorLabel: TLabel
+            Left = 262
+            Height = 14
+            Top = 4
+            Width = 29
+            Caption = 'Error:'
+            ParentColor = False
+          end
+          object txError: TLabel
+            Left = 407
+            Height = 14
+            Top = 4
+            Width = 35
+            Caption = 'txError'
+            ParentColor = False
+          end
+          object txRemainingLabel: TLabel
+            Left = 541
+            Height = 14
+            Top = 4
+            Width = 54
+            Caption = 'Remaining:'
+            ParentColor = False
+          end
+          object txRemaining: TLabel
+            Left = 651
+            Height = 14
+            Top = 4
+            Width = 60
+            Caption = 'txRemaining'
+            ParentColor = False
+          end
+          object txDownloadedLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 22
+            Width = 64
+            Caption = 'Downloaded:'
+            ParentColor = False
+          end
+          object txDownloaded: TLabel
+            Left = 140
+            Height = 14
+            Top = 22
+            Width = 70
+            Caption = 'txDownloaded'
+            ParentColor = False
+          end
+          object txUploadedLabel: TLabel
+            Left = 262
+            Height = 14
+            Top = 22
+            Width = 50
+            Caption = 'Uploaded:'
+            ParentColor = False
+          end
+          object txUploaded: TLabel
+            Left = 407
+            Height = 14
+            Top = 22
+            Width = 56
+            Caption = 'txUploaded'
+            ParentColor = False
+          end
+          object txWastedLabel: TLabel
+            Left = 541
+            Height = 14
+            Top = 22
+            Width = 42
+            Caption = 'Wasted:'
+            ParentColor = False
+          end
+          object txWasted: TLabel
+            Left = 651
+            Height = 14
+            Top = 22
+            Width = 48
+            Caption = 'txWasted'
+            ParentColor = False
+          end
+          object txDownSpeedLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 40
+            Width = 84
+            Caption = 'Download speed:'
+            ParentColor = False
+          end
+          object txDownSpeed: TLabel
+            Left = 140
+            Height = 14
+            Top = 40
+            Width = 68
+            Caption = 'txDownSpeed'
+            ParentColor = False
+          end
+          object txUpSpeedLabel: TLabel
+            Left = 262
+            Height = 14
+            Top = 40
+            Width = 70
+            Caption = 'Upload speed:'
+            ParentColor = False
+          end
+          object txUpSpeed: TLabel
+            Left = 407
+            Height = 14
+            Top = 40
+            Width = 54
+            Caption = 'txUpSpeed'
+            ParentColor = False
+          end
+          object txRatioLabel: TLabel
+            Left = 541
+            Height = 14
+            Top = 40
+            Width = 58
+            Caption = 'Share ratio:'
+            ParentColor = False
+          end
+          object txRatio: TLabel
+            Left = 651
+            Height = 14
+            Top = 40
+            Width = 36
+            Caption = 'txRatio'
+            ParentColor = False
+          end
+          object txDownLimitLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 58
+            Width = 53
+            Caption = 'Down limit:'
+            ParentColor = False
+          end
+          object txDownLimit: TLabel
+            Left = 140
+            Height = 14
+            Top = 58
+            Width = 59
+            Caption = 'txDownLimit'
+            ParentColor = False
+          end
+          object txUpLimitLabel: TLabel
+            Left = 262
+            Height = 14
+            Top = 58
+            Width = 39
+            Caption = 'Up limit:'
+            ParentColor = False
+          end
+          object txUpLimit: TLabel
+            Left = 407
+            Height = 14
+            Top = 58
+            Width = 45
+            Caption = 'txUpLimit'
+            ParentColor = False
+          end
+          object txDummy1: TLabel
+            Left = 541
+            Height = 1
+            Top = 58
+            Width = 1
+            ParentColor = False
+          end
+          object txDummy2: TLabel
+            Left = 651
+            Height = 1
+            Top = 58
+            Width = 1
+            ParentColor = False
+          end
+          object txSeedsLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 76
+            Width = 34
+            Caption = 'Seeds:'
+            ParentColor = False
+          end
+          object txSeeds: TLabel
+            Left = 140
+            Height = 14
+            Top = 76
+            Width = 40
+            Caption = 'txSeeds'
+            ParentColor = False
+          end
+          object txPeersLabel: TLabel
+            Left = 262
+            Height = 14
+            Top = 76
+            Width = 32
+            Caption = 'Peers:'
+            ParentColor = False
+          end
+          object txPeers: TLabel
+            Left = 407
+            Height = 14
+            Top = 76
+            Width = 38
+            Caption = 'txPeers'
+            ParentColor = False
+          end
+          object txMaxPeersLabel: TLabel
+            Left = 541
+            Height = 14
+            Top = 76
+            Width = 55
+            Caption = 'Max peers:'
+            ParentColor = False
+          end
+          object txMaxPeers: TLabel
+            Left = 651
+            Height = 14
+            Top = 76
+            Width = 58
+            Caption = 'txMaxPeers'
+            ParentColor = False
+          end
+          object txTrackerLabel: TLabel
+            Left = 4
+            Height = 14
+            Top = 94
+            Width = 41
+            Caption = 'Tracker:'
+            ParentColor = False
+          end
+          object txTracker: TLabel
+            Left = 140
+            Height = 14
+            Top = 94
+            Width = 47
+            Caption = 'txTracker'
+            ParentColor = False
+          end
+          object txTrackerUpdateLabel: TLabel
+            Left = 262
+            Height = 14
+            Top = 94
+            Width = 93
+            Caption = 'Tracker update on:'
+            ParentColor = False
+          end
+          object txTrackerUpdate: TLabel
+            Left = 407
+            Height = 14
+            Top = 94
+            Width = 82
+            Caption = 'txTrackerUpdate'
+            ParentColor = False
+          end
+          object txLastActiveLabel: TLabel
+            Left = 541
+            Height = 14
+            Top = 94
+            Width = 57
+            Caption = 'Last active:'
+            ParentColor = False
+          end
+          object txLastActive: TLabel
+            Left = 651
+            Height = 14
+            Top = 94
+            Width = 61
+            Caption = 'txLastActive'
+            ParentColor = False
+          end
+        end
+        object txTransferHeader: TPanel
+          Left = 2
+          Height = 0
+          Top = 2
+          Width = 764
+          Align = alTop
+          Alignment = taLeftJustify
+          AutoSize = True
+          BorderSpacing.Around = 2
+          BevelOuter = bvNone
+          Caption = 'Transfer'
+          Font.Height = -13
+          Font.Style = [fsBold]
+          ParentColor = False
+          ParentFont = False
+          TabOrder = 2
+        end
+        object txTorrentHeader: TPanel
+          Left = 2
+          Height = 17
+          Top = 117
+          Width = 764
+          Align = alTop
+          Alignment = taLeftJustify
+          BorderSpacing.Around = 2
+          BevelOuter = bvNone
+          Caption = 'Torrent'
+          Font.Height = -13
+          Font.Style = [fsBold]
+          ParentColor = False
+          ParentFont = False
+          TabOrder = 3
+        end
+      end
+      object panProgress: TPanel
+        Left = 0
+        Height = 26
+        Top = 0
+        Width = 772
+        Align = alTop
+        BevelOuter = bvNone
+        ClientHeight = 26
+        ClientWidth = 772
+        TabOrder = 1
+        object txDownProgressLabel: TLabel
+          Left = 8
+          Height = 26
+          Top = 0
+          Width = 64
+          Align = alLeft
+          BorderSpacing.Left = 8
+          Caption = 'Downloaded:'
+          Layout = tlCenter
+          ParentColor = False
+        end
+        object txDownProgress: TLabel
+          Left = 724
+          Height = 26
+          Top = 0
+          Width = 40
+          Align = alRight
+          Alignment = taRightJustify
+          Anchors = [akTop, akRight]
+          BorderSpacing.Right = 8
+          Caption = '100.0%'
+          Layout = tlCenter
+          ParentColor = False
+        end
+        object pbDownloaded: TPaintBox
+          Left = 78
+          Height = 14
+          Top = 6
+          Width = 640
+          Align = alClient
+          Anchors = [akTop, akLeft, akRight]
+          BorderSpacing.Around = 6
+          OnPaint = pbDownloadedPaint
+        end
+      end
+    end
+    object tabTrackers: TTabSheet
+      Caption = 'Trackers'
+      ClientHeight = 279
+      ClientWidth = 772
+      ImageIndex = 5
+      object lvTrackers: TVarGrid
+        Left = 0
+        Height = 279
+        Top = 0
+        Width = 772
+        Align = alClient
+        Columns = <        
+          item
+            Title.Caption = 'Name'
+            Width = 200
+          end        
+          item
+            Title.Caption = 'Status'
+            Width = 200
+          end        
+          item
+            Title.Caption = 'Update in'
+            Width = 80
+          end        
+          item
+            Title.Caption = 'Seeds'
+          end>
+        FixedCols = 0
+        Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize, goHeaderHotTracking, goHeaderPushedLook]
+        PopupMenu = pmTrackers
+        RowCount = 1
+        TabOrder = 0
+        OnDblClick = lvTrackersDblClick
+        OnKeyDown = lvTrackersKeyDown
+        SortColumn = 0
+        HideSelection = True
+        OnCellAttributes = lvTrackersCellAttributes
+      end
+    end
+    object tabPeers: TTabSheet
+      Caption = 'Peers'
+      ClientHeight = 279
+      ClientWidth = 772
+      ImageIndex = 6
+      object lvPeers: TVarGrid
+        Left = 0
+        Height = 279
+        Top = 0
+        Width = 772
+        Align = alClient
+        Columns = <        
+          item
+            Title.Caption = 'Host'
+            Width = 150
+          end        
+          item
+            Alignment = taRightJustify
+            Title.Caption = 'Port'
+            Width = 0
+            Visible = False
+          end        
+          item
+            Title.Caption = 'Country'
+            Width = 100
+          end        
+          item
+            Title.Caption = 'Client'
+            Width = 150
+          end        
+          item
+            Title.Caption = 'Flags'
+            Width = 70
+          end        
+          item
+            Alignment = taRightJustify
+            Title.Caption = 'Have'
+          end        
+          item
+            Alignment = taRightJustify
+            Title.Caption = 'Up speed'
+            Width = 80
+          end        
+          item
+            Alignment = taRightJustify
+            Title.Caption = 'Down speed'
+            Width = 80
+          end>
+        FixedCols = 0
+        Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize, goHeaderHotTracking, goHeaderPushedLook]
+        PopupMenu = pmPeers
+        RowCount = 1
+        TabOrder = 0
+        Images = imgFlags
+        SortColumn = 0
+        HideSelection = True
+        OnCellAttributes = lvPeersCellAttributes
+      end
+    end
+    object tabFiles: TTabSheet
+      Caption = 'Files'
+      ClientHeight = 279
+      ClientWidth = 772
+      ImageIndex = 7
+      object lvFiles: TVarGrid
+        Left = 0
+        Height = 279
+        Top = 0
+        Width = 772
+        Align = alClient
+        Columns = <        
+          item
+            Title.Caption = 'File name'
+            Width = 350
+          end        
+          item
+            Alignment = taRightJustify
+            Title.Caption = 'Size'
+            Width = 80
+          end        
+          item
+            Alignment = taCenter
+            Title.Caption = 'Done'
+            Width = 70
+          end        
+          item
+            Alignment = taCenter
+            Title.Alignment = taCenter
+            Title.Caption = '%'
+            Width = 70
+          end        
+          item
+            Title.Caption = 'Priority'
+            Width = 100
+          end>
+        FixedCols = 0
+        Options = [goFixedVertLine, goFixedHorzLine, goColSizing, goColMoving, goRowSelect, goThumbTracking, goDblClickAutoSize, goHeaderHotTracking, goHeaderPushedLook]
+        PopupMenu = pmFiles
+        RowCount = 1
+        TabOrder = 0
+        OnDblClick = lvFilesDblClick
+        OnKeyPress = lvFilesKeyPress
+        Images = ImageList16
+        MultiSelect = True
+        SortColumn = 0
+        HideSelection = True
+        OnCellAttributes = lvFilesCellAttributes
+        OnDrawCell = lvFilesDrawCell
+      end
+    end
+  end
+  object VSplitter: TSplitter
+    Cursor = crVSplit
+    Left = 0
+    Height = 5
+    Top = 152
+    Width = 780
+    Align = alBottom
+    AutoSnap = False
+    MinSize = 80
+    ResizeAnchor = akBottom
+  end
+  object MainToolBar: TToolBar
+    Left = 0
+    Height = 24
+    Top = 0
+    Width = 780
+    AutoSize = True
+    Caption = 'MainToolBar'
+    Images = ImageList16
+    ParentShowHint = False
+    ShowHint = True
+    TabOrder = 2
+    object ToolButton1: TToolButton
+      Left = 40
+      Top = 2
+      Action = acAddTorrent
+    end
+    object ToolButton2: TToolButton
+      Left = 86
+      Top = 2
+      Width = 4
+      Caption = 'ToolButton2'
+      Style = tbsDivider
+    end
+    object ToolButton3: TToolButton
+      Left = 90
+      Top = 2
+      Action = acStartTorrent
+    end
+    object ToolButton4: TToolButton
+      Left = 113
+      Top = 2
+      Action = acStopTorrent
+    end
+    object ToolButton5: TToolButton
+      Left = 136
+      Top = 2
+      Action = acRemoveTorrent
+    end
+    object ToolButton6: TToolButton
+      Left = 36
+      Top = 2
+      Width = 4
+      Caption = 'ToolButton6'
+      Style = tbsDivider
+    end
+    object ToolButton7: TToolButton
+      Left = 186
+      Top = 2
+      Width = 4
+      Caption = 'ToolButton7'
+      Style = tbsDivider
+    end
+    object ToolButton8: TToolButton
+      Left = 190
+      Top = 2
+      Action = acDaemonOptions
+    end
+    object ToolButton9: TToolButton
+      Left = 63
+      Top = 2
+      Action = acAddLink
+    end
+    object pbStatus: TPaintBox
+      Left = 756
+      Height = 22
+      Top = 2
+      Width = 24
+      Align = alRight
+      Visible = False
+      OnPaint = pbStatusPaint
+    end
+    object tbConnect: TToolButton
+      Left = 1
+      Top = 2
+      Action = acConnect
+      DropdownMenu = pmConnections
+      Style = tbsDropDown
+    end
+    object ToolButton10: TToolButton
+      Left = 163
+      Top = 2
+      Action = acAltSpeed
+    end
+    object sepAltSpeed: TToolButton
+      Left = 159
+      Top = 2
+      Width = 4
+      Caption = 'sepAltSpeed'
+      Style = tbsDivider
+    end
+  end
+  object panReconnect: TPanel
+    Left = 532
+    Height = 71
+    Top = 64
+    Width = 161
+    BevelOuter = bvNone
+    ClientHeight = 71
+    ClientWidth = 161
+    Color = clInfoBk
+    Font.Color = clInfoText
+    ParentColor = False
+    ParentFont = False
+    TabOrder = 5
+    Visible = False
+    OnResize = panReconnectResize
+    object txConnErrorLabel: TLabel
+      Left = 16
+      Height = 14
+      Top = 8
+      Width = 129
+      Align = alTop
+      Alignment = taCenter
+      BorderSpacing.Left = 16
+      BorderSpacing.Top = 8
+      BorderSpacing.Right = 16
+      BorderSpacing.Bottom = 4
+      Caption = 'Connection error occured:'
+      ParentColor = False
+    end
+    object txConnError: TLabel
+      Left = 16
+      Height = 1
+      Top = 26
+      Width = 129
+      Align = alTop
+      Alignment = taCenter
+      BorderSpacing.Left = 16
+      BorderSpacing.Right = 16
+      Font.Color = clInfoText
+      Font.Style = [fsBold]
+      ParentColor = False
+      ParentFont = False
+    end
+    object txReconnectSecs: TLabel
+      Left = 16
+      Height = 1
+      Top = 35
+      Width = 129
+      Align = alTop
+      Alignment = taCenter
+      BorderSpacing.Left = 16
+      BorderSpacing.Top = 8
+      BorderSpacing.Right = 16
+      BorderSpacing.Bottom = 8
+      ParentColor = False
+    end
+    object panReconnectFrame: TShape
+      Left = 8
+      Height = 19
+      Top = 32
+      Width = 24
+      Brush.Style = bsClear
+      Pen.Color = clBtnShadow
+    end
+  end
+  object MainMenu: TMainMenu
+    Images = ImageList16
+    left = 8
+    top = 28
+    object miTorrent: TMenuItem
+      Caption = '&Torrent'
+      object miConnect: TMenuItem
+        Caption = 'Connect to daemon'
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          2000000000000004000064000000640000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          00FF000000FF0000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000FF6666
+          00FF666600FF000000FF000000FF000000000000000000000000000000000000
+          0000000000000000000000000000000000FF000000FF000000FF666600FF8080
+          00FF808000FF808000FF808000FF000000FF000000FF00000000000000000000
+          00000000000000000000000000FF868686FF868686FF000000FF006666FF0080
+          80FF008080FFC0C0C0FFC0C0C0FF808000FF808000FF000000FF000000000000
+          000000000000000000FF868686FFC0C0C0FFF8F8F8FF000000FF000000FF00FF
+          FFFF00FFFFFF008080FFD7D7D7FFF8F8F8FFF8F8F8FF808000FF000000000000
+          0000000000FF868686FFC0C0C0FFF8F8F8FFC0C0C0FFB2B2B2FF868686FF0000
+          00FF000000FFC0C0C0FFD7D7D7FFF8F8F8FF808000FF00000000000000000000
+          00FF868686FFC0C0C0FFF8F8F8FFC0C0C0FFC0C0C0FFC0C0C0FFB2B2B2FFA4A0
+          A0FF868686FF000000FF000000FFC0C0C0FF000000FF00000000000000FF8686
+          86FFC0C0C0FFF8F8F8FFDDDDDDFFDDDDDDFFC0C0C0FFB2B2B2FFC0C0C0FFB2B2
+          B2FFB2B2B2FF868686FF868686FF000000FF000000FF00000000868686FFC0C0
+          C0FFF8F8F8FF868686FF868686FFC0C0C0FFC0C0C0FFC0C0C0FFB2B2B2FFB2B2
+          B2FFB2B2B2FFA4A0A0FFA4A0A0FF868686FF868686FF00000000868686FFF8F8
+          F8FFDDDDDDFFDDDDDDFFC0C0C0FF868686FF868686FFB2B2B2FFC0C0C0FFB2B2
+          B2FFB2B2B2FFB2B2B2FFA4A0A0FFA4A0A0FF868686FF00000000000000008686
+          86FF868686FFDDDDDDFFDDDDDDFFCCCCCCFFCCCCCCFF868686FF868686FFB2B2
+          B2FFB2B2B2FFA4A0A0FFA4A0A0FF868686FF0000000000000000000000000000
+          000000000000868686FF868686FFDDDDDDFFCCCCCCFFCCCCCCFFC0C0C0FF8686
+          86FF868686FFB2B2B2FF868686FF000000000000000000000000000000000000
+          0000000000FF868686FF00000000868686FF868686FFCCCCCCFFCCCCCCFFC0C0
+          C0FFC0C0C0FF868686FF00000000000000000000000000000000000000000000
+          00FF868686FF00000000000000000000000000000000868686FF868686FFCCCC
+          CCFF868686FF0000000000000000000000000000000000000000000000FF8686
+          86FF000000000000000000000000000000000000000000000000000000008686
+          86FF000000000000000000000000000000000000000000000000
+        }
+        ImageIndex = 18
+        object sepCon1: TMenuItem
+          Tag = 1
+          Caption = '-'
+        end
+        object MenuItem71: TMenuItem
+          Tag = 1
+          Action = acNewConnection
+          OnClick = acNewConnectionExecute
+        end
+        object MenuItem75: TMenuItem
+          Tag = 1
+          Action = acConnOptions
+          OnClick = acConnOptionsExecute
+        end
+      end
+      object MenuItem73: TMenuItem
+        Action = acDisconnect
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          2000000000000004000064000000640000000000000000000000FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF000268D0FF0268D0FFFF00FF00FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000066
+          CEFF0268D0FF0268D0FF0268D0FF2A90EEFF3FA5FAFF0268D0FFFF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000268D0FF1177
+          DEFF2A90EEFF5DC3FFFF58BDFFFF278CECFF0268D0FFFF00FF00FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000268D0FF3FA5
+          FAFF2288E0FF3BA0EEFF45ABFFFF379CFFFF0268D0FFFF00FF00FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000268
+          D0FF58BDFFFF187EE0FF2186EEFF379CFFFF0268D0FFFF00FF00FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+          FF000268D0FF379CFFFF1177DEFF1C82E9FF0268D0FFFF00FF00FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00898A8CFF535558FFFF00FF00FF00
+          FF00FF00FF000268D0FF379CFFFF0D73DBFF0268D0FFFF00FF00FF00FF00FF00
+          FF00FF00FF00118413FF006D00FF898A8CFF535558FFFF00FF00898A8CFF898A
+          8CFFFF00FF00FF00FF000268D0FF0268D0FFFF00FF00FF00FF00FF00FF00FF00
+          FF0006720AFF128921FF4BE47EFF006D00FFFF00FF00898A8CFF535558FFFF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+          FF0009780EFF2EC65CFF249D38FF44DD65FF006D00FF535558FFFF00FF00898A
+          8CFF535558FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+          FF0009780EFF2EC65CFF1A9E35FF0C8513FF059F07FF006D00FF898A8CFF5355
+          58FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+          FF0009780EFF27B84CFF18A32EFF07800CFF037A05FF009700FF006D00FFFF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+          FF00128921FF0D8819FF088C0DFF038403FF037A05FF006D00FF006D00FFFF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF001D93
+          2EFF33C34EFF047607FF006500FF006500FF006D00FF006500FFFF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00108019FF36CF
+          54FF088C0DFF006500FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00046E08FF0476
+          07FF006500FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+          FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        }
+        OnClick = acDisconnectExecute
+      end
+      object MenuItem3: TMenuItem
+        Caption = '-'
+      end
+      object MenuItem2: TMenuItem
+        Action = acAddTorrent
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF26FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFF
+          FF66FFFFFF66FFFFFF66FFFFFF66FFFFFF66FFFFFF40FFFFFF00FFFFFF007B7B
+          7B9F363636FF373737FF373737FF373737FF373737FF373737FF373737FF3737
+          37FF373737FF373737FF373737FF363636FF535353C5FFFFFF00FFFFFF192C2C
+          2CFF333333FF333333FF333333FF333333FF333333FF333333FF333333FF3333
+          33FF333333FF333333FF333333FF333333FF2C2C2CFFFFFFFF19505050572929
+          29FF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E
+          2EFF2E2E2EFF2E2E2EFF2E2E2EFF2E2E2EFF292929FF505050575A5A5A722626
+          26FF292929FF292929FF292929FF292929FF292929FF292929FF292929FF2929
+          29FF292929FF292929FF292929FF292929FF262626FF5A5A5A724545459F2323
+          23FF252525FF252525FF252525FF252525FF252525FF252525FF252525FF2525
+          25FF252525FF252525FF252525FF252525FF232323FF4545459F3A3A3ABC1F1F
+          1FFF202020FF202020FF202020FF202020FF202020FF202020FF202020FF2020
+          20FF202020FF202020FF202020FF202020FF1F1F1FFF3A3A3ABC2C2C2CD71616
+          16FF171717FF171717FF171717FF171717FF171717FF171717FF171717FF1717
+          17FF171717FF171717FF171717FF171717FF161616FF2C2C2CD70A0A0AEF0C0C
+          0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C
+          0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0C0C0CFF0A0A0AEF2F2F2F302F2F
+          2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F
+          2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F7F2F2F2F4FFFFFFF003030
+          3060303030FF303030FF303030FF303030FF303030FF303030FF303030FF3030
+          30FF303030FF303030FF303030FF303030FF3030309FFFFFFF00FFFFFF00FFFF
+          FF001F1F1FBF1F1F1FFF1F1F1FFF1F1F1FFF1F1F1FFF1F1F1FBFFFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF0017171740171717FF171717FF171717FF171717FF17171740FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
+        }
+        OnClick = acAddTorrentExecute
+      end
+      object MenuItem49: TMenuItem
+        Action = acAddLink
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          20000000000000040000640000006400000000000000000000000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF00AE9B8BFF81654EFF745840FF968170FF0000FF000000FF000000
+          FF00AE9B8BFF81654EFF745840FF968170FF0000FF000000FF000000FF000000
+          FF00B79F8EFFCFB8A9FFEBD6C8FFE5CBBBFFB3957FFF80624CFFBAA99BFFB79F
+          8EFFCFB8A9FFEBD6C8FFE5CBBBFFB3957FFF80624CFF0000FF000000FF00C9B5
+          A6FFE6D6CBFFB4A091FFA08672FFC1A895FF4F2C12FF472409FF472409FF4724
+          09FF735642FFA08672FFC1A895FFD2BCAEFFB99C88FF8A7361FF0000FF00BBA0
+          8DFFFFFFFFFF60412AFF0000FF00DBC2B1FFFFFFFFFFFFFEF7FFFFF1E6FFFAE3
+          D4FFF3D7C7FF9D897AFF0000FF00C0A592FFEFD6C7FF6B4B32FF0000FF00CDBA
+          ACFFF2E6DEFFB4A193FF6B4E39FF816450FFCAB19EFFD3B5A2FFCDB19CFFDAC0
+          AFFFCDB39FFF6F543EFF816450FFBFAB9CFFCBB1A1FF9D8674FF0000FF000000
+          FF00E6DBD2FFEDE1D7FFFFFFFDFFFFF7F1FFD8C4B7FFAB9180FFCBBAAEFFCFBA
+          AAFFEDE1D7FFFFFFFDFFFFF7F1FFD8C4B7FFAB9180FF0000FF000000FF000000
+          FF0043854BFF407D47FF467A4AFFDDD0C6FFC7B4A8FF0000FF000000FF000000
+          FF00D2C0B4FFC0A795FFBAA18DFFC7B4A8FF0000FF000000FF000000FF000000
+          FF00488E50FF7BC88DFF3F7D47FF0000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF006BB271FF76B3
+          7BFF4D9554FF8AD29AFF43854BFF66986CFF6C9871FF0000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF0059AE60FFA4E3
+          B2FF9FE0ADFF9ADCA8FF94D9A3FF8ED59FFF528A58FF0000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF005CB463FF59AE
+          60FF55A65CFFAAE7B7FF4C9653FF6AA270FF619867FF0000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF005BAF62FFB9F0C3FF509E58FF0000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF0067B86DFF59AE60FF5BAA62FF0000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF00
+        }
+        OnClick = acAddLinkExecute
+      end
+      object MenuItem4: TMenuItem
+        Action = acStartTorrent
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF19FFFFFF46FFFFFF66FFFFFF66FFFF
+          FF53FFFFFF260000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF269B9B9B8C505050CF313131FF313131FF4141
+          41E27C7C7C9FFFFFFF4000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF0C7B7B7B9F303030FF282828FF202020FF1E1E1EFF2222
+          22FF282828FF4E4E4EC5FFFFFF26FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00A9A9A9572D2D2DFF272727FF161616AF04040420020202100909
+          0950151515BF1E1E1EFF5D5D5D8BFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00494949C12A2A2AFF242424C6FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF0008080840191919B5FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00323232EC272727FF0B0B0B40FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF000000000005050530FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00232323FF252525FFFFFFFF13FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00202020F3232323FF92929268FFFFFF00FFFFFF00FFFFFF40FFFF
+          FF06FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF001D1D1DB71E1E1EFF424242CFFFFFFF40FFFFFF0C484848C5D7D7
+          D75DFFFFFF130000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF0006060640161616FF1C1C1CFF494949C5C3C3C379212121FF3333
+          33E2A5A5A57DFFFFFF2600000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF0007070760121212FF161616FF1A1A1AFF1E1E1EFF1D1D
+          1DFF1E1E1EF53C3C3C7700000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00040404400B0B0BB0121212FF171717FF1616
+          16FF121212F00707076000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000F0F0FFF0E0E
+          0ED0030303300000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000707079F0101
+          0110FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
+        }
+        OnClick = acStartTorrentExecute
+      end
+      object MenuItem22: TMenuItem
+        Action = acStartAllTorrents
+        OnClick = acStartAllTorrentsExecute
+      end
+      object MenuItem5: TMenuItem
+        Action = acStopTorrent
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          2000000000000004000064000000640000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF33FFFFFF66FFFFFF33FFFFFF00FFFFFF00FFFFFF33FFFF
+          FF66FFFFFF33FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00656565B2373737FF656565B2FFFFFF00FFFFFF00656565B23737
+          37FF656565B2FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF002D2D2DFF363636FF2D2D2DFFFFFFFF00FFFFFF002D2D2DFF3636
+          36FF2D2D2DFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF002B2B2BFF333333FF2B2B2BFFFFFFFF00FFFFFF002B2B2BFF3333
+          33FF2B2B2BFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00282828FF303030FF282828FFFFFFFF00FFFFFF00282828FF3030
+          30FF282828FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00252525FF2C2C2CFF252525FFFFFFFF00FFFFFF00252525FF2C2C
+          2CFF252525FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00222222FF292929FF222222FFFFFFFF00FFFFFF00222222FF2929
+          29FF222222FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00202020FF262626FF202020FFFFFFFF00FFFFFF00202020FF2626
+          26FF202020FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF001D1D1DFF232323FF1D1D1DFFFFFFFF00FFFFFF001D1D1DFF2323
+          23FF1D1D1DFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF001B1B1BFF202020FF1B1B1BFFFFFFFF00FFFFFF001B1B1BFF2020
+          20FF1B1B1BFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00171717FF1C1C1CFF171717FFFFFFFF00FFFFFF00171717FF1C1C
+          1CFF171717FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00111111FF141414FF111111FFFFFFFF00FFFFFF00111111FF1414
+          14FF111111FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00060606800B0B0BFF06060680FFFFFF00FFFFFF00060606800B0B
+          0BFF06060680FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000000000000000
+        }
+        OnClick = acStopTorrentExecute
+      end
+      object MenuItem23: TMenuItem
+        Action = acStopAllTorrents
+        OnClick = acStopAllTorrentsExecute
+      end
+      object MenuItem6: TMenuItem
+        Action = acRemoveTorrent
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF06FFFFFF33FFFFFF53FFFFFF66FFFFFF66FFFF
+          FF53FFFFFF33FFFFFF06FFFFFF000000000000000000FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF26DDDDDD69696969B2424242E2303030FF303030FF4141
+          41E2696969B2DDDDDD69FFFFFF260000000000000000FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF267E7E7E9F3A3A3AF5313131FF272727FF1E1E1EFF1D1D1DFF2222
+          22FF292929FF353535F57C7C7C9FFFFFFF2600000000FFFFFF00FFFFFF00FFFF
+          FF067676769B323232FF333333FF404040E34F4F4F6AFFFFFF00FFFFFF000808
+          0840161616C0242424FF2D2D2DFF7676769BFFFFFF06FFFFFF00FFFFFF00C4C4
+          C43F313131F52D2D2DFF2E2E2EFF2F2F2FFF7A7A7AA0FFFFFF26FFFFFF00FFFF
+          FF00FFFFFF0011111180252525FF303030F5C4C4C43FFFFFFF00FFFFFF005656
+          56A9292929FF252525F2232323FF2A2A2AFF2D2D2DFF7A7A7AA0FFFFFF26FFFF
+          FF00FFFFFF00FFFFFF00212121C6282828FF565656A9FFFFFF00FFFFFF003636
+          36E2252525FF0D0D0D50111111A01F1F1FFF282828FF2A2A2AFF797979A0FFFF
+          FF26FFFFFF00FFFFFF000A0A0A40252525FF363636E2FFFFFF00FFFFFF002222
+          22FF222222FFFFFFFF00FFFFFF00101010A01D1D1DFF252525FF272727FF7777
+          77A0FFFFFF26FFFFFF00FFFFFF00232323FF222222FFFFFFFF00FFFFFF001E1E
+          1EFF212121FFFFFFFF1AFFFFFF00FFFFFF000F0F0FA01C1C1CFF232323FF2525
+          25FF767676A0FFFFFF26FFFFFF20212121FF1E1E1EFFFFFFFF00FFFFFF002121
+          21D91F1F1FFF81818179FFFFFF00FFFFFF00FFFFFF000E0E0EA0191919FF2020
+          20FF232323FF777777A07A7A7A891F1F1FFF212121D9FFFFFF00FFFFFF001212
+          12821A1A1AFF373737D9FFFFFF33FFFFFF00FFFFFF00FFFFFF000D0D0DA01919
+          19FF1F1F1FFF212121FF323232E21A1A1AFF12121282FFFFFF00FFFFFF000101
+          0110161616F11A1A1AFF5B5B5BB2FFFFFF4CFFFFFF19FFFFFF00FFFFFF002525
+          25AC1C1C1CFF1E1E1EFF1A1A1AFF161616F101010110FFFFFF00FFFFFF00FFFF
+          FF0007070760121212FF161616FF333333D99494948CFFFFFF66FFFFFF668282
+          82951E1E1EF5161616FF121212FF0707076000000000FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00060606600D0D0DEF111111FF141414FF151515FF151515FF1414
+          14FF111111FF0D0D0DEF060606600000000000000000FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF0001010110060606800A0A0ACF0C0C0CFF0C0C0CFF0A0A
+          0ACF0606068001010110FFFFFF000000000000000000FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
+        }
+        OnClick = acRemoveTorrentExecute
+      end
+      object MenuItem38: TMenuItem
+        Action = acRemoveTorrentAndData
+        OnClick = acRemoveTorrentAndDataExecute
+      end
+      object MenuItem59: TMenuItem
+        Caption = '-'
+      end
+      object miPriority: TMenuItem
+        Caption = 'Priority'
+        object MenuItem60: TMenuItem
+          Action = acSetHighPriority
+          Bitmap.Data = {
+            36040000424D3604000000000000360000002800000010000000100000000100
+            200000000000000400006400000064000000000000000000000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF0000404CD8FF162FD0FF162FD0FF404C
+            D8FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF0000173CE5FF6699FFFF99CCFFFF99CCFFFF6699
+            FFFF193EE5FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF00000F38EBFF5084FFFF6699FFFF74A7FFFF74A7FFFF6699
+            FFFF5488FFFF0F38EBFF00FF000000FF000000FF000000FF000000FF000000FF
+            000000FF00004B67F2FF2254FDFF3C6FFFFF4E81FFFF5A8DFFFF5A8DFFFF5084
+            FFFF3F73FFFF275AFFFF4B67F2FF00FF000000FF000000FF000000FF000000FF
+            000000FF00001A43F9FF184BFFFF275AFFFF3366FFFF3D71FFFF3D71FFFF3D71
+            FFFF275AFFFF184BFFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
+            000000FF00001A43F9FF0033FFFF184BFFFF3366FFFF3F73FFFF3F73FFFF3366
+            FFFF184BFFFF0033FFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
+            000000FF00005273FEFF103DF9FF486CFEFF5B7DFFFF6B8AFEFF6B8AFEFF5B7D
+            FFFF4368FEFF0B39FAFF5273FEFF00FF000000FF000000FF000000FF000000FF
+            000000FF000000FF00000033FFFF4F6DF8FF7991FCFF899EFDFF899EFDFF758E
+            FBFF4F6DF8FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF00000033FFFF4969F7FF91A2F7FF91A2F7FF4969
+            F7FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF00005273FEFF193FFDFF193FFDFF5273
+            FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF0000
+          }
+          OnClick = acSetHighPriorityExecute
+        end
+        object MenuItem61: TMenuItem
+          Action = acSetNormalPriority
+          Bitmap.Data = {
+            36040000424D3604000000000000360000002800000010000000100000000100
+            20000000000000040000640000006400000000000000000000000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF001D915CFF0D8145FF0D8145FF1D91
+            5CFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000D8E46FF00E03FFF01FF1FFF01FF1FFF00E0
+            3FFF0F8E47FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF00089344FF00D142FF00E03FFF00E83AFF00E83AFF00E0
+            3FFF00D442FF089344FF0000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000CB85AFF00B146FF00C546FF00D043FF00D842FF00D842FF00D1
+            42FF00C744FF00B845FF0CB85AFF0000FF000000FF000000FF000000FF000000
+            FF000000FF0004A74AFF00AF44FF00B845FF00BF46FF00C644FF00C644FF00C6
+            44FF00B845FF00AF44FF04A74AFF0000FF000000FF000000FF000000FF000000
+            FF000000FF0004A74AFF009F42FF00AF44FF00BF46FF00C744FF00C744FF00BF
+            46FF00AF44FF009F42FF04A74AFF0000FF000000FF000000FF000000FF000000
+            FF000000FF0000D159FF03A147FF00CA55FF00D858FF01DF5CFF01DF5CFF00D8
+            58FF00C854FF02A045FF00D159FF0000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF00009F42FF07C45BFF05E466FF04F06BFF04F06BFF06DF
+            64FF07C45BFF009F42FF0000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF00009F42FF07BF57FF10E570FF10E570FF07BF
+            57FF009F42FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF0000D159FF00AC4EFF00AC4EFF00D1
+            59FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+            FF000000FF000000FF000000FF000000FF000000FF000000FF00
+          }
+          OnClick = acSetNormalPriorityExecute
+        end
+        object MenuItem62: TMenuItem
+          Action = acSetLowPriority
+          Bitmap.Data = {
+            36040000424D3604000000000000360000002800000010000000100000000100
+            200000000000000400006400000064000000000000000000000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF00003F97D7FF168BCFFF168BCFFF3F97
+            D7FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000017A2E4FF65E5FFFF98FFFFFF98FFFFFF65E5
+            FFFF19A3E4FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF00000FA5EAFF4FDBFFFF65E5FFFF73ECFFFF73ECFFFF65E5
+            FFFF53DDFFFF0FA5EAFF00FF000000FF000000FF000000FF000000FF000000FF
+            000000FF00004ABAF2FF21C1FDFF3BD0FFFF4DD9FFFF59DFFFFF59DFFFFF4FDB
+            FFFF3ED2FFFF26C5FFFF4ABAF2FF00FF000000FF000000FF000000FF000000FF
+            000000FF000019B2F9FF17BEFFFF26C5FFFF32CBFFFF3CD1FFFF3CD1FFFF3CD1
+            FFFF26C5FFFF17BEFFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
+            000000FF000019B2F9FF00B2FFFF17BEFFFF32CBFFFF3ED2FFFF3ED2FFFF32CB
+            FFFF17BEFFFF00B2FFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
+            000000FF000051C8FEFF0FB1F9FF47C6FEFF5ACEFFFF6AD3FEFF6AD3FEFF5ACE
+            FFFF42C5FEFF0AB0FAFF51C8FEFF00FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000B2FFFF4EC1F8FF78D2FCFF88D7FDFF88D7FDFF74D0
+            FBFF4EC1F8FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000B2FFFF48BFF7FF90D4F7FF90D4F7FF48BF
+            F7FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000051C8FEFF18B0FDFF18B0FDFF51C8
+            FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+            000000FF000000FF000000FF000000FF000000FF000000FF0000
+          }
+          OnClick = acSetLowPriorityExecute
+        end
+      end
+      object MenuItem51: TMenuItem
+        Action = acReannounceTorrent
+        OnClick = acReannounceTorrentExecute
+      end
+      object MenuItem7: TMenuItem
+        Action = acVerifyTorrent
+        OnClick = acVerifyTorrentExecute
+      end
+      object MenuItem54: TMenuItem
+        Action = acMoveTorrent
+        OnClick = acMoveTorrentExecute
+      end
+      object MenuItem21: TMenuItem
+        Action = acTorrentProps
+        OnClick = acTorrentPropsExecute
+      end
+      object MenuItem1: TMenuItem
+        Caption = '-'
+      end
+      object miExit: TMenuItem
+        Action = acExit
+        OnClick = acExitExecute
+      end
+    end
+    object miTools: TMenuItem
+      Caption = 'T&ools'
+      object MenuItem18: TMenuItem
+        Action = acDaemonOptions
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          2000000000000004000064000000640000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          000000000000292946FF7F5586FF7F5586FF0000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000292946FF7F5586FFBF9CC2FFBF9CC2FF1A47D9FF00000000000000000000
+          0000000000000000000000000000000000000000000000000000000000002929
+          46FF0323D2FF8C89E6FF001ACEFF8380CBFF1A47D9FF00000000000000000000
+          0000000000000000000000000000000000000000000000000000292946FF0323
+          D2FF93A9FFFF0436FFFF001ACEFFB7B4E4FF1A47D9FF00000000000000000000
+          00000000000000000000000000000000000000000000292946FF0323D2FF93A9
+          FFFF0033FFFF001ACEFF9BA7EAFF1A47D9FF0000000000000000000000000000
+          000000000000000000000000000000000000292946FF0323D2FF93A9FFFF0033
+          FFFF001ACEFF93A3EEFF1A47D9FF000000000000000000000000000000000000
+          0000000000000000000000000000292946FF0323D2FF93A9FFFF0033FFFF001A
+          CEFF93A3EEFF1A47D9FF00000000000000000000000000000000000000000000
+          0000595959FF595959FF595959FF0323D2FF93A9FFFF0033FFFF001ACEFF93A3
+          EEFF1A47D9FF0000000000000000000000000000000000000000000000005959
+          59FF595959FFABABABFF999999FF7A83BDFF0031FCFF001ACEFF93A3EEFF1A47
+          D9FF000000000000000000000000000000000000000000000000595959FF5959
+          59FF9C9C9CFFB9B9B9FFC4C4C4FFA8A8A8FF5665AEFF7393EEFF1A47D9FF0000
+          0000000000000000000000000000000000000000000000000000595959FFABAB
+          ABFFCDCDCDFFC7C7C7FFC3C3C3FFCFCFCFFFA7A7A7FF595959FF000000000000
+          0000000000000000000000000000000000000000000000000000595959FFDEDE
+          DEFF595959FF595959FFB7B7B7FFD6D6D6FFBCBCBCFF595959FF000000000000
+          0000000000000000000000000000000000000000000000000000595959FF5959
+          59FF00000000999999FF595959FFDEDEDEFFC8C8C8FF595959FF000000000000
+          0000000000000000000000000000000000000000000000000000595959FF0000
+          0000999999FF595959FFD4D4D4FFE0E0E0FF595959FF999999FF000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000595959FFCBCBCBFFCBCBCBFF575757FF595959FF00000000000000000000
+          000000000000000000000000000000000000000000000000000000000000ABAB
+          ABFF595959FF595959FF595959FF999999FF0000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000
+        }
+        OnClick = acDaemonOptionsExecute
+      end
+      object MenuItem68: TMenuItem
+        Action = acConnOptions
+        OnClick = acConnOptionsExecute
+      end
+      object MenuItem17: TMenuItem
+        Action = acOptions
+        OnClick = acOptionsExecute
+      end
+      object MenuItem35: TMenuItem
+        Caption = '-'
+      end
+      object MenuItem41: TMenuItem
+        Action = acSelectAll
+        OnClick = acSelectAllExecute
+      end
+      object MenuItem34: TMenuItem
+        Action = acSetupColumns
+        OnClick = acSetupColumnsExecute
+      end
+      object MenuItem32: TMenuItem
+        Caption = '-'
+      end
+      object MenuItem70: TMenuItem
+        Action = acAltSpeed
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          2000000000000004000064000000640000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          000000000000000000001067B84F0C5EACCF0A5AA9F30958A5FD0754A0FF034E
+          63FE00493DFE004737FF004737FE00493BE50050415300000000000000000F69
+          C3111267BBBC146CC2DC1F73C5FE3B8AD6FF4491DBFF3A8AD6FF1469B4FF0067
+          51FF007A5FFF00896BFF009272FF006F56FF00503EFA00504040000000001D7D
+          D9352484DFFF65ADF2FF6EB2F3FF5BA3E7FF357EA7FF16637EFF0E617FFF005E
+          49FF087E64FF138D72FF19A083FF029071FF006D54FF005545C5000000004095
+          EA0C56A6F4EF68B2F6FF7CBEFBFF0B5750FF00503EFF005442FF00755AFF0481
+          65FF0C9B7CFF159E7FFF16987BFF1AA284FF008768FF005B48F2000000002288
+          EE1E409AF0EA57A6F3BE3893ECE3025C4BE400614BFF02795EFF01A882FF0380
+          65FF0EA483FF168972FF157866FF179B7EFF007C60FF00624CF90C70CFEB1173
+          D2FC69B1F7791176D6A22287E88600614C9D006952FF048F70FF02C79BFF0083
+          65FF0CA281FF20AF90FF20AA8DFF0E9174FF00785DFF006651C1278AE9E72588
+          E8D7000000001379D9D72288EE1E006B5232007158FD017E62FF08CDA1FF01D2
+          A4FF007B5FFF037259FF047E63FF038669FF017D62FF006A5152000000000000
+          00000A6DD0311E83E3BD000000000000000000775C85007E62FF018E6FFF07CE
+          A2FF06DEAFFF06D6A8FF08C198FF028A6CFF00765C8D00000000000000000000
+          00000C70D0ED0C6FD0EF00000000000000000000000000816553008B6CC00093
+          72F7009473FF008C6CDE008366A8007A5F430000000000000000000000000000
+          00002287E8C82187E8C600000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000000000000000
+          0000000000000000000000000000000000000000000000000000
+        }
+        OnClick = acAltSpeedExecute
+      end
+      object MenuItem52: TMenuItem
+        Action = acUpdateBlocklist
+        OnClick = acUpdateBlocklistExecute
+      end
+      object MenuItem33: TMenuItem
+        Action = acUpdateGeoIP
+        OnClick = acUpdateGeoIPExecute
+      end
+    end
+    object miHelp: TMenuItem
+      Caption = '&Help'
+      object miAbout: TMenuItem
+        Caption = 'About...'
+        OnClick = miAboutClick
+      end
+    end
+  end
+  object ActionList: TActionList
+    left = 40
+    top = 28
+    object acConnect: TAction
+      Caption = 'Connect to daemon'
+      Hint = 'Connect to daemon'
+      ImageIndex = 18
+      OnExecute = acConnectExecute
+    end
+    object acAddTorrent: TAction
+      Category = 'Torrent'
+      Caption = '&Add torrent...'
+      Hint = 'Add torrent'
+      ImageIndex = 0
+      OnExecute = acAddTorrentExecute
+      ShortCut = 45
+    end
+    object acStartTorrent: TAction
+      Category = 'Torrent'
+      Caption = 'Start'
+      Hint = 'Start torrent'
+      ImageIndex = 1
+      OnExecute = acStartTorrentExecute
+    end
+    object acStopTorrent: TAction
+      Category = 'Torrent'
+      Caption = 'Stop'
+      Hint = 'Stop torrent'
+      ImageIndex = 2
+      OnExecute = acStopTorrentExecute
+    end
+    object acRemoveTorrent: TAction
+      Category = 'Torrent'
+      Caption = 'Remove'
+      Hint = 'Remove torrent'
+      ImageIndex = 3
+      OnExecute = acRemoveTorrentExecute
+      ShortCut = 46
+    end
+    object acSetHighPriority: TAction
+      Category = 'Files'
+      Caption = 'High priority'
+      ImageIndex = 26
+      OnExecute = acSetHighPriorityExecute
+    end
+    object acSetNormalPriority: TAction
+      Category = 'Files'
+      Caption = 'Normal priority'
+      ImageIndex = 25
+      OnExecute = acSetNormalPriorityExecute
+    end
+    object acSetLowPriority: TAction
+      Category = 'Files'
+      Caption = 'Low priority'
+      ImageIndex = 24
+      OnExecute = acSetLowPriorityExecute
+    end
+    object acSetNotDownload: TAction
+      Category = 'Files'
+      Caption = 'Don''t download'
+      ImageIndex = 23
+      OnExecute = acSetNotDownloadExecute
+    end
+    object acOptions: TAction
+      Category = 'Tools'
+      Caption = 'Options...'
+      OnExecute = acOptionsExecute
+    end
+    object acDaemonOptions: TAction
+      Category = 'Tools'
+      Caption = 'Transmission options...'
+      Hint = 'Transmission options'
+      ImageIndex = 8
+      OnExecute = acDaemonOptionsExecute
+    end
+    object acExit: TAction
+      Caption = 'E&xit'
+      OnExecute = acExitExecute
+    end
+    object acResolveHost: TAction
+      Category = 'Peers'
+      Caption = 'Resolve host name'
+      OnExecute = acResolveHostExecute
+    end
+    object acResolveCountry: TAction
+      Category = 'Peers'
+      Caption = 'Resolve country'
+      OnExecute = acResolveCountryExecute
+    end
+    object acShowCountryFlag: TAction
+      Category = 'Peers'
+      Caption = 'Show country flag'
+      OnExecute = acShowCountryFlagExecute
+    end
+    object acUpdateGeoIP: TAction
+      Category = 'Tools'
+      Caption = 'Update GeoIP database'
+      OnExecute = acUpdateGeoIPExecute
+    end
+    object acRemoveTorrentAndData: TAction
+      Category = 'Torrent'
+      Caption = 'Remove torrent and Data'
+      OnExecute = acRemoveTorrentAndDataExecute
+      ShortCut = 8238
+    end
+    object acVerifyTorrent: TAction
+      Category = 'Torrent'
+      Caption = '&Verify'
+      Hint = 'Verify torrent'
+      OnExecute = acVerifyTorrentExecute
+    end
+    object acTorrentProps: TAction
+      Category = 'Torrent'
+      Caption = 'Properties...'
+      OnExecute = acTorrentPropsExecute
+    end
+    object acStartAllTorrents: TAction
+      Category = 'Torrent'
+      Caption = 'Start all torrents'
+      Hint = 'Start all torrents'
+      OnExecute = acStartAllTorrentsExecute
+    end
+    object acStopAllTorrents: TAction
+      Category = 'Torrent'
+      Caption = 'Stop all torrents'
+      Hint = 'Stop all'
+      OnExecute = acStopAllTorrentsExecute
+    end
+    object acSetupColumns: TAction
+      Category = 'Torrent'
+      Caption = 'Setup columns...'
+      OnExecute = acSetupColumnsExecute
+    end
+    object acOpenFile: TAction
+      Category = 'Files'
+      Caption = 'Open'
+      ImageIndex = 28
+      OnExecute = acOpenFileExecute
+    end
+    object acOpenContainingFolder: TAction
+      Category = 'Files'
+      Caption = 'Open containing folder'
+      ImageIndex = 22
+      OnExecute = acOpenContainingFolderExecute
+    end
+    object acAddLink: TAction
+      Category = 'Torrent'
+      Caption = 'Add torrent link...'
+      Hint = 'Add torrent link'
+      ImageIndex = 21
+      OnExecute = acAddLinkExecute
+    end
+    object acReannounceTorrent: TAction
+      Category = 'Torrent'
+      Caption = 'Reannounce (get more peers)'
+      OnExecute = acReannounceTorrentExecute
+    end
+    object acUpdateBlocklist: TAction
+      Category = 'Tools'
+      Caption = 'Update blocklist'
+      OnExecute = acUpdateBlocklistExecute
+    end
+    object acMoveTorrent: TAction
+      Category = 'Torrent'
+      Caption = 'Set data location...'
+      OnExecute = acMoveTorrentExecute
+    end
+    object acSelectAll: TAction
+      Category = 'Tools'
+      Caption = 'Select all'
+      OnExecute = acSelectAllExecute
+      ShortCut = 16449
+    end
+    object acShowApp: TAction
+      Caption = 'Show'
+      OnExecute = acShowAppExecute
+    end
+    object acHideApp: TAction
+      Caption = 'Hide'
+      OnExecute = acHideAppExecute
+    end
+    object acAddTracker: TAction
+      Category = 'Trackers'
+      Caption = 'Add tracker...'
+      OnExecute = acAddTrackerExecute
+    end
+    object acEditTracker: TAction
+      Category = 'Trackers'
+      Caption = 'Edit tracker...'
+      OnExecute = acEditTrackerExecute
+    end
+    object acDelTracker: TAction
+      Category = 'Trackers'
+      Caption = 'Remove tracker'
+      OnExecute = acDelTrackerExecute
+    end
+    object acConnOptions: TAction
+      Category = 'Tools'
+      Caption = 'Connection options...'
+      OnExecute = acConnOptionsExecute
+    end
+    object acNewConnection: TAction
+      Caption = 'New connection...'
+      OnExecute = acNewConnectionExecute
+    end
+    object acDisconnect: TAction
+      Caption = 'Disconnect'
+      ImageIndex = 27
+      OnExecute = acDisconnectExecute
+    end
+    object acAltSpeed: TAction
+      Category = 'Tools'
+      Caption = 'Use alternate bandwidth settings'
+      Hint = 'Use alternate bandwidth settings'
+      ImageIndex = 38
+      OnExecute = acAltSpeedExecute
+    end
+  end
+  object TorrentsListTimer: TTimer
+    Enabled = False
+    Interval = 100
+    OnTimer = TorrentsListTimerTimer
+    left = 253
+    top = 55
+  end
+  object OpenTorrentDlg: TOpenDialog
+    Title = 'Select a .torrent to open'
+    Filter = 'Torrents (*.torrent)|*.torrent|All files (*.*)|*.*'
+    left = 213
+    top = 55
+  end
+  object pmTorrents: TPopupMenu
+    Images = ImageList16
+    OnPopup = pmTorrentsPopup
+    left = 149
+    top = 55
+    object MenuItem42: TMenuItem
+      Action = acOpenContainingFolder
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        2000000000000004000064000000640000000000000000000000FF00FF00078D
+        BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
+        BEFF078DBEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00078DBEFF25A1
+        D1FF71C6E8FF84D7FAFF66CDF9FF65CDF9FF65CDF9FF65CDF9FF65CDF8FF65CD
+        F9FF65CDF8FF66CEF9FF3AADD8FF1999C9FFFF00FF00FF00FF00078DBEFF4CBC
+        E7FF39A8D1FFA0E2FBFF6FD4FAFF6FD4F9FF6ED4FAFF6FD4F9FF6FD4FAFF6FD4
+        FAFF6FD4FAFF6ED4F9FF3EB1D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF72D6
+        FAFF078DBEFFAEE9FCFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF7ADC
+        FBFF79DCFAFF79DCFAFF44B5D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF79DD
+        FBFF1899C7FF9ADFF3FF92E7FCFF84E4FBFF83E4FCFF83E4FCFF84E4FCFF83E4
+        FCFF83E4FBFF84E5FCFF48B9DAFFC9F0F3FF1496C4FFFF00FF00078DBEFF82E3
+        FCFF43B7DCFF65C2E0FFABF0FCFF8DEBFCFF8DEBFCFF8DEBFDFF8DEBFDFF8DEB
+        FCFF8DEBFDFF8DEBFCFF4CBBDAFFC9F0F3FFC9F0F3FF078DBEFF078DBEFF8AEA
+        FCFF77DCF3FF219CC7FFFEFFFFFFC8F7FDFFC9F7FDFFC9F7FDFFC9F7FEFFC8F7
+        FEFFC9F7FDFFC8F7FEFF9BD5E6FFEAFEFEFFD2F3F8FF078DBEFF078DBEFF93F0
+        FEFF93F0FDFF1697C5FF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
+        BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF9BF5
+        FEFF9AF6FEFF9AF6FEFF9BF5FDFF9BF6FEFF9AF6FEFF9BF5FEFF9AF6FDFF9BF5
+        FEFF9AF6FEFF9AF6FEFF0989BAFFFF00FF00FF00FF00FF00FF00078DBEFFFEFE
+        FEFFA0FBFFFFA0FBFEFFA0FBFEFFA1FAFEFFA1FBFEFFA0FAFEFFA1FBFEFFA1FB
+        FFFFA0FBFFFFA1FBFFFF0989BAFFFF00FF00FF00FF00FF00FF00FF00FF00078D
+        BEFFFEFEFEFFA5FEFFFFA5FEFFFFA5FEFFFF078DBEFF078DBEFF078DBEFF078D
+        BEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00078DBEFF078DBEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      }
+      OnClick = acOpenContainingFolderExecute
+    end
+    object pmSepOpen1: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem8: TMenuItem
+      Action = acStartTorrent
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF19FFFFFF46FFFFFF66FFFFFF66FFFF
+        FF53FFFFFF260000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF269B9B9B8C505050CF313131FF313131FF4141
+        41E27C7C7C9FFFFFFF4000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF0C7B7B7B9F303030FF282828FF202020FF1E1E1EFF2222
+        22FF282828FF4E4E4EC5FFFFFF26FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00A9A9A9572D2D2DFF272727FF161616AF04040420020202100909
+        0950151515BF1E1E1EFF5D5D5D8BFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00494949C12A2A2AFF242424C6FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF0008080840191919B5FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00323232EC272727FF0B0B0B40FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF000000000005050530FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00232323FF252525FFFFFFFF13FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00202020F3232323FF92929268FFFFFF00FFFFFF00FFFFFF40FFFF
+        FF06FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF001D1D1DB71E1E1EFF424242CFFFFFFF40FFFFFF0C484848C5D7D7
+        D75DFFFFFF130000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF0006060640161616FF1C1C1CFF494949C5C3C3C379212121FF3333
+        33E2A5A5A57DFFFFFF2600000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF0007070760121212FF161616FF1A1A1AFF1E1E1EFF1D1D
+        1DFF1E1E1EF53C3C3C7700000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00040404400B0B0BB0121212FF171717FF1616
+        16FF121212F00707076000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000F0F0FFF0E0E
+        0ED0030303300000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000707079F0101
+        0110FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
+      }
+      OnClick = acStartTorrentExecute
+    end
+    object MenuItem9: TMenuItem
+      Action = acStopTorrent
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        2000000000000004000064000000640000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF33FFFFFF66FFFFFF33FFFFFF00FFFFFF00FFFFFF33FFFF
+        FF66FFFFFF33FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00656565B2373737FF656565B2FFFFFF00FFFFFF00656565B23737
+        37FF656565B2FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF002D2D2DFF363636FF2D2D2DFFFFFFFF00FFFFFF002D2D2DFF3636
+        36FF2D2D2DFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF002B2B2BFF333333FF2B2B2BFFFFFFFF00FFFFFF002B2B2BFF3333
+        33FF2B2B2BFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00282828FF303030FF282828FFFFFFFF00FFFFFF00282828FF3030
+        30FF282828FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00252525FF2C2C2CFF252525FFFFFFFF00FFFFFF00252525FF2C2C
+        2CFF252525FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00222222FF292929FF222222FFFFFFFF00FFFFFF00222222FF2929
+        29FF222222FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00202020FF262626FF202020FFFFFFFF00FFFFFF00202020FF2626
+        26FF202020FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF001D1D1DFF232323FF1D1D1DFFFFFFFF00FFFFFF001D1D1DFF2323
+        23FF1D1D1DFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF001B1B1BFF202020FF1B1B1BFFFFFFFF00FFFFFF001B1B1BFF2020
+        20FF1B1B1BFFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00171717FF1C1C1CFF171717FFFFFFFF00FFFFFF00171717FF1C1C
+        1CFF171717FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00111111FF141414FF111111FFFFFFFF00FFFFFF00111111FF1414
+        14FF111111FFFFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00060606800B0B0BFF06060680FFFFFF00FFFFFF00060606800B0B
+        0BFF06060680FFFFFF00FFFFFF00FFFFFF000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000000000000000
+      }
+      OnClick = acStopTorrentExecute
+    end
+    object MenuItem10: TMenuItem
+      Action = acRemoveTorrent
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF06FFFFFF33FFFFFF53FFFFFF66FFFFFF66FFFF
+        FF53FFFFFF33FFFFFF06FFFFFF000000000000000000FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF26DDDDDD69696969B2424242E2303030FF303030FF4141
+        41E2696969B2DDDDDD69FFFFFF260000000000000000FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF267E7E7E9F3A3A3AF5313131FF272727FF1E1E1EFF1D1D1DFF2222
+        22FF292929FF353535F57C7C7C9FFFFFFF2600000000FFFFFF00FFFFFF00FFFF
+        FF067676769B323232FF333333FF404040E34F4F4F6AFFFFFF00FFFFFF000808
+        0840161616C0242424FF2D2D2DFF7676769BFFFFFF06FFFFFF00FFFFFF00C4C4
+        C43F313131F52D2D2DFF2E2E2EFF2F2F2FFF7A7A7AA0FFFFFF26FFFFFF00FFFF
+        FF00FFFFFF0011111180252525FF303030F5C4C4C43FFFFFFF00FFFFFF005656
+        56A9292929FF252525F2232323FF2A2A2AFF2D2D2DFF7A7A7AA0FFFFFF26FFFF
+        FF00FFFFFF00FFFFFF00212121C6282828FF565656A9FFFFFF00FFFFFF003636
+        36E2252525FF0D0D0D50111111A01F1F1FFF282828FF2A2A2AFF797979A0FFFF
+        FF26FFFFFF00FFFFFF000A0A0A40252525FF363636E2FFFFFF00FFFFFF002222
+        22FF222222FFFFFFFF00FFFFFF00101010A01D1D1DFF252525FF272727FF7777
+        77A0FFFFFF26FFFFFF00FFFFFF00232323FF222222FFFFFFFF00FFFFFF001E1E
+        1EFF212121FFFFFFFF1AFFFFFF00FFFFFF000F0F0FA01C1C1CFF232323FF2525
+        25FF767676A0FFFFFF26FFFFFF20212121FF1E1E1EFFFFFFFF00FFFFFF002121
+        21D91F1F1FFF81818179FFFFFF00FFFFFF00FFFFFF000E0E0EA0191919FF2020
+        20FF232323FF777777A07A7A7A891F1F1FFF212121D9FFFFFF00FFFFFF001212
+        12821A1A1AFF373737D9FFFFFF33FFFFFF00FFFFFF00FFFFFF000D0D0DA01919
+        19FF1F1F1FFF212121FF323232E21A1A1AFF12121282FFFFFF00FFFFFF000101
+        0110161616F11A1A1AFF5B5B5BB2FFFFFF4CFFFFFF19FFFFFF00FFFFFF002525
+        25AC1C1C1CFF1E1E1EFF1A1A1AFF161616F101010110FFFFFF00FFFFFF00FFFF
+        FF0007070760121212FF161616FF333333D99494948CFFFFFF66FFFFFF668282
+        82951E1E1EF5161616FF121212FF0707076000000000FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00060606600D0D0DEF111111FF141414FF151515FF151515FF1414
+        14FF111111FF0D0D0DEF060606600000000000000000FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF0001010110060606800A0A0ACF0C0C0CFF0C0C0CFF0A0A
+        0ACF0606068001010110FFFFFF000000000000000000FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+        FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
+      }
+      OnClick = acRemoveTorrentExecute
+    end
+    object MenuItem39: TMenuItem
+      Action = acRemoveTorrentAndData
+      OnClick = acRemoveTorrentAndDataExecute
+    end
+    object MenuItem55: TMenuItem
+      Caption = '-'
+    end
+    object pmiPriority: TMenuItem
+      Caption = 'Priority'
+      object MenuItem57: TMenuItem
+        Action = acSetHighPriority
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          200000000000000400006400000064000000000000000000000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF0000404CD8FF162FD0FF162FD0FF404C
+          D8FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF0000173CE5FF6699FFFF99CCFFFF99CCFFFF6699
+          FFFF193EE5FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF00000F38EBFF5084FFFF6699FFFF74A7FFFF74A7FFFF6699
+          FFFF5488FFFF0F38EBFF00FF000000FF000000FF000000FF000000FF000000FF
+          000000FF00004B67F2FF2254FDFF3C6FFFFF4E81FFFF5A8DFFFF5A8DFFFF5084
+          FFFF3F73FFFF275AFFFF4B67F2FF00FF000000FF000000FF000000FF000000FF
+          000000FF00001A43F9FF184BFFFF275AFFFF3366FFFF3D71FFFF3D71FFFF3D71
+          FFFF275AFFFF184BFFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
+          000000FF00001A43F9FF0033FFFF184BFFFF3366FFFF3F73FFFF3F73FFFF3366
+          FFFF184BFFFF0033FFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
+          000000FF00005273FEFF103DF9FF486CFEFF5B7DFFFF6B8AFEFF6B8AFEFF5B7D
+          FFFF4368FEFF0B39FAFF5273FEFF00FF000000FF000000FF000000FF000000FF
+          000000FF000000FF00000033FFFF4F6DF8FF7991FCFF899EFDFF899EFDFF758E
+          FBFF4F6DF8FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF00000033FFFF4969F7FF91A2F7FF91A2F7FF4969
+          F7FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF00005273FEFF193FFDFF193FFDFF5273
+          FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF0000
+        }
+        OnClick = acSetHighPriorityExecute
+      end
+      object MenuItem56: TMenuItem
+        Action = acSetNormalPriority
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          20000000000000040000640000006400000000000000000000000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF001D915CFF0D8145FF0D8145FF1D91
+          5CFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000D8E46FF00E03FFF01FF1FFF01FF1FFF00E0
+          3FFF0F8E47FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF00089344FF00D142FF00E03FFF00E83AFF00E83AFF00E0
+          3FFF00D442FF089344FF0000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000CB85AFF00B146FF00C546FF00D043FF00D842FF00D842FF00D1
+          42FF00C744FF00B845FF0CB85AFF0000FF000000FF000000FF000000FF000000
+          FF000000FF0004A74AFF00AF44FF00B845FF00BF46FF00C644FF00C644FF00C6
+          44FF00B845FF00AF44FF04A74AFF0000FF000000FF000000FF000000FF000000
+          FF000000FF0004A74AFF009F42FF00AF44FF00BF46FF00C744FF00C744FF00BF
+          46FF00AF44FF009F42FF04A74AFF0000FF000000FF000000FF000000FF000000
+          FF000000FF0000D159FF03A147FF00CA55FF00D858FF01DF5CFF01DF5CFF00D8
+          58FF00C854FF02A045FF00D159FF0000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF00009F42FF07C45BFF05E466FF04F06BFF04F06BFF06DF
+          64FF07C45BFF009F42FF0000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF00009F42FF07BF57FF10E570FF10E570FF07BF
+          57FF009F42FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF0000D159FF00AC4EFF00AC4EFF00D1
+          59FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+          FF000000FF000000FF000000FF000000FF000000FF000000FF00
+        }
+        OnClick = acSetNormalPriorityExecute
+      end
+      object MenuItem58: TMenuItem
+        Action = acSetLowPriority
+        Bitmap.Data = {
+          36040000424D3604000000000000360000002800000010000000100000000100
+          200000000000000400006400000064000000000000000000000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF00003F97D7FF168BCFFF168BCFFF3F97
+          D7FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000017A2E4FF65E5FFFF98FFFFFF98FFFFFF65E5
+          FFFF19A3E4FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF00000FA5EAFF4FDBFFFF65E5FFFF73ECFFFF73ECFFFF65E5
+          FFFF53DDFFFF0FA5EAFF00FF000000FF000000FF000000FF000000FF000000FF
+          000000FF00004ABAF2FF21C1FDFF3BD0FFFF4DD9FFFF59DFFFFF59DFFFFF4FDB
+          FFFF3ED2FFFF26C5FFFF4ABAF2FF00FF000000FF000000FF000000FF000000FF
+          000000FF000019B2F9FF17BEFFFF26C5FFFF32CBFFFF3CD1FFFF3CD1FFFF3CD1
+          FFFF26C5FFFF17BEFFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
+          000000FF000019B2F9FF00B2FFFF17BEFFFF32CBFFFF3ED2FFFF3ED2FFFF32CB
+          FFFF17BEFFFF00B2FFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
+          000000FF000051C8FEFF0FB1F9FF47C6FEFF5ACEFFFF6AD3FEFF6AD3FEFF5ACE
+          FFFF42C5FEFF0AB0FAFF51C8FEFF00FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000B2FFFF4EC1F8FF78D2FCFF88D7FDFF88D7FDFF74D0
+          FBFF4EC1F8FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000B2FFFF48BFF7FF90D4F7FF90D4F7FF48BF
+          F7FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000051C8FEFF18B0FDFF18B0FDFF51C8
+          FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+          000000FF000000FF000000FF000000FF000000FF000000FF0000
+        }
+        OnClick = acSetLowPriorityExecute
+      end
+    end
+    object MenuItem50: TMenuItem
+      Action = acReannounceTorrent
+      OnClick = acReannounceTorrentExecute
+    end
+    object MenuItem11: TMenuItem
+      Action = acVerifyTorrent
+      OnClick = acVerifyTorrentExecute
+    end
+    object MenuItem53: TMenuItem
+      Action = acMoveTorrent
+      OnClick = acMoveTorrentExecute
+    end
+    object MenuItem19: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem20: TMenuItem
+      Action = acTorrentProps
+      Default = True
+      OnClick = acTorrentPropsExecute
+    end
+    object MenuItem36: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem37: TMenuItem
+      Action = acSetupColumns
+      OnClick = acSetupColumnsExecute
+    end
+  end
+  object ApplicationProperties: TApplicationProperties
+    ShowButtonGlyphs = sbgSystem
+    OnException = ApplicationPropertiesException
+    OnIdle = ApplicationPropertiesIdle
+    OnMinimize = ApplicationPropertiesMinimize
+    OnRestore = ApplicationPropertiesRestore
+    left = 348
+    top = 56
+  end
+  object pmFiles: TPopupMenu
+    Images = ImageList16
+    OnPopup = pmFilesPopup
+    left = 304
+    top = 92
+    object MenuItem40: TMenuItem
+      Action = acOpenFile
+      Default = True
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        2000000000000004000064000000640000000000000000000000FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFFF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF009933
+        00FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00993300FF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00993300FFAA5F1FFF993300FFFF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00993300FFBA7D48FF993300FF993300FFFF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00993300FFCDA27CFFD8B596FF993300FF9933
+        00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFE1C6B0FFECDCCDFFEDDD
+        D1FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFF4E9E2FFFDF9
+        F5FFFBF4ECFF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFE1C0ABFFF7E9
+        DAFFF4E0CCFFE1BA9CFF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFF6E6D6FFF3DEC8FFF0D5
+        BAFFE3B995FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFEDCAA8FFEAC1
+        99FFE7B98BFFDFA875FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFE3AE
+        79FFE0A56BFFDD9C5CFFDA944FFF993300FFFF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF009933
+        00FF993300FF993300FF993300FF993300FF993300FFFF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      }
+      OnClick = acOpenFileExecute
+    end
+    object MenuItem44: TMenuItem
+      Action = acOpenContainingFolder
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        2000000000000004000064000000640000000000000000000000FF00FF00078D
+        BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
+        BEFF078DBEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00078DBEFF25A1
+        D1FF71C6E8FF84D7FAFF66CDF9FF65CDF9FF65CDF9FF65CDF9FF65CDF8FF65CD
+        F9FF65CDF8FF66CEF9FF3AADD8FF1999C9FFFF00FF00FF00FF00078DBEFF4CBC
+        E7FF39A8D1FFA0E2FBFF6FD4FAFF6FD4F9FF6ED4FAFF6FD4F9FF6FD4FAFF6FD4
+        FAFF6FD4FAFF6ED4F9FF3EB1D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF72D6
+        FAFF078DBEFFAEE9FCFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF7ADC
+        FBFF79DCFAFF79DCFAFF44B5D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF79DD
+        FBFF1899C7FF9ADFF3FF92E7FCFF84E4FBFF83E4FCFF83E4FCFF84E4FCFF83E4
+        FCFF83E4FBFF84E5FCFF48B9DAFFC9F0F3FF1496C4FFFF00FF00078DBEFF82E3
+        FCFF43B7DCFF65C2E0FFABF0FCFF8DEBFCFF8DEBFCFF8DEBFDFF8DEBFDFF8DEB
+        FCFF8DEBFDFF8DEBFCFF4CBBDAFFC9F0F3FFC9F0F3FF078DBEFF078DBEFF8AEA
+        FCFF77DCF3FF219CC7FFFEFFFFFFC8F7FDFFC9F7FDFFC9F7FDFFC9F7FEFFC8F7
+        FEFFC9F7FDFFC8F7FEFF9BD5E6FFEAFEFEFFD2F3F8FF078DBEFF078DBEFF93F0
+        FEFF93F0FDFF1697C5FF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
+        BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF9BF5
+        FEFF9AF6FEFF9AF6FEFF9BF5FDFF9BF6FEFF9AF6FEFF9BF5FEFF9AF6FDFF9BF5
+        FEFF9AF6FEFF9AF6FEFF0989BAFFFF00FF00FF00FF00FF00FF00078DBEFFFEFE
+        FEFFA0FBFFFFA0FBFEFFA0FBFEFFA1FAFEFFA1FBFEFFA0FAFEFFA1FBFEFFA1FB
+        FFFFA0FBFFFFA1FBFFFF0989BAFFFF00FF00FF00FF00FF00FF00FF00FF00078D
+        BEFFFEFEFEFFA5FEFFFFA5FEFFFFA5FEFFFF078DBEFF078DBEFF078DBEFF078D
+        BEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00078DBEFF078DBEFF078DBEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+        FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      }
+      OnClick = acOpenContainingFolderExecute
+    end
+    object pmSepOpen2: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem12: TMenuItem
+      Action = acSetHighPriority
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        200000000000000400006400000064000000000000000000000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF0000404CD8FF162FD0FF162FD0FF404C
+        D8FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF0000173CE5FF6699FFFF99CCFFFF99CCFFFF6699
+        FFFF193EE5FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF00000F38EBFF5084FFFF6699FFFF74A7FFFF74A7FFFF6699
+        FFFF5488FFFF0F38EBFF00FF000000FF000000FF000000FF000000FF000000FF
+        000000FF00004B67F2FF2254FDFF3C6FFFFF4E81FFFF5A8DFFFF5A8DFFFF5084
+        FFFF3F73FFFF275AFFFF4B67F2FF00FF000000FF000000FF000000FF000000FF
+        000000FF00001A43F9FF184BFFFF275AFFFF3366FFFF3D71FFFF3D71FFFF3D71
+        FFFF275AFFFF184BFFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
+        000000FF00001A43F9FF0033FFFF184BFFFF3366FFFF3F73FFFF3F73FFFF3366
+        FFFF184BFFFF0033FFFF1A43F9FF00FF000000FF000000FF000000FF000000FF
+        000000FF00005273FEFF103DF9FF486CFEFF5B7DFFFF6B8AFEFF6B8AFEFF5B7D
+        FFFF4368FEFF0B39FAFF5273FEFF00FF000000FF000000FF000000FF000000FF
+        000000FF000000FF00000033FFFF4F6DF8FF7991FCFF899EFDFF899EFDFF758E
+        FBFF4F6DF8FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF00000033FFFF4969F7FF91A2F7FF91A2F7FF4969
+        F7FF0033FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF00005273FEFF193FFDFF193FFDFF5273
+        FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF0000
+      }
+      OnClick = acSetHighPriorityExecute
+    end
+    object MenuItem13: TMenuItem
+      Action = acSetNormalPriority
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        20000000000000040000640000006400000000000000000000000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF001D915CFF0D8145FF0D8145FF1D91
+        5CFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000D8E46FF00E03FFF01FF1FFF01FF1FFF00E0
+        3FFF0F8E47FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF00089344FF00D142FF00E03FFF00E83AFF00E83AFF00E0
+        3FFF00D442FF089344FF0000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000CB85AFF00B146FF00C546FF00D043FF00D842FF00D842FF00D1
+        42FF00C744FF00B845FF0CB85AFF0000FF000000FF000000FF000000FF000000
+        FF000000FF0004A74AFF00AF44FF00B845FF00BF46FF00C644FF00C644FF00C6
+        44FF00B845FF00AF44FF04A74AFF0000FF000000FF000000FF000000FF000000
+        FF000000FF0004A74AFF009F42FF00AF44FF00BF46FF00C744FF00C744FF00BF
+        46FF00AF44FF009F42FF04A74AFF0000FF000000FF000000FF000000FF000000
+        FF000000FF0000D159FF03A147FF00CA55FF00D858FF01DF5CFF01DF5CFF00D8
+        58FF00C854FF02A045FF00D159FF0000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF00009F42FF07C45BFF05E466FF04F06BFF04F06BFF06DF
+        64FF07C45BFF009F42FF0000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF00009F42FF07BF57FF10E570FF10E570FF07BF
+        57FF009F42FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF0000D159FF00AC4EFF00AC4EFF00D1
+        59FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF00
+      }
+      OnClick = acSetNormalPriorityExecute
+    end
+    object MenuItem14: TMenuItem
+      Action = acSetLowPriority
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        200000000000000400006400000064000000000000000000000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF00003F97D7FF168BCFFF168BCFFF3F97
+        D7FF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000017A2E4FF65E5FFFF98FFFFFF98FFFFFF65E5
+        FFFF19A3E4FF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF00000FA5EAFF4FDBFFFF65E5FFFF73ECFFFF73ECFFFF65E5
+        FFFF53DDFFFF0FA5EAFF00FF000000FF000000FF000000FF000000FF000000FF
+        000000FF00004ABAF2FF21C1FDFF3BD0FFFF4DD9FFFF59DFFFFF59DFFFFF4FDB
+        FFFF3ED2FFFF26C5FFFF4ABAF2FF00FF000000FF000000FF000000FF000000FF
+        000000FF000019B2F9FF17BEFFFF26C5FFFF32CBFFFF3CD1FFFF3CD1FFFF3CD1
+        FFFF26C5FFFF17BEFFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
+        000000FF000019B2F9FF00B2FFFF17BEFFFF32CBFFFF3ED2FFFF3ED2FFFF32CB
+        FFFF17BEFFFF00B2FFFF19B2F9FF00FF000000FF000000FF000000FF000000FF
+        000000FF000051C8FEFF0FB1F9FF47C6FEFF5ACEFFFF6AD3FEFF6AD3FEFF5ACE
+        FFFF42C5FEFF0AB0FAFF51C8FEFF00FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000B2FFFF4EC1F8FF78D2FCFF88D7FDFF88D7FDFF74D0
+        FBFF4EC1F8FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000B2FFFF48BFF7FF90D4F7FF90D4F7FF48BF
+        F7FF00B2FFFF00FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000051C8FEFF18B0FDFF18B0FDFF51C8
+        FEFF00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+        000000FF000000FF000000FF000000FF000000FF000000FF0000
+      }
+      OnClick = acSetLowPriorityExecute
+    end
+    object MenuItem15: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem16: TMenuItem
+      Action = acSetNotDownload
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        20000000000000040000640000006400000000000000000000000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF00ADADADFFA3A3A3FFA3A3A3FFADAD
+        ADFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF00A7A7A7FFBCBCBCFFC5C5C5FFC5C5C5FFBCBC
+        BCFFA7A7A7FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF00A7A7A7FFB7B7B7FFBCBCBCFFBEBEBEFFBEBEBEFFBCBC
+        BCFFB8B8B8FFA7A7A7FF0000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF00B4B4B4FFAEAEAEFFB4B4B4FFB7B7B7FFB9B9B9FFB9B9B9FFB7B7
+        B7FFB4B4B4FFAFAFAFFFB4B4B4FF0000FF000000FF000000FF000000FF000000
+        FF000000FF00ACACACFFADADADFFAFAFAFFFB2B2B2FFB4B4B4FFB4B4B4FFB4B4
+        B4FFAFAFAFFFADADADFFACACACFF0000FF000000FF000000FF000000FF000000
+        FF000000FF00ACACACFFA8A8A8FFADADADFFB2B2B2FFB4B4B4FFB4B4B4FFB2B2
+        B2FFADADADFFA8A8A8FFACACACFF0000FF000000FF000000FF000000FF000000
+        FF000000FF00B8B8B8FFAAAAAAFFB6B6B6FFB9B9B9FFBCBCBCFFBCBCBCFFB9B9
+        B9FFB5B5B5FFA9A9A9FFB8B8B8FF0000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF00A8A8A8FFB6B6B6FFBFBFBFFFC2C2C2FFC2C2C2FFBEBE
+        BEFFB6B6B6FFA8A8A8FF0000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF00A8A8A8FFB4B4B4FFC2C2C2FFC2C2C2FFB4B4
+        B4FFA8A8A8FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF00B8B8B8FFACACACFFACACACFFB8B8
+        B8FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+        FF000000FF000000FF000000FF000000FF000000FF000000FF00
+      }
+      OnClick = acSetNotDownloadExecute
+    end
+    object MenuItem46: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem47: TMenuItem
+      Action = acSetupColumns
+      OnClick = acSetupColumnsExecute
+    end
+  end
+  object TickTimer: TTimer
+    Enabled = False
+    Interval = 300
+    OnTimer = TickTimerTimer
+    left = 408
+    top = 55
+  end
+  object ImageList16: TImageList
+    left = 412
+    top = 92
+    Bitmap = {
+      4C69270000001000000010000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      00000000000000000000007308FF087B08FF088C10FF088C10FF087B08FF0000
+      0000000000000000000000000000000000000000000031B5DEFF29ADD6FF18A5
+      C6FF18A5C6FF00000000000000000000000000000000088C10FF08A518FF0884
+      10FF0000000000000000000000000000000021ADD6FF9CDEEFFFC6FFFFFFC6FF
+      FFFF9CDEEFFF18ADD6FF18A5C6FF18A5C6FF18A5C6FF18A5C6FF088C10FF08A5
+      18FF0000000000000000000000000000000029ADD6FFC6FFFFFF94FFFFFF9CFF
+      FFFFD6FFFFFFD6FFFFFF8CEFFFFF94EFFFFF73DEF7FF73DEF7FF088410FF18AD
+      29FF088410FF00000000000000000000000029ADD6FF9CFFFFFF94F7FFFF94F7
+      FFFF94F7FFFF94F7FFFF73DEF7FF73DEF7FF29ADD6FF18A5C6FF108C21FF31C6
+      4AFF109C21FF18A5C6FF000000000000000029ADD6FF9CFFFFFF94F7FFFF73DE
+      F7FF73DEF7FF73DEF7FF6BDEF7FF29ADD6FFADDEEFFF007308FF52D67BFF42D6
+      6BFF31C64AFF007308FF000000000000000029ADD6FF9CFFFFFF73DEF7FF29AD
+      D6FF18A5C6FF18A5C6FF18A5C6FFADDEEFFF8CF7FFFF84EFFFFF007308FF5AE7
+      8CFF007308FF18A5C6FF000000000000000029ADD6FF94F7FFFF29ADD6FFADDE
+      EFFFA5EFF7FFA5EFF7FFA5F7FFFF8CEFFFFF8CEFFFFF8CEFFFFF73DEF7FF0073
+      08FF18A5C6FF00000000000000000000000029ADD6FF73DEF7FF29ADD6FF9CFF
+      FFFF8CF7FFFF8CF7FFFF8CF7FFFF8CEFFFFF8CEFFFFF8CEFFFFF73DEF7FF73DE
+      F7FF18A5C6FF00000000000000000000000029ADD6FF29ADD6FFADDEEFFF94F7
+      FFFF94F7FFFF8CEFFFFF8CEFFFFF8CEFFFFF8CEFFFFF73DEF7FF73DEF7FF4AC6
+      EFFF0000000000000000000000000000000029ADD6FF52BDE7FFADFFFFFF8CF7
+      FFFF8CEFFFFF8CEFFFFF8CEFFFFF73DEF7FF73DEF7FF73DEF7FF4AC6EFFF21AD
+      D6FF0000000000000000000000000000000029ADD6FF52BDE7FF9CFFFFFF94FF
+      FFFF73DEF7FF73DEF7FF73DEF7FF73DEF7FF4AC6E7FF21ADD6FF18A5C6FF0000
+      00000000000000000000000000000000000029ADD6FF9CDEEFFF84EFFFFF4AC6
+      E7FF21ADD6FF18A5C6FF18A5C6FF18A5C6FF0000000000000000000000000000
+      00000000000000000000000000000000000029ADD6FF31B5DEFF21ADD6FF0000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00005A
+      00FF005A00FF005A00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF42CE42FF007300FF005A00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF73EF73FFADFFADFF007300FF005A00FFFF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF84EF84FF94FF94FF94FF94FF007300FF005A00FFFF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF6BEF6BFF84EF84FF84EF73FF5AE763FF007300FF005A00FFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF63E763FF6BE763FF5AE763FF5AE763FF5AE763FF007300FF006300FFFF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF18DE5AFF10CE42FF10CE42FF10CE42FF10C631FF007300FF006300FFFF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF10DE42FF10C631FF08BD21FF08BD21FF007300FF005A00FFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF10C631FF10C631FF08BD21FF007300FF005A00FFFF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF10BD21FF08BD21FF007300FF005A00FFFF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000073
+      00FF08BD21FF007300FF005A00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00005A
+      00FF005A00FF005A00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF001F7DDEFF1F84ECFF1F86F0FF1F81E6FF1F7EE0FF1F7AD8FFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00207DDDFF0676
+      E7FF46A1FFFF7CBCFFFF95C9FFFF83C0FFFF4FA6FFFF007EFFFF005BB8FF0656
+      A9FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00207EDFFF2C94FFFFADD6
+      FFFFCFE7FFFFB5DAFFFF91C7FFFF75B9FFFF5FAEFFFF399BFFFF007CFAFF166E
+      C9FF095BAFFFFF00FF00FF00FF00FF00FF001E7CDCFF2B94FFFFC1E0FFFFCDE6
+      FFFF9DCDFFFF97CAFFFF6BB4FFFF60AEFFFF54A9FFFF429FFFFF3494F6FF2185
+      EAFF0D6AC9FF0252A3FFFF00FF00FF00FF00016FDEFF9BCCFFFFC7E3FFFF7ABC
+      FFFF7EBEFFFF6DB5FFFF5DAEFFFF51A8FFFF44A2FFFF3F9FFFFF2C96FFFF1582
+      EEFF0774E2FF0156ACFFFF00FF001E7DDEFF2D95FFFFAFD7FFFF85C1FFFF66B2
+      FFFFD8ECFFFFFFFFFFFF6BB6FFFF62B1FFFFFFFFFFFFC6E3FFFF1087FFFF0579
+      EFFF016EDDFF0061C4FF004C9BFF1E7CDCFF51A7FFFF90C6FFFF62B0FFFF47A4
+      FFFFCFE7FFFFFFFFFFFF51A8FFFF4AA4FFFFFFFFFFFFC1DFFEFF027BF9FF0071
+      E5FF006AD6FF0066CEFF004C9BFF1E82E8FF47A2FFFF62B0FFFF45A1FFFF2793
+      FFFFC8E3FFFFFFFFFFFF419EFDFF409CF9FFFFFFFFFFC0DDFBFF0373E7FF006C
+      DCFF0066CFFF0066CEFF004FA0FF1E80E4FF198BFFFF3097FFFF2792FFFF0E85
+      FDFFC5E1FEFFFFFFFFFF4096F1FF4094ECFFFFFFFFFFC0DBF6FF036CD6FF0068
+      D2FF0064CBFF0066CEFF004D9CFF1E7CDCFF0076EEFF0A83FEFF0E83FBFF0278
+      F2FFC5DFF9FFFFFFFFFF4090E3FF408FDFFFFFFFFFFFC0D9F3FF0268D0FF0065
+      CBFF0065CCFF0064CAFF004C9AFF1E7AD8FF0065CCFF0073E8FF0074E9FF006D
+      DEFFC5DDF6FFFFFFFFFF408CD9FF408CD9FFFFFFFFFFC1D9F3FF0369D0FF0065
+      CCFF0066CFFF0060C3FF004C9AFFFF00FF000058B2FF0069D4FF0068D1FF0065
+      CCFF1A76D4FF066AD0FF0065CCFF0065CDFF0065CCFF0569D0FF026AD4FF0065
+      CCFF0068D2FF0053A9FFFF00FF00FF00FF000052A6FF005EBFFF0067D1FF0064
+      CBFF0068D2FF0068D1FF0065CBFF0065CBFF0065CCFF0065CCFF0065CCFF0067
+      D0FF005FBFFF004C9BFFFF00FF00FF00FF00FF00FF000051A5FF005EBEFF0067
+      D1FF0067D0FF0066CFFF0064CBFF0065CCFF0065CCFF0066CDFF0068D2FF005F
+      BFFF004E9FFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00004F9FFF0053
+      A8FF005EBFFF0062C6FF0065CCFF0065CCFF0064CAFF005FC1FF0054ABFF004C
+      9BFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00004B98FF004D9CFF0052A6FF0052A6FF004D9CFF004B98FFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      00000000000000000000000000000031F7FF0031F7FF00000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      00000000000000000000000000000031F7FF0031F7FF0031F7FF000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000031F7FF0031F7FF0031F7FF0000
+      0000000000000000000000000000000000000000000000000000000000000000
+      00000031F7FF000000000000000000000000000000000031F7FF0031F7FF0031
+      FFFF0000000000000000000000000000000000000000000000000031F7FF0031
+      F7FF0000000000000000000000000000000000000000000000000031FFFF0031
+      EFFF0031F7FF000000000000000000000000000000000031FFFF0031F7FF0000
+      0000000000000000000000000000000000000000000000000000000000000031
+      F7FF0031EFFF0031E7FF00000000000000000031F7FF0031F7FF000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      00000031DEFF0031EFFF0031E7FF0031EFFF0031F7FF00000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000031E7FF0031E7FF0031EFFF0000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      00000031DEFF0031E7FF0031E7FF0031E7FF0031DEFF00000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000031
+      DEFF0031DEFF0031DEFF000000000031DEFF0031DEFF0031DEFF000000000000
+      000000000000000000000000000000000000000000000031EFFF0031DEFF0031
+      DEFF0031DEFF000000000000000000000000000000000031DEFF0031DEFF0000
+      0000000000000000000000000000000000000031DEFF0031DEFF0031DEFF0031
+      DEFF0000000000000000000000000000000000000000000000000031DEFF0031
+      DEFF000000000000000000000000000000000031DEFF0031DEFF0031DEFF0000
+      0000000000000000000000000000000000000000000000000000000000000031
+      DEFF0031DEFF0000000000000000000000000031DEFF0031DEFF000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      00000031DEFF0031DEFF00000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000031DEFF0031DEFF0000FF000000FF000000FF000000FF000000
+      FF000000FF00FFC42BFFFFC42BFFFFC42BFFFFC42BFF0000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF00FFBF
+      30FFFFCC53FFFFD66FFFFFDC81FFFFDC81FFFFD66FFFFFCC53FFFFC134FF0000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF00FFC245FFFFD4
+      76FFFFD67CFFFFD67CFFFFD67CFFFFD67CFFFFD67CFFFFD67CFFFFD475FFFFC1
+      44FF0000FF000000FF000000FF000000FF000000FF00FFBA43FFFFCF73FFFFCF
+      74FFFFCF74FFFFCF74FFFFD585FFFFFCF6FFFFEAC2FFFFCF74FFFFCF74FFFFCE
+      73FFFFBB43FF0000FF000000FF000000FF00FFA92EFFFFC667FFFFC86CFFFFC8
+      6CFFFFC86CFFFFC86CFFFFCF7EFFFFFCF6FFFFE7BEFFFFC86CFFFFC86CFFFFC8
+      6CFFFFC566FFFFA92EFF0000FF000000FF00FFAF43FFFFC064FFFFC064FFFFC0
+      64FFFFC064FFFFC064FFFFD08BFFFFC877FFFFC064FFFFC064FFFFC064FFFFC0
+      64FFFFC065FFFFAE43FF0000FF00FF922BFFFFB151FFFFB85CFFFFB85CFFFFB8
+      5CFFFFBC66FFFFF2E0FFFFFFFFFFFFFBF5FFFFB454FFFFAF47FFFFAA3DFFFFA8
+      38FFFFA633FFFFA130FFFF922BFFFF922BFFFFAE53FFFFAF54FFFFAF54FFFFAF
+      54FFFFD7A9FFFFCD94FFFFFFFFFFFFF9F3FFFFA033FFFFA033FFFFA033FFFFA0
+      33FFFFA033FFFF9F32FFFF922BFFFF8A2BFFFFA44BFFFFA54CFFFFA54CFFFFA5
+      4CFFFFA144FFFFC68EFFFFFFFFFFFFD9B2FFFF9933FFFF9933FFFF9933FFFF99
+      33FFFF9933FFFF9832FFFF8A2BFFFF922BFFFF963DFFFF9B43FFFF9B42FFFF95
+      37FFFF9333FFFFE4CCFFFFFFFFFFFFB573FFFF9333FFFF9333FFFF9333FFFF93
+      33FFFF9333FFFF8D30FFFF922BFF0000FF00FF8231FFFF9039FFFF8C33FFFF8C
+      33FFFF8C33FFFFFFFFFFFFFFFFFFFFA966FFFFBF8DFFFF8C33FFFF8C33FFFF8C
+      33FFFF8C33FFFF802EFF0000FF000000FF00FF742CFFFF8332FFFF8633FFFF86
+      33FFFF8E40FFFFF7F2FFFFFFFFFFFFE1CCFFFF8E40FFFF8633FFFF8633FFFF86
+      33FFFF8131FFFF742CFF0000FF000000FF000000FF00FF722DFFFF7E32FFFF80
+      33FFFF8033FFFF904DFFFFA066FFFF8033FFFF8033FFFF8033FFFF8033FFFF7E
+      32FFFF712DFF0000FF000000FF000000FF000000FF000000FF00FF692CFFFF76
+      32FFFF7933FFFF7933FFFF7933FFFF7933FFFF7933FFFF7933FFFF7531FFFF69
+      2CFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF00FF63
+      2CFFFF662DFFFF6C30FFFF7032FFFF7032FFFF6C30FFFF662DFFFF632CFF0000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF00FF5C2BFFFF5C2BFFFF5C2BFFFF5C2BFF0000FF000000FF000000
+      FF000000FF000000FF000000FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF0051515140959595DF959595DF51515140FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FF009919FFFFFF00FFFFFF00FF009919FFFF
+      FF00FFFFFF009F9F9FF0DCDCDCFFDCDCDCFF9F9F9FF0FFFFFF00FFFFFF00FF00
+      9919FFFFFF00FFFFFF00FF009919FF009933FFFFFF00FFFFFF00FF009933FFFF
+      FF00FFFFFF00ABABABF3BBBBBBFFBBBBBBFFABABABF3FFFFFF00FFFFFF00FF00
+      9933FFFFFF00FFFFFF00FF009933FF00993EFF00990EFFFFFF00FF009934FF00
+      9918FFFFFF00B1B1B16CB7B7B7E7B7B7B7E7B1B1B16CFFFFFF00FF009918FF00
+      9934FFFFFF00FF00990EFF00993EFF009940FF009933FFFFFF00FF009920FF00
+      9959FF009906FFFFFF10FFFFFF38FFFFFF38FFFFFF10FF009906FF009959FF00
+      9920FFFFFF00FF009933FF009940FF00990FFF00996FFF009908FFFFFF00FF00
+      9947FF00992F3D3D3D308A8A8AFF8A8A8AFF3D3D3D30FF00992FFF009947FFFF
+      FF00FF009908FF00996FFF00990FFFFFFF00FF009955FF00995FFFFFFF00FFFF
+      FF00FFFFFF00777777A4909090FF909090FF777777A4FFFFFF00FFFFFF00FFFF
+      FF00FF00995FFF009955FFFFFF00FFFFFF00FFFFFF00FF009990FF00996FFF00
+      990B181818107D7D7DF3666666F7666666F77D7D7DF318181810FF00990BFF00
+      996FFF009990FFFFFF00FFFFFF00FFFFFF00FFFFFF00FF00990CFF009972FF00
+      990C5B5B5B626A6A6AFF787878C3787878C36A6A6AFF5B5B5B62FF00990CFF00
+      9972FF00990CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00767676D4545454FF858585FF858585FF545454FF767676D4FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF003434
+      34306A6A6AFF5F5F5FE5FFFFFF40FFFFFF405F5F5FE56A6A6AFF34343430FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF006363
+      63A4585858FF6B6B6BFF717171FF717171FF6B6B6BFF585858FF636363A4FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00131313106868
+      68F2494949F7D5D5D54CFFFFFF40FFFFFF40D5D5D54C494949F7686868F21313
+      1310FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00484848625858
+      58FF555555FF676767FF636363FF636363FF676767FF555555FF585858FF4848
+      4862FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF005C5C5CD44545
+      45FF9090906EFFFFFF40FFFFFF40FFFFFF40FFFFFF409090906E454545FF5C5C
+      5CD4FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF34FFFF
+      FF40FFFFFF0CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0CFFFFFF40FFFF
+      FF34FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF004A4A4A164E4E4EBF4D4D4DFF4D4D4DFF4E4E4EBF4A4A4A16FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
+      00024A4A4ABE515151FF5E5E5EFF5E5E5EFF515151FF4A4A4ABE00000002FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
+      0006454545FF575757FF585858FF585858FF575757FF454545FF00000006FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
+      0009404040FF505050FF505050FF505050FF505050FF404040FF00000009FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
+      00093C3C3CFF494949FF494949FF494949FF494949FF3C3C3CFF00000009FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
+      0009373737FF424242FF424242FF424242FF424242FF373737FF00000009FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
+      0009313131D9373737FF3A3A3AFF3A3A3AFF373737FF313131D900000009FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
+      0007282828752E2E2EFF333333FF333333FF2E2E2EFF2828287500000007FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
+      000400000010252525B02A2A2AFF2A2A2AFF252525B00000001000000004FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002020
+      20252020207B212121D7232323FF242424FF212121E42121219A20202035FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF001A1A1A241A1A1A761B1B1BD41B1B
+      1BFF1C1C1CFF1D1D1DFF1D1D1DFF1D1D1DFF1D1D1DFF1C1C1CFF1B1B1BFF1B1B
+      1BE21B1B1B961A1A1A34FFFFFF0014141435151515FF151515FF161616FF1616
+      16FF161616FF161616FF161616FF161616FF161616FF161616FF161616FF1616
+      16FF151515FF151515FF141414350E0E0E960E0E0EFF0F0F0FFF0F0F0FFF0F0F
+      0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F0FFF0F0F
+      0FFF0F0F0FFF0E0E0EFF0E0E0E96080808E2080808FF080808FF080808FF0808
+      08FF080808FF080808FF080808FF080808FF080808FF080808FF080808FF0808
+      08FF080808FF080808FF080808E2000000120000001B0000001C0000001C0000
+      001C0000001C0000001C0000001C0000001C0000001C0000001C0000001C0000
+      001C0000001C0000001B00000012000000060000000900000009000000090000
+      0009000000090000000900000009000000090000000900000009000000090000
+      0009000000090000000900000006000000000000000000000000000000000000
+      000000000000999999FF9A9A9AFF9A9A9AFF9A9A9AFF9A9A9AFF9A9A9AFF9A9A
+      9AFF000000000000000000000000000000000000000000000000000000000000
+      000000000000999999FFFAFAFAFFFAFAFAFFFAFAFAFFD5D5D5FFFFFFFFFFC8C8
+      C8FF999999FF0000000000000000000000000000000000000000000000000000
+      000000000000999999FFF5F5F5FFF5F5F5FFF5F5F5FFD0D0D0FFFFFFFFFFFFFF
+      FFFF999999FF0000000000000000000000000000000000000000000000000000
+      000000000000999999FFF0F0F0FFF0F0F0FFF0F0F0FFCCCCCCFFCCCCCCFFCCCC
+      CCFF999999FF0000000000000000000000000000000000000000000000000000
+      0000000000008A8A8AFFD4D4D4FFD4D4D4FFDCDCDCFFEBEBEBFFEBEBEBFFEBEB
+      EBFF999999FF00000000000000000000000000000000999999FF9A9A9AFF9A9A
+      9AFF9A9A9AFF9A9A9AFF9A9A9AFFB9B9B9FFCFCFCFFFD8D8D8FFE6E6E6FFE6E6
+      E6FF999999FF00000000000000000000000000000000999999FFFAFAFAFFFAFA
+      FAFFFAFAFAFFD5D5D5FFFFFFFFFFC8C8C8FFB7B7B7FFCACACAFFE1E1E1FFE1E1
+      E1FF999999FF00000000000000000000000000000000999999FFF5F5F5FFF5F5
+      F5FFF5F5F5FFD0D0D0FFFFFFFFFFFFFFFFFF999999FFC5C5C5FFDBDBDBFFDBDB
+      DBFF999999FF00000000000000000000000000000000999999FFF0F0F0FFF0F0
+      F0FFF0F0F0FFCCCCCCFFCCCCCCFFCCCCCCFF999999FFC0C0C0FFD6D6D6FFD6D6
+      D6FF999999FF00000000000000000000000000000000999999FFEBEBEBFFEBEB
+      EBFFEBEBEBFFEBEBEBFFEBEBEBFFEBEBEBFF999999FF898989FF999999FF9999
+      99FF999999FF00000000000000000000000000000000999999FFE6E6E6FFE6E6
+      E6FFE6E6E6FFE6E6E6FFE6E6E6FFE6E6E6FF999999FF00000000000000000000
+      00000000000000000000000000000000000000000000999999FFE1E1E1FFE1E1
+      E1FFE1E1E1FFE1E1E1FFE1E1E1FFE1E1E1FF999999FF00000000000000000000
+      00000000000000000000000000000000000000000000999999FFDBDBDBFFDBDB
+      DBFFDBDBDBFFDBDBDBFFDBDBDBFFDBDBDBFF999999FF00000000000000000000
+      00000000000000000000000000000000000000000000999999FFD6D6D6FFD6D6
+      D6FFD6D6D6FFD6D6D6FFD6D6D6FFD6D6D6FF999999FF00000000000000000000
+      00000000000000000000000000000000000000000000999999FF999999FF9999
+      99FF999999FF999999FF999999FF999999FF999999FF00000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      000000000000000000000000000000000000ABABABFF595959FF595959FF5959
+      59FF999999FF0000000000000000000000000000000000000000000000000000
+      00000000000000000000000000000000000000000000595959FFCBCBCBFFCBCB
+      CBFF575757FF595959FF00000000000000000000000000000000000000000000
+      0000000000000000000000000000595959FF00000000999999FF595959FFD4D4
+      D4FFE0E0E0FF595959FF999999FF000000000000000000000000000000000000
+      0000000000000000000000000000595959FF595959FF00000000999999FF5959
+      59FFDEDEDEFFC8C8C8FF595959FF000000000000000000000000000000000000
+      0000000000000000000000000000595959FFDEDEDEFF595959FF595959FFB7B7
+      B7FFD6D6D6FFBCBCBCFF595959FF000000000000000000000000000000000000
+      0000000000000000000000000000595959FFABABABFFCDCDCDFFC7C7C7FFC3C3
+      C3FFCFCFCFFFA7A7A7FF595959FF000000000000000000000000000000000000
+      0000000000000000000000000000595959FF595959FF9C9C9CFFB9B9B9FFC4C4
+      C4FFA8A8A8FF5665AEFF7393EEFF1A47D9FF0000000000000000000000000000
+      000000000000000000000000000000000000595959FF595959FFABABABFF9999
+      99FF7A83BDFF0031FCFF001ACEFF93A3EEFF1A47D9FF00000000000000000000
+      00000000000000000000000000000000000000000000595959FF595959FF5959
+      59FF0323D2FF93A9FFFF0033FFFF001ACEFF93A3EEFF1A47D9FF000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000292946FF0323D2FF93A9FFFF0033FFFF001ACEFF93A3EEFF1A47D9FF0000
+      0000000000000000000000000000000000000000000000000000000000000000
+      000000000000292946FF0323D2FF93A9FFFF0033FFFF001ACEFF93A3EEFF1A47
+      D9FF000000000000000000000000000000000000000000000000000000000000
+      00000000000000000000292946FF0323D2FF93A9FFFF0033FFFF001ACEFF9BA7
+      EAFF1A47D9FF0000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000292946FF0323D2FF93A9FFFF0436FFFF001A
+      CEFFB7B4E4FF1A47D9FF00000000000000000000000000000000000000000000
+      000000000000000000000000000000000000292946FF0323D2FF8C89E6FF001A
+      CEFF8380CBFF1A47D9FF00000000000000000000000000000000000000000000
+      00000000000000000000000000000000000000000000292946FF7F5586FFBF9C
+      C2FFBF9CC2FF1A47D9FF00000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000292946FF7F55
+      86FF7F5586FF0000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDBD56FFFDBD
+      56FFFDBD56FFFCBD55FFFDBD56FFFCBD55FFFCBD55FFFCBD55FFFCBC55FFFBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDBD56FFFD8B1DFFFD8B
+      1DFFF57D03FFF47C03FFF57D03FFF47C03FFCF6801FFCF6801FFCF6801FFFBBC
+      54FFFDFDFD00FDFDFD0000000000FDFDFD00FDBD56FFFD9633FFFD9633FFFD8B
+      1DFFFD8B1DFFF47C03FFF57D03FFF47C03FFCF6801FFCF6801FFCF6801FFCE67
+      01FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFD9633FFFD9633FFFD8B
+      1DFFFD8B1DFFFCFCFCFFFDFDFDFFFCFCFCFFF47C03FFCF6801FFCF6801FFCE67
+      01FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA149FFFD9633FFFD96
+      33FFFD8B1DFFFCFCFCFFFDFDFDFFFCFCFCFF945312FFF47C03FFCF6801FFCE67
+      01FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA149FFFDA149FFFD96
+      33FFFD9633FFFCFCFCFFFDFDFDFFFCFCFCFF945312FFF47C03FFF47C02FFCE67
+      01FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA149FFFDA149FFFDFD
+      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFFFCFCFCFFF47C02FFF37B
+      02FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA959FFFDA149FFFDA1
+      49FFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFF945312FF935311FFF37B
+      02FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDA959FFFDA959FFFDA1
+      49FFFDA149FFFCFCFCFFFDFDFDFFFCFCFCFF945312FF945312FFFC8A1CFFF37B
+      02FFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDAF65FFFDA959FFFDA9
+      59FFFDA149FFFCA149FFFDFDFDFF945312FF945312FFFC8B1DFFFC8A1CFFFB8A
+      1CFFA8402BFFFDFDFD0000000000FDFDFD00FDBD56FFFDAF65FFFDAF65FFFDA9
+      59FFFDA959FFFCA149FFFDA149FF945312FFFC9633FFFC9633FFFC8A1CFFFB8A
+      1CFFA8402BFFFDFDFD0000000000FDFDFD00FDFDFD00A8402BFFFDAF65FFFDAF
+      65FFFDA959FFFCA958FFFDA149FFFCA149FFFC9633FFFC9633FFFC9532FFA73F
+      2AFFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00A8402BFFA840
+      2BFFA8402BFFA8402BFFA8402BFFA8402BFFA8402BFFA8402BFFA73F2AFFFBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
+      FB00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD0041D241FF41D2
+      41FF41D241FF41D141FF41D241FF41D141FF41D141FF41D141FF40D140FFFBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD0041D241FF14B014FF14B0
+      14FF0AA60AFF0AA60AFF019701FF019701FF018001FF018001FF018001FF40D0
+      40FFFDFDFD00FDFDFD0000000000FDFDFD0041D241FF1FB81FFF1FB81FFF14B0
+      14FF14B014FF0AA60AFF0AA60AFF019701FF019701FF018001FF018001FF0180
+      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF28C428FF1FB81FFF1FB8
+      1FFF14B014FF14B014FFFDFDFDFF0AA60AFF019701FF019701FF018001FF0180
+      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF28C428FF28C428FF1FB8
+      1FFF1FB81FFFFCFCFCFFFDFDFDFFFCFCFCFF018001FF019701FF019601FF0180
+      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF3AC83AFF28C428FF28C4
+      28FFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFF018001FF019601FF0196
+      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF3AC83AFF3AC83AFFFDFD
+      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFFFCFCFCFF018001FF0196
+      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF41D241FF3AC83AFF3AC8
+      3AFF1FB81FFFFCFCFCFFFDFDFDFFFCFCFCFF0B680BFF0B680BFF018001FF0196
+      01FF018001FFFDFDFD0000000000FDFDFD0041D241FF58C858FF41D241FF3AC8
+      3AFF3AC83AFFFCFCFCFFFDFDFDFFFCFCFCFF136F13FF119011FF13AF13FF09A5
+      09FF018001FFFDFDFD0000000000FDFDFD0041D241FF58C858FF58C858FF41D2
+      41FF3AC83AFFFCFCFCFFFDFDFDFFFCFCFCFF136F13FF1FB81FFF13AF13FF09A5
+      09FF018001FFFDFDFD0000000000FDFDFD0041D241FF58C858FF58C858FF58C8
+      58FF41D241FF3AC83AFF1B771BFF1B761BFF136F13FF1FB81FFF13AF13FF13AF
+      13FF018001FFFDFDFD0000000000FDFDFD00FDFDFD00018001FF58C858FF58C8
+      58FF58C858FF41D141FF3AC83AFF28C428FF28C428FF28C428FF1EB71EFF0180
+      01FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00018001FF0180
+      01FF018001FF018001FF018001FF018001FF018001FF018001FF018001FFFBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
+      FB00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD006867FBFF6867
+      FBFF6867FBFF6766FAFF6867FBFF6766FAFF6766FAFF6766FAFF6766FAFFFBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD006867FBFF2E2DFBFF2322
+      FBFF2322FBFF1615FAFF0D0CFBFF0201F5FF0201E1FF0C0BCEFF0201BCFF6665
+      F9FFFDFDFD00FDFDFD0000000000FDFDFD006867FBFF4645FBFF3938FBFF2E2D
+      FBFF2322FBFF2322FAFF1615FBFF0D0CFAFF0201F5FF0201E1FF0B0ACDFF0101
+      BCFF0201A6FFFDFDFD0000000000FDFDFD006867FBFF4645FBFF4645FBFF3938
+      FBFF2E2DFBFFFCFCFCFFFDFDFDFFFCFCFCFF0D0CFAFF0201F5FF0201E1FF0B0A
+      CCFF0201A6FFFDFDFD0000000000FDFDFD006867FBFF5251FBFF4645FBFF4645
+      FBFF3938FBFFFCFCFCFFFDFDFDFFFCFCFCFF171692FF0605FAFF0201F5FF0101
+      E0FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF5A59FBFF5251FBFF4645
+      FBFF4645FBFFFCFCFCFFFDFDFDFFFCFCFCFF171692FF0D0CFAFF0504FAFF0101
+      F4FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF6261FBFF5A59FBFFFDFD
+      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFFFCFCFCFF0C0BFAFF0504
+      F9FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF6867FBFF6261FBFF5A59
+      FBFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFF171692FF0B0ACDFF0C0B
+      F9FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF7170FBFF6867FBFF6261
+      FBFF4847CDFFFCFCFCFFFDFDFDFFFCFCFCFF171692FF171692FF0B0BCDFF1514
+      F9FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF7574FBFF7170FBFF6867
+      FBFF6261FBFF4847CDFFFDFDFDFF2E2E92FF2E2E92FF3534CDFF2D2CFAFF2221
+      F9FF0201A6FFFDFDFD0000000000FDFDFD006867FBFF7574FBFF7574FBFF7170
+      FBFF6867FBFF6160FAFF4847CDFF2E2E92FF3534CDFF3938FAFF3837FAFF2D2C
+      F9FF0201A6FFFDFDFD0000000000FDFDFD00FDFDFD000201A6FF7574FBFF7574
+      FBFF7170FBFF6665FAFF6261FBFF5958FAFF5151FAFF4645FAFF3837FAFF0101
+      A5FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD000201A6FF0201
+      A6FF0201A6FF0201A6FF0201A6FF0201A6FF0201A6FF0201A6FF0201A5FFFBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
+      FB00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD006767FDFF6767
+      FDFF6767FDFF6666FCFF6767FDFF6666FCFF6666FCFF6666FCFF6666FCFFFBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD006767FDFF2D2DFDFF2222
+      FDFF2222FDFF1515FCFF0C0CFDFF0101F7FF0101E3FF0B0BD0FF0101BEFF6565
+      FBFFFDFDFD00FDFDFD0000000000FDFDFD006767FDFF4545FDFF3838FDFF2D2D
+      FDFF2222FDFF2222FCFF1515FDFF0C0CFCFF0101F7FF0101E3FF0A0ACFFF0101
+      BEFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF4545FDFF4545FDFF3838
+      FDFF2D2DFDFF2222FCFFFDFDFDFF1515FCFF0C0CFCFF0101F7FF0101E3FF0A0A
+      CEFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF5151FDFF4545FDFF4545
+      FDFF3838FDFFFCFCFCFFFDFDFDFFFCFCFCFF0B0BD0FF0505FCFF0101F7FF0101
+      E2FF0101A7FFFDFDFD0000000000FDFDFD006767FDFF5959FDFF5151FDFF4545
+      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFF0B0BD0FF0404FCFF0101
+      F6FF0101A7FFFDFDFD0000000000FDFDFD006767FDFF6161FDFF5959FDFFFDFD
+      FDFFFDFDFDFFFCFCFCFFFDFDFDFFFCFCFCFFFCFCFCFFFCFCFCFF0A0ACFFF0404
+      FBFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF6767FDFF6161FDFF5959
+      FDFF4747CFFFFCFCFCFFFDFDFDFFFCFCFCFF161694FF161694FF0A0ACFFF0B0B
+      FBFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF7070FDFF6767FDFF6161
+      FDFF5959FDFFFCFCFCFFFDFDFDFFFCFCFCFF161694FF3434CFFF2121FCFF1414
+      FBFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF7474FDFF7070FDFF6767
+      FDFF6161FDFFFCFCFCFFFDFDFDFFFCFCFCFF2E2E94FF3838FCFF2C2CFCFF2121
+      FBFF0101A7FFFDFDFD0000000000FDFDFD006767FDFF7474FDFF7474FDFF7070
+      FDFF6767FDFF6060FCFF2E2E94FF2E2E94FF2E2E94FF3838FCFF3737FCFF2C2C
+      FBFF0101A7FFFDFDFD0000000000FDFDFD00FDFDFD000101A7FF7474FDFF7474
+      FDFF7070FDFF6565FCFF6161FDFF5858FCFF5051FCFF4545FCFF3737FCFF0101
+      A6FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD000101A7FF0101
+      A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A6FFFBFB
+      FB00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FCFCFC00FDFDFD00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FBFB
+      FB00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FCFCFB00FCFCFB00FBFCFB00FBFCFB00FBFBFB00FBFBFB00FBFBFB00FBFB
+      FB00FBFBFB00FBFBFB0000000000FDFDFD00FDFDFD00FDFDFD006767FCFF6666
+      FBFF6666FBFF6666FBFF6666FBFF6666FBFF6666FBFF6566FBFF6566FBFFFBFB
+      FB00FBFBFB00FBFBFB0000000000FDFDFD00FDFDFD006767FCFF2D2DFCFF2222
+      FBFF2121FBFF1415FBFF0B0CFBFF0101F6FF0101E2FF0A0ACEFF0101BDFF6566
+      FBFFFDFDFD00FDFDFD0000000000FCFCFC006666FCFF4545FCFF3838FCFF2D2D
+      FCFF2222FCFF2222FCFF1515FCFF0C0CFCFF0101F7FF0101E3FF0B0BD0FF0101
+      BFFF0101A7FFFCFCFC0000000000FDFDFD006767FCFF4545FCFF4545FCFFFCFC
+      FCFFFCFCFCFF2222FCFF1515FCFF1515FCFFFCFCFCFFFDFDFDFF0101E4FF0B0B
+      D0FF0101A7FFFDFDFD0000000000FCFCFC006666FCFF5050FCFF4545FCFFFCFC
+      FCFFFCFCFCFFFCFCFCFF0B0BD0FFFCFCFCFFFCFCFCFFFCFCFCFF0101A7FF0101
+      E3FF0101A7FFFCFCFC0000000000FCFCFC006666FCFF5858FCFF5051FCFF4545
+      FCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFF161694FF0101A7FF0101
+      F7FF0101A7FFFCFCFC0000000000FCFCFC006666FCFF6060FCFF5858FCFF5051
+      FCFF3434CFFFFCFCFCFFFCFCFCFFFCFCFCFF161694FF161694FF0B0BD0FF0505
+      FCFF0101A7FFFCFCFC0000000000FCFCFC006666FCFF6666FCFF6060FCFF5858
+      FCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFF0B0BD0FF1515FCFF0C0C
+      FCFF0101A7FFFCFCFC0000000000FCFCFC006666FCFF6F6FFCFF6666FCFFFCFC
+      FCFFFCFCFCFFFCFCFCFF2E2E94FFFCFCFCFFFCFCFCFFFCFCFCFF0B0BD0FF1515
+      FCFF0101A7FFFCFCFC0000000000FDFDFD006767FCFF7474FCFF7070FCFFFCFC
+      FCFFFCFCFCFF2E2E94FF2E2E94FF3434CFFFFCFCFCFFFCFCFCFF161694FF2222
+      FCFF0101A7FFFDFDFD0000000000FCFCFC006666FCFF7373FCFF7373FCFF6F6F
+      FCFF2E2E94FF2E2E94FF4747CFFF5050FCFF3434CFFF2E2E94FF161694FF2D2D
+      FCFF0101A7FFFCFCFC0000000000FCFCFC00FCFCFC000101A7FF7373FCFF7373
+      FCFF6F6FFCFF6666FCFF6060FCFF5858FCFF5050FCFF4545FCFF3838FCFF0101
+      A7FFFCFCFC00FCFCFC0000000000FCFCFC00FCFCFC00FCFCFC000101A7FF0101
+      A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FF0101A7FFFCFC
+      FC00FCFCFC00FCFCFC0000000000FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFC
+      FC00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFCFC00FCFC
+      FC00FCFCFC00FCFCFC0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00A5C64DFFA5C6
+      4DFFA5C64DFFA5C64DFFA5C64DFFA5C64DFFA5C64DFFA5C64DFFA5C64DFFFDFD
+      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00A5C64DFF7F9242FF7789
+      3BFF6F8133FF667B2AFF667B2AFF5C7024FF556B18FF556B18FF4A5C16FFA5C6
+      4DFFFDFDFD00FDFDFD0000000000FDFDFD00A5C64DFF849A4AFF7F9242FF7789
+      3BFF77893BFF6F8133FF667B2AFF667B2AFF5C7024FF556B18FF556B18FF4A5C
+      16FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF849A4AFF849A4AFF7F92
+      42FF77893BFF6F8133FF6F8133FF667B2AFF667B2AFFFDFDFDFFFDFDFDFF4A5C
+      16FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF91A757FF849A4AFF849A
+      4AFF7F9242FF77893BFF6F8133FF6F8133FFFDFDFDFFFDFDFDFFFDFDFDFF3340
+      0FFF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF91A757FFFDFDFDFFFDFD
+      FDFF849A4AFF7F9242FF77893BFFFDFDFDFFFDFDFDFFFDFDFDFF3C4918FF4A5C
+      16FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF91A757FFFDFDFDFFFDFD
+      FDFFFDFDFDFF7F9242FFFDFDFDFFFDFDFDFFFDFDFDFF3C4918FF5C7024FF5C70
+      24FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF99AF5FFF91A757FFFDFD
+      FDFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFF4D5A29FF5C7024FF6F8133FF667B
+      2AFF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF99AF5FFF99AF5FFF91A7
+      57FFFDFDFDFFFDFDFDFFFDFDFDFF4D5A29FF667B2AFF77893BFF6F8133FF6F81
+      33FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF9FB36DFF99AF5FFF99AF
+      5FFF91A757FFFDFDFDFF4D5A29FF6F8133FF7F9242FF7F9242FF77893BFF6F81
+      33FF3C4918FFFDFDFD0000000000FDFDFD00A5C64DFF9FB36DFF9FB36DFF99AF
+      5FFF99AF5FFF91A757FF77893BFF849A4AFF849A4AFF7F9242FF7F9242FF7789
+      3BFF3C4918FFFDFDFD0000000000FDFDFD00FDFDFD003C4918FF9FB36DFF9FB3
+      6DFF99AF5FFF99AF5FFF91A757FF91A757FF849A4AFF849A4AFF7F9242FF3C49
+      18FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD003C4918FF3C49
+      18FF3C4918FF3C4918FF3C4918FF3C4918FF3C4918FF3C4918FF3C4918FFFDFD
+      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD007B7B7BFF7B7B
+      7BFF7B7B7BFF7B7B7BFF7B7B7BFF7B7B7BFF7B7B7BFF7B7B7BFF7B7B7BFFFDFD
+      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD007B7B7BFF735D73FF735D
+      73FF6B556BFF644E64FF5C465CFF5C465CFF533D53FF4B374BFF4B374BFF7B7B
+      7BFFFDFDFD00FDFDFD0000000000FDFDFD007B7B7BFF806D80FF7B657BFF735D
+      73FF735D73FF6B556BFF644E64FF5C465CFF5C465CFF533D53FF4B374BFF4B37
+      4BFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF806D80FF806D80FF7B65
+      7BFF735D73FF6B556BFF6B556BFF644E64FF5C465CFF5C465CFF533D53FF4B37
+      4BFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF867386FF806D80FF7B65
+      7BFF7B657BFFFDFDFDFFFDFDFDFFFDFDFDFF644E64FF5C465CFF5C465CFF533D
+      53FF010101FFFDFDFD0000000000FDFDFD007B7B7BFF8A778AFF867386FF806D
+      80FFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFF644E64FF5C465CFF5C46
+      5CFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF917E91FF8A778AFF8673
+      86FFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFF413441FF644E64FF5C46
+      5CFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF917E91FF917E91FF8A77
+      8AFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFFFDFDFDFF413441FF6B556BFF644E
+      64FF010101FFFDFDFD0000000000FDFDFD007B7B7BFF998399FF917E91FF917E
+      91FF8A778AFFFDFDFDFFFDFDFDFFFDFDFDFF4B374BFF413441FF6B556BFF6B55
+      6BFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF998399FF998399FF917E
+      91FF917E91FF8A778AFF533D53FF4C484CFF4B374BFF7B657BFF735D73FF6B55
+      6BFF010101FFFDFDFD0000000000FDFDFD007B7B7BFF9E889EFF998399FF9983
+      99FF917E91FF917E91FF8A778AFF867386FF806D80FF7B657BFF7B657BFF735D
+      73FF010101FFFDFDFD0000000000FDFDFD00FDFDFD00010101FF9E889EFF9983
+      99FF998399FF917E91FF917E91FF8A778AFF867386FF806D80FF7B657BFF0101
+      01FFFDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00010101FF0101
+      01FF010101FF010101FF010101FF010101FF010101FF010101FF010101FFFDFD
+      FD00FDFDFD00FDFDFD0000000000FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFDFD00FDFD
+      FD00FDFDFD00FDFDFD0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00BDBDBDFFBDBD
+      BDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFFFFF
+      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00BDBDBDFF858585FF8080
+      80FF7B7B7BFF757575FF707070FF6B6B6BFF646464FF5F5F5FFF575757FFBDBD
+      BDFFFFFFFF00FFFFFF0000000000FFFFFF00BDBDBDFF939393FF8C8C8CFF8585
+      85FF808080FF7B7B7BFF757575FF707070FF6B6B6BFF646464FF5F5F5FFF5757
+      57FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFF939393FF939393FF8C8C
+      8CFF858585FFFFFFFFFFFFFFFFFFFFFFFFFF707070FF6B6B6BFF646464FF5F5F
+      5FFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFF9D9D9DFF939393FF9393
+      93FF8C8C8CFFFFFFFFFFFFFFFFFFFFFFFFFF4C484CFF707070FF6B6B6BFF6464
+      64FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA2A2A2FF9D9D9DFF9393
+      93FF939393FFFFFFFFFFFFFFFFFFFFFFFFFF4C484CFF757575FF707070FF6B6B
+      6BFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA2A2A2FF9D9D9DFFFFFF
+      FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF757575FF7070
+      70FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA7A7A7FFA2A2A2FF9D9D
+      9DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4C484CFF4C484CFF7575
+      75FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFACACACFFA7A7A7FFA2A2
+      A2FF9D9D9DFFFFFFFFFFFFFFFFFFFFFFFFFF575757FF4C484CFF808080FF7A7A
+      7AFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFACACACFFACACACFFA7A7
+      A7FFA2A2A2FF9D9D9DFFFFFFFFFF575757FF575757FF8C8C8CFF858585FF8080
+      80FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFB3B3B3FFACACACFFACAC
+      ACFFA7A7A7FFA2A2A2FF9D9D9DFF5F5F5FFF939393FF8C8C8CFF8C8C8CFF8585
+      85FF566056FFFFFFFF0000000000FFFFFF00FFFFFF00566056FFB3B3B3FFACAC
+      ACFFACACACFFA7A7A7FFA2A2A2FF9D9D9DFF9D9D9DFF939393FF8C8C8CFF5660
+      56FFFFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00566056FF5660
+      56FF566056FF566056FF566056FF566056FF566056FF566056FF566056FFFFFF
+      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00BDBDBDFFBDBD
+      BDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFBDBDBDFFFFFF
+      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00BDBDBDFF858585FF8080
+      80FF7B7B7BFF757575FF707070FF6B6B6BFF646464FF5F5F5FFF575757FFBDBD
+      BDFFFFFFFF00FFFFFF0000000000FFFFFF00BDBDBDFF939393FF8C8C8CFF8585
+      85FF808080FF7B7B7BFF757575FF707070FF6B6B6BFF646464FF5F5F5FFF5757
+      57FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFF939393FF939393FF8C8C
+      8CFF858585FF808080FFFFFFFFFF757575FF707070FF6B6B6BFF646464FF5F5F
+      5FFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFF9D9D9DFF939393FF9393
+      93FF8C8C8CFFFFFFFFFFFFFFFFFFFFFFFFFF5F5F5FFF707070FF6B6B6BFF6464
+      64FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA2A2A2FF9D9D9DFF9393
+      93FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F5F5FFF707070FF6B6B
+      6BFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA2A2A2FF9D9D9DFFFFFF
+      FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F5F5FFF7070
+      70FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFA7A7A7FFA2A2A2FF9D9D
+      9DFF808080FFFFFFFFFFFFFFFFFFFFFFFFFF4C484CFF4C484CFF646464FF7575
+      75FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFACACACFFA7A7A7FFA2A2
+      A2FF9D9D9DFFFFFFFFFFFFFFFFFFFFFFFFFF575757FF6B6B6BFF808080FF7A7A
+      7AFF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFACACACFFACACACFFA7A7
+      A7FFA2A2A2FFFFFFFFFFFFFFFFFFFFFFFFFF575757FF8C8C8CFF858585FF8080
+      80FF566056FFFFFFFF0000000000FFFFFF00BDBDBDFFB3B3B3FFACACACFFACAC
+      ACFFA7A7A7FFA2A2A2FF5F5F5FFF5F5F5FFF575757FF8C8C8CFF8C8C8CFF8585
+      85FF566056FFFFFFFF0000000000FFFFFF00FFFFFF00566056FFB3B3B3FFACAC
+      ACFFACACACFFA7A7A7FFA2A2A2FF9D9D9DFF9D9D9DFF939393FF8C8C8CFF5660
+      56FFFFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00566056FF5660
+      56FF566056FF566056FF566056FF566056FF566056FF566056FF566056FFFFFF
+      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF0000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000148E28FF006E00FFFF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00006E00FF046E08FF047607FF006500FFFF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00108019FF36CF54FF088C0DFF0065
+      00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF001D932EFF33C34EFF0476
+      07FF006500FF006500FF006E00FF006500FFFF00FF00FF00FF00FF00FF0011EE
+      EDFF00CCFFFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00128921FF0D88
+      19FF088C0DFF018401FF037A05FF006E00FF006E00FFFF00FF0011EEEDFF00CC
+      FFFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF27B8
+      4CFF18A32EFF07800CFF037A05FF059F07FF037A05FF026C5BFFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF2EC6
+      5CFF1A9E35FF0C8513FF059F07FF018401FF006053FF1277E6FF076DD4FFFF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF2EC6
+      5CFF249D38FF44DD65FF129611FF006053FF197EEAFF379CFFFF0A70D8FF076D
+      D4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0006720AFF1289
+      21FF4BE47EFF36BA51FF00635FFF2186EEFF379CFFFF1177DEFF1C82E9FF076D
+      D4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF001184
+      13FF1B9A2DFF006375FF288EEEFF58BDFFFF187EE0FF2186EEFF379CFFFF0268
+      D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00005F78FF1277E6FF3FA5FAFF2288E0FF3BA0EEFF45ABFFFF379CFFFF0268
+      D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF000B6DD7FF0B6DD7FF278CECFF58BDFFFF58BDFFFF278CECFF076D
+      D4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0011EEEDFF00CC
+      FFFFFF00FF00FF00FF00076DD4FF076DD4FF076DD4FF076DD4FF278CECFF3FA5
+      FAFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF0011EEEDFF00CCFFFFFF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00076DD4FF2F95
+      EDFF4AAFFFFF076DD4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00076D
+      D4FF197FDEFF076DD4FF076DD4FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF000A70D8FFFF00FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00E5E5E5FFE5E5
+      E5FFE5E5E5FFE5E5E5FFE5E5E5FFE5E5E5FFE5E5E5FFE5E5E5FFE5E5E5FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00E5E5E5FFCCCCCCFFC5C5
+      C5FFC5C5C5FFC1C1C1FFBDBDBDFFBABABAFFBABABAFFB6B6B6FFB3B3B3FFE5E5
+      E5FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00E5E5E5FFCCCCCCFFCCCCCCFFCCCC
+      CCFFC5C5C5FFC5C5C5FFC1C1C1FFBDBDBDFFBABABAFFBABABAFFB6B6B6FFB3B3
+      B3FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFD4D4D4FFCCCCCCFFCCCC
+      CCFFCCCCCCFFC5C5C5FF000000FFC1C1C1FFBDBDBDFFBABABAFFBABABAFFB6B6
+      B6FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFD4D4D4FFD4D4D4FFCCCC
+      CCFF000000FFCCCCCCFF000000FF636363FF000000FFBDBDBDFFBABABAFFB6B6
+      B6FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFD4D4D4FFD4D4D4FFD4D4
+      D4FF000000FF000000FF000000FF000000FF000000FF5E5E5EFFBDBDBDFFBABA
+      BAFFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFD4D4D4FFD4D4
+      D4FFD4D4D4FF000000FF000000FF000000FF636363FF636363FFC1C1C1FFBDBD
+      BDFFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFD4D4D4FFD4D4
+      D4FF000000FF000000FF000000FF000000FF000000FFC5C5C5FFC5C5C5FFC1C1
+      C1FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFDBDBDBFFD4D4
+      D4FF000000FF6A6A6AFF000000FF636363FF000000FF636363FFC5C5C5FFC1C1
+      C1FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFDBDBDBFFDBDB
+      DBFFD4D4D4FF6A6A6AFF000000FF6A6A6AFFCCCCCCFF636363FFC5C5C5FFC5C5
+      C5FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFDBDBDBFFDBDB
+      DBFFDBDBDBFFD4D4D4FFD4D4D4FF6A6A6AFFCCCCCCFFCCCCCCFFCCCCCCFFC5C5
+      C5FFB3B3B3FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00E5E5E5FFDBDBDBFFDBDB
+      DBFFDBDBDBFFDBDBDBFFD4D4D4FFD4D4D4FFD4D4D4FFCCCCCCFFCCCCCCFFB3B3
+      B3FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00B3B3B3FFB3B3
+      B3FFB3B3B3FFB3B3B3FFB3B3B3FFB3B3B3FFB3B3B3FFB3B3B3FFB3B3B3FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF0000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF00005790D4FF5790
+      D4FF5790D4FF5790D4FF5790D4FF5790D4FF5790D4FF5790D4FF5790D4FF00FF
+      000000FF000000FF000000FF000000FF000000FF00005790D4FF0E70E1FF0060
+      CCFF0060CCFF0060CCFF0056B7FF0056B7FF004BA0FF004BA0FF004BA0FF5790
+      D4FF00FF000000FF000000FF000000FF00005790D4FF0E70E1FF0E70E1FF0E70
+      E1FFFFFFFFFF0060CCFF0060CCFF0056B7FF0056B7FF004BA0FF004BA0FF004B
+      A0FF0035AAFF00FF000000FF000000FF00005790D4FF2C83E7FF0E70E1FFFFFF
+      FFFFFFFFFFFFFFFFFFFF0060CCFF0060CCFFFFFFFFFF0056B7FF004BA0FF004B
+      A0FF0035AAFF00FF000000FF000000FF00005790D4FF2C83E7FFFFFFFFFFFFFF
+      FFFFFFFFFFFFFFFFFFFFFFFFFFFF0060CCFFFFFFFFFF09386DFF0056B7FF004B
+      A0FF0035AAFF00FF000000FF000000FF00005790D4FF2C83E7FF2C83E7FF2C83
+      E7FFFFFFFFFF09386DFF09386DFF09386DFFFFFFFFFF09386DFF0056B7FF0056
+      B7FF0035AAFF00FF000000FF000000FF00005790D4FF4591E7FF2C83E7FF2C83
+      E7FFFFFFFFFF09386DFF27588FFF0E70E1FFFFFFFFFF09386DFF0060CCFF0056
+      B7FF0035AAFF00FF000000FF000000FF00005790D4FF4591E7FF4591E7FF2C83
+      E7FFFFFFFFFF09386DFF0E70E1FF0E70E1FFFFFFFFFF09386DFF0060CCFF0060
+      CCFF0035AAFF00FF000000FF000000FF00005790D4FF599CE7FF4591E7FF4591
+      E7FFFFFFFFFF09386DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0060
+      CCFF0035AAFF00FF000000FF000000FF00005790D4FF599CE7FF599CE7FF4591
+      E7FFFFFFFFFF09386DFF2C83E7FFFFFFFFFFFFFFFFFFFFFFFFFF09386DFF2758
+      8FFF0035AAFF00FF000000FF000000FF00005790D4FF599CE7FF599CE7FF599C
+      E7FF4591E7FF09386DFF2C83E7FF2C83E7FFFFFFFFFF09386DFF27588FFF0E70
+      E1FF0035AAFF00FF000000FF000000FF000000FF00000035AAFF599CE7FF599C
+      E7FF599CE7FF4591E7FF4591E7FF2C83E7FF2C83E7FF27588FFF0E70E1FF0035
+      AAFF00FF000000FF000000FF000000FF000000FF000000FF00000035AAFF0035
+      AAFF0035AAFF0035AAFF0035AAFF0035AAFF0035AAFF0035AAFF0035AAFF00FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF00000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF0067B86DFF59AE60FF5BAA
+      62FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF005BAF62FFB9F0C3FF509E
+      58FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF005CB463FF59AE60FF55A65CFFAAE7B7FF4C96
+      53FF6AA270FF619867FF0000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF0059AE60FFA4E3B2FF9FE0ADFF9ADCA8FF94D9
+      A3FF8ED59FFF528A58FF0000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF006BB271FF76B37BFF4D9554FF8AD29AFF4385
+      4BFF66986CFF6C9871FF0000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF00488E50FF7BC88DFF3F7D
+      47FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF0043854BFF407D47FF467A
+      4AFFDDD0C6FFC7B4A8FF0000FF000000FF000000FF00D2C0B4FFC0A795FFBAA1
+      8DFFC7B4A8FF0000FF000000FF000000FF000000FF00E6DBD2FFEDE1D7FFFFFF
+      FDFFFFF7F1FFD8C4B7FFAB9180FFCBBAAEFFCFBAAAFFEDE1D7FFFFFFFDFFFFF7
+      F1FFD8C4B7FFAB9180FF0000FF000000FF00CDBAACFFF2E6DEFFB4A193FF6B4E
+      39FF816450FFCAB19EFFD3B5A2FFCDB19CFFDAC0AFFFCDB39FFF6F543EFF8164
+      50FFBFAB9CFFCBB1A1FF9D8674FF0000FF00BBA08DFFFFFFFFFF60412AFF0000
+      FF00DBC2B1FFFFFFFFFFFFFEF7FFFFF1E6FFFAE3D4FFF3D7C7FF9D897AFF0000
+      FF00C0A592FFEFD6C7FF6B4B32FF0000FF00C9B5A6FFE6D6CBFFB4A091FFA086
+      72FFC1A895FF4F2C12FF472409FF472409FF472409FF735642FFA08672FFC1A8
+      95FFD2BCAEFFB99C88FF8A7361FF0000FF000000FF00B79F8EFFCFB8A9FFEBD6
+      C8FFE5CBBBFFB3957FFF80624CFFBAA99BFFB79F8EFFCFB8A9FFEBD6C8FFE5CB
+      BBFFB3957FFF80624CFF0000FF000000FF000000FF000000FF00AE9B8BFF8165
+      4EFF745840FF968170FF0000FF000000FF000000FF00AE9B8BFF81654EFF7458
+      40FF968170FF0000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00078DBEFF078DBEFF078D
+      BEFF078DBEFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00078DBEFFFEFEFEFFA5FEFFFFA5FE
+      FFFFA5FEFFFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFFFF00
+      FF00FF00FF00FF00FF00FF00FF00078DBEFFFEFEFEFFA0FBFFFFA0FBFEFFA0FB
+      FEFFA1FAFEFFA1FBFEFFA0FAFEFFA1FBFEFFA1FBFFFFA0FBFFFFA1FBFFFF0989
+      BAFFFF00FF00FF00FF00FF00FF00078DBEFF9BF5FEFF9AF6FEFF9AF6FEFF9BF5
+      FDFF9BF6FEFF9AF6FEFF9BF5FEFF9AF6FDFF9BF5FEFF9AF6FEFF9AF6FEFF0989
+      BAFFFF00FF00FF00FF00FF00FF00078DBEFF93F0FEFF93F0FDFF1697C5FF078D
+      BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
+      BEFF078DBEFF078DBEFF078DBEFF078DBEFF8AEAFCFF77DCF3FF219CC7FFFEFF
+      FFFFC8F7FDFFC9F7FDFFC9F7FDFFC9F7FEFFC8F7FEFFC9F7FDFFC8F7FEFF9BD5
+      E6FFEAFEFEFFD2F3F8FF078DBEFF078DBEFF82E3FCFF43B7DCFF65C2E0FFABF0
+      FCFF8DEBFCFF8DEBFCFF8DEBFDFF8DEBFDFF8DEBFCFF8DEBFDFF8DEBFCFF4CBB
+      DAFFC9F0F3FFC9F0F3FF078DBEFF078DBEFF79DDFBFF1899C7FF9ADFF3FF92E7
+      FCFF84E4FBFF83E4FCFF83E4FCFF84E4FCFF83E4FCFF83E4FBFF84E5FCFF48B9
+      DAFFC9F0F3FF1496C4FFFF00FF00078DBEFF72D6FAFF078DBEFFAEE9FCFF79DC
+      FBFF79DCFBFF79DCFBFF79DCFBFF79DCFBFF7ADCFBFF79DCFAFF79DCFAFF44B5
+      D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF4CBCE7FF39A8D1FFA0E2FBFF6FD4
+      FAFF6FD4F9FF6ED4FAFF6FD4F9FF6FD4FAFF6FD4FAFF6FD4FAFF6ED4F9FF3EB1
+      D9FFC9F0F3FF078DBEFFFF00FF00078DBEFF25A1D1FF71C6E8FF84D7FAFF66CD
+      F9FF65CDF9FF65CDF9FF65CDF9FF65CDF8FF65CDF9FF65CDF8FF66CEF9FF3AAD
+      D8FF1999C9FFFF00FF00FF00FF00FF00FF00078DBEFF078DBEFF078DBEFF078D
+      BEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078DBEFF078D
+      BEFFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF00B8B8B8FFACACACFFACACACFFB8B8B8FF0000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF00A8A8A8FFB4B4B4FFC2C2C2FFC2C2C2FFB4B4B4FFA8A8A8FF0000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF00A8A8
+      A8FFB6B6B6FFBFBFBFFFC2C2C2FFC2C2C2FFBEBEBEFFB6B6B6FFA8A8A8FF0000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF00B8B8B8FFAAAA
+      AAFFB6B6B6FFB9B9B9FFBCBCBCFFBCBCBCFFB9B9B9FFB5B5B5FFA9A9A9FFB8B8
+      B8FF0000FF000000FF000000FF000000FF000000FF000000FF00ACACACFFA8A8
+      A8FFADADADFFB2B2B2FFB4B4B4FFB4B4B4FFB2B2B2FFADADADFFA8A8A8FFACAC
+      ACFF0000FF000000FF000000FF000000FF000000FF000000FF00ACACACFFADAD
+      ADFFAFAFAFFFB2B2B2FFB4B4B4FFB4B4B4FFB4B4B4FFAFAFAFFFADADADFFACAC
+      ACFF0000FF000000FF000000FF000000FF000000FF000000FF00B4B4B4FFAEAE
+      AEFFB4B4B4FFB7B7B7FFB9B9B9FFB9B9B9FFB7B7B7FFB4B4B4FFAFAFAFFFB4B4
+      B4FF0000FF000000FF000000FF000000FF000000FF000000FF000000FF00A7A7
+      A7FFB7B7B7FFBCBCBCFFBEBEBEFFBEBEBEFFBCBCBCFFB8B8B8FFA7A7A7FF0000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF00A7A7A7FFBCBCBCFFC5C5C5FFC5C5C5FFBCBCBCFFA7A7A7FF0000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF00ADADADFFA3A3A3FFA3A3A3FFADADADFF0000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF0000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000051C8FEFF18B0FDFF18B0FDFF51C8FEFF00FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000B2FFFF48BFF7FF90D4F7FF90D4F7FF48BFF7FF00B2FFFF00FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000B2
+      FFFF4EC1F8FF78D2FCFF88D7FDFF88D7FDFF74D0FBFF4EC1F8FF00B2FFFF00FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000051C8FEFF0FB1
+      F9FF47C6FEFF5ACEFFFF6AD3FEFF6AD3FEFF5ACEFFFF42C5FEFF0AB0FAFF51C8
+      FEFF00FF000000FF000000FF000000FF000000FF000000FF000019B2F9FF00B2
+      FFFF17BEFFFF32CBFFFF3ED2FFFF3ED2FFFF32CBFFFF17BEFFFF00B2FFFF19B2
+      F9FF00FF000000FF000000FF000000FF000000FF000000FF000019B2F9FF17BE
+      FFFF26C5FFFF32CBFFFF3CD1FFFF3CD1FFFF3CD1FFFF26C5FFFF17BEFFFF19B2
+      F9FF00FF000000FF000000FF000000FF000000FF000000FF00004ABAF2FF21C1
+      FDFF3BD0FFFF4DD9FFFF59DFFFFF59DFFFFF4FDBFFFF3ED2FFFF26C5FFFF4ABA
+      F2FF00FF000000FF000000FF000000FF000000FF000000FF000000FF00000FA5
+      EAFF4FDBFFFF65E5FFFF73ECFFFF73ECFFFF65E5FFFF53DDFFFF0FA5EAFF00FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000017A2E4FF65E5FFFF98FFFFFF98FFFFFF65E5FFFF19A3E4FF00FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF00003F97D7FF168BCFFF168BCFFF3F97D7FF00FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF00000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF0000D159FF00AC4EFF00AC4EFF00D159FF0000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF00009F42FF07BF57FF10E570FF10E570FF07BF57FF009F42FF0000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF00009F
+      42FF07C45BFF05E466FF04F06BFF04F06BFF06DF64FF07C45BFF009F42FF0000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF0000D159FF03A1
+      47FF00CA55FF00D858FF01DF5CFF01DF5CFF00D858FF00C854FF02A045FF00D1
+      59FF0000FF000000FF000000FF000000FF000000FF000000FF0004A74AFF009F
+      42FF00AF44FF00BF46FF00C744FF00C744FF00BF46FF00AF44FF009F42FF04A7
+      4AFF0000FF000000FF000000FF000000FF000000FF000000FF0004A74AFF00AF
+      44FF00B845FF00BF46FF00C644FF00C644FF00C644FF00B845FF00AF44FF04A7
+      4AFF0000FF000000FF000000FF000000FF000000FF000000FF000CB85AFF00B1
+      46FF00C546FF00D043FF00D842FF00D842FF00D142FF00C744FF00B845FF0CB8
+      5AFF0000FF000000FF000000FF000000FF000000FF000000FF000000FF000893
+      44FF00D142FF00E03FFF00E83AFF00E83AFF00E03FFF00D442FF089344FF0000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000D8E46FF00E03FFF01FF1FFF01FF1FFF00E03FFF0F8E47FF0000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF001D915CFF0D8145FF0D8145FF1D915CFF0000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF0000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF00005273FEFF193FFDFF193FFDFF5273FEFF00FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      00000033FFFF4969F7FF91A2F7FF91A2F7FF4969F7FF0033FFFF00FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF00000033
+      FFFF4F6DF8FF7991FCFF899EFDFF899EFDFF758EFBFF4F6DF8FF0033FFFF00FF
+      000000FF000000FF000000FF000000FF000000FF000000FF00005273FEFF103D
+      F9FF486CFEFF5B7DFFFF6B8AFEFF6B8AFEFF5B7DFFFF4368FEFF0B39FAFF5273
+      FEFF00FF000000FF000000FF000000FF000000FF000000FF00001A43F9FF0033
+      FFFF184BFFFF3366FFFF3F73FFFF3F73FFFF3366FFFF184BFFFF0033FFFF1A43
+      F9FF00FF000000FF000000FF000000FF000000FF000000FF00001A43F9FF184B
+      FFFF275AFFFF3366FFFF3D71FFFF3D71FFFF3D71FFFF275AFFFF184BFFFF1A43
+      F9FF00FF000000FF000000FF000000FF000000FF000000FF00004B67F2FF2254
+      FDFF3C6FFFFF4E81FFFF5A8DFFFF5A8DFFFF5084FFFF3F73FFFF275AFFFF4B67
+      F2FF00FF000000FF000000FF000000FF000000FF000000FF000000FF00000F38
+      EBFF5084FFFF6699FFFF74A7FFFF74A7FFFF6699FFFF5488FFFF0F38EBFF00FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      0000173CE5FF6699FFFF99CCFFFF99CCFFFF6699FFFF193EE5FF00FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF0000404CD8FF162FD0FF162FD0FF404CD8FF00FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF
+      000000FF000000FF000000FF0000046E08FF047607FF006500FFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00108019FF36CF54FF088C0DFF006500FFFF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF001D932EFF33C34EFF047607FF0065
+      00FF006500FF006D00FF006500FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00128921FF0D8819FF088C
+      0DFF038403FF037A05FF006D00FF006D00FFFF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF27B84CFF18A3
+      2EFF07800CFF037A05FF009700FF006D00FFFF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF2EC65CFF1A9E
+      35FF0C8513FF059F07FF006D00FF898A8CFF535558FFFF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0009780EFF2EC65CFF249D
+      38FF44DD65FF006D00FF535558FFFF00FF00898A8CFF535558FFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0006720AFF128921FF4BE4
+      7EFF006D00FFFF00FF00898A8CFF535558FFFF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00118413FF006D
+      00FF898A8CFF535558FFFF00FF00898A8CFF898A8CFFFF00FF00FF00FF000268
+      D0FF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00898A8CFF535558FFFF00FF00FF00FF00FF00FF000268D0FF379C
+      FFFF0D73DBFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF000268D0FF379CFFFF1177
+      DEFF1C82E9FF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF000268D0FF58BDFFFF187EE0FF2186
+      EEFF379CFFFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF000268D0FF3FA5FAFF2288E0FF3BA0EEFF45AB
+      FFFF379CFFFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF000268D0FF1177DEFF2A90EEFF5DC3FFFF58BD
+      FFFF278CECFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF000066CEFF0268D0FF0268D0FF0268
+      D0FF2A90EEFF3FA5FAFF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF000268D0FF0268D0FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FF993300FF993300FF9933
+      00FF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00993300FFE3AE79FFE0A56BFFDD9C5CFFDA94
+      4FFF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00993300FFEDCAA8FFEAC199FFE7B98BFFDFA875FF9933
+      00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00993300FFF6E6D6FFF3DEC8FFF0D5BAFFE3B995FF993300FFFF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00993300FFE1C0ABFFF7E9DAFFF4E0CCFFE1BA9CFF9933
+      00FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00993300FFF4E9E2FFFDF9F5FFFBF4ECFF993300FF9933
+      00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00993300FFE1C6B0FFECDCCDFFEDDDD1FF993300FFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00993300FFCDA27CFFD8B596FF993300FF993300FFFF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF009933
+      00FFBA7D48FF993300FF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FFAA5F
+      1FFF993300FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FF993300FF9933
+      00FFFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00993300FF993300FFFF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00993300FFFF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
+      FF00FF00FF00FF00FF00FF00FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF0056C9D6FF56C9
+      D6FF56C9D6FF56C9D6FF56C9D6FF56C9D6FF56C9D6FF56C9D6FF56C9D6FF0000
+      FF000000FF000000FF000000FF000000FF000000FF0056C9D6FF00B4C8FF02A6
+      B7FF02A6B7FF0098A9FF0098A9FF0098A9FF008998FF008998FF017885FF56C9
+      D6FF0000FF000000FF000000FF000000FF0056C9D6FF00B4C8FF00B4C8FF00B4
+      C8FF02A6B7FF02A6B7FF0098A9FF0098A9FF008998FF008998FF008998FF0178
+      85FF007FAAFF0000FF000000FF000000FF0056C9D6FF04C3D8FF00B4C8FF00B4
+      C8FF00B4C8FF02A6B7FF02A6B7FF0098A9FF0098A9FF008998FF008998FF0089
+      98FF007FAAFF0000FF000000FF000000FF0056C9D6FF04C3D8FF04C3D8FF00B4
+      C8FFFFFFFFFFFFFFFFFF008998FFFFFFFFFFFFFFFFFF017885FF008998FF0089
+      98FF007FAAFF0000FF000000FF000000FF0056C9D6FF04C3D8FF04C3D8FF04C3
+      D8FFFFFFFFFFFFFFFFFF006671FFFFFFFFFFFFFFFFFF006671FF017885FF0089
+      98FF007FAAFF0000FF000000FF000000FF0056C9D6FF12CFE4FF04C3D8FF04C3
+      D8FFFFFFFFFFFFFFFFFF006671FFFFFFFFFFFFFFFFFF006671FF017885FF0098
+      A9FF007FAAFF0000FF000000FF000000FF0056C9D6FF12CFE4FF12CFE4FF04C3
+      D8FFFFFFFFFFFFFFFFFF006671FFFFFFFFFFFFFFFFFF006671FF008998FF0098
+      A9FF007FAAFF0000FF000000FF000000FF0056C9D6FF2ED5E7FF12CFE4FF12CF
+      E4FFFFFFFFFFFFFFFFFF017885FFFFFFFFFFFFFFFFFF006671FF008998FF02A6
+      B7FF007FAAFF0000FF000000FF000000FF0056C9D6FF2ED5E7FF2ED5E7FF12CF
+      E4FF02A6B7FF017885FF017885FF0098A9FF006671FF006671FF008998FF02A6
+      B7FF007FAAFF0000FF000000FF000000FF0056C9D6FF56C9D6FF2ED5E7FF12CF
+      E4FF12CFE4FF02A6B7FF02A6B7FF04C3D8FF0098A9FF0098A9FF00B4C8FF02A6
+      B7FF007FAAFF0000FF000000FF000000FF000000FF00007FAAFF56C9D6FF2ED5
+      E7FF12CFE4FF12CFE4FF12CFE4FF04C3D8FF04C3D8FF04C3D8FF00B4C8FF007F
+      AAFF0000FF000000FF000000FF000000FF000000FF000000FF00007FAAFF007F
+      AAFF007FAAFF007FAAFF007FAAFF007FAAFF007FAAFF007FAAFF007FAAFF0000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000
+      FF000000FF000000FF000000FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
+      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF9292
+      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
+      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF929292FF9292
+      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
+      00FF424242FFC2C2C2FF626262FF828282FFC2C2C2FF929292FF828282FF8282
+      82FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
+      42FFC2C2C2FF626262FF424242FF424242FF626262FFFFFFFF00929292FF9292
+      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00828282FF424242FF424242FF626262FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FF626262FF828282FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF000000FF424242FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF000000FF424242FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF6262
+      62FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
+      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF4242
+      42FF828282FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
+      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00828282FF424242FF4242
+      42FF828282FFC2C2C2FF929292FF929292FFC2C2C2FFC2C2C2FFC2C2C2FFC2C2
+      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF8282
+      82FFC2C2C2FF929292FF929292FF929292FFC2C2C2FFFFFFFF00C2C2C2FFC2C2
+      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00929292FF828282FF828282FF929292FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FFC2C2C2FF929292FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
+      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
+      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
+      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
+      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF626262FFC2C2C2FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF424242FF828282FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00828282FF424242FF424242FF626262FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF828282FFC2C2C2FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF9292
+      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF929292FF9292
+      92FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF828282FF8282
+      82FF929292FFFFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FF9292
+      92FFC2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00424242FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF828282FF6262
+      62FFC2C2C2FF424242FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF4242
+      42FF828282FF929292FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00828282FF424242FF4242
+      42FF626262FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF8282
+      82FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF929292FFC2C2C2FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00929292FF929292FF929292FF929292FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00929292FF828282FF828282FF929292FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FF929292FFC2C2C2FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
+      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
+      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
+      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
+      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FF828282FF626262FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00626262FF424242FF424242FF828282FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF9292
+      92FFC2C2C2FF828282FF424242FF424242FF626262FFC2C2C2FF424242FF4242
+      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF929292FF9292
+      92FF929292FFC2C2C2FF626262FF828282FFC2C2C2FF424242FF000000FF0000
+      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF828282FF8282
+      82FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
+      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FF9292
+      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
+      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FF929292FF929292FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00929292FF929292FF929292FF929292FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
+      C2FFFFFFFF00929292FF828282FF828282FF929292FFC2C2C2FF828282FF6262
+      62FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
+      C2FFC2C2C2FFC2C2C2FFC2C2C2FF929292FFC2C2C2FF828282FF424242FF4242
+      42FF828282FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
+      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF4242
+      42FF626262FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
+      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF828282FF6262
+      62FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF004242
+      42FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF004242
+      42FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FFC2C2C2FF929292FF9292
+      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFFFFFFF00C2C2C2FF828282FF9292
+      92FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00929292FF828282FF9292
+      92FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF929292FF9292
+      92FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FF828282FF626262FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF008282
+      82FF424242FF424242FF828282FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF006262
+      62FF424242FF424242FF626262FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FF828282FF626262FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
+      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
+      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00424242FF000000FF0000
+      00FF424242FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF424242FF4242
+      42FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
+      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
+      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2C2FFC2C2
+      C2FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FFC2C2
+      C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FF929292FF929292FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FF828282FF929292FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF009292
+      92FF828282FF828282FF929292FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2
+      C2FFC2C2C2FF929292FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C2C2FF626262FF8282
+      82FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00626262FF424242FF4242
+      42FF626262FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FF828282FF424242FF4242
+      42FF828282FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00424242FF000000FF000000FF424242FFC2C2C2FF626262FF8282
+      82FFC2C2C2FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00424242FF000000FF000000FF424242FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00C2C2C2FF424242FF424242FFC2C2C2FFFFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      000000000000000000000000000000000000000000002287E8C82187E8C60000
+      0000000000000000000000000000000000000000000000000000000000000000
+      000000000000000000000000000000000000000000000C70D0ED0C6FD0EF0000
+      0000000000000000000000816553008B6CC0009372F7009473FF008C6CDE0083
+      66A8007A5F43000000000000000000000000000000000A6DD0311E83E3BD0000
+      00000000000000775C85007E62FF018E6FFF07CEA2FF06DEAFFF06D6A8FF08C1
+      98FF028A6CFF00765C8D00000000278AE9E72588E8D7000000001379D9D72288
+      EE1E006B5232007158FD017E62FF08CDA1FF01D2A4FF007B5FFF037259FF047E
+      63FF038669FF017D62FF006A51520C70CFEB1173D2FC69B1F7791176D6A22287
+      E88600614C9D006952FF048F70FF02C79BFF008365FF0CA281FF20AF90FF20AA
+      8DFF0E9174FF00785DFF006651C1000000002288EE1E409AF0EA57A6F3BE3893
+      ECE3025C4BE400614BFF02795EFF01A882FF038065FF0EA483FF168972FF1578
+      66FF179B7EFF007C60FF00624CF9000000004095EA0C56A6F4EF68B2F6FF7CBE
+      FBFF0B5750FF00503EFF005442FF00755AFF048165FF0C9B7CFF159E7FFF1698
+      7BFF1AA284FF008768FF005B48F2000000001D7DD9352484DFFF65ADF2FF6EB2
+      F3FF5BA3E7FF357EA7FF16637EFF0E617FFF005E49FF087E64FF138D72FF19A0
+      83FF029071FF006D54FF005545C5000000000F69C3111267BBBC146CC2DC1F73
+      C5FE3B8AD6FF4491DBFF3A8AD6FF1469B4FF006751FF007A5FFF00896BFF0092
+      72FF006F56FF00503EFA00504040000000000000000000000000000000001067
+      B84F0C5EACCF0A5AA9F30958A5FD0754A0FF034E63FE00493DFE004737FF0047
+      37FE00493BE50050415300000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000000000000000000000000000000000000000
+      0000000000000000000000000000
+    }
+  end
+  object pmLabels: TPopupMenu
+    left = 268
+    top = 92
+    object miCopyLabel: TMenuItem
+      Caption = 'Copy'
+      OnClick = miCopyLabelClick
+    end
+  end
+  object TrayIcon: TTrayIcon
+    BalloonFlags = bfInfo
+    BalloonTimeout = 10000
+    PopUpMenu = pmTray
+    OnClick = TrayIconDblClick
+    OnDblClick = TrayIconDblClick
+    left = 456
+    top = 56
+  end
+  object pmTray: TPopupMenu
+    Images = ImageList16
+    left = 460
+    top = 88
+    object MenuItem43: TMenuItem
+      Action = acShowApp
+      Default = True
+      OnClick = acShowAppExecute
+    end
+    object MenuItem63: TMenuItem
+      Action = acHideApp
+      OnClick = acHideAppExecute
+    end
+    object miTSep1: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem26: TMenuItem
+      Action = acStartAllTorrents
+      OnClick = acStartAllTorrentsExecute
+    end
+    object MenuItem27: TMenuItem
+      Action = acStopAllTorrents
+      OnClick = acStopAllTorrentsExecute
+    end
+    object MenuItem28: TMenuItem
+      Caption = '-'
+    end
+    object pmiDownSpeedLimit: TMenuItem
+      Caption = 'Maximum download speed'
+    end
+    object pmiUpSpeedLimit: TMenuItem
+      Caption = 'Maximum upload speed'
+    end
+    object MenuItem76: TMenuItem
+      Action = acAltSpeed
+      Bitmap.Data = {
+        36040000424D3604000000000000360000002800000010000000100000000100
+        2000000000000004000064000000640000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        000000000000000000001067B84F0C5EACCF0A5AA9F30958A5FD0754A0FF034E
+        63FE00493DFE004737FF004737FE00493BE50050415300000000000000000F69
+        C3111267BBBC146CC2DC1F73C5FE3B8AD6FF4491DBFF3A8AD6FF1469B4FF0067
+        51FF007A5FFF00896BFF009272FF006F56FF00503EFA00504040000000001D7D
+        D9352484DFFF65ADF2FF6EB2F3FF5BA3E7FF357EA7FF16637EFF0E617FFF005E
+        49FF087E64FF138D72FF19A083FF029071FF006D54FF005545C5000000004095
+        EA0C56A6F4EF68B2F6FF7CBEFBFF0B5750FF00503EFF005442FF00755AFF0481
+        65FF0C9B7CFF159E7FFF16987BFF1AA284FF008768FF005B48F2000000002288
+        EE1E409AF0EA57A6F3BE3893ECE3025C4BE400614BFF02795EFF01A882FF0380
+        65FF0EA483FF168972FF157866FF179B7EFF007C60FF00624CF90C70CFEB1173
+        D2FC69B1F7791176D6A22287E88600614C9D006952FF048F70FF02C79BFF0083
+        65FF0CA281FF20AF90FF20AA8DFF0E9174FF00785DFF006651C1278AE9E72588
+        E8D7000000001379D9D72288EE1E006B5232007158FD017E62FF08CDA1FF01D2
+        A4FF007B5FFF037259FF047E63FF038669FF017D62FF006A5152000000000000
+        00000A6DD0311E83E3BD000000000000000000775C85007E62FF018E6FFF07CE
+        A2FF06DEAFFF06D6A8FF08C198FF028A6CFF00765C8D00000000000000000000
+        00000C70D0ED0C6FD0EF00000000000000000000000000816553008B6CC00093
+        72F7009473FF008C6CDE008366A8007A5F430000000000000000000000000000
+        00002287E8C82187E8C600000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000000000000000
+        0000000000000000000000000000000000000000000000000000
+      }
+      OnClick = acAltSpeedExecute
+    end
+    object MenuItem72: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem24: TMenuItem
+      Action = acExit
+      OnClick = acExitExecute
+    end
+  end
+  object imgFlags: TImageList
+    Height = 12
+    Width = 18
+    left = 144
+    top = 92
+    Bitmap = {
+      4C6901000000120000000C000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
+      FF00FFFFFF00FFFFFF00FFFFFF00
+    }
+  end
+  object pmPeers: TPopupMenu
+    left = 340
+    top = 92
+    object MenuItem29: TMenuItem
+      Action = acResolveHost
+      OnClick = acResolveHostExecute
+    end
+    object MenuItem30: TMenuItem
+      Action = acResolveCountry
+      OnClick = acResolveCountryExecute
+    end
+    object MenuItem31: TMenuItem
+      Action = acShowCountryFlag
+      OnClick = acShowCountryFlagExecute
+    end
+    object MenuItem25: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem45: TMenuItem
+      Action = acSetupColumns
+      OnClick = acSetupColumnsExecute
+    end
+  end
+  object FilterTimer: TTimer
+    Interval = 100
+    OnTimer = FilterTimerTimer
+    left = 76
+    top = 28
+  end
+  object pmTrackers: TPopupMenu
+    Images = ImageList16
+    left = 376
+    top = 92
+    object MenuItem65: TMenuItem
+      Action = acAddTracker
+      OnClick = acAddTrackerExecute
+    end
+    object MenuItem66: TMenuItem
+      Action = acEditTracker
+      OnClick = acEditTrackerExecute
+    end
+    object MenuItem67: TMenuItem
+      Action = acDelTracker
+      OnClick = acDelTrackerExecute
+    end
+    object sepTrackers: TMenuItem
+      Caption = '-'
+    end
+    object MenuItem48: TMenuItem
+      Action = acSetupColumns
+      OnClick = acSetupColumnsExecute
+    end
+  end
+  object AnimateTimer: TTimer
+    Enabled = False
+    Interval = 100
+    OnTimer = AnimateTimerTimer
+    left = 732
+    top = 60
+  end
+  object pmConnections: TPopupMenu
+    left = 12
+    top = 72
+    object sepCon2: TMenuItem
+      Tag = 1
+      Caption = '-'
+    end
+    object MenuItem69: TMenuItem
+      Tag = 1
+      Action = acNewConnection
+      OnClick = acNewConnectionExecute
+    end
+    object MenuItem74: TMenuItem
+      Tag = 1
+      Action = acConnOptions
+      OnClick = acConnOptionsExecute
+    end
+  end
+  object pmDownSpeeds: TPopupMenu
+    left = 700
+    top = 96
+  end
+  object pmUpSpeeds: TPopupMenu
+    left = 732
+    top = 96
+  end
+end
diff -ru TransGUI/main.pas TransGUI_new/main.pas
--- TransGUI/main.pas	2011-04-03 13:28:18.000000000 +0200
+++ TransGUI_new/main.pas	2011-09-18 12:32:01.000000000 +0200
@@ -1,5141 +1,5132 @@
-{*************************************************************************************
-  This file is part of Transmission Remote GUI.
-  Copyright (c) 2008-2010 by Yury Sidorov.
-
-  Transmission Remote GUI is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  Transmission Remote GUI is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with Transmission Remote GUI; if not, write to the Free Software
-  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-*************************************************************************************}
-
-unit Main;
-
-{$mode objfpc}{$H+}
-
-interface
-
-uses
-  Classes, SysUtils, FileUtil, zstream, LResources, Forms, Controls, Graphics, Dialogs, ComCtrls, Menus, ActnList,
-  httpsend, IniFiles, StdCtrls, fpjson, jsonparser, ExtCtrls, rpc, syncobjs, variants, varlist, IpResolver,
-  zipper, ResTranslator, VarGrid, StrUtils, LCLProc, Grids;
-
-const
-  AppName = 'Transmission Remote GUI';
-  AppVersion = '3.1';
-
-resourcestring
-  sAll = 'All';
-  sWaiting = 'Waiting';
-  sVerifying = 'Verifying';
-  sDownloading = 'Downloading';
-  sSeeding = 'Seeding';
-  sFinished = 'Finished';
-  sStopped = 'Stopped';
-  sUnknown = 'Unknown';
-  sCompleted = 'Completed';
-  sConnected = 'connected';
-  sActive = 'Active';
-  sInactive = 'Inactive';
-  sUpdating = 'Updating...';
-  sFinishedDownload = '''%s'' has finished downloading';
-  sDownloadComplete = 'Download complete';
-  sUpdateComplete = 'Update complete.';
-  sTorrentVerification = 'Torrent verification may take a long time.' + LineEnding + 'Are you sure to start verification of torrent ''%s''?';
-  sTorrentsVerification = 'Torrents verification may take a long time.' + LineEnding + 'Are you sure to start verification of %d torrents?';
-  sReconnect = 'Reconnect in %d seconds.';
-  sDisconnected = 'Disconnected';
-  sConnectingToDaemon = 'Connecting to daemon...';
-  sSec = '%ds';
-  sMinSec = '%dm, %ds';
-  sHourMin = '%dh, %dm';
-  sDayHour = '%dd, %dh';
-  sDownloadingSeeding = '%s%s%d downloading, %d seeding%s%s, %s';
-  sDownSpeed = 'D: %s/s';
-  sUpSpeed = 'U: %s/s';
-  SFreeSpace = 'Free: %s';
-  sNoPathMapping = 'Unable to find path mapping.'+LineEnding+'Use program''s options to setup path mappings.';
-  sGeoIPConfirm = 'Geo IP database is needed to resolve country by IP address.' + LineEnding + 'Download this database now?';
-  sFlagArchiveConfirm = 'Flag images archive is needed to display country flags.' + LineEnding + 'Download this archive now?';
-  sInSwarm = 'in swarm';
-  sHashfails = '%s (%d hashfails)';
-  sDone = '%s (%s done)';
-  sHave = '%d x %s (have %d)';
-  sUnableExtractFlag = 'Unable to extract flag image.';
-  sTrackerWorking = 'Working';
-  sTrackerUpdating = 'Updating';
-  sRestartRequired = 'You should restart the application to apply changes.';
-  sRemoveTorrentData = 'Are you sure to remove torrent ''%s'' and all associated DATA?';
-  sRemoveTorrentDataMulti = 'Are you sure to remove %d selected torrents and all their associated DATA?';
-  sRemoveTorrent = 'Are you sure to remove torrent ''%s''?';
-  sRemoveTorrentMulti = 'Are you sure to remove %d selected torrents?';
-  sUnableGetFilesList = 'Unable to get files list';
-  sTrackerError = 'Tracker';
-  sSkip = 'skip';
-  sLow = 'low';
-  sNormal = 'normal';
-  sHigh = 'high';
-  sByte = 'b';
-  sKByte = 'KB';
-  sMByte = 'MB';
-  sGByte = 'GB';
-  sTByte = 'TB';
-  sPerSecond = '/s';
-  sOf = 'of';
-  sNoTracker = 'No tracker';
-  sTorrents = 'Torrents';
-  sBlocklistUpdateComplete = 'The block list has been updated successfully.' + LineEnding + 'The list entries count: %d.';
-  sSeveralTorrents = '%d torrents';
-  sUnableToExecute = 'Unable to execute "%s".';
-  sSSLLoadError = 'Unable to load OpenSSL library files: %s and %s';
-  SRemoveTracker = 'Are you sure to remove tracker ''%s''?';
-  SUnlimited = 'Unlimited';
-  SAverage = 'average';
-
-type
-
-  { TMainForm }
-
-  TMainForm = class(TForm)
-    acConnect: TAction;
-    acAddTorrent: TAction;
-    acStopTorrent: TAction;
-    acRemoveTorrent: TAction;
-    acStartTorrent: TAction;
-    acSetHighPriority: TAction;
-    acSetNormalPriority: TAction;
-    acSetLowPriority: TAction;
-    acSetNotDownload: TAction;
-    acOptions: TAction;
-    acDaemonOptions: TAction;
-    acStartAllTorrents: TAction;
-    acStopAllTorrents: TAction;
-    acExit: TAction;
-    acResolveHost: TAction;
-    acResolveCountry: TAction;
-    acShowCountryFlag: TAction;
-    acSetupColumns: TAction;
-    acRemoveTorrentAndData: TAction;
-    acOpenFile: TAction;
-    acOpenContainingFolder: TAction;
-    acAddLink: TAction;
-    acReannounceTorrent: TAction;
-    acMoveTorrent: TAction;
-    acSelectAll: TAction;
-    acShowApp: TAction;
-    acHideApp: TAction;
-    acAddTracker: TAction;
-    acEditTracker: TAction;
-    acDelTracker: TAction;
-    acConnOptions: TAction;
-    acNewConnection: TAction;
-    acDisconnect: TAction;
-    acAltSpeed: TAction;
-    acUpdateBlocklist: TAction;
-    acUpdateGeoIP: TAction;
-    acTorrentProps: TAction;
-    acVerifyTorrent: TAction;
-    ActionList: TActionList;
-    ApplicationProperties: TApplicationProperties;
-    edSearch: TEdit;
-    imgSearch: TImage;
-    imgFlags: TImageList;
-    ImageList16: TImageList;
-    FilterTimer: TTimer;
-    lvFilter: TVarGrid;
-    lvTrackers: TVarGrid;
-    MenuItem25: TMenuItem;
-    MenuItem40: TMenuItem;
-    MenuItem41: TMenuItem;
-    MenuItem43: TMenuItem;
-    MenuItem63: TMenuItem;
-    sepTrackers: TMenuItem;
-    MenuItem65: TMenuItem;
-    MenuItem66: TMenuItem;
-    MenuItem67: TMenuItem;
-    MenuItem68: TMenuItem;
-    MenuItem69: TMenuItem;
-    MenuItem70: TMenuItem;
-    MenuItem72: TMenuItem;
-    MenuItem76: TMenuItem;
-    pmiUpSpeedLimit: TMenuItem;
-    pmiDownSpeedLimit: TMenuItem;
-    pmDownSpeeds: TPopupMenu;
-    pmUpSpeeds: TPopupMenu;
-    sepCon2: TMenuItem;
-    MenuItem71: TMenuItem;
-    sepCon1: TMenuItem;
-    MenuItem73: TMenuItem;
-    MenuItem74: TMenuItem;
-    MenuItem75: TMenuItem;
-    pbStatus: TPaintBox;
-    pmSepOpen2: TMenuItem;
-    MenuItem42: TMenuItem;
-    pmSepOpen1: TMenuItem;
-    MenuItem44: TMenuItem;
-    MenuItem45: TMenuItem;
-    MenuItem46: TMenuItem;
-    MenuItem47: TMenuItem;
-    MenuItem48: TMenuItem;
-    MenuItem49: TMenuItem;
-    MenuItem50: TMenuItem;
-    MenuItem51: TMenuItem;
-    MenuItem52: TMenuItem;
-    MenuItem53: TMenuItem;
-    MenuItem54: TMenuItem;
-    MenuItem55: TMenuItem;
-    MenuItem56: TMenuItem;
-    MenuItem58: TMenuItem;
-    MenuItem59: TMenuItem;
-    MenuItem60: TMenuItem;
-    MenuItem61: TMenuItem;
-    MenuItem62: TMenuItem;
-    miPriority: TMenuItem;
-    pmiPriority: TMenuItem;
-    MenuItem57: TMenuItem;
-    pbDownloaded: TPaintBox;
-    pmTrackers: TPopupMenu;
-    pmConnections: TPopupMenu;
-    tabTrackers: TTabSheet;
-    AnimateTimer: TTimer;
-    tbConnect: TToolButton;
-    ToolButton10: TToolButton;
-    sepAltSpeed: TToolButton;
-    ToolButton9: TToolButton;
-    txConnErrorLabel: TLabel;
-    panSearch: TPanel;
-    panFilter: TPanel;
-    panReconnectFrame: TShape;
-    txReconnectSecs: TLabel;
-    txConnError: TLabel;
-    MenuItem38: TMenuItem;
-    MenuItem39: TMenuItem;
-    panReconnect: TPanel;
-    txLastActive: TLabel;
-    txLastActiveLabel: TLabel;
-    txTracker: TLabel;
-    txTrackerLabel: TLabel;
-    txCompletedOn: TLabel;
-    txCompletedOnLabel: TLabel;
-    txAddedOn: TLabel;
-    txAddedOnLabel: TLabel;
-    MenuItem19: TMenuItem;
-    MenuItem20: TMenuItem;
-    MenuItem21: TMenuItem;
-    MenuItem22: TMenuItem;
-    MenuItem23: TMenuItem;
-    MenuItem24: TMenuItem;
-    miTSep1: TMenuItem;
-    MenuItem26: TMenuItem;
-    MenuItem27: TMenuItem;
-    MenuItem28: TMenuItem;
-    MenuItem29: TMenuItem;
-    MenuItem30: TMenuItem;
-    MenuItem31: TMenuItem;
-    MenuItem32: TMenuItem;
-    MenuItem33: TMenuItem;
-    MenuItem34: TMenuItem;
-    MenuItem35: TMenuItem;
-    MenuItem36: TMenuItem;
-    MenuItem37: TMenuItem;
-    miAbout: TMenuItem;
-    miHelp: TMenuItem;
-    panTop: TPanel;
-    pmTray: TPopupMenu;
-    HSplitter: TSplitter;
-    pmPeers: TPopupMenu;
-    TrayIcon: TTrayIcon;
-    txCreated: TLabel;
-    txCreatedLabel: TLabel;
-    txTorrentHeader: TPanel;
-    txTorrentName: TLabel;
-    txTorrentNameLabel: TLabel;
-    txDownProgress: TLabel;
-    txDownProgressLabel: TLabel;
-    panProgress: TPanel;
-    txMaxPeers: TLabel;
-    txMaxPeersLabel: TLabel;
-    txPeers: TLabel;
-    txPeersLabel: TLabel;
-    txSeeds: TLabel;
-    txSeedsLabel: TLabel;
-    txDummy2: TLabel;
-    txTrackerUpdate: TLabel;
-    txDummy1: TLabel;
-    txRemaining: TLabel;
-    txRemainingLabel: TLabel;
-    txStatus: TLabel;
-    txStatusLabel: TLabel;
-    txRatio: TLabel;
-    txRatioLabel: TLabel;
-    txDownLimit: TLabel;
-    txDownLimitLabel: TLabel;
-    txTrackerUpdateLabel: TLabel;
-    txTransferHeader: TPanel;
-    txUpSpeed: TLabel;
-    txUpLimit: TLabel;
-    txUpSpeedLabel: TLabel;
-    txDownSpeed: TLabel;
-    txDownSpeedLabel: TLabel;
-    txUploaded: TLabel;
-    txUploadedLabel: TLabel;
-    txDownloaded: TLabel;
-    txDownloadedLabel: TLabel;
-    txUpLimitLabel: TLabel;
-    txWasted: TLabel;
-    txWastedLabel: TLabel;
-    miCopyLabel: TMenuItem;
-    pmLabels: TPopupMenu;
-    txError: TLabel;
-    txErrorLabel: TLabel;
-    MenuItem17: TMenuItem;
-    MenuItem18: TMenuItem;
-    miTools: TMenuItem;
-    TickTimer: TTimer;
-    MainToolBar: TToolBar;
-    panTransfer: TPanel;
-    ToolButton1: TToolButton;
-    ToolButton2: TToolButton;
-    ToolButton3: TToolButton;
-    ToolButton4: TToolButton;
-    ToolButton5: TToolButton;
-    ToolButton6: TToolButton;
-    ToolButton7: TToolButton;
-    ToolButton8: TToolButton;
-    txComment: TLabel;
-    txCommentLabel: TLabel;
-    txHash: TLabel;
-    txHashLabel: TLabel;
-    panGeneralInfo: TPanel;
-    lvFiles: TVarGrid;
-    lvPeers: TVarGrid;
-    MainMenu: TMainMenu;
-    MenuItem1: TMenuItem;
-    MenuItem10: TMenuItem;
-    MenuItem11: TMenuItem;
-    MenuItem12: TMenuItem;
-    MenuItem13: TMenuItem;
-    MenuItem14: TMenuItem;
-    MenuItem15: TMenuItem;
-    MenuItem16: TMenuItem;
-    MenuItem2: TMenuItem;
-    MenuItem3: TMenuItem;
-    MenuItem4: TMenuItem;
-    MenuItem5: TMenuItem;
-    MenuItem6: TMenuItem;
-    MenuItem7: TMenuItem;
-    MenuItem8: TMenuItem;
-    MenuItem9: TMenuItem;
-    miConnect: TMenuItem;
-    miExit: TMenuItem;
-    miTorrent: TMenuItem;
-    OpenTorrentDlg: TOpenDialog;
-    PageInfo: TPageControl;
-    pmTorrents: TPopupMenu;
-    pmFiles: TPopupMenu;
-    sbGenInfo: TScrollBox;
-    txPieces: TLabel;
-    txPiecesLabel: TLabel;
-    txTotalSize: TLabel;
-    txTotalSizeLabel: TLabel;
-    gTorrents: TVarGrid;
-    VSplitter: TSplitter;
-    StatusBar: TStatusBar;
-    tabPeers: TTabSheet;
-    tabGeneral: TTabSheet;
-    TorrentsListTimer: TTimer;
-    tabFiles: TTabSheet;
-    procedure acAddLinkExecute(Sender: TObject);
-    procedure acAddTorrentExecute(Sender: TObject);
-    procedure acAddTrackerExecute(Sender: TObject);
-    procedure acAltSpeedExecute(Sender: TObject);
-    procedure acConnectExecute(Sender: TObject);
-    procedure acConnOptionsExecute(Sender: TObject);
-    procedure acDelTrackerExecute(Sender: TObject);
-    procedure acEditTrackerExecute(Sender: TObject);
-    procedure acHideAppExecute(Sender: TObject);
-    procedure acMoveTorrentExecute(Sender: TObject);
-    procedure acNewConnectionExecute(Sender: TObject);
-    procedure acOpenContainingFolderExecute(Sender: TObject);
-    procedure acOpenFileExecute(Sender: TObject);
-    procedure acOptionsExecute(Sender: TObject);
-    procedure acDisconnectExecute(Sender: TObject);
-    procedure acExitExecute(Sender: TObject);
-    procedure acDaemonOptionsExecute(Sender: TObject);
-    procedure acReannounceTorrentExecute(Sender: TObject);
-    procedure acRemoveTorrentAndDataExecute(Sender: TObject);
-    procedure acRemoveTorrentExecute(Sender: TObject);
-    procedure acResolveCountryExecute(Sender: TObject);
-    procedure acResolveHostExecute(Sender: TObject);
-    procedure acSelectAllExecute(Sender: TObject);
-    procedure acSetHighPriorityExecute(Sender: TObject);
-    procedure acSetLowPriorityExecute(Sender: TObject);
-    procedure acSetNormalPriorityExecute(Sender: TObject);
-    procedure acSetNotDownloadExecute(Sender: TObject);
-    procedure acSetupColumnsExecute(Sender: TObject);
-    procedure acShowAppExecute(Sender: TObject);
-    procedure acShowCountryFlagExecute(Sender: TObject);
-    procedure acStartAllTorrentsExecute(Sender: TObject);
-    procedure acStartTorrentExecute(Sender: TObject);
-    procedure acStopAllTorrentsExecute(Sender: TObject);
-    procedure acStopTorrentExecute(Sender: TObject);
-    procedure acTorrentPropsExecute(Sender: TObject);
-    procedure acUpdateBlocklistExecute(Sender: TObject);
-    procedure acUpdateGeoIPExecute(Sender: TObject);
-    procedure acVerifyTorrentExecute(Sender: TObject);
-    procedure AnimateTimerTimer(Sender: TObject);
-    procedure ApplicationPropertiesException(Sender: TObject; E: Exception);
-    procedure ApplicationPropertiesIdle(Sender: TObject; var Done: Boolean);
-    procedure ApplicationPropertiesMinimize(Sender: TObject);
-    procedure ApplicationPropertiesRestore(Sender: TObject);
-    procedure edSearchChange(Sender: TObject);
-    procedure FormDropFiles(Sender: TObject; const FileNames: array of String);
-    procedure FormWindowStateChange(Sender: TObject);
-    procedure gTorrentsCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-    procedure gTorrentsClick(Sender: TObject);
-    procedure gTorrentsDblClick(Sender: TObject);
-    procedure gTorrentsDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean);
-    procedure gTorrentsResize(Sender: TObject);
-    procedure gTorrentsSortColumn(Sender: TVarGrid; var ASortCol: integer);
-    procedure lvFilesCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-    procedure lvFilesDblClick(Sender: TObject);
-    procedure lvFilesDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean);
-    procedure lvFilesKeyPress(Sender: TObject; var Key: char);
-    procedure lvFilterCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-    procedure lvFilterClick(Sender: TObject);
-    procedure lvFilterDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean);
-    procedure lvPeersCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-    procedure lvTrackersCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-    procedure lvTrackersDblClick(Sender: TObject);
-    procedure lvTrackersKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
-    procedure pbStatusPaint(Sender: TObject);
-    procedure panReconnectResize(Sender: TObject);
-    procedure pbDownloadedPaint(Sender: TObject);
-    procedure pbDownloadedResize(Sender: TObject);
-    procedure StatusBarMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
-    procedure TickTimerTimer(Sender: TObject);
-    procedure FilterTimerTimer(Sender: TObject);
-    procedure FormClose(Sender: TObject; var CloseAction: TCloseAction);
-    procedure FormCreate(Sender: TObject);
-    procedure FormDestroy(Sender: TObject);
-    procedure FormResize(Sender: TObject);
-    procedure FormShow(Sender: TObject);
-    procedure lvFilterResize(Sender: TObject);
-    procedure miAboutClick(Sender: TObject);
-    procedure miCopyLabelClick(Sender: TObject);
-    procedure PageInfoChange(Sender: TObject);
-    procedure TorrentsListTimerTimer(Sender: TObject);
-    procedure pmFilesPopup(Sender: TObject);
-    procedure pmTorrentsPopup(Sender: TObject);
-    procedure sbGenInfoResize(Sender: TObject);
-    procedure TrayIconDblClick(Sender: TObject);
-  private
-    FStarted: boolean;
-    FTorrents: TVarList;
-    FFiles: TVarList;
-    FTrackers: TStringList;
-    FResolver: TIpResolver;
-    FUnZip: TUnZipper;
-    FReconnectWaitStart: TDateTime;
-    FReconnectTimeOut: integer;
-    FTorrentProgress: TBitmap;
-    FLastPieces: string;
-    FLastPieceCount: integer;
-    FLastDone: double;
-    FIni: TIniFile;
-    FCurConn: string;
-    FPathMap: TStringList;
-    FLastFilerIndex: integer;
-    FFilterChanged: boolean;
-    FStatusBmp: TBitmap;
-    FStatusImgIndex: integer;
-    FCurDownSpeedLimit: integer;
-    FCurUpSpeedLimit: integer;
-
-    procedure DoConnect;
-    procedure DoDisconnect;
-    procedure UpdateUI;
-    procedure ShowConnOptions(NewConnection: boolean);
-    procedure SaveColumns(LV: TVarGrid; const AName: string; FullInfo: boolean = True);
-    procedure LoadColumns(LV: TVarGrid; const AName: string; FullInfo: boolean = True);
-    function GetTorrentError(t: TJSONObject): string;
-    function SecondsToString(j: integer): string;
-    procedure DoAddTorrent(const FileName: Utf8String);
-    procedure UpdateTray;
-    procedure HideApp;
-    procedure ShowApp;
-    procedure DownloadFinished(const TorrentName: string);
-    function GetFlagImage(const CountryCode: string): integer;
-    procedure BeforeCloseApp;
-    function GetGeoIpDatabase: string;
-    function GetFlagsArchive: string;
-    function DownloadGeoIpDatabase(AUpdate: boolean): boolean;
-    procedure TorrentColumnsChanged;
-    function EtaToString(ETA: integer): string;
-    function GetTorrentStatus(TorrentIdx: integer): string;
-    function GetSeedsText(Seeds, SeedsTotal: integer): string;
-    function GetPeersText(Peers, PeersTotal, Leechers: integer): string;
-    function RatioToString(Ratio: double): string;
-    function TorrentDateTimeToString(d: Int64): string;
-    procedure DoRefresh(All: boolean = False);
-    function GetFilesCommonPath(files: TJSONArray): string;
-    procedure InternalRemoveTorrent(const Msg, MsgMulti: string; RemoveLocalData: boolean);
-    function IncludeProperTrailingPathDelimiter(const s: string): string;
-    procedure UrlLabelClick(Sender: TObject);
-    procedure CenterReconnectWindow;
-    procedure DrawProgressCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const ACellRect: TRect);
-    procedure ProcessPieces(const Pieces: string; PieceCount: integer; const Done: double);
-    function ExecRemoteFile(const FileName: string; SelectFile: boolean): boolean;
-    function GetSelectedTorrents: variant;
-    procedure FillDownloadDirs(CB: TComboBox);
-    function PriorityToStr(p: integer; var ImageIndex: integer): string;
-    procedure SetRefreshInterval;
-    procedure AddTracker(EditMode: boolean);
-    procedure UpdateConnections;
-    procedure DoConnectToHost(Sender: TObject);
-    procedure FillSpeedsMenu;
-    procedure DoSetDownloadSpeed(Sender: TObject);
-    procedure DoSetUploadSpeed(Sender: TObject);
-    procedure SetSpeedLimit(const Dir: string; Speed: integer);
-    function FixSeparators(const p: string): string;
-    function MapRemoteToLocal(const RemotePath: string): string;
-  public
-    procedure FillTorrentsList(list: TJSONArray);
-    procedure FillPeersList(list: TJSONArray);
-    procedure FillFilesList(list, priorities, wanted: TJSONArray; const DownloadDir: WideString);
-    procedure FillGeneralInfo(t: TJSONObject);
-    procedure FillTrackersList(TrackersData: TJSONObject);
-    procedure FillSessionInfo(s: TJSONObject);
-    procedure CheckStatus(Fatal: boolean = True);
-    function TorrentAction(const TorrentIds: variant; const AAction: string; args: TJSONObject = nil): boolean;
-    function SetFilePriority(TorrentId: integer; const Files: array of integer; const APriority: string): boolean;
-    function SetCurrentFilePriority(const APriority: string): boolean;
-    procedure SetTorrentPriority(APriority: integer);
-    procedure ClearDetailsInfo;
-    function SelectRemoteFolder(const CurFolder, DialogTitle: string): string;
-    property Ini: TIniFile read FIni;
-  end;
-
-function CheckAppParams: boolean;
-function GetHumanSize(sz: double; RoundTo: integer = 0): string;
-procedure AutoSizeForm(Form: TCustomForm);
-
-var
-  MainForm: TMainForm;
-  RpcObj: TRpc;
-  FTranslationFileName: string;
-  FTranslationLanguage: string;
-  FAlterColor: TColor;
-
-const
-  // Torrents list
-  idxName = 0;
-  idxSize = 1;
-  idxDone = 2;
-  idxStatus = 3;
-  idxSeeds = 4;
-  idxPeers = 5;
-  idxDownSpeed = 6;
-  idxUpSpeed = 7;
-  idxETA = 8;
-  idxRatio = 9;
-  idxDownloaded = 10;
-  idxUploaded = 11;
-  idxTracker = 12;
-  idxTrackerStatus = 13;
-  idxAddedOn = 14;
-  idxCompletedOn = 15;
-  idxLastActive = 16;
-  idxPath = 17;
-  idxPriority = 18;
-  idxSizeToDowload = 19;
-  idxTorrentId = 20;
-
-  idxTag = -1;
-  idxSeedsTotal = -2;
-  idxLeechersTotal = -3;
-//  idxPeersTotal = -4;
-  idxStateImg = -5;
-  TorrentsExtraColumns = 5;
-
-  // Peers list
-  idxPeerHost = 0;
-  idxPeerPort = 1;
-  idxPeerCountry = 2;
-  idxPeerClient = 3;
-  idxPeerFlags = 4;
-  idxPeerDone = 5;
-  idxPeerUpSpeed = 6;
-  idxPeerDownSpeed = 7;
-  idxPeerTag = -1;
-  idxPeerIP = -2;
-  idxPeerCountryImage = -3;
-  PeersExtraColumns = 3;
-
-  // Files list
-  idxFileName = 0;
-  idxFileSize = 1;
-  idxFileDone = 2;
-  idxFileProgress = 3;
-  idxFilePriority = 4;
-  idxFileId = -1;
-  idxFileTag = -2;
-  idxFileFullPath = -3;
-  FilesExtraColumns = 3;
-
-  // Trackers list
-  idxTrackersListName = 0;
-  idxTrackersListStatus = 1;
-  idxTrackersListUpdateIn = 2;
-  idxTrackersListSeeds = 3;
-  idxTrackerTag = -1;
-  idxTrackerID = -2;
-  TrackersExtraColumns = 2;
-
-  // Filter idices
-  fltAll      = 0;
-  fltDown     = 1;
-  fltDone     = 2;
-  fltActive   = 3;
-  fltInactive = 4;
-  fltStopped  = 5;
-
-  // Status images
-  imgDown      = 9;
-  imgSeed      = 10;
-  imgDownError = 11;
-  imgSeedError = 12;
-  imgError     = 13;
-  imgDone      = 14;
-  imgStopped   = 29;
-  imgDownQueue = 16;
-  imgSeedQueue = 17;
-  imgAll       = 19;
-  imgActive    = 20;
-
-  StatusFiltersCount = 6;
-
-  TorrentFieldsMap: array[idxName..idxTorrentId] of string =
-    ('', 'totalSize', '', 'status', 'peersSendingToUs,seeders',
-     'peersGettingFromUs,leechers', 'rateDownload', 'rateUpload', 'eta', 'uploadRatio',
-     'downloadedEver', 'uploadedEver', '', '', 'addedDate', 'doneDate', 'activityDate', '', 'bandwidthPriority',
-     '', '');
-
-implementation
-
-uses
-  AddTorrent, synacode, ConnOptions, clipbrd, DateUtils, utils, TorrProps, DaemonOptions, About,
-  ToolWin, download, ColSetup, types, AddLink, MoveTorrent, ssl_openssl_lib, AddTracker, lcltype,
-  Options, ButtonPanel;
-
-const
-  TR_STATUS_CHECK_WAIT   = ( 1 shl 0 ); // Waiting in queue to check files
-  TR_STATUS_CHECK        = ( 1 shl 1 ); // Checking files
-  TR_STATUS_DOWNLOAD     = ( 1 shl 2 ); // Downloading
-  TR_STATUS_SEED         = ( 1 shl 3 ); // Seeding
-  TR_STATUS_STOPPED      = ( 1 shl 4 ); // Torrent is stopped
-  TR_STATUS_FINISHED     = ( 1 shl 8 ); // Torrent is finished (pseudo status)
-
-  TR_SPEEDLIMIT_GLOBAL    = 0;    // only follow the overall speed limit
-  TR_SPEEDLIMIT_SINGLE    = 1;    // only follow the per-torrent limit
-  TR_SPEEDLIMIT_UNLIMITED = 2;    // no limits at all
-
-  TR_PRI_SKIP   = -1000;  // psedudo priority
-  TR_PRI_LOW    = -1;
-  TR_PRI_NORMAL =  0;
-  TR_PRI_HIGH   =  1;
-
-const
-  SizeNames: array[1..5] of string = (sByte, sKByte, sMByte, sGByte, sTByte);
-
-function GetHumanSize(sz: double; RoundTo: integer = 0): string;
-var
-  i: integer;
-begin
-  if sz < 0 then begin
-    Result:='-';
-    exit;
-  end;
-  i:=Low(SizeNames);
-  if RoundTo > 0 then begin
-    Inc(i);
-    sz:=sz/1024;
-  end;
-  while i <= High(SizeNames) do begin
-    if sz < 1024 then
-      break;
-    sz:=sz/1024;
-    Inc(i);
-  end;
-  if (RoundTo = 0) and (i > 3) then
-    RoundTo:=i - 2;
-  Result:=Format('%.' + IntToStr(RoundTo) + 'f %s', [sz, SizeNames[i]]);
-end;
-
-function AddToChannel(Clr: TColor; Value: integer; Position: byte): TColor;
-var i: integer;
-
-begin
-     i:=(Clr shr (Position*8)) and $FF;
-     i:=i + Value;
-     if i < 0 then i:=0;
-     if i > $FF then i:=$FF;
-     Result:=Clr and (not (Cardinal($FF) shl (Position*8))) or (Cardinal(i) shl (Position*8));
-end;
-
-function AddToColor(Color: TColor; R, G, B: integer): TColor;
-begin
-     Result:=ColorToRGB(Color);
-     Result:=AddToChannel(Result, R, 0);
-     Result:=AddToChannel(Result, G, 1);
-     Result:=AddToChannel(Result, B, 2);
-end;
-
-function GetLikeColor(Color: TColor; Delta: integer): TColor;
-var i, j: integer;
-
-begin
-    Result:=ColorToRGB(Color);
-    j:=Result and $FF;               //red
-    i:=(Result shr 8) and $FF;       // green
-    if i > j then
-      j:=i;
-    i:=((Result shr 16) and $FF) shr 1;      // blue
-    if i > j then
-      j:=i;
-    if j < $80 then
-      i:=(($80 - j) div $20 + 1)*Delta
-    else
-      i:=Delta;
-    if (i + j > 255) or (i + j < 0) then
-      i:=-Delta;
-
-    Result:=AddToColor(Result, i, i, i);
-end;
-
-function LocateFile(const FileName: string; const Paths: array of string): string;
-var
-  i: integer;
-begin
-  for i:=Low(Paths) to High(Paths) do begin
-    Result:=IncludeTrailingPathDelimiter(Paths[i]) + FileName;
-    if FileExists(Result) then
-      exit;
-  end;
-  Result:='';
-end;
-
-procedure OnTranslate(Sender: TResTranslator; const ResourceName: AnsiString; var Accept: boolean);
-const
-  IgnoreUnits: array[0..11] of string =
-      ('fpjson','jsonparser','jsonscanner','lclstrconsts','math',
-       'rtlconsts','sysconst','variants','zbase','zipper','zstream', 'xmlcfg');
-
-  IgnoreControls: array[0..2] of string =
-    ('AboutForm.txAuthor', 'AboutForm.txHomePage', 'MainForm.miLn');
-
-var
-  i: integer;
-begin
-  Accept := not AnsiMatchText(Copy2Symb(ResourceName, '.'), IgnoreUnits)
-             or AnsiStartsText('lclstrconsts.rsMb', ResourceName)  //<-- dialog buttons
-             or AnsiStartsText('lclstrconsts.rsMt', ResourceName); //<-- dialog message
-  if Accept then
-    for i:=Low(IgnoreControls) to High(IgnoreControls) do
-      if AnsiStartsText(IgnoreControls[i], ResourceName) then begin
-        Accept:=False;
-        exit;
-      end;
-  if Accept and (Copy(ResourceName, Length(ResourceName) - 8, MaxInt) = '.Category') then
-    Accept:=False;
-end;
-
-var
-  FHomeDir: string;
-  FIPCFileName: string;
-  FRunFileName: string;
-
-procedure AddTorrentFile(const FileName: string);
-var
-  h: THandle;
-begin
-  h:=FileCreate(FIPCFileName, fmCreate);
-  if h <> THandle(-1) then begin
-    FileWrite(h, FileName[1], Length(FileName));
-    FileClose(h);
-  end;
-end;
-
-procedure LoadTranslation;
-var
-  aIni: TIniFile;
-begin
-  aIni:=TIniFile.Create(FHomeDir + ChangeFileExt(ExtractFileName(ParamStr(0)), '.ini'));
-  try
-    FTranslationFileName := aIni.ReadString('Interface', 'TranslationFile', '');
-    if FTranslationFileName = '' then
-      FTranslationLanguage := LoadDefaultTranslationFile(@OnTranslate)
-    else
-      if FTranslationFileName <> '-' then
-        FTranslationLanguage := LoadTranslationFile(DefaultLangDir + FTranslationFileName, @OnTranslate);
-    if FTranslationLanguage = '' then
-      FTranslationLanguage := 'English'
-  finally
-    aIni.Free;
-  end;
-end;
-
-function IsProtocolSupported(const url: string): boolean;
-const
-  Protocols: array [1..2] of string =
-    ('http:', 'magnet:');
-var
-  i: integer;
-  s: string;
-begin
-  s:=AnsiLowerCase(url);
-  for i:=Low(Protocols) to High(Protocols) do
-    if Copy(s, 1, Length(Protocols[i])) = Protocols[i] then begin
-      Result:=True;
-      exit;
-    end;
-  Result:=False;
-end;
-
-function CheckAppParams: boolean;
-var
-  i: integer;
-  s: string;
-  h: THandle;
-  pid: SizeUInt;
-begin
-  Application.Title:=AppName;
-  FHomeDir:=Application.GetOptionValue('home');
-  if FHomeDir = '' then begin
-    if FileExists(ChangeFileExt(ParamStr(0), '.ini')) then
-      FHomeDir:=ExtractFilePath(ParamStr(0)) // Portable mode
-    else
-      FHomeDir:=IncludeTrailingPathDelimiter(GetAppConfigDir(False));
-  end
-  else
-    FHomeDir:=IncludeTrailingPathDelimiter(FHomeDir);
-  ForceDirectories(FHomeDir);
-  FIPCFileName:=FHomeDir + 'ipc.txt';
-  FRunFileName:=FHomeDir + 'run';
-
-  if ParamCount > 0 then begin
-    s:=ParamStrUTF8(1);
-    if IsProtocolSupported(s) or FileExistsUTF8(s) then
-      AddTorrentFile(s);
-  end;
-  if FileExists(FRunFileName) then begin
-    h:=FileOpen(FRunFileName, fmOpenRead or fmShareDenyNone);
-    if FileRead(h, pid, SizeOf(pid)) = SizeOf(pid) then begin
-{$ifdef mswindows}
-      AllowSetForegroundWindow(pid);
-{$endif mswindows}
-    end;
-    FileClose(h);
-
-    if not FileExists(FIPCFileName) then
-      FileClose(FileCreate(FIPCFileName, fmCreate));
-    for i:=1 to 50 do
-      if not FileExists(FIPCFileName) then begin
-        Result:=False;
-        exit;
-      end
-      else
-        Sleep(200);
-  end
-  else begin
-    h:=FileCreate(FRunFileName, fmCreate);
-    pid:=GetProcessID;
-    FileWrite(h, pid, SizeOf(pid));
-    FileClose(h);
-  end;
-  LoadTranslation;
-
-  SizeNames[1]:=sByte;
-  SizeNames[2]:=sKByte;
-  SizeNames[3]:=sMByte;
-  SizeNames[4]:=sGByte;
-  SizeNames[5]:=sTByte;
-
-  Result:=True;
-end;
-
-type THackControl = class(TControl) end;
-
-procedure AutoSizeForm(Form: TCustomForm);
-var
-  i, ht, w, h: integer;
-  C: TControl;
-begin
-  ht:=0;
-  for i:=0 to Form.ControlCount - 1 do begin
-    C:=Form.Controls[i];
-    with C do begin
-      if C is TButtonPanel then begin
-        TButtonPanel(C).HandleNeeded;
-        THackControl(C).CalculatePreferredSize(w, h, True);
-      end
-      else
-        h:=Height;
-{$ifdef LCLcarbon}
-      if C is TPageControl then
-        Inc(h, 10);
-{$endif LCLcarbon}
-      Inc(ht, h + BorderSpacing.Top + BorderSpacing.Bottom);
-    end;
-
-  end;
-  ht:=ht + 2*Form.BorderWidth;
-  Form.ClientHeight:=ht;
-  if Form.ClientHeight <> ht then begin
-    Form.Constraints.MinHeight:=0;
-    Form.ClientHeight:=ht;
-    Form.Constraints.MinHeight:=Form.Height;
-  end;
-  if Form.BorderStyle = bsDialog then begin
-    Form.Constraints.MinHeight:=Form.Height;
-    Form.Constraints.MinWidth:=Form.Width;
-  end;
-end;
-
-{ TMainForm }
-
-procedure TMainForm.FormCreate(Sender: TObject);
-var
-  ws: TWindowState;
-  i: integer;
-{$ifdef darwin}
-  s: string;
-  pic: TPicture;
-{$endif darwin}
-begin
-{$ifdef darwin}
-  // Load better icon if possible
-  s:=ExtractFilePath(ParamStr(0)) + '..' + DirectorySeparator + 'Resources'
-     + DirectorySeparator + ChangeFileExt(ExtractFileName(ParamStr(0)), '.icns');
-  if FileExists(s) then begin
-    pic:=TPicture.Create;
-    try
-      pic.LoadFromFile(s);
-      try
-        Application.Icon.Assign(pic.Graphic);
-      except
-      end;
-    finally
-      pic.Free;
-    end;
-  end;
-{$endif darwin}
-{$ifdef darwin}
-  Font.Size:=11;
-{$else}
-  Font.Size:=Screen.SystemFont.Size;
-  if Font.Size = 0 then
-    Font.Size:=8;
-{$endif darwin}
-  Application.Title:=AppName;
-  Caption:=Application.Title;
-  txTransferHeader.Font.Size:=Font.Size + 2;
-  txTorrentHeader.Font.Size:=txTransferHeader.Font.Size;
-  TrayIcon.Icon.Assign(Application.Icon);
-  RpcObj:=TRpc.Create;
-  FTorrents:=TVarList.Create(gTorrents.Columns.Count, 0);
-  FTorrents.ExtraColumns:=TorrentsExtraColumns;
-  gTorrents.Items.ExtraColumns:=TorrentsExtraColumns;
-  lvFiles.Items.ExtraColumns:=FilesExtraColumns;
-  FFiles:=lvFiles.Items;
-  lvPeers.Items.ExtraColumns:=PeersExtraColumns;
-  lvTrackers.Items.ExtraColumns:=TrackersExtraColumns;
-  FIni:=TIniFile.Create(FHomeDir+ChangeFileExt(ExtractFileName(ParamStr(0)), '.ini'));
-  FTrackers:=TStringList.Create;
-  FTrackers.Sorted:=True;
-  FReconnectTimeOut:=-1;
-  FAlterColor:=GetLikeColor(gTorrents.Color, -$10);
-  lvFilter.Items.ExtraColumns:=1;
-  gTorrents.AlternateColor:=FAlterColor;
-  lvFiles.AlternateColor:=FAlterColor;
-  lvPeers.AlternateColor:=FAlterColor;
-  lvTrackers.AlternateColor:=FAlterColor;
-  FStatusImgIndex:=30;
-
-  DoDisconnect;
-  PageInfo.ActivePageIndex:=0;
-  PageInfoChange(nil);
-{$ifdef LCLgtk2}
-  with MainToolBar do begin
-    EdgeBorders:=[ebLeft, ebTop, ebRight, ebBottom];
-    EdgeInner:=esNone;
-    EdgeOuter:=esRaised;
-    Flat:=True;
-  end;
-{$endif}
-  txTransferHeader.Color:=GetLikeColor(clBtnFace, -15);
-  txTorrentHeader.Color:=txTransferHeader.Color;
-  txTransferHeader.Caption:=' ' + txTransferHeader.Caption;
-  txTorrentHeader.Caption:=' ' + txTorrentHeader.Caption;
-  txTransferHeader.Height:=txTransferHeader.Canvas.TextHeight(txTransferHeader.Caption) + 2;
-  txTorrentHeader.Height:=txTorrentHeader.Canvas.TextHeight(txTorrentHeader.Caption) + 2;
-
-  if FIni.ReadInteger('MainForm', 'State', -1) = -1 then begin
-    i:=Screen.Width*3 div 4;
-    if i > Width then
-      Width:=i;
-    i:=Screen.Height*3 div 4;
-    if i > Height then
-      Height:=i;
-    Position:=poScreenCenter;
-  end
-  else begin
-    ws:=TWindowState(FIni.ReadInteger('MainForm', 'State', integer(WindowState)));
-    Left:=FIni.ReadInteger('MainForm', 'Left', Left);
-    Top:=FIni.ReadInteger('MainForm', 'Top', Top);
-    Width:=FIni.ReadInteger('MainForm', 'Width', Width);
-    Height:=FIni.ReadInteger('MainForm', 'Height', Height);
-    if ws = wsMaximized then
-      WindowState:=wsMaximized;
-  end;
-
-  LoadColumns(gTorrents, 'TorrentsList');
-  TorrentColumnsChanged;
-  LoadColumns(lvFiles, 'FilesList');
-  LoadColumns(lvPeers, 'PeerList');
-  LoadColumns(lvTrackers, 'TrackersList');
-
-  acResolveHost.Checked:=FIni.ReadBool('PeersList', 'ResolveHost', True);
-  acResolveCountry.Checked:=FIni.ReadBool('PeersList', 'ResolveCountry', True) and (GetGeoIpDatabase <> '');
-  acShowCountryFlag.Checked:=FIni.ReadBool('PeersList', 'ShowCountryFlag', True) and (GetFlagsArchive <> '');
-  acShowCountryFlag.Enabled:=acResolveCountry.Checked;
-  FCurConn:=FIni.ReadString('Hosts', 'CurHost', '');
-  if FCurConn = '' then
-    FCurConn:=FIni.ReadString('Connection', 'Host', '');
-  FPathMap:=TStringList.Create;
-  if Application.HasOption('hidden') then begin
-    ApplicationProperties.ShowMainForm:=False;
-    FormShow(nil);
-  end;
-  UpdateConnections;
-end;
-
-procedure TMainForm.FormDestroy(Sender: TObject);
-begin
-  DeleteFile(FRunFileName);
-  FResolver.Free;
-  FIni.Free;
-  FTrackers.Free;
-  FUnZip.Free;
-  RpcObj.Free;
-  FTorrentProgress.Free;
-  FStatusBmp.Free;
-  FPathMap.Free;
-  FTorrents.Free;
-  if Application.HasOption('updatelang') then
-    SupplementTranslationFiles;
-  if Application.HasOption('makelang') then
-    MakeTranslationFile;
-end;
-
-procedure TMainForm.FormResize(Sender: TObject);
-begin
-  if panReconnect.Visible then
-    CenterReconnectWindow;
-end;
-
-procedure TMainForm.FormShow(Sender: TObject);
-begin
-  if not FStarted then begin
-    VSplitter.SetSplitterPosition(FIni.ReadInteger('MainForm', 'VSplitter', VSplitter.GetSplitterPosition));
-    HSplitter.SetSplitterPosition(FIni.ReadInteger('MainForm', 'HSplitter', HSplitter.GetSplitterPosition));
-    TickTimer.Enabled:=True;
-  end;
-  UpdateTray;
-end;
-
-procedure TMainForm.lvFilterResize(Sender: TObject);
-begin
-  lvFilter.Columns[0].Width:=lvFilter.ClientWidth;
-end;
-
-procedure TMainForm.miAboutClick(Sender: TObject);
-begin
-  with TAboutForm.Create(Self) do
-  try
-    ShowModal;
-  finally
-    Free;
-  end;
-end;
-
-procedure TMainForm.miCopyLabelClick(Sender: TObject);
-begin
-  with TLabel(pmLabels.PopupComponent) do
-    if (Length(Name) > 5) and (Copy(Name, Length(Name) - 4, 5) = 'Label') then
-      Clipboard.AsText:=TLabel(Parent.FindChildControl(Copy(Name, 1, Length(Name) - 5))).Caption
-    else
-      Clipboard.AsText:=Caption;
-end;
-
-procedure TMainForm.acConnectExecute(Sender: TObject);
-begin
-  if RpcObj.Connected then begin
-    tbConnect.CheckMenuDropdown;
-    exit;
-  end;
-  if FCurConn = '' then
-    ShowConnOptions(True)
-  else
-    DoConnect;
-end;
-
-procedure TMainForm.acConnOptionsExecute(Sender: TObject);
-begin
-  ShowConnOptions(False);
-end;
-
-procedure TMainForm.acDelTrackerExecute(Sender: TObject);
-var
-  req, args: TJSONObject;
-  id, torid: integer;
-begin
-  id:=lvTrackers.Items[idxTrackerID, lvTrackers.Row];
-  torid:=RpcObj.CurTorrentId;
-  if MessageDlg('', Format(SRemoveTracker, [UTF8Encode(widestring(lvTrackers.Items[idxTrackersListName, lvTrackers.Row]))]), mtConfirmation, mbYesNo, 0, mbNo) <> mrYes then exit;
-  AppBusy;
-  Self.Update;
-  req:=TJSONObject.Create;
-  try
-    req.Add('method', 'torrent-set');
-    args:=TJSONObject.Create;
-    args.Add('ids', TJSONArray.Create([torid]));
-    args.Add('trackerRemove', TJSONArray.Create([id]));
-    req.Add('arguments', args);
-    args:=nil;
-    args:=RpcObj.SendRequest(req, False);
-    if args = nil then begin
-      CheckStatus(False);
-      exit;
-    end;
-    args.Free;
-  finally
-    req.Free;
-  end;
-  DoRefresh;
-  AppNormal;
-end;
-
-procedure TMainForm.acEditTrackerExecute(Sender: TObject);
-begin
-  AddTracker(True);
-end;
-
-procedure TMainForm.acHideAppExecute(Sender: TObject);
-begin
-  HideApp;
-end;
-
-procedure TMainForm.acMoveTorrentExecute(Sender: TObject);
-var
-  ids: variant;
-  i: integer;
-  s: string;
-  req: TJSONObject;
-  aids: TJSONArray;
-  args: TJSONObject;
-  ok: boolean;
-  t: TDateTime;
-begin
-  if gTorrents.Items.Count = 0 then
-    exit;
-  AppBusy;
-  with TMoveTorrentForm.Create(Self) do
-  try
-    gTorrents.Tag:=1;
-    FillDownloadDirs(edTorrentDir);
-    if gTorrents.SelCount = 0 then
-      gTorrents.RowSelected[gTorrents.Row]:=True;
-    ids:=GetSelectedTorrents;
-    i:=gTorrents.Items.IndexOf(idxTorrentId, ids[0]);
-    if VarIsEmpty(gTorrents.Items[idxPath, i]) then
-      exit;
-    edTorrentDir.Text:=UTF8Encode(widestring(gTorrents.Items[idxPath, i]));
-    if gTorrents.SelCount > 1 then
-      s:=Format(sSeveralTorrents, [gTorrents.SelCount])
-    else
-      s:=UTF8Encode(widestring(gTorrents.Items[idxName, i]));
-    Caption:=Caption + ' - ' + s;
-    AppNormal;
-    if ShowModal = mrOk then begin
-      Application.ProcessMessages;
-      AppBusy;
-      req:=TJSONObject.Create;
-      try
-        req.Add('method', 'torrent-set-location');
-        args:=TJSONObject.Create;
-        aids:=TJSONArray.Create;
-        for i:=VarArrayLowBound(ids, 1) to VarArrayHighBound(ids, 1) do
-          aids.Add(integer(ids[i]));
-        args.Add('ids', aids);
-        args.Add('location', TJSONString.Create(UTF8Decode(edTorrentDir.Text)));
-        args.Add('move', TJSONIntegerNumber.Create(integer(cbMoveData.Checked) and 1));
-        req.Add('arguments', args);
-        args:=RpcObj.SendRequest(req, False);
-        args.Free;
-      finally
-        req.Free;
-      end;
-      gTorrents.Tag:=0;
-      AppNormal;
-      if args = nil then
-        CheckStatus(False)
-      else begin
-        ok:=False;
-        t:=Now;
-        with gTorrents do
-          while not ok and not Application.Terminated and (Now - t < 20/SecsPerDay) do begin
-            RpcObj.RequestFullInfo:=True;
-            DoRefresh(True);
-            Sleep(200);
-            Application.ProcessMessages;
-            ok:=True;
-            for i:=0 to Items.Count - 1 do
-              if RowSelected[i] then begin
-                if VarIsEmpty(Items[idxPath, i]) or (AnsiCompareText(UTF8Encode(widestring(Items[idxPath, i])), edTorrentDir.Text) <> 0) then begin
-                  ok:=False;
-                  break;
-                end;
-              end;
-          end;
-      end;
-    end;
-  finally
-    gTorrents.Tag:=0;
-    Free;
-  end;
-end;
-
-procedure TMainForm.acNewConnectionExecute(Sender: TObject);
-begin
-  ShowConnOptions(True);
-end;
-
-procedure TMainForm.acOpenContainingFolderExecute(Sender: TObject);
-var
-  res: TJSONObject;
-  p, s: string;
-  sel: boolean;
-  files: TJSONArray;
-begin
-  if gTorrents.Items.Count = 0 then
-    exit;
-  Application.ProcessMessages;
-  AppBusy;
-  if lvFiles.Focused and (lvFiles.Items.Count > 0) then begin
-    p:=UTF8Encode(widestring(lvFiles.Items[idxFileFullPath, lvFiles.Row]));
-    sel:=True;
-  end
-  else begin
-    sel:=False;
-    gTorrents.RemoveSelection;
-    res:=RpcObj.RequestInfo(gTorrents.Items[idxTorrentId, gTorrents.Row], ['files', 'downloadDir']);
-    if res = nil then
-      CheckStatus(False)
-    else
-      try
-        with res.Arrays['torrents'].Objects[0] do begin
-          files:=Arrays['files'];
-          if files.Count = 0 then exit;
-          if files.Count = 1 then begin
-            p:=UTF8Encode((files[0] as TJSONObject).Strings['name']);
-            sel:=True;
-          end
-          else begin
-            s:=GetFilesCommonPath(files);
-            repeat
-              p:=s;
-              s:=ExtractFilePath(p);
-            until (s = '') or (s = p);
-          end;
-          p:=IncludeTrailingPathDelimiter(UTF8Encode(Strings['downloadDir'])) + p;
-        end;
-      finally
-        res.Free;
-      end;
-  end;
-  ExecRemoteFile(p, sel);
-  AppNormal;
-end;
-
-procedure TMainForm.acOpenFileExecute(Sender: TObject);
-begin
-  if lvFiles.Items.Count = 0 then exit;
-  ExecRemoteFile(UTF8Encode(widestring(FFiles[idxFileFullPath, lvFiles.Row])), False);
-end;
-
-procedure TMainForm.acOptionsExecute(Sender: TObject);
-begin
-  AppBusy;
-  with TOptionsForm.Create(Self) do
-  try
-    edRefreshInterval.Value:=FIni.ReadInteger('Interface', 'RefreshInterval', 5);
-    edRefreshIntervalMin.Value:=FIni.ReadInteger('Interface', 'RefreshIntervalMin', 20);
-{$ifndef darwin}
-    cbTrayClose.Checked:=FIni.ReadBool('Interface', 'TrayClose', False);
-    cbTrayMinimize.Checked:=FIni.ReadBool('Interface', 'TrayMinimize', True);
-{$else}
-    cbTrayClose.Enabled:=False;
-    cbTrayMinimize.Enabled:=False;
-{$endif}
-    cbTrayIconAlways.Checked:=FIni.ReadBool('Interface', 'TrayIconAlways', True);
-
-    cbShowAddTorrentWindow.Checked:=FIni.ReadBool('Interface', 'ShowAddTorrentWindow', True);
-    cbDeleteTorrentFile.Checked:=FIni.ReadBool('Interface', 'DeleteTorrentFile', False);
-
-    AppNormal;
-    if ShowModal = mrOk then begin
-      AppBusy;
-      FIni.WriteInteger('Interface', 'RefreshInterval', edRefreshInterval.Value);
-      FIni.WriteInteger('Interface', 'RefreshIntervalMin', edRefreshIntervalMin.Value);
-{$ifndef darwin}
-      FIni.WriteBool('Interface', 'TrayClose', cbTrayClose.Checked);
-      FIni.WriteBool('Interface', 'TrayMinimize', cbTrayMinimize.Checked);
-{$endif}
-      FIni.WriteBool('Interface', 'TrayIconAlways', cbTrayIconAlways.Checked);
-
-      FIni.WriteBool('Interface', 'ShowAddTorrentWindow', cbShowAddTorrentWindow.Checked);
-      FIni.WriteBool('Interface', 'DeleteTorrentFile', cbDeleteTorrentFile.Checked);
-
-      UpdateTray;
-      AppNormal;
-    end;
-  finally
-    Free;
-  end;
-end;
-
-procedure TMainForm.acAddTorrentExecute(Sender: TObject);
-begin
-  if not OpenTorrentDlg.Execute then exit;
-  DoAddTorrent(OpenTorrentDlg.FileName);
-end;
-
-procedure TMainForm.acAddTrackerExecute(Sender: TObject);
-begin
-  AddTracker(False);
-end;
-
-procedure TMainForm.acAltSpeedExecute(Sender: TObject);
-var
-  req, args: TJSONObject;
-begin
-  AppBusy;
-  req:=TJSONObject.Create;
-  try
-    req.Add('method', 'session-set');
-    args:=TJSONObject.Create;
-    args.Add('alt-speed-enabled', integer(not acAltSpeed.Checked) and 1);
-    req.Add('arguments', args);
-    args:=RpcObj.SendRequest(req, False);
-    if args = nil then begin
-      CheckStatus(False);
-      exit;
-    end;
-    args.Free;
-  finally
-    req.Free;
-  end;
-  RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtSession];
-  AppNormal;
-end;
-
-procedure TMainForm.acAddLinkExecute(Sender: TObject);
-begin
-  AppBusy;
-  with TAddLinkForm.Create(Self) do
-  try
-    AppNormal;
-    if ShowModal = mrOk then
-      DoAddTorrent(edLink.Text);
-  finally
-    Free;
-  end;
-end;
-
-procedure TMainForm.DoAddTorrent(const FileName: Utf8String);
-var
-  torrent: string;
-
-  function _AddTorrent(args: TJSONObject): integer;
-  var
-    req: TJSONObject;
-  begin
-    Result:=0;
-    req:=TJSONObject.Create;
-    try
-      req.Add('method', 'torrent-add');
-      if torrent = '-' then
-        args.Add('filename', TJSONString.Create(FileName))
-      else
-        args.Add('metainfo', TJSONString.Create(torrent));
-      req.Add('arguments', args);
-      args:=RpcObj.SendRequest(req);
-      if args <> nil then
-      try
-        Result:=args.Objects['torrent-added'].Integers['id'];
-      finally
-        args.Free;
-      end;
-    finally
-      req.Free;
-    end;
-
-    if Result = 0 then
-      CheckStatus(False);
-  end;
-
-  function _GetLevel(const s: string): integer;
-  var
-    p: PChar;
-  begin
-    Result:=0;
-    p:=PChar(s);
-    while p^ <> #0 do begin
-      if p^ in ['/', '\'] then
-        Inc(Result);
-      Inc(p);
-    end
-  end;
-
-  function _AddFolders(list: TVarList; const path: string; var idx: integer; cnt: integer): double;
-  var
-    s, ss: string;
-    j: integer;
-    d: double;
-    p: PChar;
-  begin
-    Result:=0;
-    while idx < cnt do begin
-      s:=ExtractFilePath(UTF8Encode(widestring(list[idxAtFullPath, idx])));
-      if s = '' then begin
-        Inc(idx);
-        continue;
-      end;
-      if (path <> '') and (Pos(path, s) <> 1)  then
-        break;
-      if s = path then begin
-        Result:=Result + list[idxAtSize, idx];
-        Inc(idx);
-      end
-      else begin
-        ss:=Copy(s, Length(path) + 1, MaxInt);
-        p:=PChar(ss);
-        while (p^ <> #0) and not (p^ in ['/','\']) do
-          Inc(p);
-        if p^ <> #0 then begin
-          SetLength(ss, p - PChar(ss) + 1);
-          j:=list.Count;
-          list[idxAtLevel, j]:=_GetLevel(path);
-          list[idxAtFullPath, j]:=UTF8Decode(path + ss);
-          d:=_AddFolders(list, path + ss, idx, cnt);
-          list[idxAtSize, j]:=d;
-          ss:=ExcludeTrailingPathDelimiter(ss);
-          list[idxAtName, j]:=UTF8Decode(ExtractFileName(ss));
-          Result:=Result + d;
-        end;
-      end;
-    end;
-  end;
-
-var
-  req, res, args: TJSONObject;
-  id: integer;
-  t, files: TJSONArray;
-  i: integer;
-  fs: TFileStream;
-  s, ss, OldDownloadDir, IniSec, path: string;
-  tt: TDateTime;
-  ok: boolean;
-begin
-  AppBusy;
-  id:=0;
-  if IsProtocolSupported(FileName) then
-    torrent:='-'
-  else begin
-    fs:=TFileStream.Create(UTF8ToSys(FileName), fmOpenRead or fmShareDenyNone);
-    try
-      SetLength(torrent, fs.Size);
-      fs.ReadBuffer(PChar(torrent)^, Length(torrent));
-    finally
-      fs.Free;
-    end;
-    torrent:=EncodeBase64(torrent);
-  end;
-  try
-    with TAddTorrentForm.Create(Self) do
-    try
-      Width:=Ini.ReadInteger('AddTorrent', 'Width', Width);
-      Height:=Ini.ReadInteger('AddTorrent', 'Height', Height);
-
-      IniSec:='AddTorrent.' + FCurConn;
-      FillDownloadDirs(cbDestFolder);
-
-      req:=TJSONObject.Create;
-      try
-        req.Add('method', 'session-get');
-        args:=RpcObj.SendRequest(req);
-        if args = nil then begin
-          CheckStatus(False);
-          exit;
-        end;
-        s:=UTF8Encode(args.Strings['download-dir']);
-        if cbDestFolder.Items.IndexOf(s) < 0 then begin
-          cbDestFolder.Items.Insert(0, s);
-          cbDestFolder.ItemIndex:=0;
-        end;
-
-        if args.IndexOfName('download-dir-free-space') >= 0 then
-          txDiskSpace.Caption:=txDiskSpace.Caption + ' ' + GetHumanSize(args.Floats['download-dir-free-space'])
-        else begin
-          txDiskSpace.Hide;
-          txSize.Top:=(txSize.Top + txDiskSpace.Top) div 2;
-        end;
-        args.Free;
-      finally
-        req.Free;
-      end;
-
-      lvFilter.Row:=0;
-
-      args:=TJSONObject.Create;
-      args.Add('paused', TJSONIntegerNumber.Create(1));
-      i:=FIni.ReadInteger(IniSec, 'PeerLimit', 0);
-      if i <> 0 then
-        args.Add('peer-limit', TJSONIntegerNumber.Create(i));
-      args.Add('download-dir', TJSONString.Create(UTF8Decode(cbDestFolder.Text)));
-      id:=_AddTorrent(args);
-      if id = 0 then
-        exit;
-
-      DoRefresh(True);
-
-      args:=RpcObj.RequestInfo(id, ['files', 'maxConnectedPeers']);
-      if args = nil then begin
-        CheckStatus(False);
-        exit;
-      end;
-      try
-        t:=args.Arrays['torrents'];
-        if t.Count = 0 then
-          raise Exception.Create(sUnableGetFilesList);
-        edPeerLimit.Value:=t.Objects[0].Integers['maxConnectedPeers'];
-        files:=t.Objects[0].Arrays['files'];
-        path:=GetFilesCommonPath(files);
-        lvFiles.Items.RowCnt:=files.Count;
-        for i:=0 to files.Count - 1 do begin
-          res:=files.Objects[i];
-          s:=UTF8Encode(res.Strings['name']);
-          if (path <> '') and (Copy(s, 1, Length(path)) = path) then
-            s:=Copy(s, Length(path) + 1, MaxInt);
-          ss:=ExtractFileName(s);
-          if ss <> s then
-            HasFolders:=True;
-          lvFiles.Items[idxAtName, i]:=UTF8Decode(ss);
-          lvFiles.Items[idxAtSize, i]:=res.Floats['length'];
-          lvFiles.Items[idxAtFullPath, i]:=UTF8Decode(s);
-          lvFiles.Items[idxAtFileID, i]:=i;
-          lvFiles.Items[idxAtLevel, i]:=_GetLevel(s);
-        end;
-        lvFiles.Items.Sort(idxAtFullPath);
-        i:=0;
-        _AddFolders(lvFiles.Items, '', i, lvFiles.Items.Count);
-        lvFiles.Items.Sort(idxAtFullPath);
-      finally
-        args.Free;
-      end;
-
-      if not HasFolders then
-        lvFiles.SortColumn:=0;
-
-      OldDownloadDir:=cbDestFolder.Text;
-      AppNormal;
-
-      ok:=not FIni.ReadBool('Interface', 'ShowAddTorrentWindow', True);
-      if ok then
-        btSelectAllClick(nil)
-      else begin
-        ok:=ShowModal = mrOk;
-        Ini.WriteInteger('AddTorrent', 'Width', Width);
-        Ini.WriteInteger('AddTorrent', 'Height', Height);
-      end;
-
-      if ok then begin
-        AppBusy;
-        Self.Update;
-
-        if OldDownloadDir <> cbDestFolder.Text then begin
-          TorrentAction(VarArrayOf([id]), 'remove');
-          id:=0;
-          args:=TJSONObject.Create;
-          args.Add('paused', TJSONIntegerNumber.Create(1));
-          args.Add('peer-limit', TJSONIntegerNumber.Create(edPeerLimit.Value));
-          args.Add('download-dir', TJSONString.Create(UTF8Decode(cbDestFolder.Text)));
-          id:=_AddTorrent(args);
-          if id = 0 then
-            exit;
-          DoRefresh(True);
-          Application.ProcessMessages;
-        end;
-
-        req:=TJSONObject.Create;
-        try
-          req.Add('method', 'torrent-set');
-          args:=TJSONObject.Create;
-          args.Add('ids', TJSONArray.Create([id]));
-          args.Add('peer-limit', TJSONIntegerNumber.Create(edPeerLimit.Value));
-
-          files:=TJSONArray.Create;
-          for i:=0 to lvFiles.Items.Count - 1 do
-            if not VarIsEmpty(lvFiles.Items[idxAtFileID, i]) and (integer(lvFiles.Items[idxAtChecked, i]) = 1) then
-              files.Add(integer(lvFiles.Items[idxAtFileID, i]));
-          if files.Count > 0 then
-            args.Add('files-wanted', files)
-          else
-            files.Free;
-
-          files:=TJSONArray.Create;
-          for i:=0 to lvFiles.Items.Count - 1 do
-            if not VarIsEmpty(lvFiles.Items[idxAtFileID, i]) and (integer(lvFiles.Items[idxAtChecked, i]) <> 1) then
-              files.Add(integer(lvFiles.Items[idxAtFileID, i]));
-          if files.Count > 0 then
-            args.Add('files-unwanted', files)
-          else
-            files.Free;
-
-          req.Add('arguments', args);
-          args:=nil;
-          args:=RpcObj.SendRequest(req, False);
-          if args = nil then begin
-            CheckStatus(False);
-            exit;
-          end;
-          args.Free;
-        finally
-          req.Free;
-        end;
-
-        if cbStartTorrent.Checked then
-          TorrentAction(VarArrayOf([id]), 'start');
-
-        tt:=Now;
-        while (Now - tt < 2/SecsPerDay) and (id <> 0) do begin
-          Application.ProcessMessages;
-          i:=gTorrents.Items.IndexOf(idxTorrentId, id);
-          if i >= 0 then begin
-            gTorrents.RemoveSelection;
-            gTorrents.Row:=i;
-            RpcObj.CurTorrentId:=id;
-            gTorrents.SetFocus;
-            break;
-          end;
-          Sleep(100);
-        end;
-
-        id:=0;
-        if FIni.ReadBool('Interface', 'DeleteTorrentFile', False) and not IsProtocolSupported(FileName) then
-          DeleteFile(UTF8ToSys(FileName));
-
-        FIni.WriteInteger(IniSec, 'PeerLimit', edPeerLimit.Value);
-        i:=cbDestFolder.Items.IndexOf(cbDestFolder.Text);
-        if i >= 0 then
-          cbDestFolder.Items.Move(i, 0)
-        else
-          cbDestFolder.Items.Insert(0, cbDestFolder.Text);
-        i:=FIni.ReadInteger('Interface', 'MaxFoldersHistory', 10);
-        while cbDestFolder.Items.Count > i do
-          cbDestFolder.Items.Delete(cbDestFolder.Items.Count - 1);
-        FIni.WriteInteger(IniSec, 'FolderCount', cbDestFolder.Items.Count);
-        for i:=0 to cbDestFolder.Items.Count - 1 do
-          FIni.WriteString(IniSec, Format('Folder%d', [i]), cbDestFolder.Items[i]);
-        AppNormal;
-      end;
-    finally
-      Free;
-    end;
-  finally
-    if id <> 0 then
-      TorrentAction(VarArrayOf([id]), 'remove');
-  end;
-end;
-
-procedure TMainForm.UpdateTray;
-begin
-  TrayIcon.Visible:=not Self.Visible or (WindowState = wsMinimized) or FIni.ReadBool('Interface', 'TrayIconAlways', True);
-{$ifdef darwin}
-  acShowApp.Visible:=False;
-  acHideApp.Visible:=False;
-  miTSep1.Visible:=False;
-{$else}
-  acHideApp.Visible:=Visible and (WindowState <> wsMinimized);
-{$endif darwin}
-  SetRefreshInterval;
-end;
-
-procedure TMainForm.HideApp;
-var
-  i: integer;
-begin
-  for i:=0 to Screen.FormCount - 1 do
-    with Screen.Forms[i] do
-      if fsModal in FormState then
-        exit;
-
-  if WindowState <> wsMinimized then
-    Hide;
-  HideTaskbarButton;
-  UpdateTray;
-end;
-
-procedure TMainForm.ShowApp;
-var
-  i: integer;
-begin
-  ShowTaskbarButton;
-  if WindowState = wsMinimized then
-    Application.Restore;
-  Application.ProcessMessages;
-  Show;
-  Application.BringToFront;
-  BringToFront;
-  for i:=0 to Screen.FormCount - 1 do
-    with Screen.Forms[i] do
-      if fsModal in FormState then
-        BringToFront;
-  UpdateTray;
-end;
-
-procedure TMainForm.DownloadFinished(const TorrentName: string);
-begin
-  if not TrayIcon.Visible then exit;
-  TrayIcon.BalloonHint:=Format(sFinishedDownload, [TorrentName]);
-  TrayIcon.BalloonTitle:=sDownloadComplete;
-  TrayIcon.ShowBalloonHint;
-end;
-
-function TMainForm.GetFlagImage(const CountryCode: string): integer;
-var
-  s, FlagsPath, ImageName: string;
-  pic: TPicture;
-begin
-  Result:=0;
-  if CountryCode = '' then exit;
-  try
-    ImageName:=CountryCode + '.png';
-    FlagsPath:=FHomeDir + 'flags' + DirectorySeparator;
-    if not FileExists(FlagsPath + ImageName) then begin
-      // Unzipping flag image
-      if FUnZip = nil then begin
-        s:=GetFlagsArchive;
-        if s <> '' then begin
-          ForceDirectories(FlagsPath);
-          FUnZip:=TUnZipper.Create;
-          FUnZip.OutputPath:=FlagsPath;
-          FUnZip.FileName:=s;
-        end
-        else
-          exit;
-      end;
-
-      FUnZip.Files.Clear;
-      FUnZip.Files.Add(ImageName);
-      try
-        FUnZip.UnZipAllFiles;
-      except
-        FreeAndNil(FUnZip);
-        DeleteFile(GetFlagsArchive);
-        acShowCountryFlag.Checked:=False;
-        MessageDlg(sUnableExtractFlag + LineEnding + Exception(ExceptObject).Message, mtError, [mbOK], 0);
-        exit;
-      end;
-      if not FileExists(FlagsPath + ImageName) then exit;
-    end;
-
-    pic:=TPicture.Create;
-    try
-      pic.LoadFromFile(UTF8Encode(FlagsPath + ImageName));
-      if imgFlags.Count = 1 then begin
-        imgFlags.Width:=pic.Width;
-        imgFlags.Height:=pic.Height;
-      end;
-      Result:=imgFlags.AddMasked(pic.Bitmap, clNone);
-    finally
-      pic.Free;
-    end;
-  except
-  end;
-end;
-
-procedure TMainForm.BeforeCloseApp;
-begin
-  if WindowState = wsNormal then begin
-    FIni.WriteInteger('MainForm', 'Left', Left);
-    FIni.WriteInteger('MainForm', 'Top', Top);
-    FIni.WriteInteger('MainForm', 'Width', Width);
-    FIni.WriteInteger('MainForm', 'Height', Height);
-  end;
-  if WindowState <> wsMinimized then
-    FIni.WriteInteger('MainForm', 'State', integer(WindowState));
-
-  FIni.WriteInteger('MainForm', 'VSplitter', VSplitter.GetSplitterPosition);
-  FIni.WriteInteger('MainForm', 'HSplitter', HSplitter.GetSplitterPosition);
-
-  SaveColumns(gTorrents, 'TorrentsList');
-  SaveColumns(lvFiles, 'FilesList');
-  SaveColumns(lvPeers, 'PeerList');
-  SaveColumns(lvTrackers, 'TrackersList');
-
-  FIni.WriteBool('PeersList', 'ResolveHost', acResolveHost.Checked);
-  FIni.WriteBool('PeersList', 'ResolveCountry', acResolveCountry.Checked);
-  FIni.WriteBool('PeersList', 'ShowCountryFlag', acShowCountryFlag.Checked);
-
-  DoDisconnect;
-  Application.ProcessMessages;
-end;
-
-function TMainForm.GetGeoIpDatabase: string;
-begin
-  Result:=LocateFile('GeoIP.dat', [FHomeDir, ExtractFilePath(ParamStr(0))]);
-end;
-
-function TMainForm.GetFlagsArchive: string;
-begin
-  Result:=LocateFile('flags.zip', [FHomeDir, ExtractFilePath(ParamStr(0))]);
-end;
-
-function TMainForm.DownloadGeoIpDatabase(AUpdate: boolean): boolean;
-const
-  GeoLiteURL = 'http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz';
-var
-  tmp: string;
-  gz: TGZFileStream;
-  fs: TFileStream;
-begin
-  Result:=False;
-  tmp:=FHomeDir + 'GeoIP.dat.gz';
-  if not FileExists(tmp) or AUpdate then begin
-    if MessageDlg('', sGeoIPConfirm, mtConfirmation, mbYesNo, 0, mbYes) <> mrYes then
-      exit;
-    if not DownloadFile(GeoLiteURL, ExtractFilePath(tmp), ExtractFileName(tmp)) then
-      exit;
-  end;
-  try
-    FreeAndNil(FResolver);
-    gz:=TGZFileStream.Create(tmp, gzopenread);
-    try
-      fs:=TFileStream.Create(FHomeDir + 'GeoIP.dat', fmCreate);
-      try
-        while fs.CopyFrom(gz, 64*1024) = 64*1024 do
-          ;
-      finally
-        fs.Free;
-      end;
-    finally
-      gz.Free;
-    end;
-    DeleteFile(tmp);
-  except
-    DeleteFile(FHomeDir + 'GeoIP.dat');
-    DeleteFile(tmp);
-    raise;
-  end;
-  Result:=True;
-end;
-
-procedure TMainForm.TorrentColumnsChanged;
-var
-  i: integer;
-  s: string;
-begin
-  s:='';
-  for i:=0 to gTorrents.Columns.Count - 1 do
-    with gTorrents.Columns[i] do
-      if Visible and (Width > 0) then begin
-        if TorrentFieldsMap[ID - 1] <> '' then begin
-          if s <> '' then
-            s:=s + ',';
-          s:=s + TorrentFieldsMap[ID - 1];
-        end;
-      end;
-  RpcObj.TorrentFields:=s;
-  DoRefresh(True);
-end;
-
-function TMainForm.EtaToString(ETA: integer): string;
-begin
-  if (ETA < 0) or (ETA = MaxInt) then
-    Result:=''
-  else
-    Result:=SecondsToString(ETA);
-end;
-
-function TMainForm.GetTorrentStatus(TorrentIdx: integer): string;
-begin
-  case integer(gTorrents.Items[idxStatus, TorrentIdx]) of
-    TR_STATUS_CHECK_WAIT:
-      Result:=sWaiting;
-    TR_STATUS_CHECK:
-      Result:=sVerifying;
-    TR_STATUS_DOWNLOAD:
-      Result:=sDownloading;
-    TR_STATUS_SEED:
-      Result:=sSeeding;
-    TR_STATUS_STOPPED:
-      Result:=sStopped;
-    TR_STATUS_FINISHED:
-      Result:=sFinished;
-    else
-      Result:=sUnknown;
-  end;
-end;
-
-function TMainForm.GetSeedsText(Seeds, SeedsTotal: integer): string;
-begin
-  if SeedsTotal <> -1 then
-    Result:=Format('%d/%d', [Seeds, SeedsTotal])
-  else
-    Result:=Format('%d', [Seeds]);
-end;
-
-function TMainForm.GetPeersText(Peers, PeersTotal, Leechers: integer): string;
-begin
-  Result:=Format('%d', [Peers]);
-  if Leechers <> -1 then
-    Result:=Format('%s/%d', [Result, Leechers]);
-  Dec(PeersTotal);
-  if PeersTotal >= 0 then
-    Result:=Format('%s (%d)', [Result, PeersTotal]);
-end;
-
-function TMainForm.RatioToString(Ratio: double): string;
-begin
-  if (Ratio = MaxInt) or (Ratio = -2) then
-    Result:=Utf8Encode(WideString(WideChar($221E)))
-  else
-    if Ratio = -1 then
-      Result:=''
-    else
-      Result:=Format('%.3f', [Ratio]);
-end;
-
-function TMainForm.TorrentDateTimeToString(d: Int64): string;
-begin
-  if d = 0 then
-    Result:=''
-  else
-    Result:=DateTimeToStr(UnixToDateTime(d) + GetTimeZoneDelta);
-end;
-
-procedure TMainForm.DoRefresh(All: boolean);
-begin
-  if All then
-    RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtTorrents, rtDetails]
-  else
-    RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtDetails];
-end;
-
-procedure TMainForm.acDisconnectExecute(Sender: TObject);
-begin
-  DoDisconnect;
-end;
-
-procedure TMainForm.acExitExecute(Sender: TObject);
-begin
-  BeforeCloseApp;
-  Application.Terminate;
-end;
-
-procedure TMainForm.acDaemonOptionsExecute(Sender: TObject);
-var
-  req, args: TJSONObject;
-  s: string;
-  i, j: integer;
-begin
-  with TDaemonOptionsForm.Create(Self) do
-  try
-    AppBusy;
-    req:=TJSONObject.Create;
-    try
-      req.Add('method', 'session-get');
-      args:=RpcObj.SendRequest(req);
-      if args <> nil then
-        try
-          edDownloadDir.Text:=UTF8Encode(args.Strings['download-dir']);
-          if RpcObj.RPCVersion >= 5 then begin
-            // RPC version 5
-            edPort.Value:=args.Integers['peer-port'];
-            cbPEX.Checked:=args.Integers['pex-enabled'] <> 0;
-            edMaxPeers.Value:=args.Integers['peer-limit-global'];
-            cbRandomPort.Checked:=args.Integers['peer-port-random-on-start'] <> 0;
-            cbDHT.Checked:=args.Integers['dht-enabled'] <> 0;
-            cbSeedRatio.Checked:=args.Integers['seedRatioLimited'] <> 0;
-            edSeedRatio.Value:=args.Floats['seedRatioLimit'];
-            cbBlocklist.Checked:=args.Integers['blocklist-enabled'] <> 0;
-
-            cbAltEnabled.Checked:=args.Integers['alt-speed-enabled'] <> 0;
-            edAltDown.Value:=args.Integers['alt-speed-down'];
-            edAltUp.Value:=args.Integers['alt-speed-up'];
-            cbAutoAlt.Checked:=args.Integers['alt-speed-time-enabled'] <> 0;
-            edAltTimeBegin.Text:=FormatDateTime('hh:nn', args.Integers['alt-speed-time-begin']/MinsPerDay);
-            edAltTimeEnd.Text:=FormatDateTime('hh:nn', args.Integers['alt-speed-time-end']/MinsPerDay);
-            j:=args.Integers['alt-speed-time-day'];
-            for i:=1 to 7 do begin
-              TCheckBox(gbAltSpeed.FindChildControl(Format('cbDay%d', [i]))).Checked:=LongBool(j and 1);
-              j:=j shr 1;
-            end;
-            cbAutoAltClick(nil);
-          end
-          else begin
-            // RPC versions prior to v5
-            cbPortForwarding.Top:=cbRandomPort.Top;
-            edPort.Value:=args.Integers['port'];
-            cbPEX.Checked:=args.Integers['pex-allowed'] <> 0;
-            edMaxPeers.Value:=args.Integers['peer-limit'];
-            cbRandomPort.Visible:=False;
-            cbDHT.Visible:=False;
-            cbSeedRatio.Visible:=False;
-            edSeedRatio.Visible:=False;
-            btTestPort.Visible:=False;
-            cbBlocklist.Visible:=False;
-            gbAltSpeed.Visible:=False;
-          end;
-
-          if RpcObj.RPCVersion >= 7 then begin
-            cbIncompleteDir.Checked:=args.Integers['incomplete-dir-enabled'] <> 0;
-            edIncompleteDir.Text:=UTF8Encode(args.Strings['incomplete-dir']);
-            cbIncompleteDirClick(nil);
-          end
-          else begin
-            cbIncompleteDir.Visible:=False;
-            edIncompleteDir.Visible:=False;
-          end;
-
-          if RpcObj.RPCVersion >= 8 then
-            cbPartExt.Checked:=args.Integers['rename-partial-files'] <> 0
-          else
-            cbPartExt.Visible:=False;
-
-          if RpcObj.RPCVersion >= 9 then
-            cbLPD.Checked:=args.Integers['lpd-enabled'] <> 0
-          else
-            cbLPD.Visible:=False;
-
-          if RpcObj.RPCVersion >= 10 then begin
-            edCacheSize.Value:=args.Integers['cache-size-mb'];
-            cbIdleSeedLimit.Checked:=args.Integers['idle-seeding-limit-enabled'] <> 0;
-            edIdleSeedLimit.Value:=args.Integers['idle-seeding-limit'];
-            cbIdleSeedLimitClick(nil);
-          end
-          else begin
-            edCacheSize.Visible:=False;
-            txCacheSize.Visible:=False;
-            txMB.Visible:=False;
-            cbIdleSeedLimit.Visible:=False;
-            edIdleSeedLimit.Visible:=False;
-            txMinutes.Visible:=False;
-          end;
-
-          if args.IndexOfName('blocklist-url') >= 0 then
-            edBlocklistURL.Text:=UTF8Encode(args.Strings['blocklist-url'])
-          else begin
-            edBlocklistURL.Visible:=False;
-            cbBlocklist.Left:=cbPEX.Left;
-            cbBlocklist.Caption:=StringReplace(cbBlocklist.Caption, ':', '', [rfReplaceAll]);
-          end;
-          cbBlocklistClick(nil);
-
-          if RpcObj.RPCVersion >= 13 then
-            cbUTP.Checked:=args.Integers['utp-enabled'] <> 0
-          else
-            cbUTP.Visible:=False;
-
-          cbPortForwarding.Checked:=args.Integers['port-forwarding-enabled'] <> 0;
-          s:=args.Strings['encryption'];
-          if s = 'preferred' then
-            cbEncryption.ItemIndex:=1
-          else
-          if s = 'required' then
-            cbEncryption.ItemIndex:=2
-          else
-            cbEncryption.ItemIndex:=0;
-          cbMaxDown.Checked:=args.Integers['speed-limit-down-enabled'] <> 0;
-          edMaxDown.Value:=args.Integers['speed-limit-down'];
-          cbMaxUp.Checked:=args.Integers['speed-limit-up-enabled'] <> 0;
-          edMaxUp.Value:=args.Integers['speed-limit-up'];
-        finally
-          args.Free;
-        end
-      else begin
-        CheckStatus(False);
-        exit;
-      end;
-    finally
-      req.Free;
-    end;
-    cbMaxDownClick(nil);
-    cbMaxUpClick(nil);
-    cbRandomPortClick(nil);
-    cbSeedRatioClick(nil);
-    AppNormal;
-
-    if ShowModal = mrOK then begin
-      AppBusy;
-      Self.Update;
-      req:=TJSONObject.Create;
-      try
-        req.Add('method', 'session-set');
-        args:=TJSONObject.Create;
-        args.Add('download-dir', UTF8Decode(edDownloadDir.Text));
-        args.Add('port-forwarding-enabled', integer(cbPortForwarding.Checked) and 1);
-        case cbEncryption.ItemIndex of
-          1: s:='preferred';
-          2: s:='required';
-          else s:='tolerated';
-        end;
-        args.Add('encryption', s);
-        args.Add('speed-limit-down-enabled', integer(cbMaxDown.Checked) and 1);
-        if cbMaxDown.Checked then
-          args.Add('speed-limit-down', edMaxDown.Value);
-        args.Add('speed-limit-up-enabled', integer(cbMaxUp.Checked) and 1);
-        if cbMaxUp.Checked then
-          args.Add('speed-limit-up', edMaxUp.Value);
-        if RpcObj.RPCVersion >= 5 then begin
-          args.Add('peer-limit-global', edMaxPeers.Value);
-          args.Add('peer-port', edPort.Value);
-          args.Add('pex-enabled', integer(cbPEX.Checked) and 1);
-          args.Add('peer-port-random-on-start', integer(cbRandomPort.Checked) and 1);
-          args.Add('dht-enabled', integer(cbDHT.Checked) and 1);
-          args.Add('seedRatioLimited', integer(cbSeedRatio.Checked) and 1);
-          if cbSeedRatio.Checked then
-            args.Add('seedRatioLimit', edSeedRatio.Value);
-          args.Add('blocklist-enabled', integer(cbBlocklist.Checked) and 1);
-
-          args.Add('alt-speed-enabled', integer(cbAltEnabled.Checked) and 1);
-          args.Add('alt-speed-down', edAltDown.Value);
-          args.Add('alt-speed-up', edAltUp.Value);
-          args.Add('alt-speed-time-enabled', integer(cbAutoAlt.Checked) and 1);
-          if cbAutoAlt.Checked then begin
-            args.Add('alt-speed-time-begin', Round(Frac(StrToTime(edAltTimeBegin.Text))*MinsPerDay));
-            args.Add('alt-speed-time-end', Round(Frac(StrToTime(edAltTimeEnd.Text))*MinsPerDay));
-            j:=0;
-            for i:=7 downto 1 do begin
-              j:=j shl 1;
-              j:=j or (integer(TCheckBox(gbAltSpeed.FindChildControl(Format('cbDay%d', [i]))).Checked) and 1);
-            end;
-            args.Add('alt-speed-time-day', j);
-          end;
-        end
-        else begin
-          args.Add('peer-limit', edMaxPeers.Value);
-          args.Add('port', edPort.Value);
-          args.Add('pex-allowed', integer(cbPEX.Checked) and 1);
-        end;
-        if RpcObj.RPCVersion >= 7 then begin
-          args.Add('incomplete-dir-enabled', integer(cbIncompleteDir.Checked) and 1);
-          if cbIncompleteDir.Checked then
-            args.Add('incomplete-dir', UTF8Decode(edIncompleteDir.Text));
-        end;
-        if RpcObj.RPCVersion >= 8 then
-          args.Add('rename-partial-files', integer(cbPartExt.Checked) and 1);
-        if RpcObj.RPCVersion >= 9 then
-          args.Add('lpd-enabled', integer(cbLPD.Checked) and 1);
-        if RpcObj.RPCVersion >= 10 then begin
-          args.Add('cache-size-mb', edCacheSize.Value);
-          args.Add('idle-seeding-limit-enabled', integer(cbIdleSeedLimit.Checked) and 1);
-          args.Add('idle-seeding-limit', edIdleSeedLimit.Value);
-        end;
-        if edBlocklistURL.Visible then
-          if cbBlocklist.Checked then
-            args.Add('blocklist-url', UTF8Decode(edBlocklistURL.Text));
-        if RpcObj.RPCVersion >= 13 then
-          args.Add('utp-enabled', integer(cbUTP.Checked) and 1);
-
-        req.Add('arguments', args);
-        args:=RpcObj.SendRequest(req, False);
-        if args = nil then begin
-          CheckStatus(False);
-          exit;
-        end;
-        args.Free;
-      finally
-        req.Free;
-      end;
-      RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtSession];
-      AppNormal;
-    end;
-  finally
-    Free;
-  end;
-end;
-
-procedure TMainForm.acReannounceTorrentExecute(Sender: TObject);
-begin
-  TorrentAction(GetSelectedTorrents, 'reannounce');
-end;
-
-procedure TMainForm.acRemoveTorrentAndDataExecute(Sender: TObject);
-begin
-  InternalRemoveTorrent(sRemoveTorrentData, sRemoveTorrentDataMulti, True);
-end;
-
-procedure TMainForm.acRemoveTorrentExecute(Sender: TObject);
-begin
-  InternalRemoveTorrent(sRemoveTorrent, sRemoveTorrentMulti, False);
-end;
-
-procedure TMainForm.acResolveCountryExecute(Sender: TObject);
-begin
-  if not acResolveCountry.Checked then
-    if GetGeoIpDatabase = '' then
-      if not DownloadGeoIpDatabase(False) then
-        exit;
-
-  acResolveCountry.Checked:=not acResolveCountry.Checked;
-  FreeAndNil(FResolver);
-  DoRefresh;
-  acShowCountryFlag.Enabled:=acResolveCountry.Checked;
-end;
-
-procedure TMainForm.acResolveHostExecute(Sender: TObject);
-begin
-  acResolveHost.Checked:=not acResolveHost.Checked;
-  FreeAndNil(FResolver);
-  DoRefresh;
-end;
-
-procedure TMainForm.acSelectAllExecute(Sender: TObject);
-begin
-  Application.ProcessMessages;
-  if lvFiles.Focused then
-    lvFiles.SelectAll
-  else
-    gTorrents.SelectAll;
-end;
-
-procedure TMainForm.acSetHighPriorityExecute(Sender: TObject);
-begin
-  Application.ProcessMessages;
-  if lvFiles.Focused then
-    SetCurrentFilePriority('high')
-  else
-    SetTorrentPriority(TR_PRI_HIGH);
-end;
-
-procedure TMainForm.acSetLowPriorityExecute(Sender: TObject);
-begin
-  Application.ProcessMessages;
-  if lvFiles.Focused then
-    SetCurrentFilePriority('low')
-  else
-    SetTorrentPriority(TR_PRI_LOW);
-end;
-
-procedure TMainForm.acSetNormalPriorityExecute(Sender: TObject);
-begin
-  Application.ProcessMessages;
-  if lvFiles.Focused then
-    SetCurrentFilePriority('normal')
-  else
-    SetTorrentPriority(TR_PRI_NORMAL);
-end;
-
-procedure TMainForm.acSetNotDownloadExecute(Sender: TObject);
-begin
-  SetCurrentFilePriority('skip');
-end;
-
-procedure TMainForm.acSetupColumnsExecute(Sender: TObject);
-var
-  g: TVarGrid;
-  s: string;
-begin
-  Application.ProcessMessages;
-  if lvTrackers.Focused then
-    g:=lvTrackers
-  else
-  if lvPeers.Focused then
-    g:=lvPeers
-  else
-  if lvFiles.Focused then
-    g:=lvFiles
-  else
-    g:=gTorrents;
-  if g = gTorrents then
-    s:=sTorrents
-  else
-    s:=PageInfo.ActivePage.Caption;
-  if not SetupColumns(g, 0, s) then exit;
-  if g = gTorrents then
-    TorrentColumnsChanged;
-end;
-
-procedure TMainForm.acShowAppExecute(Sender: TObject);
-begin
-  ShowApp;
-end;
-
-procedure TMainForm.acShowCountryFlagExecute(Sender: TObject);
-const
-  FlagsURL = 'http://transmisson-remote-gui.googlecode.com/files/flags.zip';
-begin
-  if not acShowCountryFlag.Checked then
-    if GetFlagsArchive = '' then begin
-      if MessageDlg('', sFlagArchiveConfirm, mtConfirmation, mbYesNo, 0, mbYes) <> mrYes then
-        exit;
-      if not DownloadFile(FlagsURL, FHomeDir) then
-        exit;
-    end;
-  acShowCountryFlag.Checked:=not acShowCountryFlag.Checked;
-  DoRefresh;
-end;
-
-procedure TMainForm.acStartAllTorrentsExecute(Sender: TObject);
-begin
-  TorrentAction(NULL, 'start');
-end;
-
-procedure TMainForm.acStartTorrentExecute(Sender: TObject);
-begin
-  if gTorrents.Items.Count = 0 then exit;
-  TorrentAction(GetSelectedTorrents, 'start');
-end;
-
-procedure TMainForm.acStopAllTorrentsExecute(Sender: TObject);
-begin
-  TorrentAction(NULL, 'stop');
-end;
-
-procedure TMainForm.acStopTorrentExecute(Sender: TObject);
-begin
-  if gTorrents.Items.Count = 0 then exit;
-  TorrentAction(GetSelectedTorrents, 'stop');
-end;
-
-procedure TMainForm.acTorrentPropsExecute(Sender: TObject);
-const
-  TR_RATIOLIMIT_GLOBAL    = 0; // follow the global settings
-  TR_RATIOLIMIT_SINGLE    = 1; // override the global settings, seeding until a certain ratio
-  TR_RATIOLIMIT_UNLIMITED = 2; // override the global settings, seeding regardless of ratio
-
-  TR_IDLELIMIT_GLOBAL     = 0; // follow the global settings
-  TR_IDLELIMIT_SINGLE     = 1; // override the global settings, seeding until a certain idle time
-  TR_IDLELIMIT_UNLIMITED  = 2; // override the global settings, seeding regardless of activity
-
-var
-  req, args, t: TJSONObject;
-  i, j, id: integer;
-  ids: TJSONArray;
-  TorrentIds: variant;
-  s: string;
-begin
-  gTorrentsClick(nil);
-  id:=RpcObj.CurTorrentId;
-  if id = 0 then exit;
-  AppBusy;
-  with TTorrPropsForm.Create(Self) do
-  try
-    gTorrents.Tag:=1;
-    TorrentIds:=GetSelectedTorrents;
-    args:=RpcObj.RequestInfo(id, ['downloadLimit', 'downloadLimitMode', 'downloadLimited', 'uploadLimit', 'uploadLimitMode', 'uploadLimited',
-                                  'name', 'maxConnectedPeers', 'seedRatioMode', 'seedRatioLimit', 'seedIdleLimit', 'seedIdleMode']);
-    if args = nil then begin
-      CheckStatus(False);
-      exit;
-    end;
-    try
-      t:=args.Arrays['torrents'].Objects[0];
-
-      if gTorrents.SelCount > 1 then begin
-        s:=Format(sSeveralTorrents, [gTorrents.SelCount]);
-        Caption:=Caption + ' - ' + s;
-      end
-      else
-        s:=UTF8Encode(t.Strings['name']);
-
-      txName.Caption:=txName.Caption + ' ' + s;
-      if RpcObj.RPCVersion < 5 then begin
-        // RPC versions prior to v5
-        j:=t.Integers['downloadLimitMode'];
-        cbMaxDown.Checked:=j = TR_SPEEDLIMIT_SINGLE;
-        i:=t.Integers['downloadLimit'];
-        if (i < 0) or (j = TR_SPEEDLIMIT_UNLIMITED) then
-          edMaxDown.ValueEmpty:=True
-        else
-          edMaxDown.Value:=i;
-
-        j:=t.Integers['uploadLimitMode'];
-        cbMaxUp.Checked:=j = TR_SPEEDLIMIT_SINGLE;
-        i:=t.Integers['uploadLimit'];
-        if (i < 0) or (j = TR_SPEEDLIMIT_UNLIMITED) then
-          edMaxUp.ValueEmpty:=True
-        else
-          edMaxUp.Value:=i;
-        cbSeedRatio.Visible:=False;
-        edSeedRatio.Visible:=False;
-      end else begin
-        // RPC version 5
-        cbMaxDown.Checked:=t.Booleans['downloadLimited'];
-        i:=t.Integers['downloadLimit'];
-        if i < 0 then
-          edMaxDown.ValueEmpty:=True
-        else
-          edMaxDown.Value:=i;
-
-        cbMaxUp.Checked:=t.Booleans['uploadLimited'];
-        i:=t.Integers['uploadLimit'];
-        if i < 0 then
-          edMaxUp.ValueEmpty:=True
-        else
-          edMaxUp.Value:=i;
-
-        case t.Integers['seedRatioMode'] of
-          TR_RATIOLIMIT_SINGLE:
-            cbSeedRatio.State:=cbChecked;
-          TR_RATIOLIMIT_UNLIMITED:
-            cbSeedRatio.State:=cbUnchecked;
-          else
-            cbSeedRatio.State:=cbGrayed;
-        end;
-        edSeedRatio.Value:=t.Floats['seedRatioLimit'];
-      end;
-
-      if RpcObj.RPCVersion >= 10 then begin
-        case t.Integers['seedIdleMode'] of
-          TR_IDLELIMIT_SINGLE:
-            cbIdleSeedLimit.State:=cbChecked;
-          TR_IDLELIMIT_UNLIMITED:
-            cbIdleSeedLimit.State:=cbUnchecked;
-          else
-            cbIdleSeedLimit.State:=cbGrayed;
-        end;
-        edIdleSeedLimit.Value:=t.Integers['seedIdleLimit'];
-        cbIdleSeedLimitClick(nil);
-      end
-      else begin
-        cbIdleSeedLimit.Visible:=False;
-        edIdleSeedLimit.Visible:=False;
-        txMinutes.Visible:=False;
-      end;
-      edPeerLimit.Value:=t.Integers['maxConnectedPeers'];
-    finally
-      args.Free;
-    end;
-    cbMaxDownClick(nil);
-    cbMaxUpClick(nil);
-    cbSeedRatioClick(nil);
-    AppNormal;
-    if ShowModal = mrOk then begin
-      AppBusy;
-      Self.Update;
-      req:=TJSONObject.Create;
-      try
-        req.Add('method', 'torrent-set');
-        args:=TJSONObject.Create;
-        ids:=TJSONArray.Create;
-        for i:=VarArrayLowBound(TorrentIds, 1) to VarArrayHighBound(TorrentIds, 1) do
-          ids.Add(integer(TorrentIds[i]));
-        args.Add('ids', ids);
-
-        if RpcObj.RPCVersion < 5 then
-        begin
-          // RPC versions prior to v5
-          args.Add('speed-limit-down-enabled', integer(cbMaxDown.Checked) and 1);
-          args.Add('speed-limit-up-enabled', integer(cbMaxUp.Checked) and 1);
-          if cbMaxDown.Checked then
-            args.Add('speed-limit-down', edMaxDown.Value);
-          if cbMaxUp.Checked then
-            args.Add('speed-limit-up', edMaxUp.Value);
-        end else begin
-          // RPC version 5
-          args.Add('downloadLimited', integer(cbMaxDown.Checked) and 1);
-          args.Add('uploadLimited', integer(cbMaxUp.Checked) and 1);
-          if cbMaxDown.Checked then
-            args.Add('downloadLimit', edMaxDown.Value);
-          if cbMaxUp.Checked then
-            args.Add('uploadLimit', edMaxUp.Value);
-          case cbSeedRatio.State of
-            cbChecked:
-              i:=TR_RATIOLIMIT_SINGLE;
-            cbUnchecked:
-              i:=TR_RATIOLIMIT_UNLIMITED;
-            else
-              i:=TR_RATIOLIMIT_GLOBAL;
-          end;
-          args.Add('seedRatioMode', i);
-          if cbSeedRatio.State = cbChecked then
-            args.Add('seedRatioLimit', edSeedRatio.Value);
-        end;
-
-        if RpcObj.RPCVersion >= 10 then begin
-          case cbIdleSeedLimit.State of
-            cbChecked:
-              i:=TR_IDLELIMIT_SINGLE;
-            cbUnchecked:
-              i:=TR_IDLELIMIT_UNLIMITED;
-            else
-              i:=TR_IDLELIMIT_GLOBAL;
-          end;
-          args.Add('seedIdleMode', i);
-          if cbIdleSeedLimit.State = cbChecked then
-            args.Add('seedIdleLimit', edIdleSeedLimit.Value);
-        end;
-
-        args.Add('peer-limit', edPeerLimit.Value);
-        req.Add('arguments', args);
-        args:=nil;
-        args:=RpcObj.SendRequest(req, False);
-        if args = nil then begin
-          CheckStatus(False);
-          exit;
-        end;
-        args.Free;
-      finally
-        req.Free;
-      end;
-      DoRefresh;
-      AppNormal;
-    end;
-  finally
-    gTorrents.Tag:=0;
-    Free;
-  end;
-end;
-
-procedure TMainForm.acUpdateBlocklistExecute(Sender: TObject);
-var
-  req: TJSONObject;
-  res: TJSONObject;
-begin
-  Application.ProcessMessages;
-  AppBusy;
-  req:=TJSONObject.Create;
-  try
-    req.Add('method', 'blocklist-update');
-    res:=RpcObj.SendRequest(req, True, 3*60000);
-    AppNormal;
-    if res = nil then begin
-      CheckStatus(False);
-      exit;
-    end;
-    MessageDlg(Format(sBlocklistUpdateComplete, [res.Integers[('blocklist-size')]]), mtInformation, [mbOK], 0);
-    res.Free;
-  finally
-    req.Free;
-  end;
-end;
-
-procedure TMainForm.acUpdateGeoIPExecute(Sender: TObject);
-begin
-  if DownloadGeoIpDatabase(True) then
-    MessageDlg(sUpdateComplete, mtInformation, [mbOK], 0);
-end;
-
-procedure TMainForm.acVerifyTorrentExecute(Sender: TObject);
-var
-  ids: variant;
-  s: string;
-begin
-  if gTorrents.Items.Count = 0 then exit;
-  gTorrents.Tag:=1;
-  try
-    ids:=GetSelectedTorrents;
-    if gTorrents.SelCount < 2 then
-      s:=Format(sTorrentVerification, [UTF8Encode(widestring(gTorrents.Items[idxName, gTorrents.Items.IndexOf(idxTorrentId, ids[0])]))])
-    else
-      s:=Format(sTorrentsVerification, [gTorrents.SelCount]);
-    if MessageDlg('', s, mtConfirmation, mbYesNo, 0, mbNo) <> mrYes then
-      exit;
-  finally
-    gTorrents.Tag:=0;
-  end;
-  TorrentAction(ids, 'verify');
-end;
-
-procedure TMainForm.AnimateTimerTimer(Sender: TObject);
-begin
-  if RpcObj.RequestStartTime = 0 then begin
-    pbStatus.Visible:=False;
-    AnimateTimer.Enabled:=False;
-    exit;
-  end;
-  Inc(FStatusImgIndex);
-  if FStatusImgIndex > 37 then
-    FStatusImgIndex:=30;
-  pbStatus.Invalidate;
-end;
-
-procedure TMainForm.ApplicationPropertiesException(Sender: TObject; E: Exception);
-begin
-  ForceAppNormal;
-  MessageDlg(E.Message, mtError, [mbOK], 0);
-end;
-
-procedure TMainForm.ApplicationPropertiesIdle(Sender: TObject; var Done: Boolean);
-begin
-  UpdateUI;
-{$ifdef LCLcarbon}
-  CheckSynchronize;
-{$endif LCLcarbon}
-  Done:=True;
-end;
-
-procedure TMainForm.ApplicationPropertiesMinimize(Sender: TObject);
-begin
-{$ifndef darwin}
-  if FIni.ReadBool('Interface', 'TrayMinimize', True) then
-    HideApp;
-{$endif darwin}
-  UpdateTray;
-end;
-
-procedure TMainForm.ApplicationPropertiesRestore(Sender: TObject);
-begin
-  UpdateTray;
-end;
-
-procedure TMainForm.edSearchChange(Sender: TObject);
-begin
-  DoRefresh(True);
-end;
-
-procedure TMainForm.FormDropFiles(Sender: TObject; const FileNames: array of String);
-begin
-  if FileExistsUTF8(FileNames[0]) then
-    AddTorrentFile(FileNames[0]);
-end;
-
-procedure TMainForm.FormWindowStateChange(Sender: TObject);
-begin
-{$ifdef lclgtk2}
-  if WindowState = wsMinimized then
-    ApplicationPropertiesMinimize(nil)
-  else
-    ApplicationPropertiesRestore(nil);
-{$endif lclgtk2}
-end;
-
-procedure TMainForm.gTorrentsCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState;
-                                            var CellAttribs: TCellAttributes);
-var
-  j: integer;
-begin
-  if ARow < 0 then exit;
-  with CellAttribs do begin
-    if ACol = 0 then
-      ImageIndex:=integer(Sender.Items[idxStateImg, ARow]);
-    if Text = '' then exit;
-    case ADataCol of
-      idxStatus:
-        Text:=GetTorrentStatus(ARow);
-      idxSize, idxDownloaded, idxUploaded, idxSizeToDowload:
-        Text:=GetHumanSize(Sender.Items[ADataCol, ARow]);
-      idxDone:
-        Text:=Format('%.1f%%', [double(Sender.Items[idxDone, ARow])]);
-      idxSeeds:
-        if not VarIsNull(Sender.Items[idxSeedsTotal, ARow]) then
-          Text:=GetSeedsText(Sender.Items[idxSeeds, ARow], Sender.Items[idxSeedsTotal, ARow]);
-      idxPeers:
-        Text:=GetPeersText(Sender.Items[idxPeers, ARow], -1, Sender.Items[idxLeechersTotal, ARow]);
-      idxDownSpeed, idxUpSpeed:
-        begin
-          j:=Sender.Items[ADataCol, ARow];
-          if j > 0 then
-            Text:=GetHumanSize(j, 1) + sPerSecond
-          else
-            Text:='';
-        end;
-      idxETA:
-        Text:=EtaToString(Sender.Items[idxETA, ARow]);
-      idxRatio:
-        Text:=RatioToString(Sender.Items[idxRatio, ARow]);
-      idxAddedOn, idxCompletedOn, idxLastActive:
-        Text:=TorrentDateTimeToString(Sender.Items[ADataCol, ARow]);
-      idxPriority:
-        Text:=PriorityToStr(Sender.Items[ADataCol, ARow], ImageIndex);
-    end;
-  end;
-end;
-
-procedure TMainForm.gTorrentsClick(Sender: TObject);
-var
-  i: integer;
-begin
-  if gTorrents.Tag <> 0 then exit;
-  RpcObj.Lock;
-  try
-    if gTorrents.Items.Count > 0 then
-      i:=gTorrents.Items[idxTorrentId, gTorrents.Row]
-    else
-      i:=0;
-    if RpcObj.CurTorrentId = i then
-      exit;
-    RpcObj.CurTorrentId:=i;
-  finally
-    RpcObj.Unlock;
-  end;
-
-  ClearDetailsInfo;
-
-  TorrentsListTimer.Enabled:=False;
-  TorrentsListTimer.Enabled:=True;
-end;
-
-procedure TMainForm.gTorrentsDblClick(Sender: TObject);
-begin
-  acTorrentProps.Execute;
-end;
-
-procedure TMainForm.gTorrentsDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean);
-begin
-  if ARow < 0 then exit;
-  if ADataCol = idxDone then begin
-    ADefaultDrawing:=False;
-    DrawProgressCell(Sender, ACol, ARow, ADataCol, AState, R);
-  end;
-end;
-
-procedure TMainForm.gTorrentsResize(Sender: TObject);
-begin
-  if not FStarted then begin
-    VSplitter.SetSplitterPosition(FIni.ReadInteger('MainForm', 'VSplitter', VSplitter.GetSplitterPosition));
-    HSplitter.SetSplitterPosition(FIni.ReadInteger('MainForm', 'HSplitter', HSplitter.GetSplitterPosition));
-  end;
-end;
-
-procedure TMainForm.gTorrentsSortColumn(Sender: TVarGrid; var ASortCol: integer);
-begin
-  if ASortCol = idxSeeds then
-    ASortCol:=idxSeedsTotal;
-  if ASortCol = idxPeers then
-    ASortCol:=idxLeechersTotal;
-end;
-
-procedure TMainForm.lvFilesCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-begin
-  if ARow < 0 then exit;
-  with CellAttribs do begin
-    if Text = '' then exit;
-    case ADataCol of
-      idxFilePriority:
-        Text:=PriorityToStr(FFiles[idxFilePriority, ARow], ImageIndex);
-      idxFileSize, idxFileDone:
-        Text:=GetHumanSize(FFiles[ADataCol, ARow]);
-      idxFileProgress:
-        Text:=Format('%.1f%%', [double(FFiles[ADataCol, ARow])]);
-    end;
-  end;
-end;
-
-procedure TMainForm.lvFilesDblClick(Sender: TObject);
-begin
-  acOpenFile.Execute;
-end;
-
-procedure TMainForm.lvFilesDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect;
-  var ADefaultDrawing: boolean);
-begin
-  if ARow < 0 then exit;
-  if ADataCol = idxFileProgress then begin
-    ADefaultDrawing:=False;
-    DrawProgressCell(Sender, ACol, ARow, ADataCol, AState, R);
-  end;
-end;
-
-procedure TMainForm.lvFilesKeyPress(Sender: TObject; var Key: char);
-begin
-  if Key = #13 then
-    acOpenFile.Execute;
-end;
-
-procedure TMainForm.lvFilterCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-begin
-  if ARow < 0 then exit;
-  with CellAttribs do begin
-    case ARow of
-      0: ImageIndex:=imgAll;
-      1: ImageIndex:=imgDown;
-      2: ImageIndex:=imgSeed;
-      3: ImageIndex:=imgActive;
-      4: ImageIndex:=15;
-      5: ImageIndex:=imgStopped;
-      else
-        if Text <> '' then
-          if ARow >= Sender.Items.Count - FTrackers.Count then
-            ImageIndex:=5
-          else
-            ImageIndex:=22;
-    end;
-  end;
-end;
-
-procedure TMainForm.lvFilterClick(Sender: TObject);
-begin
-  if VarIsNull(lvFilter.Items[0, lvFilter.Row]) then
-    if (FLastFilerIndex > lvFilter.Row) or (lvFilter.Row = lvFilter.Items.Count - 1) then
-      lvFilter.Row:=lvFilter.Row - 1
-    else
-      lvFilter.Row:=lvFilter.Row + 1;
-  FLastFilerIndex:=lvFilter.Row;
-  FilterTimer.Enabled:=False;
-  FilterTimer.Enabled:=True;
-end;
-
-procedure TMainForm.lvFilterDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect;
-  var ADefaultDrawing: boolean);
-var
-  i: integer;
-  RR: TRect;
-begin
-  ADefaultDrawing:=not VarIsNull(Sender.Items[0, ARow]);
-  if ADefaultDrawing then exit;
-
-  with lvFilter.Canvas do begin
-    Brush.Color:=lvFilter.Color;
-    FillRect(R);
-    i:=(R.Bottom + R.Top) div 2;
-    Brush.Color:=clBtnFace;
-    RR:=R;
-    InflateRect(RR, -4, 0);
-    RR.Top:=i - 1;
-    RR.Bottom:=i + 1;
-    FillRect(RR);
-  end;
-end;
-
-procedure TMainForm.lvPeersCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-var
-  i: integer;
-begin
-  if ARow < 0 then exit;
-  with CellAttribs do begin
-    if Text = '' then exit;
-    if ACol = 0 then begin
-      ImageIndex:=Sender.Items[idxPeerCountryImage, ARow];
-      if ImageIndex = 0 then
-        ImageIndex:=-1;
-    end;
-    case ADataCol of
-      idxPeerDone:
-        Text:=Format('%.1f%%', [double(Sender.Items[ADataCol, ARow])*100.0]);
-      idxPeerDownSpeed, idxPeerUpSpeed:
-        begin
-          i:=Sender.Items[ADataCol, ARow];
-          if i > 0 then
-            Text:=GetHumanSize(i, 1) + sPerSecond
-          else
-            Text:='';
-        end;
-    end;
-  end;
-end;
-
-procedure TMainForm.lvTrackersCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-var
-  f: double;
-begin
-  if ARow < 0 then exit;
-  with CellAttribs do begin
-    if Text = '' then exit;
-    case ADataCol of
-      idxTrackersListSeeds:
-        if lvTrackers.Items[ADataCol, ARow] < 0 then
-          Text:='';
-      idxTrackersListUpdateIn:
-        begin
-          f:=double(lvTrackers.Items[ADataCol, ARow]);
-          if f = 0 then
-            Text:='-'
-          else
-          if f = 1 then
-            Text:=sUpdating
-          else
-            Text:=SecondsToString(Trunc(f));
-        end;
-    end;
-  end;
-end;
-
-procedure TMainForm.lvTrackersDblClick(Sender: TObject);
-begin
-  acEditTracker.Execute;
-end;
-
-procedure TMainForm.lvTrackersKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
-begin
-  if Key = VK_DELETE then begin
-    Key:=0;
-    acDelTracker.Execute;
-  end;
-end;
-
-procedure TMainForm.pbStatusPaint(Sender: TObject);
-begin
-  if FStatusBmp = nil then begin
-    FStatusBmp:=TBitmap.Create;
-    FStatusBmp.Width:=pbStatus.Width;
-    FStatusBmp.Height:=pbStatus.Height;
-  end;
-  with FStatusBmp.Canvas do begin
-    Brush.Color:=clBtnFace;
-    FillRect(pbStatus.ClientRect);
-    ImageList16.Draw(FStatusBmp.Canvas, (pbStatus.Width - ImageList16.Width) div 2, (pbStatus.Height - ImageList16.Height) div 2, FStatusImgIndex);
-  end;
-  pbStatus.Canvas.Draw(0, 0, FStatusBmp);
-end;
-
-procedure TMainForm.panReconnectResize(Sender: TObject);
-begin
-  panReconnectFrame.BoundsRect:=panReconnect.ClientRect;
-end;
-
-procedure TMainForm.pbDownloadedPaint(Sender: TObject);
-begin
-  if FTorrentProgress <> nil then
-    pbDownloaded.Canvas.StretchDraw(pbDownloaded.ClientRect, FTorrentProgress);
-end;
-
-procedure TMainForm.pbDownloadedResize(Sender: TObject);
-begin
-  ProcessPieces(FLastPieces, FLastPieceCount, FLastDone);
-end;
-
-procedure TMainForm.StatusBarMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
-var
-  pt: TPoint;
-begin
-  if (Button = mbRight) and RpcObj.Connected then begin
-    pt:=StatusBar.ClientToScreen(Point(X, Y));
-    case StatusBar.GetPanelIndexAt(X, Y) of
-      1: pmDownSpeeds.PopUp(pt.X, pt.Y);
-      2: pmUpSpeeds.PopUp(pt.X, pt.Y);
-    end;
-  end;
-end;
-
-{$ifdef LCLcarbon}
-type
-  THackApplication = class(TApplication)
-  end;
-{$endif LCLcarbon}
-
-procedure TMainForm.TickTimerTimer(Sender: TObject);
-var
-  s: string;
-begin
-  TickTimer.Enabled:=False;
-  try
-    if not FStarted then begin
-      Application.ProcessMessages;
-      FStarted:=True;
-      acConnect.Execute;
-      Application.ProcessMessages;
-      panTransfer.ChildSizing.Layout:=cclLeftToRightThenTopToBottom;
-      panGeneralInfo.ChildSizing.Layout:=cclLeftToRightThenTopToBottom;
-      panTransfer.ChildSizing.Layout:=cclNone;
-      panGeneralInfo.ChildSizing.Layout:=cclNone;
-      with panTransfer do
-        ClientHeight:=Controls[ControlCount - 1].BoundsRect.Bottom + ChildSizing.TopBottomSpacing;
-      with panGeneralInfo do
-        ClientHeight:=Controls[ControlCount - 1].BoundsRect.Bottom + ChildSizing.TopBottomSpacing;
-
-      if FIni.ReadBool('MainForm', 'FirstRun', True) then begin
-        if not acResolveCountry.Checked then
-          acResolveCountry.Execute;
-        if acResolveCountry.Checked and not acShowCountryFlag.Checked then
-          acShowCountryFlag.Execute;
-        FIni.WriteBool('MainForm', 'FirstRun', False);
-      end;
-      panSearch.AutoSize:=False;
-    end;
-
-    if FileExists(FIPCFileName) then begin
-      s:=ReadFileToString(UTF8Encode(FIPCFileName));
-      DeleteFile(FIPCFileName);
-      ShowApp;
-
-      if s = '' then
-        exit;
-
-      Application.ProcessMessages;
-      TickTimer.Enabled:=True;
-      DoAddTorrent(s);
-    end;
-
-    if RpcObj.Connected then
-      FReconnectTimeOut:=0
-    else
-      if panReconnect.Visible then
-        if Now - FReconnectWaitStart >= FReconnectTimeOut/SecsPerDay then
-          DoConnect
-        else
-          txReconnectSecs.Caption:=Format(sReconnect, [FReconnectTimeOut - Round(SecsPerDay*(Now - FReconnectWaitStart))]);
-
-    if not pbStatus.Visible and (RpcObj.RequestStartTime <> 0) and (Now - RpcObj.RequestStartTime >= 1/SecsPerDay) then begin
-      pbStatus.Visible:=True;
-      AnimateTimer.Enabled:=True;
-    end;
-{$ifdef LCLcarbon}
-     THackApplication(Application).ProcessAsyncCallQueue;
-{$endif LCLcarbon}
-  finally
-    TickTimer.Enabled:=True;
-  end;
-end;
-
-procedure TMainForm.FilterTimerTimer(Sender: TObject);
-begin
-  FilterTimer.Enabled:=False;
-  FFilterChanged:=True;
-  DoRefresh(True);
-end;
-
-procedure TMainForm.FormClose(Sender: TObject; var CloseAction: TCloseAction);
-begin
-{$ifndef darwin}
-  if FIni.ReadBool('Interface', 'TrayClose', False) then begin
-    CloseAction:=caHide;
-    HideApp;
-    UpdateTray;
-    exit;
-  end;
-{$endif darwin}
-  BeforeCloseApp;
-end;
-
-procedure TMainForm.PageInfoChange(Sender: TObject);
-begin
-  RpcObj.Lock;
-  try
-    if PageInfo.ActivePage = tabGeneral then
-      RpcObj.AdvInfo:=aiGeneral
-    else
-    if PageInfo.ActivePage = tabPeers then
-      RpcObj.AdvInfo:=aiPeers
-    else
-    if PageInfo.ActivePage = tabFiles then
-      RpcObj.AdvInfo:=aiFiles
-    else
-    if PageInfo.ActivePage = tabTrackers then
-      RpcObj.AdvInfo:=aiTrackers;
-    DoRefresh;
-  finally
-    RpcObj.Unlock;
-  end;
-end;
-
-procedure TMainForm.TorrentsListTimerTimer(Sender: TObject);
-begin
-  TorrentsListTimer.Enabled:=False;
-  DoRefresh;
-end;
-
-procedure TMainForm.pmFilesPopup(Sender: TObject);
-begin
-  UpdateUI;
-end;
-
-procedure TMainForm.pmTorrentsPopup(Sender: TObject);
-begin
-  UpdateUI;
-end;
-
-procedure TMainForm.sbGenInfoResize(Sender: TObject);
-begin
-  sbGenInfo.HorzScrollBar.Visible:=False;
-end;
-
-procedure TMainForm.TrayIconDblClick(Sender: TObject);
-begin
-{$ifndef darwin}
-  acShowApp.Execute;
-{$endif darwin}
-end;
-
-procedure TMainForm.UrlLabelClick(Sender: TObject);
-begin
-  AppBusy;
-  OpenURL((Sender as TLabel).Caption);
-  AppNormal;
-end;
-
-procedure TMainForm.CenterReconnectWindow;
-begin
-  panReconnect.Left:=(ClientWidth - panReconnect.Width) div 2;
-  panReconnect.Top:=(ClientHeight - panReconnect.Height) div 2;
-end;
-
-procedure TMainForm.DrawProgressCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const ACellRect: TRect);
-var
-  R, RR: TRect;
-  i, j, h: integer;
-  s: string;
-  cl: TColor;
-  Progress: double;
-  sz: TSize;
-  ts: TTextStyle;
-begin
-  Progress:=double(Sender.Items[ADataCol, ARow]);
-  with Sender.Canvas do begin
-    R:=ACellRect;
-    Pen.Color:=Brush.Color;
-    Rectangle(R);
-    s:=Format('%.1f%%', [Progress]);
-    sz:=TextExtent(s);
-    InflateRect(R, -1, -1);
-    Pen.Color:=clBtnFace;
-    Rectangle(R);
-    InflateRect(R, -1, -1);
-
-    i:=R.Left + Round(Progress*(R.Right - R.Left)/100.0);
-    j:=(R.Top + R.Bottom) div 2;
-    h:=TextHeight(s);
-    h:=(R.Top + R.Bottom - h) div 2;
-    cl:=GetLikeColor(clHighlight, 70);
-    GradientFill(Rect(R.Left, R.Top, i, j), cl, clHighlight, gdVertical);
-    GradientFill(Rect(R.Left, j, i, R.Bottom), clHighlight, cl, gdVertical);
-
-    ts:=TextStyle;
-    ts.Layout:=tlTop;
-    ts.Alignment:=taLeftJustify;
-    TextStyle:=ts;
-    j:=(R.Left + R.Right - sz.cx) div 2;
-    if i > R.Left then begin
-      RR:=Rect(R.Left, R.Top, i, R.Bottom);
-      Font.Color:=clHighlightText;
-      TextRect(RR, j, h, s);
-    end;
-    if i < R.Right then begin
-      RR:=Rect(i, R.Top, R.Right, R.Bottom);
-      Brush.Color:=Sender.Color;
-      FillRect(RR);
-      Font.Color:=clWindowText;
-      TextRect(RR, j, h, s);
-    end;
-  end;
-end;
-
-procedure TMainForm.DoConnect;
-var
-  Sec: string;
-  i, j: integer;
-begin
-  panReconnect.Hide;
-  DoDisconnect;
-  Sec:='Connection.' + FCurConn;
-  if not FIni.SectionExists(Sec) then
-    Sec:='Connection';
-  if FIni.ReadBool(Sec, 'UseSSL', False) then begin
-    RpcObj.InitSSL;
-    if not IsSSLloaded then begin
-      MessageDlg(Format(sSSLLoadError, [DLLSSLName, DLLUtilName]), mtError, [mbOK], 0);
-      exit;
-    end;
-    RpcObj.Url:='https';
-  end
-  else
-    RpcObj.Url:='http';
-  RpcObj.Http.UserName:=FIni.ReadString(Sec, 'UserName', '');
-  RpcObj.Http.Password:=DecodeBase64(FIni.ReadString(Sec, 'Password', ''));
-  if FIni.ReadBool(Sec, 'UseProxy', False) then begin
-    RpcObj.Http.ProxyHost:=FIni.ReadString(Sec, 'ProxyHost', '');
-    RpcObj.Http.ProxyPort:=IntToStr(FIni.ReadInteger(Sec, 'ProxyPort', 8080));
-    RpcObj.Http.ProxyUser:=FIni.ReadString(Sec, 'ProxyUser', '');
-    RpcObj.Http.ProxyPass:=DecodeBase64(FIni.ReadString(Sec, 'ProxyPass', ''));
-  end
-  else begin
-    RpcObj.Http.ProxyHost:='';
-    RpcObj.Http.ProxyPort:='';
-    RpcObj.Http.ProxyUser:='';
-    RpcObj.Http.ProxyPass:='';
-  end;
-  RpcObj.Url:=Format('%s://%s:%d/transmission/rpc', [RpcObj.Url, FIni.ReadString(Sec, 'Host', ''), FIni.ReadInteger(Sec, 'Port', 9091)]);
-  SetRefreshInterval;
-  RpcObj.InfoStatus:=sConnectingToDaemon;
-  CheckStatus;
-  TrayIcon.Hint:=RpcObj.InfoStatus;
-  RpcObj.Connect;
-  FPathMap.Text:=StringReplace(Ini.ReadString(Sec, 'PathMap', ''), '|', LineEnding, [rfReplaceAll]);
-  i:=0;
-  while i < FPathMap.Count do
-    if Trim(FPathMap.ValueFromIndex[i]) = '' then
-      FPathMap.Delete(i)
-    else
-      Inc(i);
-
-  Ini.WriteString('Hosts', 'CurHost', FCurConn);
-  if FCurConn <> Ini.ReadString('Hosts', 'Host1', '') then begin
-    Ini.WriteString('Hosts', 'Host1', FCurConn);
-    j:=2;
-    for i:=0 to pmConnections.Items.Count - 1 do
-      with pmConnections.Items[i] do
-        if (Tag = 0) and (Caption <> FCurConn) then begin
-          Ini.WriteString('Hosts', Format('Host%d', [j]), Caption);
-          Inc(j);
-        end;
-    UpdateConnections;
-  end
-  else
-    if pmConnections.Items[0].Tag = 0 then begin
-      pmConnections.Items[0].Checked:=True;
-      miConnect.Items[0].Checked:=True;
-    end;
-end;
-
-procedure TMainForm.DoDisconnect;
-begin
-  TorrentsListTimer.Enabled:=False;
-  FilterTimer.Enabled:=False;
-  ClearDetailsInfo;
-  gTorrents.Items.Clear;
-  gTorrents.Enabled:=False;
-  gTorrents.Color:=Self.Color;
-  lvPeers.Enabled:=False;
-  lvPeers.Color:=Self.Color;
-  lvFiles.Enabled:=False;
-  lvFiles.Color:=Self.Color;
-  lvTrackers.Enabled:=False;
-  lvTrackers.Color:=Self.Color;
-
-  lvFilter.Enabled:=False;
-  lvFilter.Color:=Self.Color;
-  with lvFilter do begin
-    Items[0, 0]:=UTF8Decode(SAll);
-    Items[0, 1]:=UTF8Decode(SDownloading);
-    Items[0, 2]:=UTF8Decode(SCompleted);
-    Items[0, 3]:=UTF8Decode(SActive);
-    Items[0, 4]:=UTF8Decode(SInactive);
-    Items[0, 5]:=UTF8Decode(sStopped);
-  end;
-  edSearch.Enabled:=False;
-  edSearch.Color:=Self.Color;
-  edSearch.Text:='';
-
-  RpcObj.Disconnect;
-
-  RpcObj.InfoStatus:=sDisconnected;
-  CheckStatus;
-  UpdateUI;
-  TrayIcon.Hint:=RpcObj.InfoStatus;
-  gTorrents.Items.RowCnt:=0;
-  FTorrents.RowCnt:=0;
-  lvFilter.Row:=0;
-  lvFilter.Items.RowCnt:=StatusFiltersCount;
-  TorrentsListTimer.Enabled:=False;
-  FilterTimer.Enabled:=False;
-  pmConnections.Items[0].Checked:=False;
-  miConnect.Items[0].Checked:=False;
-  FCurDownSpeedLimit:=-2;
-  FCurUpSpeedLimit:=-2;
-  FillSpeedsMenu;
-end;
-
-procedure TMainForm.ClearDetailsInfo;
-
-  procedure ClearChildren(AParent: TPanel);
-  var
-    i: integer;
-  begin
-    AParent.AutoSize:=False;
-    AParent.ChildSizing.Layout:=cclNone;
-    for i:=0 to AParent.ControlCount - 1 do begin
-      if AParent.Controls[i] is TLabel then
-        with AParent.Controls[i] as TLabel do begin
-          if (Length(Name) < 5) or (Copy(Name, Length(Name) - 4, 5) <> 'Label') then
-            Caption:='';
-          PopupMenu:=pmLabels;
-        end;
-    end;
-  end;
-
-begin
-  FFiles.Clear;
-  lvPeers.Items.Clear;
-  lvTrackers.Items.Clear;
-  ClearChildren(panGeneralInfo);
-  ClearChildren(panTransfer);
-  ProcessPieces('', 0, 0);
-  txDownProgress.AutoSize:=False;
-  txDownProgress.Caption:='';
-end;
-
-function TMainForm.SelectRemoteFolder(const CurFolder, DialogTitle: string): string;
-var
-  i, j: integer;
-  s, ss, fn: string;
-  dlg: TSelectDirectoryDialog;
-  d: char;
-begin
-  Result:='';
-  if Trim(FPathMap.Text) = '' then begin
-    MessageDlg(sNoPathMapping, mtInformation, [mbOK], 0);
-    exit;
-  end;
-  s:=MapRemoteToLocal(CurFolder);
-  if (s = '') or not DirectoryExistsUTF8(s) then
-    s:=FPathMap.ValueFromIndex[0];
-
-  if not DirectoryExistsUTF8(s) then begin
-    MessageDlg(sNoPathMapping, mtInformation, [mbOK], 0);
-    exit;
-  end;
-
-  dlg:=TSelectDirectoryDialog.Create(nil);
-  try
-    dlg.Title:=DialogTitle;
-    dlg.InitialDir:=s;
-    if not dlg.Execute then
-      exit;
-
-    fn:=dlg.FileName;
-    for i:=0 to FPathMap.Count - 1 do begin
-      s:=FPathMap[i];
-      j:=Pos('=', s);
-      if j > 0 then begin
-        ss:=FixSeparators(Copy(s, j + 1, MaxInt));
-        if (ss = fn) or (Pos(IncludeProperTrailingPathDelimiter(ss), fn) = 1) then begin
-          Result:=Copy(s, 1, j - 1);
-          d:='/';
-          for j:=1 to Length(Result) do
-            if Result[j] in ['/','\'] then begin
-              d:=Result[j];
-              break;
-            end;
-          if ss <> fn then begin
-            if (Result <> '') and (Copy(Result, Length(Result), 1) <> d) then
-              Result:=Result + d;
-            ss:=IncludeProperTrailingPathDelimiter(ss);
-            Result:=Result + Copy(fn, Length(ss) + 1, MaxInt);
-          end;
-
-          Result:=StringReplace(Result, DirectorySeparator, d, [rfReplaceAll]);
-          if Copy(Result, Length(Result), 1) = d then
-            SetLength(Result, Length(Result) - 1);
-        end;
-      end;
-    end;
-  finally
-    dlg.Free;
-  end;
-  if Result = '' then
-    MessageDlg(sNoPathMapping, mtError, [mbOK], 0);
-end;
-
-procedure TMainForm.UpdateUI;
-var
-  e: boolean;
-begin
-  e:=((Screen.ActiveForm = Self) or not Visible);
-  acConnect.Enabled:=e;
-  acOptions.Enabled:=e;
-  acConnOptions.Enabled:=e;
-  e:=RpcObj.Connected and e;
-  acDisconnect.Enabled:=e;
-  acSelectAll.Enabled:=e;
-  acAddTorrent.Enabled:=e;
-  acAddLink.Enabled:=e;
-  acDaemonOptions.Enabled:=e;
-  acStartAllTorrents.Enabled:=e and (gTorrents.Items.Count > 0);
-  acStopAllTorrents.Enabled:=acStartAllTorrents.Enabled;
-  acStartTorrent.Enabled:=e and (gTorrents.Items.Count > 0);
-  acStopTorrent.Enabled:=e and (gTorrents.Items.Count > 0);
-  acVerifyTorrent.Enabled:=e and (gTorrents.Items.Count > 0);
-  acRemoveTorrent.Enabled:=e and (gTorrents.Items.Count > 0) and not edSearch.Focused;
-  acRemoveTorrentAndData.Enabled:=acRemoveTorrent.Enabled and (RpcObj.RPCVersion >= 4);
-  acReannounceTorrent.Enabled:=acVerifyTorrent.Enabled and (RpcObj.RPCVersion >= 5);
-  acMoveTorrent.Enabled:=acVerifyTorrent.Enabled and (RpcObj.RPCVersion >= 6);
-  acTorrentProps.Enabled:=acVerifyTorrent.Enabled;
-  acOpenContainingFolder.Enabled:=acTorrentProps.Enabled and (RpcObj.RPCVersion >= 4);
-  pmiPriority.Enabled:=e and (gTorrents.Items.Count > 0);
-  miPriority.Enabled:=pmiPriority.Enabled;
-  acSetHighPriority.Enabled:=e and (gTorrents.Items.Count > 0) and
-                      ( ( not lvFiles.Focused and (RpcObj.RPCVersion >=5) ) or
-                        ((lvFiles.Items.Count > 0) and (PageInfo.ActivePage = tabFiles)) );
-  acSetNormalPriority.Enabled:=acSetHighPriority.Enabled;
-  acSetLowPriority.Enabled:=acSetHighPriority.Enabled;
-  acOpenFile.Enabled:=acSetHighPriority.Enabled and (lvFiles.SelCount < 2) and (RpcObj.RPCVersion >= 4);
-  acSetNotDownload.Enabled:=acSetHighPriority.Enabled;
-  acSetupColumns.Enabled:=e;
-  acUpdateBlocklist.Enabled:=(acUpdateBlocklist.Tag <> 0) and e and (RpcObj.RPCVersion >= 5);
-  acAddTracker.Enabled:=acTorrentProps.Enabled and (RpcObj.RPCVersion >= 10);
-  acEditTracker.Enabled:=acAddTracker.Enabled and (lvTrackers.Items.Count > 0);
-  acDelTracker.Enabled:=acEditTracker.Enabled;
-  acAltSpeed.Enabled:=e and (RpcObj.RPCVersion >= 5);
-  pmiDownSpeedLimit.Enabled:=RpcObj.Connected;
-  pmiUpSpeedLimit.Enabled:=RpcObj.Connected;
-end;
-
-procedure TMainForm.ShowConnOptions(NewConnection: boolean);
-var
-  frm: TConnOptionsForm;
-begin
-  AppBusy;
-  frm:=TConnOptionsForm.Create(Self);
-  with frm do
-  try
-    ActiveConnection:=FCurConn;
-    if NewConnection then begin
-      btNewClick(nil);
-      btNew.Hide;
-      btRename.Hide;
-      btDel.Hide;
-      panTop.ClientHeight:=btNew.Top;
-      AutoSizeForm(frm);
-    end;
-    AppNormal;
-    ShowModal;
-    UpdateConnections;
-    if (FCurConn <> ActiveConnection) or ActiveSettingChanged then begin
-      DoDisconnect;
-      FReconnectTimeOut:=-1;
-      FCurConn:=ActiveConnection;
-      if FCurConn <> '' then
-        DoConnect;
-    end;
-  finally
-    Free;
-  end;
-end;
-
-procedure TMainForm.SaveColumns(LV: TVarGrid; const AName: string; FullInfo: boolean);
-var
-  i: integer;
-begin
-  for i:=0 to LV.Columns.Count - 1 do
-    with LV.Columns[i] do begin
-      FIni.WriteInteger(AName, Format('Id%d', [i]), ID - 1);
-      FIni.WriteInteger(AName, Format('Width%d', [i]), Width);
-      if FullInfo then begin
-        FIni.WriteInteger(AName, Format('Index%d', [i]), Index);
-        FIni.WriteBool(AName, Format('Visible%d', [i]), Visible);
-      end;
-    end;
-  if LV.SortColumn >= 0 then begin
-    FIni.WriteInteger(AName, 'SortColumn', LV.SortColumn);
-    FIni.WriteInteger(AName, 'SortOrder', integer(LV.SortOrder));
-  end;
-end;
-
-procedure TMainForm.LoadColumns(LV: TVarGrid; const AName: string; FullInfo: boolean);
-var
-  i, j, ColId: integer;
-begin
-  LV.Columns.BeginUpdate;
-  try
-    for i:=0 to LV.Columns.Count - 1 do begin
-      ColId:=FIni.ReadInteger(AName, Format('Id%d', [i]), -1);
-      if ColId = -1 then continue;
-      for j:=0 to LV.Columns.Count - 1 do
-        with LV.Columns[j] do
-          if ID - 1 = ColId then begin
-            if FullInfo then begin
-              Index:=FIni.ReadInteger(AName, Format('Index%d', [i]), Index);
-              Visible:=FIni.ReadBool(AName, Format('Visible%d', [i]), Visible);
-            end;
-            Width:=FIni.ReadInteger(AName, Format('Width%d', [i]), Width);
-            break;
-          end;
-    end;
-  finally
-    LV.Columns.EndUpdate;
-  end;
-  LV.SortColumn:=FIni.ReadInteger(AName, 'SortColumn', LV.SortColumn);
-  LV.SortOrder:=TSortOrder(FIni.ReadInteger(AName, 'SortOrder', integer(LV.SortOrder)));
-end;
-
-function TMainForm.GetTorrentError(t: TJSONObject): string;
-var
-  i: integer;
-  stats: TJSONArray;
-  err, gerr: widestring;
-  NoTrackerError: boolean;
-begin
-  Result:='';
-  gerr:=t.Strings['errorString'];
-  if RpcObj.RPCVersion >= 7 then begin
-    NoTrackerError:=False;
-    stats:=t.Arrays['trackerStats'];
-    for i:=0 to stats.Count - 1 do
-      with stats.Objects[i] do begin
-        err:='';
-        if Booleans['hasAnnounced'] and not Booleans['lastAnnounceSucceeded'] then
-          err:=Strings['lastAnnounceResult'];
-        if err = 'Success' then
-          err:='';
-        if err = '' then begin
-          // If at least one tracker is working, then report no error
-          NoTrackerError:=True;
-          Result:='';
-        end
-        else begin
-          if not NoTrackerError and (Result = '') then
-            Result:=sTrackerError + ': ' + UTF8Encode(err);
-          // Workaround for transmission bug
-          // If the global error string is equal to some tracker error string,
-          // then igonore the global error string
-          if gerr = err then
-            gerr:='';
-        end;
-      end;
-  end
-  else begin
-    Result:=UTF8Encode(t.Strings['announceResponse']);
-    if Result = 'Success' then
-      Result:=''
-    else
-      if Result <> '' then begin
-        i:=Pos('(', Result);
-        if i <> 0 then
-          if Copy(Result, i, 5) = '(200)' then
-            Result:=''
-          else
-            Result:=sTrackerError + ': ' + Copy(Result, 1, i - 1);
-      end;
-  end;
-
-  if Result = '' then
-    Result:=UTF8Encode(gerr);
-end;
-
-function TMainForm.SecondsToString(j: integer): string;
-begin
-  if j < 60 then
-    Result:=Format(sSec, [j])
-  else
-  if j < 60*60 then
-    Result:=Format(sMinSec, [j div 60, j mod 60])
-  else begin
-    j:=(j + 30) div 60;
-    if j < 60*24 then
-      Result:=Format(sHourMin, [j div 60, j mod 60])
-    else begin
-      j:=(j + 30) div 60;
-      Result:=Format(sDayHour, [j div 24, j mod 24])
-    end;
-  end;
-
-end;
-
-procedure TMainForm.FillTorrentsList(list: TJSONArray);
-var
-  i, j, row, crow, id, StateImg: integer;
-  t: TJSONObject;
-  f: double;
-  ExistingRow: boolean;
-  s, ss: string;
-
-  function GetTorrentValue(AIndex: integer; const AName: string; AType: integer): boolean;
-  var
-    res: variant;
-  begin
-    Result:=t.IndexOfName(AName) >= 0;
-    if Result then
-      case AType of
-        vtInteger:
-          res:=t.Integers[AName];
-        vtExtended:
-          res:=t.Floats[AName];
-        else
-          res:=t.Strings[AName];
-      end
-    else
-      res:=NULL;
-
-    FTorrents[AIndex, row]:=res;
-  end;
-
-var
-  FilterIdx, OldId: integer;
-  TrackerFilter, PathFilter: string;
-  UpSpeed, DownSpeed: double;
-  DownCnt, SeedCnt, CompletedCnt, ActiveCnt, StoppedCnt: integer;
-  IsActive: boolean;
-  Paths: TStringList;
-  v: variant;
-begin
-  if gTorrents.Tag <> 0 then exit;
-  if list = nil then begin
-    ClearDetailsInfo;
-    exit;
-  end;
-{
-  for i:=1 to 1000 do begin
-    t:=TJSONObject.Create;
-    t.Integers['id']:=i + 10000;
-    t.Strings['name']:=Format('ZName %d', [i]);
-    t.Integers['status']:=TR_STATUS_STOPPED;
-    t.Arrays['trackerStats']:=TJSONArray.Create;
-    t.Floats['sizeWhenDone']:=0;
-    t.Floats['leftUntilDone']:=0;
-    t.Integers['rateDownload']:=0;
-    t.Integers['rateUpload']:=0;
-    list.Add(t);
-  end;
-}
-  Paths:=TStringList.Create;
-  try
-  Paths.Sorted:=True;
-  OldId:=RpcObj.CurTorrentId;
-  IsActive:=gTorrents.Enabled;
-  gTorrents.Enabled:=True;
-  lvFilter.Enabled:=True;
-  gTorrents.Color:=clWindow;
-  lvFilter.Color:=clWindow;
-  edSearch.Enabled:=True;
-  edSearch.Color:=clWindow;
-  if not IsActive then
-    ActiveControl:=gTorrents;
-
-  for i:=0 to FTrackers.Count - 1 do
-    FTrackers.Objects[i]:=nil;
-
-  UpSpeed:=0;
-  DownSpeed:=0;
-  DownCnt:=0;
-  SeedCnt:=0;
-  CompletedCnt:=0;
-  ActiveCnt:=0;
-  StoppedCnt:=0;
-
-  FilterIdx:=lvFilter.Row;
-  if VarIsNull(lvFilter.Items[0, FilterIdx]) then
-    Dec(FilterIdx);
-  if FilterIdx >= StatusFiltersCount then
-    if FilterIdx < lvFilter.Items.Count - FTrackers.Count then begin
-      PathFilter:=UTF8Encode(widestring(lvFilter.Items[-1, FilterIdx]));
-      FilterIdx:=fltAll;
-    end
-    else begin
-      TrackerFilter:=UTF8Encode(widestring(lvFilter.Items[0, FilterIdx]));
-      FilterIdx:=fltAll;
-      i:=RPos('(', TrackerFilter);
-      if i > 0 then
-        TrackerFilter:=Trim(Copy(TrackerFilter, 1, i - 1));
-    end;
-
-  for i:=0 to FTorrents.Count - 1 do
-    FTorrents[idxTag, i]:=0;
-
-  for i:=0 to list.Count - 1 do begin
-    StateImg:=-1;
-
-    t:=list[i] as TJSONObject;
-    id:=t.Integers['id'];
-    ExistingRow:=FTorrents.Find(idxTorrentId, id, row);
-    if not ExistingRow then
-      FTorrents.InsertRow(row);
-
-    FTorrents[idxTorrentId, row]:=t.Integers['id'];
-
-    if t.IndexOfName('name') >= 0 then
-      FTorrents[idxName, row]:=t.Strings['name'];
-
-    j:=t.Integers['status'];
-    if ExistingRow and (j = TR_STATUS_SEED) and (FTorrents[idxStatus, row] = TR_STATUS_DOWNLOAD) then
-      DownloadFinished(UTF8Encode(widestring(FTorrents[idxName, row])));
-    FTorrents[idxStatus, row]:=j;
-    case j of
-      TR_STATUS_CHECK_WAIT: StateImg:=imgDownQueue;
-      TR_STATUS_CHECK:      StateImg:=imgDownQueue;
-      TR_STATUS_DOWNLOAD:   StateImg:=imgDown;
-      TR_STATUS_SEED:       StateImg:=imgSeed;
-      TR_STATUS_STOPPED:    StateImg:=imgDone;
-    end;
-
-    if RpcObj.RPCVersion >= 7 then begin
-      if t.Arrays['trackerStats'].Count > 0 then
-        with t.Arrays['trackerStats'].Objects[0] do begin
-          s:='';
-          if integer(Integers['announceState']) in [2, 3] then
-            s:=sTrackerUpdating
-          else
-            if Booleans['hasAnnounced'] then
-              if Booleans['lastAnnounceSucceeded'] then
-                s:=sTrackerWorking
-              else
-                s:=TranslateString(UTF8Encode(Strings['lastAnnounceResult']));
-
-          if s = 'Success' then
-            s:=sTrackerWorking;
-          FTorrents[idxTrackerStatus, row]:=UTF8Decode(s);
-        end
-      else
-        FTorrents[idxTrackerStatus, row]:='';
-    end
-    else
-      FTorrents[idxTrackerStatus, row]:=t.Strings['announceResponse'];
-    if (FTorrents[idxStatus, row] <> TR_STATUS_STOPPED) and (GetTorrentError(t) <> '') then
-      if t.Strings['errorString'] <> '' then
-        StateImg:=imgError
-      else
-        if StateImg in [imgDown,imgSeed] then
-          Inc(StateImg, 2);
-
-    if FTorrents[idxStatus, row] = TR_STATUS_CHECK then
-      f:=t.Floats['recheckProgress']*100.0
-    else begin
-      f:=t.Floats['sizeWhenDone'];
-      if f <> 0 then
-        f:=(f - t.Floats['leftUntilDone'])*100.0/f;
-      if StateImg = imgDone then
-        if (t.Floats['leftUntilDone'] <> 0) or (t.Floats['sizeWhenDone'] = 0) then
-          StateImg:=imgStopped
-        else
-          FTorrents[idxStatus, row]:=TR_STATUS_FINISHED;
-    end;
-    if f < 0 then
-      f:=0;
-    FTorrents[idxDone, row]:=Int(f*10.0)/10.0;
-    FTorrents[idxStateImg, row]:=StateImg;
-    GetTorrentValue(idxDownSpeed, 'rateDownload', vtInteger);
-    GetTorrentValue(idxUpSpeed, 'rateUpload', vtInteger);
-
-    GetTorrentValue(idxSize, 'totalSize', vtExtended);
-    GetTorrentValue(idxSizeToDowload, 'sizeWhenDone', vtExtended);
-    GetTorrentValue(idxSeeds, 'peersSendingToUs', vtInteger);
-    GetTorrentValue(idxPeers, 'peersGettingFromUs', vtInteger);
-    GetTorrentValue(idxETA, 'eta', vtInteger);
-    v:=FTorrents[idxETA, row];
-    if not VarIsNull(v) and (v < 0) then
-      FTorrents[idxETA, row]:=MaxInt;
-    GetTorrentValue(idxDownloaded, 'downloadedEver', vtExtended);
-    GetTorrentValue(idxUploaded, 'uploadedEver', vtExtended);
-    GetTorrentValue(idxAddedOn, 'addedDate', vtExtended);
-    GetTorrentValue(idxCompletedOn, 'doneDate', vtExtended);
-    GetTorrentValue(idxLastActive, 'activityDate', vtExtended);
-
-    if RpcObj.RPCVersion >= 7 then begin
-      if t.Arrays['trackerStats'].Count > 0 then
-        with t.Arrays['trackerStats'].Objects[0] do begin
-          FTorrents[idxSeedsTotal, row]:=Integers['seederCount'];
-          FTorrents[idxLeechersTotal, row]:=Integers['leecherCount'];
-        end
-      else begin
-        FTorrents[idxSeedsTotal, row]:=-1;
-        FTorrents[idxLeechersTotal, row]:=-1;
-      end;
-    end
-    else begin
-      GetTorrentValue(idxSeedsTotal, 'seeders', vtInteger);
-      GetTorrentValue(idxLeechersTotal, 'leechers', vtInteger);
-    end;
-    if t.IndexOfName('uploadRatio') >= 0 then begin
-      f:=t.Floats['uploadRatio'];
-      if f = -2 then
-        f:=MaxInt;
-      FTorrents[idxRatio, row]:=f;
-    end
-    else
-      FTorrents[idxRatio, row]:=NULL;
-
-    if RpcObj.RPCVersion >= 7 then begin
-      if t.Arrays['trackerStats'].Count > 0 then
-        s:=t.Arrays['trackerStats'].Objects[0].Strings['announce']
-      else
-        s:=sNoTracker;
-    end
-    else
-      if t.IndexOfName('trackers') >= 0 then
-        s:=UTF8Encode(t.Arrays['trackers'].Objects[0].Strings['announce'])
-      else begin
-        s:='';
-        if VarIsEmpty(FTorrents[idxTracker, row]) then
-          RpcObj.RequestFullInfo:=True;
-      end;
-
-    if s <> '' then begin
-      j:=Pos('://', s);
-      if j > 0 then
-        s:=Copy(s, j + 3, MaxInt);
-      j:=Pos('/', s);
-      if j > 0 then
-        s:=Copy(s, 1, j - 1);
-      j:=Pos('.', s);
-      if j > 0 then begin
-        ss:=Copy(s, 1, j - 1);
-        if AnsiCompareText(ss, 'bt') = 0 then
-          System.Delete(s, 1, 3)
-        else
-          if (Length(ss) = 3) and (AnsiCompareText(Copy(ss, 1, 2), 'bt') = 0) and (ss[3] in ['1'..'9']) then
-            System.Delete(s, 1, 4);
-      end;
-      j:=Pos(':', s);
-      if j > 0 then
-        System.Delete(s, j, MaxInt);
-      FTorrents[idxTracker, row]:=UTF8Decode(s);
-    end;
-
-    if t.IndexOfName('downloadDir') >= 0 then
-      FTorrents[idxPath, row]:=UTF8Decode(ExcludeTrailingPathDelimiter(UTF8Encode(t.Strings['downloadDir'])))
-    else
-      if VarIsEmpty(FTorrents[idxPath, row]) then
-        RpcObj.RequestFullInfo:=True;
-
-    if not VarIsEmpty(FTorrents[idxPath, row]) then begin
-      s:=UTF8Encode(widestring(FTorrents[idxPath, row]));
-      j:=Paths.IndexOf(s);
-      if j < 0 then
-        Paths.AddObject(s, TObject(1))
-      else
-        Paths.Objects[j]:=TObject(PtrInt(Paths.Objects[j]) + 1);
-    end;
-
-    if t.IndexOfName('bandwidthPriority') >= 0 then
-      FTorrents[idxPriority, row]:=t.Integers['bandwidthPriority'];
-
-    DownSpeed:=DownSpeed + FTorrents[idxDownSpeed, row];
-    UpSpeed:=UpSpeed + FTorrents[idxUpSpeed, row];
-
-    FTorrents[idxTag, row]:=1;
-  end;
-
-  i:=0;
-  while i < FTorrents.Count do
-    if FTorrents[idxTag, i] = 0 then
-      FTorrents.Delete(i)
-    else
-      Inc(i);
-
-  gTorrents.Items.BeginUpdate;
-  try
-    for i:=0 to gTorrents.Items.Count - 1 do
-      gTorrents.Items[idxTag, i]:=0;
-
-    gTorrents.Items.Sort(idxTorrentId);
-
-    for i:=0 to FTorrents.Count - 1 do begin
-      IsActive:=(FTorrents[idxDownSpeed, i] <> 0) or (FTorrents[idxUpSpeed, i] <> 0);
-      if IsActive then
-        Inc(ActiveCnt);
-
-      case integer(FTorrents[idxStatus, i]) of
-        TR_STATUS_DOWNLOAD:
-          Inc(DownCnt);
-        TR_STATUS_SEED:
-          begin
-            Inc(SeedCnt);
-            Inc(CompletedCnt);
-          end;
-        TR_STATUS_FINISHED:
-          Inc(CompletedCnt);
-      end;
-
-      if integer(FTorrents[idxStateImg, i]) in [imgStopped, imgDone] then
-        Inc(StoppedCnt);
-
-      if not VarIsEmpty(FTorrents[idxTracker, i]) then begin
-        s:=UTF8Encode(widestring(FTorrents[idxTracker, i]));
-        j:=FTrackers.IndexOf(s);
-        if j < 0 then
-          j:=FTrackers.Add(s);
-        FTrackers.Objects[j]:=TObject(ptruint(FTrackers.Objects[j]) + 1);
-        if (TrackerFilter <> '') and (TrackerFilter <> s) then
-          continue;
-      end;
-
-      if (PathFilter <> '') and not VarIsEmpty(FTorrents[idxPath, i]) and (UTF8Decode(PathFilter) <> FTorrents[idxPath, i]) then
-        continue;
-
-      case FilterIdx of
-        fltActive:
-          if not IsActive then
-            continue;
-        fltInactive:
-          if IsActive then
-            continue;
-        fltDown:
-          if FTorrents[idxStatus, i] <> TR_STATUS_DOWNLOAD then
-            continue;
-        fltDone:
-          if (FTorrents[idxStateImg, i] <> imgDone) and (FTorrents[idxStatus, i] <> TR_STATUS_SEED) then
-            continue;
-        fltStopped:
-          if not (integer(FTorrents[idxStateImg, i]) in [imgStopped, imgDone]) then
-            continue;
-      end;
-
-      if edSearch.Text <> '' then
-        if UTF8Pos(UTF8UpperCase(edSearch.Text), UTF8UpperCase(UTF8Encode(widestring(FTorrents[idxName, i])))) = 0 then
-          continue;
-
-      if not gTorrents.Items.Find(idxTorrentId, FTorrents[idxTorrentId, i], row) then
-        gTorrents.Items.InsertRow(row);
-      for j:=-TorrentsExtraColumns to FTorrents.ColCnt - 1 do
-        gTorrents.Items[j, row]:=FTorrents[j, i];
-      gTorrents.Items[idxTag, row]:=1;
-    end;
-
-    i:=0;
-    while i < gTorrents.Items.Count do
-      if gTorrents.Items[idxTag, i] = 0 then
-        gTorrents.Items.Delete(i)
-      else
-        Inc(i);
-
-    gTorrents.Sort;
-    if gTorrents.Items.Count > 0 then begin
-      if OldId <> 0 then begin
-        i:=gTorrents.Items.IndexOf(idxTorrentId, OldId);
-        if i >= 0 then
-          gTorrents.Row:=i
-        else
-          if FFilterChanged then
-            OldId:=0;
-      end;
-      if OldId = 0 then
-        gTorrents.Row:=0;
-    end;
-    FFilterChanged:=False;
-  finally
-    gTorrents.Items.EndUpdate;
-  end;
-  gTorrentsClick(nil);
-
-  crow:=lvFilter.Row;
-  lvFilter.Items.BeginUpdate;
-  try
-    lvFilter.Items[0, 0]:=UTF8Decode(Format('%s (%d)', [SAll, list.Count]));
-    lvFilter.Items[0, 1]:=UTF8Decode(Format('%s (%d)', [SDownloading, DownCnt]));
-    lvFilter.Items[0, 2]:=UTF8Decode(Format('%s (%d)', [SCompleted, CompletedCnt]));
-    lvFilter.Items[0, 3]:=UTF8Decode(Format('%s (%d)', [SActive, ActiveCnt]));
-    lvFilter.Items[0, 4]:=UTF8Decode(Format('%s (%d)', [SInactive, FTorrents.Count - ActiveCnt]));
-    lvFilter.Items[0, 5]:=UTF8Decode(Format('%s (%d)', [sStopped, StoppedCnt]));
-
-    j:=StatusFiltersCount;
-    lvFilter.Items[0, j]:=NULL;
-    Inc(j);
-
-    for i:=0 to Paths.Count - 1 do begin
-      s:=ExtractFileName(Paths[i]);
-      for row:=StatusFiltersCount + 1 to j - 1 do
-        if ExtractFileName(UTF8Encode(widestring(lvFilter.Items[-1, row]))) = s then begin
-          s:=Paths[i];
-          lvFilter.Items[0, row]:=UTF8Decode(Format('%s (%d)', [UTF8Encode(widestring(lvFilter.Items[-1, row])), ptruint(Paths.Objects[row - StatusFiltersCount - 1])]));
-        end;
-      lvFilter.Items[0, j]:=UTF8Decode(Format('%s (%d)', [s, ptruint(Paths.Objects[i])]));
-      lvFilter.Items[-1, j]:=UTF8Decode(Paths[i]);
-      if Paths[i] = PathFilter then
-        crow:=j;
-      Inc(j);
-    end;
-
-    row:=j;
-    if row > StatusFiltersCount + 1 then begin
-      lvFilter.Items[0, row]:=NULL;
-      Inc(row);
-    end;
-
-    i:=0;
-    while i < FTrackers.Count do begin
-      j:=ptruint(FTrackers.Objects[i]);
-      if j > 0 then begin
-        lvFilter.Items[0, row]:=UTF8Decode(Format('%s (%d)', [FTrackers[i], j]));
-        if FTrackers[i] = TrackerFilter then
-          crow:=row;
-        Inc(i);
-        Inc(row);
-      end
-      else
-        FTrackers.Delete(i);
-    end;
-    lvFilter.Items.RowCnt:=row;
-  finally
-    lvFilter.Items.EndUpdate;
-  end;
-  lvFilter.Row:=crow;
-
-  CheckStatus;
-
-  StatusBar.Panels[1].Text:=Format(sDownSpeed, [GetHumanSize(DownSpeed, 1)]);
-  StatusBar.Panels[2].Text:=Format(sUpSpeed, [GetHumanSize(UpSpeed, 1)]);
-
-{$ifndef LCLcarbon}
-  // There is memory leak in TTrayIcon implementation for Mac.
-  // Disable tray icon update for Mac.
-  TrayIcon.Hint:=Format(sDownloadingSeeding,
-        [RpcObj.InfoStatus, LineEnding, DownCnt, SeedCnt, LineEnding, StatusBar.Panels[1].Text, StatusBar.Panels[2].Text]);
-{$endif LCLcarbon}
-  finally
-    Paths.Free;
-  end;
-end;
-
-procedure TMainForm.FillPeersList(list: TJSONArray);
-var
-  i, j, row: integer;
-  port: integer;
-  d: TJSONData;
-  p: TJSONObject;
-  ip, s: string;
-  hostinfo: PHostEntry;
-  opt: TResolverOptions;
-  WasEmpty: boolean;
-begin
-  if list = nil then begin
-    ClearDetailsInfo;
-    exit;
-  end;
-  WasEmpty:=lvPeers.Items.Count = 0;
-  lvPeers.Items.BeginUpdate;
-  try
-    lvPeers.Enabled:=True;
-    lvPeers.Color:=clWindow;
-    if FResolver = nil then begin
-      opt:=[];
-      if acResolveHost.Checked then
-        Include(opt, roResolveIP);
-      if acResolveCountry.Checked then
-        Include(opt, roResolveCountry);
-      if opt <> [] then
-        FResolver:=TIpResolver.Create(GetGeoIpDatabase, opt);
-    end;
-
-    for i:=0 to lvPeers.Items.Count - 1 do
-      lvPeers.Items[idxPeerTag, i]:=0;
-
-    lvPeers.Items.Sort(idxPeerIP);
-    for i:=0 to list.Count - 1 do begin
-      d:=list[i];
-      if not (d is TJSONObject) then continue;
-      p:=d as TJSONObject;
-      ip:=p.Strings['address'];
-      if p.IndexOfName('port') >= 0 then
-        port:=p.Integers['port']
-      else
-        port:=0;
-
-      s:=ip + ':' + IntToStr(port);
-      if not lvPeers.Items.Find(idxPeerIP, s, row) then
-        lvPeers.Items.InsertRow(row);
-      lvPeers.Items[idxPeerIP, row]:=s;
-      lvPeers.Items[idxPeerPort, row]:=port;
-
-      if FResolver <> nil then
-        hostinfo:=FResolver.Resolve(ip)
-      else
-        hostinfo:=nil;
-      if hostinfo <> nil then
-        lvPeers.Items[idxPeerHost, row]:=hostinfo^.HostName
-      else
-        lvPeers.Items[idxPeerHost, row]:=ip;
-
-      if hostinfo <> nil then
-        lvPeers.Items[idxPeerCountry, row]:=hostinfo^.CountryName
-      else
-        lvPeers.Items[idxPeerCountry, row]:='';
-
-      if acShowCountryFlag.Checked and (hostinfo <> nil) then begin
-        if hostinfo^.ImageIndex = 0 then
-          hostinfo^.ImageIndex:=GetFlagImage(hostinfo^.CountryCode);
-        j:=hostinfo^.ImageIndex
-      end
-      else
-        j:=0;
-      lvPeers.Items[idxPeerCountryImage, row]:=j;
-      lvPeers.Items[idxPeerClient, row]:=p.Strings['clientName'];
-      lvPeers.Items[idxPeerFlags, row]:=p.Strings['flagStr'];
-      lvPeers.Items[idxPeerDone, row]:=p.Floats['progress'];
-
-      if p.IndexOfName('rateToClient') >= 0 then
-        lvPeers.Items[idxPeerDownSpeed, row]:=p.Integers['rateToClient'];
-      if p.IndexOfName('rateToPeer') >= 0 then
-        lvPeers.Items[idxPeerUpSpeed, row]:=p.Integers['rateToPeer'];
-
-      lvPeers.Items[idxPeerTag, row]:=1;
-    end;
-
-    i:=0;
-    while i < lvPeers.Items.Count do
-      if lvPeers.Items[idxPeerTag, i] = 0 then
-        lvPeers.Items.Delete(i)
-      else
-        Inc(i);
-    lvPeers.Sort;
-    if WasEmpty and (lvPeers.Items.Count > 0) then
-      lvPeers.Row:=0;
-  finally
-    lvPeers.Items.EndUpdate;
-  end;
-end;
-
-function TMainForm.GetFilesCommonPath(files: TJSONArray): string;
-var
-  i: integer;
-  d: TJSONData;
-  f: TJSONObject;
-  s: string;
-begin
-  Result:='';
-  for i:=0 to files.Count - 1 do begin
-    d:=files[i];
-    if not (d is TJSONObject) then continue;
-    f:=d as TJSONObject;
-    s:=UTF8Encode(f.Strings['name']);
-    if i = 0 then
-      Result:=ExtractFilePath(s)
-    else begin
-      while True do begin
-        if Result = '' then
-          exit;
-        if Copy(s, 1, Length(Result)) <> Result then begin
-          SetLength(Result, Length(Result) - 1);
-          Result:=ExtractFilePath(Result);
-        end
-        else
-          break;
-      end;
-    end;
-  end;
-end;
-
-procedure TMainForm.InternalRemoveTorrent(const Msg, MsgMulti: string; RemoveLocalData: boolean);
-var
-  args: TJSONObject;
-  ids: variant;
-  s: string;
-begin
-  if gTorrents.Items.Count = 0 then exit;
-  gTorrents.Tag:=1;
-  try
-    ids:=GetSelectedTorrents;
-    if gTorrents.SelCount < 2 then
-      s:=Format(Msg, [UTF8Encode(widestring(gTorrents.Items[idxName, gTorrents.Items.IndexOf(idxTorrentId, ids[0])]))])
-    else
-      s:=Format(MsgMulti, [gTorrents.SelCount]);
-    if MessageDlg('', s, mtConfirmation, mbYesNo, 0, mbNo) <> mrYes then exit;
-  finally
-    gTorrents.Tag:=0;
-  end;
-  args:=TJSONObject.Create;
-  if RemoveLocalData then
-    args.Add('delete-local-data', TJSONIntegerNumber.Create(1));
-  TorrentAction(ids, 'remove', args);
-  if RemoveLocalData then
-    RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtSession];
-end;
-
-function TMainForm.IncludeProperTrailingPathDelimiter(const s: string): string;
-var
-  i: integer;
-  d: char;
-begin
-  Result:=s;
-  if Result = '' then exit;
-  d:='/';
-  for i:=1 to Length(Result) do
-    if Result[i] in ['/','\'] then begin
-      d:=Result[i];
-      break;
-    end;
-
-  if Result[Length(Result)] <> d then
-    Result:=Result + d;
-end;
-
-procedure TMainForm.FillFilesList(list, priorities, wanted: TJSONArray; const DownloadDir: WideString);
-var
-  i, row: integer;
-  d: TJSONData;
-  f: TJSONObject;
-  s, path, dir: string;
-  ff: double;
-  WasEmpty: boolean;
-begin
-  if (list = nil) or (priorities = nil) or (wanted = nil) then begin
-    ClearDetailsInfo;
-    exit;
-  end;
-
-  lvFiles.Enabled:=True;
-  lvFiles.Color:=clWindow;
-  dir:=UTF8Encode(DownloadDir);
-  path:=GetFilesCommonPath(list);
-  WasEmpty:=FFiles.Count = 0;
-
-  FFiles.BeginUpdate;
-  try
-    for i:=0 to FFiles.Count - 1 do
-      FFiles[idxFileTag, i]:=0;
-
-    FFiles.Sort(idxFileId);
-
-    for i:=0 to list.Count - 1 do begin
-      d:=list[i];
-      f:=d as TJSONObject;
-      if not FFiles.Find(idxFileId, i, row) then
-        FFiles.InsertRow(row);
-      FFiles[idxFileTag, row]:=1;
-      FFiles[idxFileId, row]:=i;
-
-      s:=UTF8Encode(f.Strings['name']);
-      FFiles[idxFileFullPath, row]:=UTF8Decode(IncludeProperTrailingPathDelimiter(dir) + s);
-      if (path <> '') and (Copy(s, 1, Length(path)) = path) then
-        s:=Copy(s, Length(path) + 1, MaxInt);
-
-      FFiles[idxFileName, row]:=UTF8Decode(s);
-      ff:=f.Floats['length'];
-      FFiles[idxFileSize, row]:=ff;
-      FFiles[idxFileDone, row]:=f.Floats['bytesCompleted'];
-      if ff = 0 then
-        ff:=100.0
-      else
-        ff:=double(FFiles[idxFileDone, row])*100.0/ff;
-      FFiles[idxFileProgress, row]:=Int(ff*10.0)/10.0;
-
-      if wanted.Integers[i] = 0 then
-        FFiles[idxFilePriority, row]:=TR_PRI_SKIP
-      else
-        FFiles[idxFilePriority, row]:=priorities.Integers[i];
-    end;
-
-    i:=0;
-    while i < FFiles.Count do
-      if FFiles[idxFileTag, i] = 0 then
-        FFiles.Delete(i)
-      else
-        Inc(i);
-
-    lvFiles.Sort;
-    if WasEmpty and (FFiles.Count > 0) then
-      lvFiles.Row:=0;
-  finally
-    FFiles.EndUpdate;
-  end;
-end;
-
-procedure TMainForm.FillGeneralInfo(t: TJSONObject);
-var
-  i, j, idx: integer;
-  s: string;
-  f: double;
-begin
-  if (gTorrents.Items.Count = 0) or (t = nil) then begin
-    ClearDetailsInfo;
-    exit;
-  end;
-  idx:=gTorrents.Items.IndexOf(idxTorrentId, t.Integers['id']);
-  if idx = -1 then begin
-    ClearDetailsInfo;
-    exit;
-  end;
-
-  txDownProgress.Caption:=Format('%.1f%%', [double(gTorrents.Items[idxDone, idx])]);
-  txDownProgress.AutoSize:=True;
-  if RpcObj.RPCVersion >= 5 then
-    s:=t.Strings['pieces']
-  else
-    s:='';
-  ProcessPieces(s, t.Integers['pieceCount'], gTorrents.Items[idxDone, idx]);
-
-  panTransfer.ChildSizing.Layout:=cclNone;
-  txStatus.Caption:=GetTorrentStatus(idx);
-  txError.Caption:=GetTorrentError(t);
-  txRemaining.Caption:=EtaToString(t.Integers['eta']);
-  txDownloaded.Caption:=GetHumanSize(t.Floats['downloadedEver']);
-  txUploaded.Caption:=GetHumanSize(t.Floats['uploadedEver']);
-  f:=t.Floats['pieceSize'];
-  if f > 0 then
-    i:=Round(t.Floats['corruptEver']/f)
-  else
-    i:=0;
-  txWasted.Caption:=Format(sHashfails, [GetHumanSize(t.Floats['corruptEver']), i]);
-  s:=GetHumanSize(gTorrents.Items[idxDownSpeed, idx], 1)+sPerSecond;
-  if t.IndexOfName('secondsDownloading') >= 0 then begin
-    f:=t.Integers['secondsDownloading'];
-    if f > 0 then
-      s:=Format('%s (%s: %s)', [s, SAverage, GetHumanSize(t.Floats['downloadedEver']/f, 1) + sPerSecond]);
-  end;
-  txDownSpeed.Caption:=s;
-  txUpSpeed.Caption:=GetHumanSize(gTorrents.Items[idxUpSpeed, idx], 1)+sPerSecond;
-  txRatio.Caption:=RatioToString(t.Floats['uploadRatio']);
-
-  if RpcObj.RPCVersion < 5 then
-  begin
-    // RPC versions prior to v5
-    j:=t.Integers['downloadLimitMode'];
-    if j = TR_SPEEDLIMIT_GLOBAL then
-      s:='-'
-    else begin
-      i:=t.Integers['downloadLimit'];
-      if (i < 0) or (j = TR_SPEEDLIMIT_UNLIMITED) then
-        s:=Utf8Encode(WideString(WideChar($221E)))
-      else
-        s:=GetHumanSize(i*1024)+sPerSecond;
-    end;
-    txDownLimit.Caption:=s;
-    j:=t.Integers['uploadLimitMode'];
-    if j = TR_SPEEDLIMIT_GLOBAL then
-      s:='-'
-    else begin
-      i:=t.Integers['uploadLimit'];
-      if (i < 0) or (j = TR_SPEEDLIMIT_UNLIMITED) then
-        s:=Utf8Encode(WideString(WideChar($221E)))
-      else
-        s:=GetHumanSize(i*1024)+sPerSecond;
-    end;
-    txUpLimit.Caption:=s;
-  end else begin
-    // RPC version 5
-    if t.Booleans['downloadLimited'] then
-    begin
-      i:=t.Integers['downloadLimit'];
-      if i < 0 then
-        s:=Utf8Encode(WideString(WideChar($221E)))
-      else
-        s:=GetHumanSize(i*1024)+sPerSecond;
-    end else s:='-';
-    txDownLimit.Caption:=s;
-
-    if t.Booleans['uploadLimited'] then
-    begin
-      i:=t.Integers['uploadLimit'];
-      if i < 0 then
-        s:=Utf8Encode(WideString(WideChar($221E)))
-      else
-        s:=GetHumanSize(i*1024)+sPerSecond;
-    end else s:='-';
-    txUpLimit.Caption:=s;
-  end;
-
-  if RpcObj.RPCVersion >= 7 then
-    with t.Arrays['trackerStats'] do begin
-      if Count > 0 then begin
-        if integer(Objects[0].Integers['announceState']) in [2, 3] then
-          f:=1
-        else
-          f:=Objects[0].Floats['nextAnnounceTime'];
-      end
-      else
-        f:=0;
-    end
-  else
-    f:=t.Floats['nextAnnounceTime'];
-  if f = 0 then
-    s:='-'
-  else
-  if f = 1 then
-    s:=sUpdating
-  else
-    s:=DateTimeToStr(UnixToDateTime(Trunc(f)) + GetTimeZoneDelta);
-  txTrackerUpdate.Caption:=s;
-  txTracker.Caption:=UTF8Encode(widestring(gTorrents.Items[idxTracker, idx]));
-  if RpcObj.RPCVersion >= 7 then
-    if t.Arrays['trackerStats'].Count > 0 then
-      i:=t.Arrays['trackerStats'].Objects[0].Integers['seederCount']
-    else
-      i:=-1
-  else
-    i:=t.Integers['seeders'];
-  s:=GetSeedsText(t.Integers['peersSendingToUs'], i);
-  txSeeds.Caption:=StringReplace(s, '/', ' ' + sOf + ' ', []) + ' '+ sConnected;
-  if RpcObj.RPCVersion >= 7 then
-    if t.Arrays['trackerStats'].Count > 0 then
-      i:=t.Arrays['trackerStats'].Objects[0].Integers['leecherCount']
-    else
-      i:=-1
-  else
-    i:=t.Integers['leechers'];
-  s:=GetPeersText(t.Integers['peersGettingFromUs'], -1, i);
-  s:=StringReplace(s, ' ', ' '+ sConnected +' ', []);
-  s:=StringReplace(s, '/', ' ' + sOf + ' ', []);
-  txPeers.Caption:=StringReplace(s, ')', ' '+ sInSwarm+ ')', []);
-  txMaxPeers.Caption:=t.Strings['maxConnectedPeers'];
-  txLastActive.Caption:=TorrentDateTimeToString(Trunc(t.Floats['activityDate']));
-  panTransfer.ChildSizing.Layout:=cclLeftToRightThenTopToBottom;
-
-  panGeneralInfo.ChildSizing.Layout:=cclNone;
-
-  s:=UTF8Encode(widestring(gTorrents.Items[idxName, idx]));
-  if RpcObj.RPCVersion >= 4 then
-    s:=IncludeProperTrailingPathDelimiter(UTF8Encode(t.Strings['downloadDir'])) + s;
-  txTorrentName.Caption:=s;
-  txCreated.Caption:=Format('%s by %s', [TorrentDateTimeToString(Trunc(t.Floats['dateCreated'])), UTF8Encode(t.Strings['creator'])]);
-  txTotalSize.Caption:=Format(sDone, [GetHumanSize(t.Floats['totalSize']), GetHumanSize(t.Floats['sizeWhenDone'] - t.Floats['leftUntilDone'])]);
-  if t.Floats['totalSize'] = t.Floats['haveValid'] then
-    i:=t.Integers['pieceCount']
-  else
-    i:=Trunc(t.Floats['haveValid']/t.Floats['pieceSize']);
-  txPieces.Caption:=Format(sHave, [t.Integers['pieceCount'], GetHumanSize(t.Floats['pieceSize']), i]);
-
-  txHash.Caption:=t.Strings['hashString'];
-  txComment.Caption:=UTF8Encode(t.Strings['comment']);
-  if (AnsiCompareText(Copy(txComment.Caption, 1, 7), 'http://') = 0)
-     or (AnsiCompareText(Copy(txComment.Caption, 1, 8), 'https://') = 0)
-  then begin
-    if not Assigned(txComment.OnClick) then begin
-      txComment.OnClick:=@UrlLabelClick;
-      txComment.Cursor:=crHandPoint;
-      txComment.Font.Color:=clBlue;
-      txComment.Font.Style:=[fsUnderline];
-    end;
-  end
-  else begin
-    if Assigned(txComment.OnClick) then begin
-      txComment.OnClick:=nil;
-      txComment.Cursor:=crDefault;
-      txComment.ParentFont:=True;
-    end;
-  end;
-  txAddedOn.Caption:=TorrentDateTimeToString(Trunc(t.Floats['addedDate']));
-  txCompletedOn.Caption:=TorrentDateTimeToString(Trunc(t.Floats['doneDate']));
-  panGeneralInfo.ChildSizing.Layout:=cclLeftToRightThenTopToBottom;
-end;
-
-procedure TMainForm.FillTrackersList(TrackersData: TJSONObject);
-var
-  i, tidx, row: integer;
-  id: integer;
-  d: TJSONData;
-  t: TJSONObject;
-  f: double;
-  s: string;
-  Trackers, TrackerStats: TJSONArray;
-  WasEmpty: boolean;
-begin
-  if TrackersData = nil then begin
-    ClearDetailsInfo;
-    exit;
-  end;
-  Trackers:=TrackersData.Arrays['trackers'];
-  if RpcObj.RPCVersion >= 7 then
-    TrackerStats:=TrackersData.Arrays['trackerStats']
-  else
-    TrackerStats:=nil;
-  tidx:=gTorrents.Items.IndexOf(idxTorrentId, TrackersData.Integers['id']);
-  if tidx = -1 then begin
-    ClearDetailsInfo;
-    exit;
-  end;
-  WasEmpty:=lvTrackers.Items.Count = 0;
-  lvTrackers.Items.BeginUpdate;
-  try
-    lvTrackers.Enabled:=True;
-    lvTrackers.Color:=clWindow;
-    for i:=0 to lvTrackers.Items.Count - 1 do
-      lvTrackers.Items[idxTrackerTag, i]:=0;
-
-    lvTrackers.Items.Sort(idxTrackerID);
-    for i:=0 to Trackers.Count - 1 do begin
-      d:=Trackers[i];
-      if not (d is TJSONObject) then continue;
-      t:=d as TJSONObject;
-      if t.IndexOfName('id') >= 0 then
-        id:=t.Integers['id']
-      else
-        id:=i;
-      if not lvTrackers.Items.Find(idxTrackerID, id, row) then
-        lvTrackers.Items.InsertRow(row);
-      lvTrackers.Items[idxTrackerID, row]:=id;
-      lvTrackers.Items[idxTrackersListName, row]:=t.Strings['announce'];
-      if TrackerStats <> nil then begin
-        f:=0;
-        if i < TrackerStats.Count then
-          with TrackerStats.Objects[i] do begin
-            s:='';
-            if integer(Integers['announceState']) in [2, 3] then
-              s:=sTrackerUpdating
-            else
-              if Booleans['hasAnnounced'] then
-                if Booleans['lastAnnounceSucceeded'] then
-                  s:=sTrackerWorking
-                else
-                  s:=TranslateString(UTF8Encode(Strings['lastAnnounceResult']));
-
-            if s = 'Success' then
-              s:=sTrackerWorking;
-
-            lvTrackers.Items[idxTrackersListStatus, row]:=UTF8Decode(s);
-            lvTrackers.Items[idxTrackersListSeeds, row]:=Integers['seederCount'];
-
-            if integer(Integers['announceState']) in [2, 3] then
-              f:=1
-            else
-              f:=Floats['nextAnnounceTime'];
-          end;
-      end
-      else begin
-        if i = 0 then begin
-          lvTrackers.Items[idxTrackersListStatus, row]:=gTorrents.Items[idxTrackerStatus, tidx];
-          lvTrackers.Items[idxTrackersListSeeds, row]:=gTorrents.Items[idxSeedsTotal, tidx];
-        end;
-        f:=TrackersData.Floats['nextAnnounceTime'];
-      end;
-
-      if f > 1 then begin
-        f:=(UnixToDateTime(Trunc(f)) + GetTimeZoneDelta - Now)*SecsPerDay;
-        if f < 0 then
-          f:=0;
-      end;
-      if (TrackerStats <> nil) or (i = 0) then
-        lvTrackers.Items[idxTrackersListUpdateIn, row]:=f;
-
-      lvTrackers.Items[idxTrackerTag, row]:=1;
-    end;
-
-    i:=0;
-    while i < lvTrackers.Items.Count do
-      if lvTrackers.Items[idxTrackerTag, i] = 0 then
-        lvTrackers.Items.Delete(i)
-      else
-        Inc(i);
-
-    lvTrackers.Sort;
-    if WasEmpty and (lvTrackers.Items.Count > 0) then
-      lvTrackers.Row:=0;
-  finally
-    lvTrackers.Items.EndUpdate;
-  end;
-end;
-
-procedure TMainForm.FillSessionInfo(s: TJSONObject);
-var
-  d, u: integer;
-begin
-  acRemoveTorrentAndData.Visible:=RpcObj.RPCVersion >= 4;
-  acReannounceTorrent.Visible:=RpcObj.RPCVersion >= 5;
-  acUpdateBlocklist.Visible:=RpcObj.RPCVersion >= 5;
-  acMoveTorrent.Visible:=RpcObj.RPCVersion >= 6;
-  pmiPriority.Visible:=RpcObj.RPCVersion >= 5;
-  miPriority.Visible:=pmiPriority.Visible;
-  acOpenContainingFolder.Visible:=RpcObj.RPCVersion >= 4;
-  acOpenFile.Visible:=acOpenContainingFolder.Visible;
-  pmSepOpen1.Visible:=acOpenContainingFolder.Visible;
-  pmSepOpen2.Visible:=acOpenContainingFolder.Visible;
-  sepAltSpeed.Visible:=RpcObj.RPCVersion >= 5;
-  acAltSpeed.Visible:=RpcObj.RPCVersion >= 5;
-  acAddTracker.Visible:=RpcObj.RPCVersion >= 10;
-  acEditTracker.Visible:=acAddTracker.Visible;
-  acDelTracker.Visible:=acAddTracker.Visible;
-  sepTrackers.Visible:=acAddTracker.Visible;
-
-  if RpcObj.RPCVersion >= 5 then begin
-    acAltSpeed.Checked:=s.Integers['alt-speed-enabled'] <> 0;
-    acUpdateBlocklist.Tag:=s.Integers['blocklist-enabled'];
-    acUpdateBlocklist.Enabled:=acUpdateBlocklist.Tag <> 0;
-  end;
-  if s.IndexOfName('download-dir-free-space') >= 0 then
-    StatusBar.Panels[3].Text:=Format(SFreeSpace, [GetHumanSize(s.Floats['download-dir-free-space'])]);
-
-  if (RpcObj.RPCVersion >= 5) and acAltSpeed.Checked then begin
-    d:=s.Integers['alt-speed-down'];
-    u:=s.Integers['alt-speed-up']
-  end
-  else begin
-    if s.Integers['speed-limit-down-enabled'] <> 0 then
-      d:=s.Integers['speed-limit-down']
-    else
-      d:=-1;
-    if s.Integers['speed-limit-up-enabled'] <> 0 then
-      u:=s.Integers['speed-limit-up']
-    else
-      u:=-1;
-  end;
-  if (FCurDownSpeedLimit <> d) or (FCurUpSpeedLimit <> u) then begin
-    FCurDownSpeedLimit:=d;
-    FCurUpSpeedLimit:=u;
-    FillSpeedsMenu;
-  end;
-end;
-
-procedure TMainForm.CheckStatus(Fatal: boolean);
-var
-  s: string;
-  i: integer;
-begin
-  with MainForm do begin
-    s:=RpcObj.Status;
-    if s <> '' then begin
-      RpcObj.Status:='';
-      if Fatal then
-        DoDisconnect;
-      ForceAppNormal;
-      if Fatal and not RpcObj.Connected and RpcObj.ReconnectAllowed and (FReconnectTimeOut <> -1) then begin
-        FReconnectWaitStart:=Now;
-        if FReconnectTimeOut < 60 then
-          if FReconnectTimeOut < 10 then
-            Inc(FReconnectTimeOut, 5)
-          else
-            Inc(FReconnectTimeOut, 10);
-        txConnError.Caption:=s;
-        panReconnectFrame.Hide;
-        panReconnect.AutoSize:=True;
-        CenterReconnectWindow;
-        panReconnect.Show;
-        panReconnect.BringToFront;
-        TickTimerTimer(nil);
-        panReconnect.AutoSize:=False;
-        panReconnectFrame.Show;
-        CenterReconnectWindow;
-      end
-      else
-        MessageDlg(s, mtError, [mbOK], 0);
-    end;
-
-    if StatusBar.Panels[0].Text <> RpcObj.InfoStatus then begin
-      StatusBar.Panels[0].Text:=RpcObj.InfoStatus;
-      TrayIcon.Hint:=RpcObj.InfoStatus;
-    end;
-    if not RpcObj.Connected then
-      for i:=1 to StatusBar.Panels.Count - 1 do
-        StatusBar.Panels[i].Text:='';
-  end;
-end;
-
-function TMainForm.TorrentAction(const TorrentIds: variant; const AAction: string; args: TJSONObject): boolean;
-var
-  req: TJSONObject;
-  ids: TJSONArray;
-  i: integer;
-begin
-  Application.ProcessMessages;
-  AppBusy;
-  req:=TJSONObject.Create;
-  try
-    req.Add('method', 'torrent-' + AAction);
-    if args = nil then
-      args:=TJSONObject.Create;
-    if not VarIsNull(TorrentIds) then begin
-      ids:=TJSONArray.Create;
-      for i:=VarArrayLowBound(TorrentIds, 1) to VarArrayHighBound(TorrentIds, 1) do
-        ids.Add(integer(TorrentIds[i]));
-      args.Add('ids', ids);
-    end;
-    req.Add('arguments', args);
-    args:=RpcObj.SendRequest(req, False, 30000);
-    Result:=args <> nil;
-    args.Free;
-  finally
-    req.Free;
-  end;
-  if not Result then
-    CheckStatus(False)
-  else
-    DoRefresh(True);
-  AppNormal;
-end;
-
-function TMainForm.SetFilePriority(TorrentId: integer; const Files: array of integer; const APriority: string): boolean;
-
-  function CreateFilesArray: TJSONArray;
-  var
-    i: integer;
-  begin
-    Result:=TJSONArray.Create;
-    for i:=Low(Files) to High(Files) do
-      Result.Add(Files[i]);
-  end;
-
-var
-  req, args: TJSONObject;
-begin
-  AppBusy;
-  req:=TJSONObject.Create;
-  try
-    req.Add('method', 'torrent-set');
-    args:=TJSONObject.Create;
-    if TorrentId <> 0 then
-      args.Add('ids', TJSONArray.Create([TorrentId]));
-    if APriority = 'skip' then
-      args.Add('files-unwanted', CreateFilesArray)
-    else begin
-      args.Add('files-wanted', CreateFilesArray);
-      args.Add('priority-' + APriority, CreateFilesArray);
-    end;
-    req.Add('arguments', args);
-    args:=RpcObj.SendRequest(req, False);
-    Result:=args<> nil;
-    args.Free;
-  finally
-    req.Free;
-  end;
-  if not Result then
-    CheckStatus(False)
-  else
-    DoRefresh;
-  AppNormal;
-end;
-
-function TMainForm.SetCurrentFilePriority(const APriority: string): boolean;
-var
-  Files: array of integer;
-  i, j: integer;
-begin
-  if (gTorrents.Items.Count = 0) or (PageInfo.ActivePage <> tabFiles) then exit;
-  if lvFiles.SelCount = 0 then
-    lvFiles.RowSelected[lvFiles.Row]:=True;
-  SetLength(Files, lvFiles.Items.Count);
-  j:=0;
-  for i:=0 to lvFiles.Items.Count - 1 do
-    if lvFiles.RowSelected[i] then begin
-      Files[j]:=FFiles[idxFileId, i];
-      Inc(j);
-    end;
-  if j = 0 then exit;
-  SetLength(Files, j);
-  Result:=SetFilePriority(RpcObj.CurTorrentId, Files, APriority);
-end;
-
-procedure TMainForm.SetTorrentPriority(APriority: integer);
-var
-  args: TJSONObject;
-begin
-  if gTorrents.Items.Count = 0 then exit;
-  args:=TJSONObject.Create;
-  args.Add('bandwidthPriority', TJSONIntegerNumber.Create(APriority));
-  TorrentAction(GetSelectedTorrents, 'set', args);
-end;
-
-procedure TMainForm.ProcessPieces(const Pieces: string; PieceCount: integer; const Done: double);
-const
-  MaxPieces = 4000;
-var
-  i, j, k, x, xx: integer;
-  s: string;
-  R: TRect;
-  bmp: TBitmap;
-  c: double;
-begin
-  FLastPieces:=Pieces;
-  FLastPieceCount:=PieceCount;
-  FLastDone:=Done;
-  bmp:=nil;
-  try
-    if FTorrentProgress = nil then
-      FTorrentProgress:=TBitmap.Create;
-    if RpcObj.RPCVersion >= 5 then begin
-      bmp:=TBitmap.Create;
-      if PieceCount > MaxPieces then begin
-        bmp.Width:=MaxPieces;
-        c:=MaxPieces/PieceCount;
-      end
-      else begin
-        bmp.Width:=PieceCount;
-        c:=1;
-      end;
-      bmp.Height:=12;
-      bmp.Canvas.Brush.Color:=clWindow;
-      bmp.Canvas.FillRect(0, 0, bmp.Width, bmp.Height);
-      bmp.Canvas.Brush.Color:=clHighlight;
-      x:=0;
-      s:=DecodeBase64(Pieces);
-      for i:=1 to Length(s) do begin
-        j:=byte(s[i]);
-        for k:=1 to 8 do begin
-          if PieceCount = 0 then
-            break;
-          if j and $80 <> 0 then begin
-            xx:=Trunc(x*c);
-            bmp.Canvas.FillRect(xx, 0, xx + 1, bmp.Height);
-          end;
-          Inc(x);
-          j:=j shl 1;
-          Dec(PieceCount);
-        end;
-      end;
-    end;
-
-    with FTorrentProgress.Canvas do begin
-      FTorrentProgress.Width:=pbDownloaded.ClientWidth;
-      if bmp <> nil then begin
-        i:=bmp.Height div 3;
-        FTorrentProgress.Height:=bmp.Height + 5 + i;
-        Brush.Color:=clWindow;
-        FillRect(0, 0, FTorrentProgress.Width, FTorrentProgress.Height);
-        Brush.Color:=clBtnShadow;
-        R:=Rect(0, i + 3, FTorrentProgress.Width, FTorrentProgress.Height);
-        FillRect(R);
-        InflateRect(R, -1, -1);
-        if bmp.Width > 0 then
-          StretchDraw(R, bmp)
-        else begin
-          Brush.Color:=clWindow;
-          FillRect(R);
-        end;
-        R:=Rect(0, 0, FTorrentProgress.Width, i + 2);
-      end
-      else begin
-        FTorrentProgress.Height:=14;
-        R:=Rect(0, 0, FTorrentProgress.Width, FTorrentProgress.Height);
-      end;
-      Brush.Color:=clBtnShadow;
-      FillRect(R);
-      InflateRect(R, -1, -1);
-      x:=R.Left + Round((R.Right - R.Left)*Done/100.0);
-      Brush.Color:=clHighlight;
-      FillRect(R.Left, R.Top, x, R.Bottom);
-      Brush.Color:=clWindow;
-      FillRect(x, R.Top, R.Right, R.Bottom);
-    end;
-    if pbDownloaded.Height <> FTorrentProgress.Height then begin
-      pbDownloaded.Height:=FTorrentProgress.Height;
-      panProgress.AutoSize:=True;
-      panProgress.AutoSize:=False;
-    end;
-    pbDownloaded.Invalidate;
-  finally
-    bmp.Free;
-  end;
-end;
-
-function TMainForm.ExecRemoteFile(const FileName: string; SelectFile: boolean): boolean;
-
-  procedure _Exec(s: string);
-  var
-    p: string;
-  begin
-    AppBusy;
-    if SelectFile then
-      if FileExistsUTF8(s) then begin
-{$ifdef mswindows}
-        p:=Format('/select,"%s"', [s]);
-        s:='explorer.exe';
-{$else}
-        p:='';
-        s:=ExtractFilePath(s);
-{$endif mswindows}
-      end
-      else begin
-        p:='';
-        s:=ExtractFilePath(s);
-      end;
-    Result:=OpenURL(s, p);
-    AppNormal;
-    if not Result then begin
-      ForceAppNormal;
-      MessageDlg(Format(sUnableToExecute, [s]), mtError, [mbOK], 0);
-    end;
-  end;
-
-var
-  s: string;
-begin
-  s:=MapRemoteToLocal(FileName);
-  if s <> '' then begin
-    _Exec(s);
-    exit;
-  end;
-  if FileExistsUTF8(FileName) or DirectoryExistsUTF8(FileName) then begin
-    _Exec(FileName);
-    exit;
-  end;
-
-  ForceAppNormal;
-  MessageDlg(sNoPathMapping, mtInformation, [mbOK], 0);
-end;
-
-function TMainForm.GetSelectedTorrents: variant;
-var
-  i, j: integer;
-begin
-  with gTorrents do begin
-    if SelCount = 0 then
-      Result:=VarArrayOf([Items[idxTorrentId, Row]])
-    else begin
-      Result:=VarArrayCreate([0, SelCount - 1], varinteger);
-      j:=0;
-      for i:=0 to gTorrents.Items.Count - 1 do
-        if gTorrents.RowSelected[i] then begin
-          Result[j]:=Items[idxTorrentId, i];
-          Inc(j);
-        end;
-    end;
-  end;
-end;
-
-procedure TMainForm.FillDownloadDirs(CB: TComboBox);
-var
-  i, j: integer;
-  s, IniSec: string;
-begin
-  CB.Items.Clear;
-  IniSec:='AddTorrent.' + FCurConn;
-  j:=FIni.ReadInteger(IniSec, 'FolderCount', 0);
-  for i:=0 to j - 1 do begin
-    s:=FIni.ReadString(IniSec, Format('Folder%d', [i]), '');
-    if s <> '' then
-      CB.Items.Add(s);
-  end;
-  if CB.Items.Count > 0 then
-    CB.ItemIndex:=0;
-end;
-
-function TMainForm.PriorityToStr(p: integer; var ImageIndex: integer): string;
-begin
-  case p of
-    TR_PRI_SKIP:   begin Result:=sSkip; ImageIndex:=23; end;
-    TR_PRI_LOW:    begin Result:=sLow; ImageIndex:=24; end;
-    TR_PRI_NORMAL: begin Result:=sNormal; ImageIndex:=25; end;
-    TR_PRI_HIGH:   begin Result:=sHigh; ImageIndex:=26; end;
-    else           Result:='???';
-  end;
-end;
-
-procedure TMainForm.SetRefreshInterval;
-var
-  i: TDateTime;
-begin
-  if Visible and (WindowState <> wsMinimized) then
-    i:=FIni.ReadInteger('Interface', 'RefreshInterval', 5)
-  else
-    i:=FIni.ReadInteger('Interface', 'RefreshIntervalMin', 20);
-  if i < 1 then
-    i:=1;
-  RpcObj.RefreshInterval:=i/SecsPerDay;
-end;
-
-procedure TMainForm.AddTracker(EditMode: boolean);
-var
-  req, args: TJSONObject;
-  id, torid: integer;
-begin
-  AppBusy;
-  with TAddTrackerForm.Create(Self) do
-  try
-    id:=0;
-    torid:=RpcObj.CurTorrentId;
-    if EditMode then begin
-      Caption:=STrackerProps;
-      edTracker.Text:=UTF8Encode(widestring(lvTrackers.Items[idxTrackersListName, lvTrackers.Row]));
-      id:=lvTrackers.Items[idxTrackerID, lvTrackers.Row];
-    end;
-    AppNormal;
-    if ShowModal = mrOk then begin
-      AppBusy;
-      Self.Update;
-      req:=TJSONObject.Create;
-      try
-        req.Add('method', 'torrent-set');
-        args:=TJSONObject.Create;
-        args.Add('ids', TJSONArray.Create([torid]));
-        if EditMode then
-          args.Add('trackerReplace', TJSONArray.Create([id, UTF8Decode(edTracker.Text)]))
-        else
-          args.Add('trackerAdd', TJSONArray.Create([UTF8Decode(edTracker.Text)]));
-        req.Add('arguments', args);
-        args:=nil;
-        args:=RpcObj.SendRequest(req, False);
-        if args = nil then begin
-          CheckStatus(False);
-          exit;
-        end;
-        args.Free;
-      finally
-        req.Free;
-      end;
-      DoRefresh;
-      AppNormal;
-    end;
-  finally
-    Free;
-  end;
-end;
-
-procedure TMainForm.UpdateConnections;
-var
-  i, j, cnt: integer;
-  s, cur: string;
-  mi: TMenuItem;
-begin
-  while (pmConnections.Items.Count > 0) and (pmConnections.Items[0].Tag = 0) do
-    pmConnections.Items[0].Free;
-  while (miConnect.Count > 0) and (miConnect.Items[0].Tag = 0) do
-    miConnect.Items[0].Free;
-  cur:=Ini.ReadString('Hosts', 'CurHost', '');
-  cnt:=Ini.ReadInteger('Hosts', 'Count', 0);
-  j:=0;
-  for i:=1 to cnt do begin
-    s:=Ini.ReadString('Hosts', Format('Host%d', [i]), '');
-    if s <> '' then begin
-      mi:=TMenuItem.Create(pmConnections);
-      mi.Caption:=s;
-      if s = cur then
-        mi.Checked:=True;
-      mi.OnClick:=@DoConnectToHost;
-      pmConnections.Items.Insert(j, mi);
-
-      mi:=TMenuItem.Create(miConnect);
-      mi.Caption:=s;
-      if s = cur then
-        mi.Checked:=True;
-      mi.OnClick:=@DoConnectToHost;
-      miConnect.Insert(j, mi);
-      Inc(j);
-    end;
-  end;
-  sepCon1.Visible:=j > 0;
-  sepCon2.Visible:=j > 0;
-end;
-
-procedure TMainForm.DoConnectToHost(Sender: TObject);
-var
-  mi: TMenuItem;
-begin
-  mi:=TMenuItem(Sender);
-  if RpcObj.Connected and (FCurConn = mi.Caption) then
-    exit;
-  DoDisconnect;
-  FReconnectTimeOut:=-1;
-  FCurConn:=mi.Caption;
-  DoConnect;
-end;
-
-procedure TMainForm.DoSetDownloadSpeed(Sender: TObject);
-begin
-  SetSpeedLimit('down', TMenuItem(Sender).Tag);
-end;
-
-procedure TMainForm.DoSetUploadSpeed(Sender: TObject);
-begin
-  SetSpeedLimit('up', TMenuItem(Sender).Tag);
-end;
-
-procedure TMainForm.SetSpeedLimit(const Dir: string; Speed: integer);
-var
-  req, args: TJSONObject;
-begin
-  AppBusy;
-  req:=TJSONObject.Create;
-  try
-    req.Add('method', 'session-set');
-    args:=TJSONObject.Create;
-    args.Add(Format('speed-limit-%s-enabled', [Dir]), integer(Speed >= 0) and 1);
-    if Speed >= 0 then
-      args.Add(Format('speed-limit-%s', [Dir]), Speed);
-    args.Add('alt-speed-enabled', 0);
-    req.Add('arguments', args);
-    args:=RpcObj.SendRequest(req, False);
-    if args = nil then begin
-      CheckStatus(False);
-      exit;
-    end;
-    args.Free;
-  finally
-    req.Free;
-  end;
-  RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtSession];
-  AppNormal;
-end;
-
-function TMainForm.FixSeparators(const p: string): string;
-begin
-  Result:=StringReplace(p, '/', DirectorySeparator, [rfReplaceAll]);
-  Result:=StringReplace(Result, '\', DirectorySeparator, [rfReplaceAll]);
-end;
-
-function TMainForm.MapRemoteToLocal(const RemotePath: string): string;
-var
-  i, j: integer;
-  s, ss, fn: string;
-begin
-  Result:='';
-  fn:=FixSeparators(Trim(RemotePath));
-  for i:=0 to FPathMap.Count - 1 do begin
-    s:=FPathMap[i];
-    j:=Pos('=', s);
-    if j > 0 then begin
-      ss:=FixSeparators(Copy(s, 1, j - 1));
-      if (ss = fn) or (Pos(IncludeProperTrailingPathDelimiter(ss), fn) = 1) then begin
-        if ss = fn then
-          ss:=Copy(s, j + 1, MaxInt)
-        else begin
-          ss:=IncludeProperTrailingPathDelimiter(ss);
-          ss:=IncludeTrailingPathDelimiter(Copy(s, j + 1, MaxInt)) + Copy(fn, Length(ss) + 1, MaxInt);
-        end;
-        Result:=FixSeparators(ss);
-        exit;
-      end;
-    end;
-  end;
-end;
-
-procedure TMainForm.FillSpeedsMenu;
-
-  procedure _FillMenu(Items: TMenuItem; const Speeds: string; OnClickHandler: TNotifyEvent; CurSpeed: integer);
-  var
-    sl: TStringList;
-    i, j: integer;
-    mi: TMenuItem;
-  begin
-    Items.Clear;
-    if not RpcObj.Connected then
-      exit;
-    sl:=TStringList.Create;
-    try
-      sl.Delimiter:=',';
-      sl.DelimitedText:=Speeds;
-      i:=0;
-      while i < sl.Count do begin
-        j:=StrToIntDef(Trim(sl[i]), -1);
-        if j >= 0 then begin
-          sl[i]:=Format('%.08d', [j]);
-          Inc(i);
-        end
-        else
-          sl.Delete(i);
-      end;
-      sl.Duplicates:=dupIgnore;
-      sl.Sorted:=True;
-      sl.Add(Format('%.08d', [CurSpeed]));
-
-      for i:=0 to sl.Count - 1 do begin
-        j:=StrToIntDef(Trim(sl[i]), -1);
-        if j >= 0 then begin
-          mi:=TMenuItem.Create(Items);
-          mi.Caption:=Format('%d %s%s', [j, sKByte, sPerSecond]);
-          mi.Tag:=j;
-          mi.OnClick:=OnClickHandler;
-          if j = CurSpeed then
-            mi.Checked:=True;
-          Items.Insert(0, mi);
-        end;
-      end;
-    finally
-      sl.Free;
-    end;
-    if Items.Count > 0 then begin
-      mi:=TMenuItem.Create(Items);
-      mi.Caption:='-';
-      Items.Insert(0, mi);
-    end;
-    mi:=TMenuItem.Create(Items);
-    mi.Caption:=SUnlimited;
-    mi.Tag:=-1;
-    mi.OnClick:=OnClickHandler;
-    if CurSpeed = -1 then
-      mi.Checked:=True;
-    Items.Insert(0, mi);
-  end;
-
-var
-  s: string;
-begin
-  s:=Ini.ReadString('Connection.' + FCurConn, 'DownSpeeds', DefSpeeds);
-  _FillMenu(pmDownSpeeds.Items, s, @DoSetDownloadSpeed, FCurDownSpeedLimit);
-  _FillMenu(pmiDownSpeedLimit, s, @DoSetDownloadSpeed, FCurDownSpeedLimit);
-
-  s:=Ini.ReadString('Connection.' + FCurConn, 'UpSpeeds', DefSpeeds);
-  _FillMenu(pmUpSpeeds.Items, s, @DoSetUploadSpeed, FCurUpSpeedLimit);
-  _FillMenu(pmiUpSpeedLimit, s, @DoSetUploadSpeed, FCurUpSpeedLimit);
-end;
-
-initialization
-  {$I main.lrs}
-
-end.
+{*************************************************************************************
+  This file is part of Transmission Remote GUI.
+  Copyright (c) 2008-2010 by Yury Sidorov.
+
+  Transmission Remote GUI is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  Transmission Remote GUI is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with Transmission Remote GUI; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+*************************************************************************************}
+
+unit Main;
+
+{$mode objfpc}{$H+}
+
+interface
+
+uses
+  Classes, SysUtils, FileUtil, zstream, LResources, Forms, Controls, Graphics, Dialogs, ComCtrls, Menus, ActnList,
+  httpsend, IniFiles, StdCtrls, fpjson, jsonparser, ExtCtrls, rpc, syncobjs, variants, varlist, IpResolver,
+  zipper, ResTranslator, VarGrid, StrUtils, LCLProc, Grids;
+
+const
+  AppName = 'Transmission Remote GUI';
+  AppVersion = '3.1';
+
+resourcestring
+  sAll = 'All';
+  sWaiting = 'Waiting';
+  sVerifying = 'Verifying';
+  sDownloading = 'Downloading';
+  sSeeding = 'Seeding';
+  sFinished = 'Finished';
+  sStopped = 'Stopped';
+  sUnknown = 'Unknown';
+  sCompleted = 'Completed';
+  sConnected = 'connected';
+  sActive = 'Active';
+  sInactive = 'Inactive';
+  sUpdating = 'Updating...';
+  sFinishedDownload = '''%s'' has finished downloading';
+  sDownloadComplete = 'Download complete';
+  sUpdateComplete = 'Update complete.';
+  sTorrentVerification = 'Torrent verification may take a long time.' + LineEnding + 'Are you sure to start verification of torrent ''%s''?';
+  sTorrentsVerification = 'Torrents verification may take a long time.' + LineEnding + 'Are you sure to start verification of %d torrents?';
+  sReconnect = 'Reconnect in %d seconds.';
+  sDisconnected = 'Disconnected';
+  sConnectingToDaemon = 'Connecting to daemon...';
+  sSec = '%ds';
+  sMinSec = '%dm, %ds';
+  sHourMin = '%dh, %dm';
+  sDayHour = '%dd, %dh';
+  sDownloadingSeeding = '%s%s%d downloading, %d seeding%s%s, %s';
+  sDownSpeed = 'D: %s/s';
+  sUpSpeed = 'U: %s/s';
+  SFreeSpace = 'Free: %s';
+  sNoPathMapping = 'Unable to find path mapping.'+LineEnding+'Use program''s options to setup path mappings.';
+  sGeoIPConfirm = 'Geo IP database is needed to resolve country by IP address.' + LineEnding + 'Download this database now?';
+  sFlagArchiveConfirm = 'Flag images archive is needed to display country flags.' + LineEnding + 'Download this archive now?';
+  sInSwarm = 'in swarm';
+  sHashfails = '%s (%d hashfails)';
+  sDone = '%s (%s done)';
+  sHave = '%d x %s (have %d)';
+  sUnableExtractFlag = 'Unable to extract flag image.';
+  sTrackerWorking = 'Working';
+  sTrackerUpdating = 'Updating';
+  sRestartRequired = 'You should restart the application to apply changes.';
+  sRemoveTorrentData = 'Are you sure to remove torrent ''%s'' and all associated DATA?';
+  sRemoveTorrentDataMulti = 'Are you sure to remove %d selected torrents and all their associated DATA?';
+  sRemoveTorrent = 'Are you sure to remove torrent ''%s''?';
+  sRemoveTorrentMulti = 'Are you sure to remove %d selected torrents?';
+  sUnableGetFilesList = 'Unable to get files list';
+  sTrackerError = 'Tracker';
+  sSkip = 'skip';
+  sLow = 'low';
+  sNormal = 'normal';
+  sHigh = 'high';
+  sByte = 'b';
+  sKByte = 'KB';
+  sMByte = 'MB';
+  sGByte = 'GB';
+  sTByte = 'TB';
+  sPerSecond = '/s';
+  sOf = 'of';
+  sNoTracker = 'No tracker';
+  sTorrents = 'Torrents';
+  sBlocklistUpdateComplete = 'The block list has been updated successfully.' + LineEnding + 'The list entries count: %d.';
+  sSeveralTorrents = '%d torrents';
+  sUnableToExecute = 'Unable to execute "%s".';
+  sSSLLoadError = 'Unable to load OpenSSL library files: %s and %s';
+  SRemoveTracker = 'Are you sure to remove tracker ''%s''?';
+  SUnlimited = 'Unlimited';
+  SAverage = 'average';
+
+type
+
+  { TMainForm }
+
+  TMainForm = class(TForm)
+    acConnect: TAction;
+    acAddTorrent: TAction;
+    acStopTorrent: TAction;
+    acRemoveTorrent: TAction;
+    acStartTorrent: TAction;
+    acSetHighPriority: TAction;
+    acSetNormalPriority: TAction;
+    acSetLowPriority: TAction;
+    acSetNotDownload: TAction;
+    acOptions: TAction;
+    acDaemonOptions: TAction;
+    acStartAllTorrents: TAction;
+    acStopAllTorrents: TAction;
+    acExit: TAction;
+    acResolveHost: TAction;
+    acResolveCountry: TAction;
+    acShowCountryFlag: TAction;
+    acSetupColumns: TAction;
+    acRemoveTorrentAndData: TAction;
+    acOpenFile: TAction;
+    acOpenContainingFolder: TAction;
+    acAddLink: TAction;
+    acReannounceTorrent: TAction;
+    acMoveTorrent: TAction;
+    acSelectAll: TAction;
+    acShowApp: TAction;
+    acHideApp: TAction;
+    acAddTracker: TAction;
+    acEditTracker: TAction;
+    acDelTracker: TAction;
+    acConnOptions: TAction;
+    acNewConnection: TAction;
+    acDisconnect: TAction;
+    acAltSpeed: TAction;
+    acUpdateBlocklist: TAction;
+    acUpdateGeoIP: TAction;
+    acTorrentProps: TAction;
+    acVerifyTorrent: TAction;
+    ActionList: TActionList;
+    ApplicationProperties: TApplicationProperties;
+    edSearch: TEdit;
+    imgSearch: TImage;
+    imgFlags: TImageList;
+    ImageList16: TImageList;
+    FilterTimer: TTimer;
+    lvFilter: TVarGrid;
+    lvTrackers: TVarGrid;
+    MenuItem25: TMenuItem;
+    MenuItem40: TMenuItem;
+    MenuItem41: TMenuItem;
+    MenuItem43: TMenuItem;
+    MenuItem63: TMenuItem;
+    sepTrackers: TMenuItem;
+    MenuItem65: TMenuItem;
+    MenuItem66: TMenuItem;
+    MenuItem67: TMenuItem;
+    MenuItem68: TMenuItem;
+    MenuItem69: TMenuItem;
+    MenuItem70: TMenuItem;
+    MenuItem72: TMenuItem;
+    MenuItem76: TMenuItem;
+    pmiUpSpeedLimit: TMenuItem;
+    pmiDownSpeedLimit: TMenuItem;
+    pmDownSpeeds: TPopupMenu;
+    pmUpSpeeds: TPopupMenu;
+    sepCon2: TMenuItem;
+    MenuItem71: TMenuItem;
+    sepCon1: TMenuItem;
+    MenuItem73: TMenuItem;
+    MenuItem74: TMenuItem;
+    MenuItem75: TMenuItem;
+    pbStatus: TPaintBox;
+    pmSepOpen2: TMenuItem;
+    MenuItem42: TMenuItem;
+    pmSepOpen1: TMenuItem;
+    MenuItem44: TMenuItem;
+    MenuItem45: TMenuItem;
+    MenuItem46: TMenuItem;
+    MenuItem47: TMenuItem;
+    MenuItem48: TMenuItem;
+    MenuItem49: TMenuItem;
+    MenuItem50: TMenuItem;
+    MenuItem51: TMenuItem;
+    MenuItem52: TMenuItem;
+    MenuItem53: TMenuItem;
+    MenuItem54: TMenuItem;
+    MenuItem55: TMenuItem;
+    MenuItem56: TMenuItem;
+    MenuItem58: TMenuItem;
+    MenuItem59: TMenuItem;
+    MenuItem60: TMenuItem;
+    MenuItem61: TMenuItem;
+    MenuItem62: TMenuItem;
+    miPriority: TMenuItem;
+    pmiPriority: TMenuItem;
+    MenuItem57: TMenuItem;
+    pbDownloaded: TPaintBox;
+    pmTrackers: TPopupMenu;
+    pmConnections: TPopupMenu;
+    tabTrackers: TTabSheet;
+    AnimateTimer: TTimer;
+    tbConnect: TToolButton;
+    ToolButton10: TToolButton;
+    sepAltSpeed: TToolButton;
+    ToolButton9: TToolButton;
+    txConnErrorLabel: TLabel;
+    panSearch: TPanel;
+    panFilter: TPanel;
+    panReconnectFrame: TShape;
+    txReconnectSecs: TLabel;
+    txConnError: TLabel;
+    MenuItem38: TMenuItem;
+    MenuItem39: TMenuItem;
+    panReconnect: TPanel;
+    txLastActive: TLabel;
+    txLastActiveLabel: TLabel;
+    txTracker: TLabel;
+    txTrackerLabel: TLabel;
+    txCompletedOn: TLabel;
+    txCompletedOnLabel: TLabel;
+    txAddedOn: TLabel;
+    txAddedOnLabel: TLabel;
+    MenuItem19: TMenuItem;
+    MenuItem20: TMenuItem;
+    MenuItem21: TMenuItem;
+    MenuItem22: TMenuItem;
+    MenuItem23: TMenuItem;
+    MenuItem24: TMenuItem;
+    miTSep1: TMenuItem;
+    MenuItem26: TMenuItem;
+    MenuItem27: TMenuItem;
+    MenuItem28: TMenuItem;
+    MenuItem29: TMenuItem;
+    MenuItem30: TMenuItem;
+    MenuItem31: TMenuItem;
+    MenuItem32: TMenuItem;
+    MenuItem33: TMenuItem;
+    MenuItem34: TMenuItem;
+    MenuItem35: TMenuItem;
+    MenuItem36: TMenuItem;
+    MenuItem37: TMenuItem;
+    miAbout: TMenuItem;
+    miHelp: TMenuItem;
+    panTop: TPanel;
+    pmTray: TPopupMenu;
+    HSplitter: TSplitter;
+    pmPeers: TPopupMenu;
+    TrayIcon: TTrayIcon;
+    txCreated: TLabel;
+    txCreatedLabel: TLabel;
+    txTorrentHeader: TPanel;
+    txTorrentName: TLabel;
+    txTorrentNameLabel: TLabel;
+    txDownProgress: TLabel;
+    txDownProgressLabel: TLabel;
+    panProgress: TPanel;
+    txMaxPeers: TLabel;
+    txMaxPeersLabel: TLabel;
+    txPeers: TLabel;
+    txPeersLabel: TLabel;
+    txSeeds: TLabel;
+    txSeedsLabel: TLabel;
+    txDummy2: TLabel;
+    txTrackerUpdate: TLabel;
+    txDummy1: TLabel;
+    txRemaining: TLabel;
+    txRemainingLabel: TLabel;
+    txStatus: TLabel;
+    txStatusLabel: TLabel;
+    txRatio: TLabel;
+    txRatioLabel: TLabel;
+    txDownLimit: TLabel;
+    txDownLimitLabel: TLabel;
+    txTrackerUpdateLabel: TLabel;
+    txTransferHeader: TPanel;
+    txUpSpeed: TLabel;
+    txUpLimit: TLabel;
+    txUpSpeedLabel: TLabel;
+    txDownSpeed: TLabel;
+    txDownSpeedLabel: TLabel;
+    txUploaded: TLabel;
+    txUploadedLabel: TLabel;
+    txDownloaded: TLabel;
+    txDownloadedLabel: TLabel;
+    txUpLimitLabel: TLabel;
+    txWasted: TLabel;
+    txWastedLabel: TLabel;
+    miCopyLabel: TMenuItem;
+    pmLabels: TPopupMenu;
+    txError: TLabel;
+    txErrorLabel: TLabel;
+    MenuItem17: TMenuItem;
+    MenuItem18: TMenuItem;
+    miTools: TMenuItem;
+    TickTimer: TTimer;
+    MainToolBar: TToolBar;
+    panTransfer: TPanel;
+    ToolButton1: TToolButton;
+    ToolButton2: TToolButton;
+    ToolButton3: TToolButton;
+    ToolButton4: TToolButton;
+    ToolButton5: TToolButton;
+    ToolButton6: TToolButton;
+    ToolButton7: TToolButton;
+    ToolButton8: TToolButton;
+    txComment: TLabel;
+    txCommentLabel: TLabel;
+    txHash: TLabel;
+    txHashLabel: TLabel;
+    panGeneralInfo: TPanel;
+    lvFiles: TVarGrid;
+    lvPeers: TVarGrid;
+    MainMenu: TMainMenu;
+    MenuItem1: TMenuItem;
+    MenuItem10: TMenuItem;
+    MenuItem11: TMenuItem;
+    MenuItem12: TMenuItem;
+    MenuItem13: TMenuItem;
+    MenuItem14: TMenuItem;
+    MenuItem15: TMenuItem;
+    MenuItem16: TMenuItem;
+    MenuItem2: TMenuItem;
+    MenuItem3: TMenuItem;
+    MenuItem4: TMenuItem;
+    MenuItem5: TMenuItem;
+    MenuItem6: TMenuItem;
+    MenuItem7: TMenuItem;
+    MenuItem8: TMenuItem;
+    MenuItem9: TMenuItem;
+    miConnect: TMenuItem;
+    miExit: TMenuItem;
+    miTorrent: TMenuItem;
+    OpenTorrentDlg: TOpenDialog;
+    PageInfo: TPageControl;
+    pmTorrents: TPopupMenu;
+    pmFiles: TPopupMenu;
+    sbGenInfo: TScrollBox;
+    txPieces: TLabel;
+    txPiecesLabel: TLabel;
+    txTotalSize: TLabel;
+    txTotalSizeLabel: TLabel;
+    gTorrents: TVarGrid;
+    VSplitter: TSplitter;
+    StatusBar: TStatusBar;
+    tabPeers: TTabSheet;
+    tabGeneral: TTabSheet;
+    TorrentsListTimer: TTimer;
+    tabFiles: TTabSheet;
+    procedure acAddLinkExecute(Sender: TObject);
+    procedure acAddTorrentExecute(Sender: TObject);
+    procedure acAddTrackerExecute(Sender: TObject);
+    procedure acAltSpeedExecute(Sender: TObject);
+    procedure acConnectExecute(Sender: TObject);
+    procedure acConnOptionsExecute(Sender: TObject);
+    procedure acDelTrackerExecute(Sender: TObject);
+    procedure acEditTrackerExecute(Sender: TObject);
+    procedure acHideAppExecute(Sender: TObject);
+    procedure acMoveTorrentExecute(Sender: TObject);
+    procedure acNewConnectionExecute(Sender: TObject);
+    procedure acOpenContainingFolderExecute(Sender: TObject);
+    procedure acOpenFileExecute(Sender: TObject);
+    procedure acOptionsExecute(Sender: TObject);
+    procedure acDisconnectExecute(Sender: TObject);
+    procedure acExitExecute(Sender: TObject);
+    procedure acDaemonOptionsExecute(Sender: TObject);
+    procedure acReannounceTorrentExecute(Sender: TObject);
+    procedure acRemoveTorrentAndDataExecute(Sender: TObject);
+    procedure acRemoveTorrentExecute(Sender: TObject);
+    procedure acResolveCountryExecute(Sender: TObject);
+    procedure acResolveHostExecute(Sender: TObject);
+    procedure acSelectAllExecute(Sender: TObject);
+    procedure acSetHighPriorityExecute(Sender: TObject);
+    procedure acSetLowPriorityExecute(Sender: TObject);
+    procedure acSetNormalPriorityExecute(Sender: TObject);
+    procedure acSetNotDownloadExecute(Sender: TObject);
+    procedure acSetupColumnsExecute(Sender: TObject);
+    procedure acShowAppExecute(Sender: TObject);
+    procedure acShowCountryFlagExecute(Sender: TObject);
+    procedure acStartAllTorrentsExecute(Sender: TObject);
+    procedure acStartTorrentExecute(Sender: TObject);
+    procedure acStopAllTorrentsExecute(Sender: TObject);
+    procedure acStopTorrentExecute(Sender: TObject);
+    procedure acTorrentPropsExecute(Sender: TObject);
+    procedure acUpdateBlocklistExecute(Sender: TObject);
+    procedure acUpdateGeoIPExecute(Sender: TObject);
+    procedure acVerifyTorrentExecute(Sender: TObject);
+    procedure AnimateTimerTimer(Sender: TObject);
+    procedure ApplicationPropertiesException(Sender: TObject; E: Exception);
+    procedure ApplicationPropertiesIdle(Sender: TObject; var Done: Boolean);
+    procedure ApplicationPropertiesMinimize(Sender: TObject);
+    procedure ApplicationPropertiesRestore(Sender: TObject);
+    procedure edSearchChange(Sender: TObject);
+    procedure FormDropFiles(Sender: TObject; const FileNames: array of String);
+    procedure FormWindowStateChange(Sender: TObject);
+    procedure gTorrentsCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+    procedure gTorrentsClick(Sender: TObject);
+    procedure gTorrentsDblClick(Sender: TObject);
+    procedure gTorrentsDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean);
+    procedure gTorrentsResize(Sender: TObject);
+    procedure gTorrentsSortColumn(Sender: TVarGrid; var ASortCol: integer);
+    procedure lvFilesCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+    procedure lvFilesDblClick(Sender: TObject);
+    procedure lvFilesDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean);
+    procedure lvFilesKeyPress(Sender: TObject; var Key: char);
+    procedure lvFilterCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+    procedure lvFilterClick(Sender: TObject);
+    procedure lvFilterDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean);
+    procedure lvPeersCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+    procedure lvTrackersCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+    procedure lvTrackersDblClick(Sender: TObject);
+    procedure lvTrackersKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
+    procedure pbStatusPaint(Sender: TObject);
+    procedure panReconnectResize(Sender: TObject);
+    procedure pbDownloadedPaint(Sender: TObject);
+    procedure StatusBarMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
+    procedure TickTimerTimer(Sender: TObject);
+    procedure FilterTimerTimer(Sender: TObject);
+    procedure FormClose(Sender: TObject; var CloseAction: TCloseAction);
+    procedure FormCreate(Sender: TObject);
+    procedure FormDestroy(Sender: TObject);
+    procedure FormResize(Sender: TObject);
+    procedure FormShow(Sender: TObject);
+    procedure lvFilterResize(Sender: TObject);
+    procedure miAboutClick(Sender: TObject);
+    procedure miCopyLabelClick(Sender: TObject);
+    procedure PageInfoChange(Sender: TObject);
+    procedure TorrentsListTimerTimer(Sender: TObject);
+    procedure pmFilesPopup(Sender: TObject);
+    procedure pmTorrentsPopup(Sender: TObject);
+    procedure TrayIconDblClick(Sender: TObject);
+  private
+    FStarted: boolean;
+    FTorrents: TVarList;
+    FFiles: TVarList;
+    FTrackers: TStringList;
+    FResolver: TIpResolver;
+    FUnZip: TUnZipper;
+    FReconnectWaitStart: TDateTime;
+    FReconnectTimeOut: integer;
+    FTorrentProgress: TBitmap;
+    FLastPieces: string;
+    FLastPieceCount: integer;
+    FLastDone: double;
+    FIni: TIniFile;
+    FCurConn: string;
+    FPathMap: TStringList;
+    FLastFilerIndex: integer;
+    FFilterChanged: boolean;
+    FStatusBmp: TBitmap;
+    FStatusImgIndex: integer;
+    FCurDownSpeedLimit: integer;
+    FCurUpSpeedLimit: integer;
+
+    procedure DoConnect;
+    procedure DoDisconnect;
+    procedure UpdateUI;
+    procedure ShowConnOptions(NewConnection: boolean);
+    procedure SaveColumns(LV: TVarGrid; const AName: string; FullInfo: boolean = True);
+    procedure LoadColumns(LV: TVarGrid; const AName: string; FullInfo: boolean = True);
+    function GetTorrentError(t: TJSONObject): string;
+    function SecondsToString(j: integer): string;
+    procedure DoAddTorrent(const FileName: Utf8String);
+    procedure UpdateTray;
+    procedure HideApp;
+    procedure ShowApp;
+    procedure DownloadFinished(const TorrentName: string);
+    function GetFlagImage(const CountryCode: string): integer;
+    procedure BeforeCloseApp;
+    function GetGeoIpDatabase: string;
+    function GetFlagsArchive: string;
+    function DownloadGeoIpDatabase(AUpdate: boolean): boolean;
+    procedure TorrentColumnsChanged;
+    function EtaToString(ETA: integer): string;
+    function GetTorrentStatus(TorrentIdx: integer): string;
+    function GetSeedsText(Seeds, SeedsTotal: integer): string;
+    function GetPeersText(Peers, PeersTotal, Leechers: integer): string;
+    function RatioToString(Ratio: double): string;
+    function TorrentDateTimeToString(d: Int64): string;
+    procedure DoRefresh(All: boolean = False);
+    function GetFilesCommonPath(files: TJSONArray): string;
+    procedure InternalRemoveTorrent(const Msg, MsgMulti: string; RemoveLocalData: boolean);
+    function IncludeProperTrailingPathDelimiter(const s: string): string;
+    procedure UrlLabelClick(Sender: TObject);
+    procedure CenterReconnectWindow;
+    procedure DrawProgressCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const ACellRect: TRect);
+    procedure ProcessPieces(const Pieces: string; PieceCount: integer; const Done: double);
+    function ExecRemoteFile(const FileName: string; SelectFile: boolean): boolean;
+    function GetSelectedTorrents: variant;
+    procedure FillDownloadDirs(CB: TComboBox);
+    function PriorityToStr(p: integer; var ImageIndex: integer): string;
+    procedure SetRefreshInterval;
+    procedure AddTracker(EditMode: boolean);
+    procedure UpdateConnections;
+    procedure DoConnectToHost(Sender: TObject);
+    procedure FillSpeedsMenu;
+    procedure DoSetDownloadSpeed(Sender: TObject);
+    procedure DoSetUploadSpeed(Sender: TObject);
+    procedure SetSpeedLimit(const Dir: string; Speed: integer);
+    function FixSeparators(const p: string): string;
+    function MapRemoteToLocal(const RemotePath: string): string;
+  public
+    procedure FillTorrentsList(list: TJSONArray);
+    procedure FillPeersList(list: TJSONArray);
+    procedure FillFilesList(list, priorities, wanted: TJSONArray; const DownloadDir: WideString);
+    procedure FillGeneralInfo(t: TJSONObject);
+    procedure FillTrackersList(TrackersData: TJSONObject);
+    procedure FillSessionInfo(s: TJSONObject);
+    procedure CheckStatus(Fatal: boolean = True);
+    function TorrentAction(const TorrentIds: variant; const AAction: string; args: TJSONObject = nil): boolean;
+    function SetFilePriority(TorrentId: integer; const Files: array of integer; const APriority: string): boolean;
+    function SetCurrentFilePriority(const APriority: string): boolean;
+    procedure SetTorrentPriority(APriority: integer);
+    procedure ClearDetailsInfo;
+    function SelectRemoteFolder(const CurFolder, DialogTitle: string): string;
+    property Ini: TIniFile read FIni;
+  end;
+
+function CheckAppParams: boolean;
+function GetHumanSize(sz: double; RoundTo: integer = 0): string;
+procedure AutoSizeForm(Form: TCustomForm);
+
+var
+  MainForm: TMainForm;
+  RpcObj: TRpc;
+  FTranslationFileName: string;
+  FTranslationLanguage: string;
+  FAlterColor: TColor;
+
+const
+  // Torrents list
+  idxName = 0;
+  idxSize = 1;
+  idxDone = 2;
+  idxStatus = 3;
+  idxSeeds = 4;
+  idxPeers = 5;
+  idxDownSpeed = 6;
+  idxUpSpeed = 7;
+  idxETA = 8;
+  idxRatio = 9;
+  idxDownloaded = 10;
+  idxUploaded = 11;
+  idxTracker = 12;
+  idxTrackerStatus = 13;
+  idxAddedOn = 14;
+  idxCompletedOn = 15;
+  idxLastActive = 16;
+  idxPath = 17;
+  idxPriority = 18;
+  idxSizeToDowload = 19;
+  idxTorrentId = 20;
+
+  idxTag = -1;
+  idxSeedsTotal = -2;
+  idxLeechersTotal = -3;
+//  idxPeersTotal = -4;
+  idxStateImg = -5;
+  TorrentsExtraColumns = 5;
+
+  // Peers list
+  idxPeerHost = 0;
+  idxPeerPort = 1;
+  idxPeerCountry = 2;
+  idxPeerClient = 3;
+  idxPeerFlags = 4;
+  idxPeerDone = 5;
+  idxPeerUpSpeed = 6;
+  idxPeerDownSpeed = 7;
+  idxPeerTag = -1;
+  idxPeerIP = -2;
+  idxPeerCountryImage = -3;
+  PeersExtraColumns = 3;
+
+  // Files list
+  idxFileName = 0;
+  idxFileSize = 1;
+  idxFileDone = 2;
+  idxFileProgress = 3;
+  idxFilePriority = 4;
+  idxFileId = -1;
+  idxFileTag = -2;
+  idxFileFullPath = -3;
+  FilesExtraColumns = 3;
+
+  // Trackers list
+  idxTrackersListName = 0;
+  idxTrackersListStatus = 1;
+  idxTrackersListUpdateIn = 2;
+  idxTrackersListSeeds = 3;
+  idxTrackerTag = -1;
+  idxTrackerID = -2;
+  TrackersExtraColumns = 2;
+
+  // Filter idices
+  fltAll      = 0;
+  fltDown     = 1;
+  fltDone     = 2;
+  fltActive   = 3;
+  fltInactive = 4;
+  fltStopped  = 5;
+
+  // Status images
+  imgDown      = 9;
+  imgSeed      = 10;
+  imgDownError = 11;
+  imgSeedError = 12;
+  imgError     = 13;
+  imgDone      = 14;
+  imgStopped   = 29;
+  imgDownQueue = 16;
+  imgSeedQueue = 17;
+  imgAll       = 19;
+  imgActive    = 20;
+
+  StatusFiltersCount = 6;
+
+  TorrentFieldsMap: array[idxName..idxTorrentId] of string =
+    ('', 'totalSize', '', 'status', 'peersSendingToUs,seeders',
+     'peersGettingFromUs,leechers', 'rateDownload', 'rateUpload', 'eta', 'uploadRatio',
+     'downloadedEver', 'uploadedEver', '', '', 'addedDate', 'doneDate', 'activityDate', '', 'bandwidthPriority',
+     '', '');
+
+implementation
+
+uses
+  AddTorrent, synacode, ConnOptions, clipbrd, DateUtils, utils, TorrProps, DaemonOptions, About,
+  ToolWin, download, ColSetup, types, AddLink, MoveTorrent, ssl_openssl_lib, AddTracker, lcltype,
+  Options, ButtonPanel;
+
+const
+  TR_STATUS_CHECK_WAIT   = ( 1 shl 0 ); // Waiting in queue to check files
+  TR_STATUS_CHECK        = ( 1 shl 1 ); // Checking files
+  TR_STATUS_DOWNLOAD     = ( 1 shl 2 ); // Downloading
+  TR_STATUS_SEED         = ( 1 shl 3 ); // Seeding
+  TR_STATUS_STOPPED      = ( 1 shl 4 ); // Torrent is stopped
+  TR_STATUS_FINISHED     = ( 1 shl 8 ); // Torrent is finished (pseudo status)
+
+  TR_SPEEDLIMIT_GLOBAL    = 0;    // only follow the overall speed limit
+  TR_SPEEDLIMIT_SINGLE    = 1;    // only follow the per-torrent limit
+  TR_SPEEDLIMIT_UNLIMITED = 2;    // no limits at all
+
+  TR_PRI_SKIP   = -1000;  // psedudo priority
+  TR_PRI_LOW    = -1;
+  TR_PRI_NORMAL =  0;
+  TR_PRI_HIGH   =  1;
+
+const
+  SizeNames: array[1..5] of string = (sByte, sKByte, sMByte, sGByte, sTByte);
+
+function GetHumanSize(sz: double; RoundTo: integer = 0): string;
+var
+  i: integer;
+begin
+  if sz < 0 then begin
+    Result:='-';
+    exit;
+  end;
+  i:=Low(SizeNames);
+  if RoundTo > 0 then begin
+    Inc(i);
+    sz:=sz/1024;
+  end;
+  while i <= High(SizeNames) do begin
+    if sz < 1024 then
+      break;
+    sz:=sz/1024;
+    Inc(i);
+  end;
+  if (RoundTo = 0) and (i > 3) then
+    RoundTo:=i - 2;
+  Result:=Format('%.' + IntToStr(RoundTo) + 'f %s', [sz, SizeNames[i]]);
+end;
+
+function AddToChannel(Clr: TColor; Value: integer; Position: byte): TColor;
+var i: integer;
+
+begin
+     i:=(Clr shr (Position*8)) and $FF;
+     i:=i + Value;
+     if i < 0 then i:=0;
+     if i > $FF then i:=$FF;
+     Result:=Clr and (not (Cardinal($FF) shl (Position*8))) or (Cardinal(i) shl (Position*8));
+end;
+
+function AddToColor(Color: TColor; R, G, B: integer): TColor;
+begin
+     Result:=ColorToRGB(Color);
+     Result:=AddToChannel(Result, R, 0);
+     Result:=AddToChannel(Result, G, 1);
+     Result:=AddToChannel(Result, B, 2);
+end;
+
+function GetLikeColor(Color: TColor; Delta: integer): TColor;
+var i, j: integer;
+
+begin
+    Result:=ColorToRGB(Color);
+    j:=Result and $FF;               //red
+    i:=(Result shr 8) and $FF;       // green
+    if i > j then
+      j:=i;
+    i:=((Result shr 16) and $FF) shr 1;      // blue
+    if i > j then
+      j:=i;
+    if j < $80 then
+      i:=(($80 - j) div $20 + 1)*Delta
+    else
+      i:=Delta;
+    if (i + j > 255) or (i + j < 0) then
+      i:=-Delta;
+
+    Result:=AddToColor(Result, i, i, i);
+end;
+
+function LocateFile(const FileName: string; const Paths: array of string): string;
+var
+  i: integer;
+begin
+  for i:=Low(Paths) to High(Paths) do begin
+    Result:=IncludeTrailingPathDelimiter(Paths[i]) + FileName;
+    if FileExists(Result) then
+      exit;
+  end;
+  Result:='';
+end;
+
+procedure OnTranslate(Sender: TResTranslator; const ResourceName: AnsiString; var Accept: boolean);
+const
+  IgnoreUnits: array[0..11] of string =
+      ('fpjson','jsonparser','jsonscanner','lclstrconsts','math',
+       'rtlconsts','sysconst','variants','zbase','zipper','zstream', 'xmlcfg');
+
+  IgnoreControls: array[0..2] of string =
+    ('AboutForm.txAuthor', 'AboutForm.txHomePage', 'MainForm.miLn');
+
+var
+  i: integer;
+begin
+  Accept := not AnsiMatchText(Copy2Symb(ResourceName, '.'), IgnoreUnits)
+             or AnsiStartsText('lclstrconsts.rsMb', ResourceName)  //<-- dialog buttons
+             or AnsiStartsText('lclstrconsts.rsMt', ResourceName); //<-- dialog message
+  if Accept then
+    for i:=Low(IgnoreControls) to High(IgnoreControls) do
+      if AnsiStartsText(IgnoreControls[i], ResourceName) then begin
+        Accept:=False;
+        exit;
+      end;
+  if Accept and (Copy(ResourceName, Length(ResourceName) - 8, MaxInt) = '.Category') then
+    Accept:=False;
+end;
+
+var
+  FHomeDir: string;
+  FIPCFileName: string;
+  FRunFileName: string;
+
+procedure AddTorrentFile(const FileName: string);
+var
+  h: THandle;
+begin
+  h:=FileCreate(FIPCFileName, fmCreate);
+  if h <> THandle(-1) then begin
+    FileWrite(h, FileName[1], Length(FileName));
+    FileClose(h);
+  end;
+end;
+
+procedure LoadTranslation;
+var
+  aIni: TIniFile;
+begin
+  aIni:=TIniFile.Create(FHomeDir + ChangeFileExt(ExtractFileName(ParamStr(0)), '.ini'));
+  try
+    FTranslationFileName := aIni.ReadString('Interface', 'TranslationFile', '');
+    if FTranslationFileName = '' then
+      FTranslationLanguage := LoadDefaultTranslationFile(@OnTranslate)
+    else
+      if FTranslationFileName <> '-' then
+        FTranslationLanguage := LoadTranslationFile(DefaultLangDir + FTranslationFileName, @OnTranslate);
+    if FTranslationLanguage = '' then
+      FTranslationLanguage := 'English'
+  finally
+    aIni.Free;
+  end;
+end;
+
+function IsProtocolSupported(const url: string): boolean;
+const
+  Protocols: array [1..2] of string =
+    ('http:', 'magnet:');
+var
+  i: integer;
+  s: string;
+begin
+  s:=AnsiLowerCase(url);
+  for i:=Low(Protocols) to High(Protocols) do
+    if Copy(s, 1, Length(Protocols[i])) = Protocols[i] then begin
+      Result:=True;
+      exit;
+    end;
+  Result:=False;
+end;
+
+function CheckAppParams: boolean;
+var
+  i: integer;
+  s: string;
+  h: THandle;
+  pid: SizeUInt;
+begin
+  Application.Title:=AppName;
+  FHomeDir:=Application.GetOptionValue('home');
+  if FHomeDir = '' then begin
+    if FileExists(ChangeFileExt(ParamStr(0), '.ini')) then
+      FHomeDir:=ExtractFilePath(ParamStr(0)) // Portable mode
+    else
+      FHomeDir:=IncludeTrailingPathDelimiter(GetAppConfigDir(False));
+  end
+  else
+    FHomeDir:=IncludeTrailingPathDelimiter(FHomeDir);
+  ForceDirectories(FHomeDir);
+  FIPCFileName:=FHomeDir + 'ipc.txt';
+  FRunFileName:=FHomeDir + 'run';
+
+  if ParamCount > 0 then begin
+    s:=ParamStrUTF8(1);
+    if IsProtocolSupported(s) or FileExistsUTF8(s) then
+      AddTorrentFile(s);
+  end;
+  if FileExists(FRunFileName) then begin
+    h:=FileOpen(FRunFileName, fmOpenRead or fmShareDenyNone);
+    if FileRead(h, pid, SizeOf(pid)) = SizeOf(pid) then begin
+{$ifdef mswindows}
+      AllowSetForegroundWindow(pid);
+{$endif mswindows}
+    end;
+    FileClose(h);
+
+    if not FileExists(FIPCFileName) then
+      FileClose(FileCreate(FIPCFileName, fmCreate));
+    for i:=1 to 50 do
+      if not FileExists(FIPCFileName) then begin
+        Result:=False;
+        exit;
+      end
+      else
+        Sleep(200);
+  end
+  else begin
+    h:=FileCreate(FRunFileName, fmCreate);
+    pid:=GetProcessID;
+    FileWrite(h, pid, SizeOf(pid));
+    FileClose(h);
+  end;
+  LoadTranslation;
+
+  SizeNames[1]:=sByte;
+  SizeNames[2]:=sKByte;
+  SizeNames[3]:=sMByte;
+  SizeNames[4]:=sGByte;
+  SizeNames[5]:=sTByte;
+
+  Result:=True;
+end;
+
+type THackControl = class(TControl) end;
+
+procedure AutoSizeForm(Form: TCustomForm);
+var
+  i, ht, w, h: integer;
+  C: TControl;
+begin
+  ht:=0;
+  for i:=0 to Form.ControlCount - 1 do begin
+    C:=Form.Controls[i];
+    with C do begin
+      if C is TButtonPanel then begin
+        TButtonPanel(C).HandleNeeded;
+        w:=0;
+        h:=0;
+        THackControl(C).CalculatePreferredSize(w, h, True);
+      end
+      else
+        h:=Height;
+{$ifdef LCLcarbon}
+      if C is TPageControl then
+        Inc(h, 10);
+{$endif LCLcarbon}
+      Inc(ht, h + BorderSpacing.Top + BorderSpacing.Bottom + BorderSpacing.Around*2);
+    end;
+
+  end;
+  ht:=ht + 2*Form.BorderWidth;
+  Form.ClientHeight:=ht;
+  if Form.ClientHeight <> ht then begin
+    Form.Constraints.MinHeight:=0;
+    Form.ClientHeight:=ht;
+    Form.Constraints.MinHeight:=Form.Height;
+  end;
+  if Form.BorderStyle = bsDialog then begin
+    Form.Constraints.MinHeight:=Form.Height;
+    Form.Constraints.MinWidth:=Form.Width;
+  end;
+end;
+
+{ TMainForm }
+
+procedure TMainForm.FormCreate(Sender: TObject);
+var
+  ws: TWindowState;
+  i: integer;
+{$ifdef darwin}
+  s: string;
+  pic: TPicture;
+{$endif darwin}
+begin
+{$ifdef darwin}
+  // Load better icon if possible
+  s:=ExtractFilePath(ParamStr(0)) + '..' + DirectorySeparator + 'Resources'
+     + DirectorySeparator + ChangeFileExt(ExtractFileName(ParamStr(0)), '.icns');
+  if FileExists(s) then begin
+    pic:=TPicture.Create;
+    try
+      pic.LoadFromFile(s);
+      try
+        Application.Icon.Assign(pic.Graphic);
+      except
+      end;
+    finally
+      pic.Free;
+    end;
+  end;
+{$endif darwin}
+{$ifdef darwin}
+  Font.Size:=11;
+{$else}
+  Font.Size:=Screen.SystemFont.Size;
+  if Font.Size = 0 then
+    Font.Size:=8;
+{$endif darwin}
+  Application.Title:=AppName;
+  Caption:=Application.Title;
+  txTransferHeader.Font.Size:=Font.Size + 2;
+  txTorrentHeader.Font.Size:=txTransferHeader.Font.Size;
+  TrayIcon.Icon.Assign(Application.Icon);
+  RpcObj:=TRpc.Create;
+  FTorrents:=TVarList.Create(gTorrents.Columns.Count, 0);
+  FTorrents.ExtraColumns:=TorrentsExtraColumns;
+  gTorrents.Items.ExtraColumns:=TorrentsExtraColumns;
+  lvFiles.Items.ExtraColumns:=FilesExtraColumns;
+  FFiles:=lvFiles.Items;
+  lvPeers.Items.ExtraColumns:=PeersExtraColumns;
+  lvTrackers.Items.ExtraColumns:=TrackersExtraColumns;
+  FIni:=TIniFile.Create(FHomeDir+ChangeFileExt(ExtractFileName(ParamStr(0)), '.ini'));
+  FTrackers:=TStringList.Create;
+  FTrackers.Sorted:=True;
+  FReconnectTimeOut:=-1;
+  FAlterColor:=GetLikeColor(gTorrents.Color, -$10);
+  lvFilter.Items.ExtraColumns:=1;
+  gTorrents.AlternateColor:=FAlterColor;
+  lvFiles.AlternateColor:=FAlterColor;
+  lvPeers.AlternateColor:=FAlterColor;
+  lvTrackers.AlternateColor:=FAlterColor;
+  FStatusImgIndex:=30;
+
+  DoDisconnect;
+  PageInfo.ActivePageIndex:=0;
+  PageInfoChange(nil);
+{$ifdef LCLgtk2}
+  with MainToolBar do begin
+    EdgeBorders:=[ebLeft, ebTop, ebRight, ebBottom];
+    EdgeInner:=esNone;
+    EdgeOuter:=esRaised;
+    Flat:=True;
+  end;
+{$endif}
+  txTransferHeader.Color:=GetLikeColor(clBtnFace, -15);
+  txTorrentHeader.Color:=txTransferHeader.Color;
+  txTransferHeader.Caption:=' ' + txTransferHeader.Caption;
+  txTorrentHeader.Caption:=' ' + txTorrentHeader.Caption;
+  txTransferHeader.Height:=txTransferHeader.Canvas.TextHeight(txTransferHeader.Caption) + 2;
+  txTorrentHeader.Height:=txTorrentHeader.Canvas.TextHeight(txTorrentHeader.Caption) + 2;
+
+  if FIni.ReadInteger('MainForm', 'State', -1) = -1 then begin
+    i:=Screen.Width*3 div 4;
+    if i > Width then
+      Width:=i;
+    i:=Screen.Height*3 div 4;
+    if i > Height then
+      Height:=i;
+    Position:=poScreenCenter;
+  end
+  else begin
+    ws:=TWindowState(FIni.ReadInteger('MainForm', 'State', integer(WindowState)));
+    Left:=FIni.ReadInteger('MainForm', 'Left', Left);
+    Top:=FIni.ReadInteger('MainForm', 'Top', Top);
+    Width:=FIni.ReadInteger('MainForm', 'Width', Width);
+    Height:=FIni.ReadInteger('MainForm', 'Height', Height);
+    if ws = wsMaximized then
+      WindowState:=wsMaximized;
+  end;
+
+  LoadColumns(gTorrents, 'TorrentsList');
+  TorrentColumnsChanged;
+  LoadColumns(lvFiles, 'FilesList');
+  LoadColumns(lvPeers, 'PeerList');
+  LoadColumns(lvTrackers, 'TrackersList');
+
+  acResolveHost.Checked:=FIni.ReadBool('PeersList', 'ResolveHost', True);
+  acResolveCountry.Checked:=FIni.ReadBool('PeersList', 'ResolveCountry', True) and (GetGeoIpDatabase <> '');
+  acShowCountryFlag.Checked:=FIni.ReadBool('PeersList', 'ShowCountryFlag', True) and (GetFlagsArchive <> '');
+  acShowCountryFlag.Enabled:=acResolveCountry.Checked;
+  FCurConn:=FIni.ReadString('Hosts', 'CurHost', '');
+  if FCurConn = '' then
+    FCurConn:=FIni.ReadString('Connection', 'Host', '');
+  FPathMap:=TStringList.Create;
+  if Application.HasOption('hidden') then begin
+    ApplicationProperties.ShowMainForm:=False;
+    FormShow(nil);
+  end;
+  UpdateConnections;
+end;
+
+procedure TMainForm.FormDestroy(Sender: TObject);
+begin
+  DeleteFile(FRunFileName);
+  FResolver.Free;
+  FIni.Free;
+  FTrackers.Free;
+  FUnZip.Free;
+  RpcObj.Free;
+  FTorrentProgress.Free;
+  FStatusBmp.Free;
+  FPathMap.Free;
+  FTorrents.Free;
+  if Application.HasOption('updatelang') then
+    SupplementTranslationFiles;
+  if Application.HasOption('makelang') then
+    MakeTranslationFile;
+end;
+
+procedure TMainForm.FormResize(Sender: TObject);
+begin
+  if panReconnect.Visible then
+    CenterReconnectWindow;
+end;
+
+procedure TMainForm.FormShow(Sender: TObject);
+begin
+  if not FStarted then begin
+    VSplitter.SetSplitterPosition(FIni.ReadInteger('MainForm', 'VSplitter', VSplitter.GetSplitterPosition));
+    HSplitter.SetSplitterPosition(FIni.ReadInteger('MainForm', 'HSplitter', HSplitter.GetSplitterPosition));
+    TickTimer.Enabled:=True;
+  end;
+  UpdateTray;
+end;
+
+procedure TMainForm.lvFilterResize(Sender: TObject);
+begin
+  lvFilter.Columns[0].Width:=lvFilter.ClientWidth;
+end;
+
+procedure TMainForm.miAboutClick(Sender: TObject);
+begin
+  with TAboutForm.Create(Self) do
+  try
+    ShowModal;
+  finally
+    Free;
+  end;
+end;
+
+procedure TMainForm.miCopyLabelClick(Sender: TObject);
+begin
+  with TLabel(pmLabels.PopupComponent) do
+    if (Length(Name) > 5) and (Copy(Name, Length(Name) - 4, 5) = 'Label') then
+      Clipboard.AsText:=TLabel(Parent.FindChildControl(Copy(Name, 1, Length(Name) - 5))).Caption
+    else
+      Clipboard.AsText:=Caption;
+end;
+
+procedure TMainForm.acConnectExecute(Sender: TObject);
+begin
+  if RpcObj.Connected then begin
+    tbConnect.CheckMenuDropdown;
+    exit;
+  end;
+  if FCurConn = '' then
+    ShowConnOptions(True)
+  else
+    DoConnect;
+end;
+
+procedure TMainForm.acConnOptionsExecute(Sender: TObject);
+begin
+  ShowConnOptions(False);
+end;
+
+procedure TMainForm.acDelTrackerExecute(Sender: TObject);
+var
+  req, args: TJSONObject;
+  id, torid: integer;
+begin
+  id:=lvTrackers.Items[idxTrackerID, lvTrackers.Row];
+  torid:=RpcObj.CurTorrentId;
+  if MessageDlg('', Format(SRemoveTracker, [UTF8Encode(widestring(lvTrackers.Items[idxTrackersListName, lvTrackers.Row]))]), mtConfirmation, mbYesNo, 0, mbNo) <> mrYes then exit;
+  AppBusy;
+  Self.Update;
+  req:=TJSONObject.Create;
+  try
+    req.Add('method', 'torrent-set');
+    args:=TJSONObject.Create;
+    args.Add('ids', TJSONArray.Create([torid]));
+    args.Add('trackerRemove', TJSONArray.Create([id]));
+    req.Add('arguments', args);
+    args:=nil;
+    args:=RpcObj.SendRequest(req, False);
+    if args = nil then begin
+      CheckStatus(False);
+      exit;
+    end;
+    args.Free;
+  finally
+    req.Free;
+  end;
+  DoRefresh;
+  AppNormal;
+end;
+
+procedure TMainForm.acEditTrackerExecute(Sender: TObject);
+begin
+  AddTracker(True);
+end;
+
+procedure TMainForm.acHideAppExecute(Sender: TObject);
+begin
+  HideApp;
+end;
+
+procedure TMainForm.acMoveTorrentExecute(Sender: TObject);
+var
+  ids: variant;
+  i: integer;
+  s: string;
+  req: TJSONObject;
+  aids: TJSONArray;
+  args: TJSONObject;
+  ok: boolean;
+  t: TDateTime;
+begin
+  if gTorrents.Items.Count = 0 then
+    exit;
+  AppBusy;
+  with TMoveTorrentForm.Create(Self) do
+  try
+    gTorrents.Tag:=1;
+    FillDownloadDirs(edTorrentDir);
+    if gTorrents.SelCount = 0 then
+      gTorrents.RowSelected[gTorrents.Row]:=True;
+    ids:=GetSelectedTorrents;
+    i:=gTorrents.Items.IndexOf(idxTorrentId, ids[0]);
+    if VarIsEmpty(gTorrents.Items[idxPath, i]) then
+      exit;
+    edTorrentDir.Text:=UTF8Encode(widestring(gTorrents.Items[idxPath, i]));
+    if gTorrents.SelCount > 1 then
+      s:=Format(sSeveralTorrents, [gTorrents.SelCount])
+    else
+      s:=UTF8Encode(widestring(gTorrents.Items[idxName, i]));
+    Caption:=Caption + ' - ' + s;
+    AppNormal;
+    if ShowModal = mrOk then begin
+      Application.ProcessMessages;
+      AppBusy;
+      req:=TJSONObject.Create;
+      try
+        req.Add('method', 'torrent-set-location');
+        args:=TJSONObject.Create;
+        aids:=TJSONArray.Create;
+        for i:=VarArrayLowBound(ids, 1) to VarArrayHighBound(ids, 1) do
+          aids.Add(integer(ids[i]));
+        args.Add('ids', aids);
+        args.Add('location', TJSONString.Create(UTF8Decode(edTorrentDir.Text)));
+        args.Add('move', TJSONIntegerNumber.Create(integer(cbMoveData.Checked) and 1));
+        req.Add('arguments', args);
+        args:=RpcObj.SendRequest(req, False);
+        args.Free;
+      finally
+        req.Free;
+      end;
+      gTorrents.Tag:=0;
+      AppNormal;
+      if args = nil then
+        CheckStatus(False)
+      else begin
+        ok:=False;
+        t:=Now;
+        with gTorrents do
+          while not ok and not Application.Terminated and (Now - t < 20/SecsPerDay) do begin
+            RpcObj.RequestFullInfo:=True;
+            DoRefresh(True);
+            Sleep(200);
+            Application.ProcessMessages;
+            ok:=True;
+            for i:=0 to Items.Count - 1 do
+              if RowSelected[i] then begin
+                if VarIsEmpty(Items[idxPath, i]) or (AnsiCompareText(UTF8Encode(widestring(Items[idxPath, i])), edTorrentDir.Text) <> 0) then begin
+                  ok:=False;
+                  break;
+                end;
+              end;
+          end;
+      end;
+    end;
+  finally
+    gTorrents.Tag:=0;
+    Free;
+  end;
+end;
+
+procedure TMainForm.acNewConnectionExecute(Sender: TObject);
+begin
+  ShowConnOptions(True);
+end;
+
+procedure TMainForm.acOpenContainingFolderExecute(Sender: TObject);
+var
+  res: TJSONObject;
+  p, s: string;
+  sel: boolean;
+  files: TJSONArray;
+begin
+  if gTorrents.Items.Count = 0 then
+    exit;
+  Application.ProcessMessages;
+  AppBusy;
+  if lvFiles.Focused and (lvFiles.Items.Count > 0) then begin
+    p:=UTF8Encode(widestring(lvFiles.Items[idxFileFullPath, lvFiles.Row]));
+    sel:=True;
+  end
+  else begin
+    sel:=False;
+    gTorrents.RemoveSelection;
+    res:=RpcObj.RequestInfo(gTorrents.Items[idxTorrentId, gTorrents.Row], ['files', 'downloadDir']);
+    if res = nil then
+      CheckStatus(False)
+    else
+      try
+        with res.Arrays['torrents'].Objects[0] do begin
+          files:=Arrays['files'];
+          if files.Count = 0 then exit;
+          if files.Count = 1 then begin
+            p:=UTF8Encode((files[0] as TJSONObject).Strings['name']);
+            sel:=True;
+          end
+          else begin
+            s:=GetFilesCommonPath(files);
+            repeat
+              p:=s;
+              s:=ExtractFilePath(p);
+            until (s = '') or (s = p);
+          end;
+          p:=IncludeTrailingPathDelimiter(UTF8Encode(Strings['downloadDir'])) + p;
+        end;
+      finally
+        res.Free;
+      end;
+  end;
+  ExecRemoteFile(p, sel);
+  AppNormal;
+end;
+
+procedure TMainForm.acOpenFileExecute(Sender: TObject);
+begin
+  if lvFiles.Items.Count = 0 then exit;
+  ExecRemoteFile(UTF8Encode(widestring(FFiles[idxFileFullPath, lvFiles.Row])), False);
+end;
+
+procedure TMainForm.acOptionsExecute(Sender: TObject);
+begin
+  AppBusy;
+  with TOptionsForm.Create(Self) do
+  try
+    edRefreshInterval.Value:=FIni.ReadInteger('Interface', 'RefreshInterval', 5);
+    edRefreshIntervalMin.Value:=FIni.ReadInteger('Interface', 'RefreshIntervalMin', 20);
+{$ifndef darwin}
+    cbTrayClose.Checked:=FIni.ReadBool('Interface', 'TrayClose', False);
+    cbTrayMinimize.Checked:=FIni.ReadBool('Interface', 'TrayMinimize', True);
+{$else}
+    cbTrayClose.Enabled:=False;
+    cbTrayMinimize.Enabled:=False;
+{$endif}
+    cbTrayIconAlways.Checked:=FIni.ReadBool('Interface', 'TrayIconAlways', True);
+
+    cbShowAddTorrentWindow.Checked:=FIni.ReadBool('Interface', 'ShowAddTorrentWindow', True);
+    cbDeleteTorrentFile.Checked:=FIni.ReadBool('Interface', 'DeleteTorrentFile', False);
+
+    AppNormal;
+    if ShowModal = mrOk then begin
+      AppBusy;
+      FIni.WriteInteger('Interface', 'RefreshInterval', edRefreshInterval.Value);
+      FIni.WriteInteger('Interface', 'RefreshIntervalMin', edRefreshIntervalMin.Value);
+{$ifndef darwin}
+      FIni.WriteBool('Interface', 'TrayClose', cbTrayClose.Checked);
+      FIni.WriteBool('Interface', 'TrayMinimize', cbTrayMinimize.Checked);
+{$endif}
+      FIni.WriteBool('Interface', 'TrayIconAlways', cbTrayIconAlways.Checked);
+
+      FIni.WriteBool('Interface', 'ShowAddTorrentWindow', cbShowAddTorrentWindow.Checked);
+      FIni.WriteBool('Interface', 'DeleteTorrentFile', cbDeleteTorrentFile.Checked);
+
+      UpdateTray;
+      AppNormal;
+    end;
+  finally
+    Free;
+  end;
+end;
+
+procedure TMainForm.acAddTorrentExecute(Sender: TObject);
+begin
+  if not OpenTorrentDlg.Execute then exit;
+  DoAddTorrent(OpenTorrentDlg.FileName);
+end;
+
+procedure TMainForm.acAddTrackerExecute(Sender: TObject);
+begin
+  AddTracker(False);
+end;
+
+procedure TMainForm.acAltSpeedExecute(Sender: TObject);
+var
+  req, args: TJSONObject;
+begin
+  AppBusy;
+  req:=TJSONObject.Create;
+  try
+    req.Add('method', 'session-set');
+    args:=TJSONObject.Create;
+    args.Add('alt-speed-enabled', integer(not acAltSpeed.Checked) and 1);
+    req.Add('arguments', args);
+    args:=RpcObj.SendRequest(req, False);
+    if args = nil then begin
+      CheckStatus(False);
+      exit;
+    end;
+    args.Free;
+  finally
+    req.Free;
+  end;
+  RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtSession];
+  AppNormal;
+end;
+
+procedure TMainForm.acAddLinkExecute(Sender: TObject);
+begin
+  AppBusy;
+  with TAddLinkForm.Create(Self) do
+  try
+    AppNormal;
+    if ShowModal = mrOk then
+      DoAddTorrent(edLink.Text);
+  finally
+    Free;
+  end;
+end;
+
+procedure TMainForm.DoAddTorrent(const FileName: Utf8String);
+var
+  torrent: string;
+
+  function _AddTorrent(args: TJSONObject): integer;
+  var
+    req: TJSONObject;
+  begin
+    Result:=0;
+    req:=TJSONObject.Create;
+    try
+      req.Add('method', 'torrent-add');
+      if torrent = '-' then
+        args.Add('filename', TJSONString.Create(FileName))
+      else
+        args.Add('metainfo', TJSONString.Create(torrent));
+      req.Add('arguments', args);
+      args:=RpcObj.SendRequest(req);
+      if args <> nil then
+      try
+        Result:=args.Objects['torrent-added'].Integers['id'];
+      finally
+        args.Free;
+      end;
+    finally
+      req.Free;
+    end;
+
+    if Result = 0 then
+      CheckStatus(False);
+  end;
+
+  function _GetLevel(const s: string): integer;
+  var
+    p: PChar;
+  begin
+    Result:=0;
+    p:=PChar(s);
+    while p^ <> #0 do begin
+      if p^ in ['/', '\'] then
+        Inc(Result);
+      Inc(p);
+    end
+  end;
+
+  function _AddFolders(list: TVarList; const path: string; var idx: integer; cnt: integer): double;
+  var
+    s, ss: string;
+    j: integer;
+    d: double;
+    p: PChar;
+  begin
+    Result:=0;
+    while idx < cnt do begin
+      s:=ExtractFilePath(UTF8Encode(widestring(list[idxAtFullPath, idx])));
+      if s = '' then begin
+        Inc(idx);
+        continue;
+      end;
+      if (path <> '') and (Pos(path, s) <> 1)  then
+        break;
+      if s = path then begin
+        Result:=Result + list[idxAtSize, idx];
+        Inc(idx);
+      end
+      else begin
+        ss:=Copy(s, Length(path) + 1, MaxInt);
+        p:=PChar(ss);
+        while (p^ <> #0) and not (p^ in ['/','\']) do
+          Inc(p);
+        if p^ <> #0 then begin
+          SetLength(ss, p - PChar(ss) + 1);
+          j:=list.Count;
+          list[idxAtLevel, j]:=_GetLevel(path);
+          list[idxAtFullPath, j]:=UTF8Decode(path + ss);
+          d:=_AddFolders(list, path + ss, idx, cnt);
+          list[idxAtSize, j]:=d;
+          ss:=ExcludeTrailingPathDelimiter(ss);
+          list[idxAtName, j]:=UTF8Decode(ExtractFileName(ss));
+          Result:=Result + d;
+        end;
+      end;
+    end;
+  end;
+
+var
+  req, res, args: TJSONObject;
+  id: integer;
+  t, files: TJSONArray;
+  i: integer;
+  fs: TFileStream;
+  s, ss, OldDownloadDir, IniSec, path: string;
+  tt: TDateTime;
+  ok: boolean;
+begin
+  AppBusy;
+  id:=0;
+  if IsProtocolSupported(FileName) then
+    torrent:='-'
+  else begin
+    fs:=TFileStream.Create(UTF8ToSys(FileName), fmOpenRead or fmShareDenyNone);
+    try
+      SetLength(torrent, fs.Size);
+      fs.ReadBuffer(PChar(torrent)^, Length(torrent));
+    finally
+      fs.Free;
+    end;
+    torrent:=EncodeBase64(torrent);
+  end;
+  try
+    with TAddTorrentForm.Create(Self) do
+    try
+      Width:=Ini.ReadInteger('AddTorrent', 'Width', Width);
+      Height:=Ini.ReadInteger('AddTorrent', 'Height', Height);
+
+      IniSec:='AddTorrent.' + FCurConn;
+      FillDownloadDirs(cbDestFolder);
+
+      req:=TJSONObject.Create;
+      try
+        req.Add('method', 'session-get');
+        args:=RpcObj.SendRequest(req);
+        if args = nil then begin
+          CheckStatus(False);
+          exit;
+        end;
+        s:=UTF8Encode(args.Strings['download-dir']);
+        if cbDestFolder.Items.IndexOf(s) < 0 then begin
+          cbDestFolder.Items.Insert(0, s);
+          cbDestFolder.ItemIndex:=0;
+        end;
+
+        if args.IndexOfName('download-dir-free-space') >= 0 then
+          txDiskSpace.Caption:=txDiskSpace.Caption + ' ' + GetHumanSize(args.Floats['download-dir-free-space'])
+        else begin
+          txDiskSpace.Hide;
+          txSize.Top:=(txSize.Top + txDiskSpace.Top) div 2;
+        end;
+        args.Free;
+      finally
+        req.Free;
+      end;
+
+      lvFilter.Row:=0;
+
+      args:=TJSONObject.Create;
+      args.Add('paused', TJSONIntegerNumber.Create(1));
+      i:=FIni.ReadInteger(IniSec, 'PeerLimit', 0);
+      if i <> 0 then
+        args.Add('peer-limit', TJSONIntegerNumber.Create(i));
+      args.Add('download-dir', TJSONString.Create(UTF8Decode(cbDestFolder.Text)));
+      id:=_AddTorrent(args);
+      if id = 0 then
+        exit;
+
+      DoRefresh(True);
+
+      args:=RpcObj.RequestInfo(id, ['files', 'maxConnectedPeers']);
+      if args = nil then begin
+        CheckStatus(False);
+        exit;
+      end;
+      try
+        t:=args.Arrays['torrents'];
+        if t.Count = 0 then
+          raise Exception.Create(sUnableGetFilesList);
+        edPeerLimit.Value:=t.Objects[0].Integers['maxConnectedPeers'];
+        files:=t.Objects[0].Arrays['files'];
+        path:=GetFilesCommonPath(files);
+        lvFiles.Items.RowCnt:=files.Count;
+        for i:=0 to files.Count - 1 do begin
+          res:=files.Objects[i];
+          s:=UTF8Encode(res.Strings['name']);
+          if (path <> '') and (Copy(s, 1, Length(path)) = path) then
+            s:=Copy(s, Length(path) + 1, MaxInt);
+          ss:=ExtractFileName(s);
+          if ss <> s then
+            HasFolders:=True;
+          lvFiles.Items[idxAtName, i]:=UTF8Decode(ss);
+          lvFiles.Items[idxAtSize, i]:=res.Floats['length'];
+          lvFiles.Items[idxAtFullPath, i]:=UTF8Decode(s);
+          lvFiles.Items[idxAtFileID, i]:=i;
+          lvFiles.Items[idxAtLevel, i]:=_GetLevel(s);
+        end;
+        lvFiles.Items.Sort(idxAtFullPath);
+        i:=0;
+        _AddFolders(lvFiles.Items, '', i, lvFiles.Items.Count);
+        lvFiles.Items.Sort(idxAtFullPath);
+      finally
+        args.Free;
+      end;
+
+      if not HasFolders then
+        lvFiles.SortColumn:=0;
+
+      OldDownloadDir:=cbDestFolder.Text;
+      AppNormal;
+
+      ok:=not FIni.ReadBool('Interface', 'ShowAddTorrentWindow', True);
+      if ok then
+        btSelectAllClick(nil)
+      else begin
+        ok:=ShowModal = mrOk;
+        Ini.WriteInteger('AddTorrent', 'Width', Width);
+        Ini.WriteInteger('AddTorrent', 'Height', Height);
+      end;
+
+      if ok then begin
+        AppBusy;
+        Self.Update;
+
+        if OldDownloadDir <> cbDestFolder.Text then begin
+          TorrentAction(VarArrayOf([id]), 'remove');
+          id:=0;
+          args:=TJSONObject.Create;
+          args.Add('paused', TJSONIntegerNumber.Create(1));
+          args.Add('peer-limit', TJSONIntegerNumber.Create(edPeerLimit.Value));
+          args.Add('download-dir', TJSONString.Create(UTF8Decode(cbDestFolder.Text)));
+          id:=_AddTorrent(args);
+          if id = 0 then
+            exit;
+          DoRefresh(True);
+          Application.ProcessMessages;
+        end;
+
+        req:=TJSONObject.Create;
+        try
+          req.Add('method', 'torrent-set');
+          args:=TJSONObject.Create;
+          args.Add('ids', TJSONArray.Create([id]));
+          args.Add('peer-limit', TJSONIntegerNumber.Create(edPeerLimit.Value));
+
+          files:=TJSONArray.Create;
+          for i:=0 to lvFiles.Items.Count - 1 do
+            if not VarIsEmpty(lvFiles.Items[idxAtFileID, i]) and (integer(lvFiles.Items[idxAtChecked, i]) = 1) then
+              files.Add(integer(lvFiles.Items[idxAtFileID, i]));
+          if files.Count > 0 then
+            args.Add('files-wanted', files)
+          else
+            files.Free;
+
+          files:=TJSONArray.Create;
+          for i:=0 to lvFiles.Items.Count - 1 do
+            if not VarIsEmpty(lvFiles.Items[idxAtFileID, i]) and (integer(lvFiles.Items[idxAtChecked, i]) <> 1) then
+              files.Add(integer(lvFiles.Items[idxAtFileID, i]));
+          if files.Count > 0 then
+            args.Add('files-unwanted', files)
+          else
+            files.Free;
+
+          req.Add('arguments', args);
+          args:=nil;
+          args:=RpcObj.SendRequest(req, False);
+          if args = nil then begin
+            CheckStatus(False);
+            exit;
+          end;
+          args.Free;
+        finally
+          req.Free;
+        end;
+
+        if cbStartTorrent.Checked then
+          TorrentAction(VarArrayOf([id]), 'start');
+
+        tt:=Now;
+        while (Now - tt < 2/SecsPerDay) and (id <> 0) do begin
+          Application.ProcessMessages;
+          i:=gTorrents.Items.IndexOf(idxTorrentId, id);
+          if i >= 0 then begin
+            gTorrents.RemoveSelection;
+            gTorrents.Row:=i;
+            RpcObj.CurTorrentId:=id;
+            gTorrents.SetFocus;
+            break;
+          end;
+          Sleep(100);
+        end;
+
+        id:=0;
+        if FIni.ReadBool('Interface', 'DeleteTorrentFile', False) and not IsProtocolSupported(FileName) then
+          DeleteFile(UTF8ToSys(FileName));
+
+        FIni.WriteInteger(IniSec, 'PeerLimit', edPeerLimit.Value);
+        i:=cbDestFolder.Items.IndexOf(cbDestFolder.Text);
+        if i >= 0 then
+          cbDestFolder.Items.Move(i, 0)
+        else
+          cbDestFolder.Items.Insert(0, cbDestFolder.Text);
+        i:=FIni.ReadInteger('Interface', 'MaxFoldersHistory', 10);
+        while cbDestFolder.Items.Count > i do
+          cbDestFolder.Items.Delete(cbDestFolder.Items.Count - 1);
+        FIni.WriteInteger(IniSec, 'FolderCount', cbDestFolder.Items.Count);
+        for i:=0 to cbDestFolder.Items.Count - 1 do
+          FIni.WriteString(IniSec, Format('Folder%d', [i]), cbDestFolder.Items[i]);
+        AppNormal;
+      end;
+    finally
+      Free;
+    end;
+  finally
+    if id <> 0 then
+      TorrentAction(VarArrayOf([id]), 'remove');
+  end;
+end;
+
+procedure TMainForm.UpdateTray;
+begin
+  TrayIcon.Visible:=not Self.Visible or (WindowState = wsMinimized) or FIni.ReadBool('Interface', 'TrayIconAlways', True);
+{$ifdef darwin}
+  acShowApp.Visible:=False;
+  acHideApp.Visible:=False;
+  miTSep1.Visible:=False;
+{$else}
+  acHideApp.Visible:=Visible and (WindowState <> wsMinimized);
+{$endif darwin}
+  SetRefreshInterval;
+end;
+
+procedure TMainForm.HideApp;
+var
+  i: integer;
+begin
+  for i:=0 to Screen.FormCount - 1 do
+    with Screen.Forms[i] do
+      if fsModal in FormState then
+        exit;
+
+  if WindowState <> wsMinimized then
+    Hide;
+  HideTaskbarButton;
+  UpdateTray;
+end;
+
+procedure TMainForm.ShowApp;
+var
+  i: integer;
+begin
+  ShowTaskbarButton;
+  if WindowState = wsMinimized then
+    Application.Restore;
+  Application.ProcessMessages;
+  Show;
+  Application.BringToFront;
+  BringToFront;
+  for i:=0 to Screen.FormCount - 1 do
+    with Screen.Forms[i] do
+      if fsModal in FormState then
+        BringToFront;
+  UpdateTray;
+end;
+
+procedure TMainForm.DownloadFinished(const TorrentName: string);
+begin
+  if not TrayIcon.Visible then exit;
+  TrayIcon.BalloonHint:=Format(sFinishedDownload, [TorrentName]);
+  TrayIcon.BalloonTitle:=sDownloadComplete;
+  TrayIcon.ShowBalloonHint;
+end;
+
+function TMainForm.GetFlagImage(const CountryCode: string): integer;
+var
+  s, FlagsPath, ImageName: string;
+  pic: TPicture;
+begin
+  Result:=0;
+  if CountryCode = '' then exit;
+  try
+    ImageName:=CountryCode + '.png';
+    FlagsPath:=FHomeDir + 'flags' + DirectorySeparator;
+    if not FileExists(FlagsPath + ImageName) then begin
+      // Unzipping flag image
+      if FUnZip = nil then begin
+        s:=GetFlagsArchive;
+        if s <> '' then begin
+          ForceDirectories(FlagsPath);
+          FUnZip:=TUnZipper.Create;
+          FUnZip.OutputPath:=FlagsPath;
+          FUnZip.FileName:=s;
+        end
+        else
+          exit;
+      end;
+
+      FUnZip.Files.Clear;
+      FUnZip.Files.Add(ImageName);
+      try
+        FUnZip.UnZipAllFiles;
+      except
+        FreeAndNil(FUnZip);
+        DeleteFile(GetFlagsArchive);
+        acShowCountryFlag.Checked:=False;
+        MessageDlg(sUnableExtractFlag + LineEnding + Exception(ExceptObject).Message, mtError, [mbOK], 0);
+        exit;
+      end;
+      if not FileExists(FlagsPath + ImageName) then exit;
+    end;
+
+    pic:=TPicture.Create;
+    try
+      pic.LoadFromFile(UTF8Encode(FlagsPath + ImageName));
+      if imgFlags.Count = 1 then begin
+        imgFlags.Width:=pic.Width;
+        imgFlags.Height:=pic.Height;
+      end;
+      Result:=imgFlags.AddMasked(pic.Bitmap, clNone);
+    finally
+      pic.Free;
+    end;
+  except
+  end;
+end;
+
+procedure TMainForm.BeforeCloseApp;
+begin
+  if WindowState = wsNormal then begin
+    FIni.WriteInteger('MainForm', 'Left', Left);
+    FIni.WriteInteger('MainForm', 'Top', Top);
+    FIni.WriteInteger('MainForm', 'Width', Width);
+    FIni.WriteInteger('MainForm', 'Height', Height);
+  end;
+  if WindowState <> wsMinimized then
+    FIni.WriteInteger('MainForm', 'State', integer(WindowState));
+
+  FIni.WriteInteger('MainForm', 'VSplitter', VSplitter.GetSplitterPosition);
+  FIni.WriteInteger('MainForm', 'HSplitter', HSplitter.GetSplitterPosition);
+
+  SaveColumns(gTorrents, 'TorrentsList');
+  SaveColumns(lvFiles, 'FilesList');
+  SaveColumns(lvPeers, 'PeerList');
+  SaveColumns(lvTrackers, 'TrackersList');
+
+  FIni.WriteBool('PeersList', 'ResolveHost', acResolveHost.Checked);
+  FIni.WriteBool('PeersList', 'ResolveCountry', acResolveCountry.Checked);
+  FIni.WriteBool('PeersList', 'ShowCountryFlag', acShowCountryFlag.Checked);
+
+  DoDisconnect;
+  Application.ProcessMessages;
+end;
+
+function TMainForm.GetGeoIpDatabase: string;
+begin
+  Result:=LocateFile('GeoIP.dat', [FHomeDir, ExtractFilePath(ParamStr(0))]);
+end;
+
+function TMainForm.GetFlagsArchive: string;
+begin
+  Result:=LocateFile('flags.zip', [FHomeDir, ExtractFilePath(ParamStr(0))]);
+end;
+
+function TMainForm.DownloadGeoIpDatabase(AUpdate: boolean): boolean;
+const
+  GeoLiteURL = 'http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz';
+var
+  tmp: string;
+  gz: TGZFileStream;
+  fs: TFileStream;
+begin
+  Result:=False;
+  tmp:=FHomeDir + 'GeoIP.dat.gz';
+  if not FileExists(tmp) or AUpdate then begin
+    if MessageDlg('', sGeoIPConfirm, mtConfirmation, mbYesNo, 0, mbYes) <> mrYes then
+      exit;
+    if not DownloadFile(GeoLiteURL, ExtractFilePath(tmp), ExtractFileName(tmp)) then
+      exit;
+  end;
+  try
+    FreeAndNil(FResolver);
+    gz:=TGZFileStream.Create(tmp, gzopenread);
+    try
+      fs:=TFileStream.Create(FHomeDir + 'GeoIP.dat', fmCreate);
+      try
+        while fs.CopyFrom(gz, 64*1024) = 64*1024 do
+          ;
+      finally
+        fs.Free;
+      end;
+    finally
+      gz.Free;
+    end;
+    DeleteFile(tmp);
+  except
+    DeleteFile(FHomeDir + 'GeoIP.dat');
+    DeleteFile(tmp);
+    raise;
+  end;
+  Result:=True;
+end;
+
+procedure TMainForm.TorrentColumnsChanged;
+var
+  i: integer;
+  s: string;
+begin
+  s:='';
+  for i:=0 to gTorrents.Columns.Count - 1 do
+    with gTorrents.Columns[i] do
+      if Visible and (Width > 0) then begin
+        if TorrentFieldsMap[ID - 1] <> '' then begin
+          if s <> '' then
+            s:=s + ',';
+          s:=s + TorrentFieldsMap[ID - 1];
+        end;
+      end;
+  RpcObj.TorrentFields:=s;
+  DoRefresh(True);
+end;
+
+function TMainForm.EtaToString(ETA: integer): string;
+begin
+  if (ETA < 0) or (ETA = MaxInt) then
+    Result:=''
+  else
+    Result:=SecondsToString(ETA);
+end;
+
+function TMainForm.GetTorrentStatus(TorrentIdx: integer): string;
+begin
+  case integer(gTorrents.Items[idxStatus, TorrentIdx]) of
+    TR_STATUS_CHECK_WAIT:
+      Result:=sWaiting;
+    TR_STATUS_CHECK:
+      Result:=sVerifying;
+    TR_STATUS_DOWNLOAD:
+      Result:=sDownloading;
+    TR_STATUS_SEED:
+      Result:=sSeeding;
+    TR_STATUS_STOPPED:
+      Result:=sStopped;
+    TR_STATUS_FINISHED:
+      Result:=sFinished;
+    else
+      Result:=sUnknown;
+  end;
+end;
+
+function TMainForm.GetSeedsText(Seeds, SeedsTotal: integer): string;
+begin
+  if SeedsTotal <> -1 then
+    Result:=Format('%d/%d', [Seeds, SeedsTotal])
+  else
+    Result:=Format('%d', [Seeds]);
+end;
+
+function TMainForm.GetPeersText(Peers, PeersTotal, Leechers: integer): string;
+begin
+  Result:=Format('%d', [Peers]);
+  if Leechers <> -1 then
+    Result:=Format('%s/%d', [Result, Leechers]);
+  Dec(PeersTotal);
+  if PeersTotal >= 0 then
+    Result:=Format('%s (%d)', [Result, PeersTotal]);
+end;
+
+function TMainForm.RatioToString(Ratio: double): string;
+begin
+  if (Ratio = MaxInt) or (Ratio = -2) then
+    Result:=Utf8Encode(WideString(WideChar($221E)))
+  else
+    if Ratio = -1 then
+      Result:=''
+    else
+      Result:=Format('%.3f', [Ratio]);
+end;
+
+function TMainForm.TorrentDateTimeToString(d: Int64): string;
+begin
+  if d = 0 then
+    Result:=''
+  else
+    Result:=DateTimeToStr(UnixToDateTime(d) + GetTimeZoneDelta);
+end;
+
+procedure TMainForm.DoRefresh(All: boolean);
+begin
+  if All then
+    RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtTorrents, rtDetails]
+  else
+    RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtDetails];
+end;
+
+procedure TMainForm.acDisconnectExecute(Sender: TObject);
+begin
+  DoDisconnect;
+end;
+
+procedure TMainForm.acExitExecute(Sender: TObject);
+begin
+  BeforeCloseApp;
+  Application.Terminate;
+end;
+
+procedure TMainForm.acDaemonOptionsExecute(Sender: TObject);
+var
+  req, args: TJSONObject;
+  s: string;
+  i, j: integer;
+begin
+  with TDaemonOptionsForm.Create(Self) do
+  try
+    AppBusy;
+    req:=TJSONObject.Create;
+    try
+      req.Add('method', 'session-get');
+      args:=RpcObj.SendRequest(req);
+      if args <> nil then
+        try
+          edDownloadDir.Text:=UTF8Encode(args.Strings['download-dir']);
+          if RpcObj.RPCVersion >= 5 then begin
+            // RPC version 5
+            edPort.Value:=args.Integers['peer-port'];
+            cbPEX.Checked:=args.Integers['pex-enabled'] <> 0;
+            edMaxPeers.Value:=args.Integers['peer-limit-global'];
+            cbRandomPort.Checked:=args.Integers['peer-port-random-on-start'] <> 0;
+            cbDHT.Checked:=args.Integers['dht-enabled'] <> 0;
+            cbSeedRatio.Checked:=args.Integers['seedRatioLimited'] <> 0;
+            edSeedRatio.Value:=args.Floats['seedRatioLimit'];
+            cbBlocklist.Checked:=args.Integers['blocklist-enabled'] <> 0;
+
+            cbAltEnabled.Checked:=args.Integers['alt-speed-enabled'] <> 0;
+            edAltDown.Value:=args.Integers['alt-speed-down'];
+            edAltUp.Value:=args.Integers['alt-speed-up'];
+            cbAutoAlt.Checked:=args.Integers['alt-speed-time-enabled'] <> 0;
+            edAltTimeBegin.Text:=FormatDateTime('hh:nn', args.Integers['alt-speed-time-begin']/MinsPerDay);
+            edAltTimeEnd.Text:=FormatDateTime('hh:nn', args.Integers['alt-speed-time-end']/MinsPerDay);
+            j:=args.Integers['alt-speed-time-day'];
+            for i:=1 to 7 do begin
+              TCheckBox(gbAltSpeed.FindChildControl(Format('cbDay%d', [i]))).Checked:=LongBool(j and 1);
+              j:=j shr 1;
+            end;
+            cbAutoAltClick(nil);
+          end
+          else begin
+            // RPC versions prior to v5
+            cbPortForwarding.Top:=cbRandomPort.Top;
+            edPort.Value:=args.Integers['port'];
+            cbPEX.Checked:=args.Integers['pex-allowed'] <> 0;
+            edMaxPeers.Value:=args.Integers['peer-limit'];
+            cbRandomPort.Visible:=False;
+            cbDHT.Visible:=False;
+            cbSeedRatio.Visible:=False;
+            edSeedRatio.Visible:=False;
+            btTestPort.Visible:=False;
+            cbBlocklist.Visible:=False;
+            gbAltSpeed.Visible:=False;
+          end;
+
+          if RpcObj.RPCVersion >= 7 then begin
+            cbIncompleteDir.Checked:=args.Integers['incomplete-dir-enabled'] <> 0;
+            edIncompleteDir.Text:=UTF8Encode(args.Strings['incomplete-dir']);
+            cbIncompleteDirClick(nil);
+          end
+          else begin
+            cbIncompleteDir.Visible:=False;
+            edIncompleteDir.Visible:=False;
+          end;
+
+          if RpcObj.RPCVersion >= 8 then
+            cbPartExt.Checked:=args.Integers['rename-partial-files'] <> 0
+          else
+            cbPartExt.Visible:=False;
+
+          if RpcObj.RPCVersion >= 9 then
+            cbLPD.Checked:=args.Integers['lpd-enabled'] <> 0
+          else
+            cbLPD.Visible:=False;
+
+          if RpcObj.RPCVersion >= 10 then begin
+            edCacheSize.Value:=args.Integers['cache-size-mb'];
+            cbIdleSeedLimit.Checked:=args.Integers['idle-seeding-limit-enabled'] <> 0;
+            edIdleSeedLimit.Value:=args.Integers['idle-seeding-limit'];
+            cbIdleSeedLimitClick(nil);
+          end
+          else begin
+            edCacheSize.Visible:=False;
+            txCacheSize.Visible:=False;
+            txMB.Visible:=False;
+            cbIdleSeedLimit.Visible:=False;
+            edIdleSeedLimit.Visible:=False;
+            txMinutes.Visible:=False;
+          end;
+
+          if args.IndexOfName('blocklist-url') >= 0 then
+            edBlocklistURL.Text:=UTF8Encode(args.Strings['blocklist-url'])
+          else begin
+            edBlocklistURL.Visible:=False;
+            cbBlocklist.Left:=cbPEX.Left;
+            cbBlocklist.Caption:=StringReplace(cbBlocklist.Caption, ':', '', [rfReplaceAll]);
+          end;
+          cbBlocklistClick(nil);
+
+          if RpcObj.RPCVersion >= 13 then
+            cbUTP.Checked:=args.Integers['utp-enabled'] <> 0
+          else
+            cbUTP.Visible:=False;
+
+          cbPortForwarding.Checked:=args.Integers['port-forwarding-enabled'] <> 0;
+          s:=args.Strings['encryption'];
+          if s = 'preferred' then
+            cbEncryption.ItemIndex:=1
+          else
+          if s = 'required' then
+            cbEncryption.ItemIndex:=2
+          else
+            cbEncryption.ItemIndex:=0;
+          cbMaxDown.Checked:=args.Integers['speed-limit-down-enabled'] <> 0;
+          edMaxDown.Value:=args.Integers['speed-limit-down'];
+          cbMaxUp.Checked:=args.Integers['speed-limit-up-enabled'] <> 0;
+          edMaxUp.Value:=args.Integers['speed-limit-up'];
+        finally
+          args.Free;
+        end
+      else begin
+        CheckStatus(False);
+        exit;
+      end;
+    finally
+      req.Free;
+    end;
+    cbMaxDownClick(nil);
+    cbMaxUpClick(nil);
+    cbRandomPortClick(nil);
+    cbSeedRatioClick(nil);
+    AppNormal;
+
+    if ShowModal = mrOK then begin
+      AppBusy;
+      Self.Update;
+      req:=TJSONObject.Create;
+      try
+        req.Add('method', 'session-set');
+        args:=TJSONObject.Create;
+        args.Add('download-dir', UTF8Decode(edDownloadDir.Text));
+        args.Add('port-forwarding-enabled', integer(cbPortForwarding.Checked) and 1);
+        case cbEncryption.ItemIndex of
+          1: s:='preferred';
+          2: s:='required';
+          else s:='tolerated';
+        end;
+        args.Add('encryption', s);
+        args.Add('speed-limit-down-enabled', integer(cbMaxDown.Checked) and 1);
+        if cbMaxDown.Checked then
+          args.Add('speed-limit-down', edMaxDown.Value);
+        args.Add('speed-limit-up-enabled', integer(cbMaxUp.Checked) and 1);
+        if cbMaxUp.Checked then
+          args.Add('speed-limit-up', edMaxUp.Value);
+        if RpcObj.RPCVersion >= 5 then begin
+          args.Add('peer-limit-global', edMaxPeers.Value);
+          args.Add('peer-port', edPort.Value);
+          args.Add('pex-enabled', integer(cbPEX.Checked) and 1);
+          args.Add('peer-port-random-on-start', integer(cbRandomPort.Checked) and 1);
+          args.Add('dht-enabled', integer(cbDHT.Checked) and 1);
+          args.Add('seedRatioLimited', integer(cbSeedRatio.Checked) and 1);
+          if cbSeedRatio.Checked then
+            args.Add('seedRatioLimit', edSeedRatio.Value);
+          args.Add('blocklist-enabled', integer(cbBlocklist.Checked) and 1);
+
+          args.Add('alt-speed-enabled', integer(cbAltEnabled.Checked) and 1);
+          args.Add('alt-speed-down', edAltDown.Value);
+          args.Add('alt-speed-up', edAltUp.Value);
+          args.Add('alt-speed-time-enabled', integer(cbAutoAlt.Checked) and 1);
+          if cbAutoAlt.Checked then begin
+            args.Add('alt-speed-time-begin', Round(Frac(StrToTime(edAltTimeBegin.Text))*MinsPerDay));
+            args.Add('alt-speed-time-end', Round(Frac(StrToTime(edAltTimeEnd.Text))*MinsPerDay));
+            j:=0;
+            for i:=7 downto 1 do begin
+              j:=j shl 1;
+              j:=j or (integer(TCheckBox(gbAltSpeed.FindChildControl(Format('cbDay%d', [i]))).Checked) and 1);
+            end;
+            args.Add('alt-speed-time-day', j);
+          end;
+        end
+        else begin
+          args.Add('peer-limit', edMaxPeers.Value);
+          args.Add('port', edPort.Value);
+          args.Add('pex-allowed', integer(cbPEX.Checked) and 1);
+        end;
+        if RpcObj.RPCVersion >= 7 then begin
+          args.Add('incomplete-dir-enabled', integer(cbIncompleteDir.Checked) and 1);
+          if cbIncompleteDir.Checked then
+            args.Add('incomplete-dir', UTF8Decode(edIncompleteDir.Text));
+        end;
+        if RpcObj.RPCVersion >= 8 then
+          args.Add('rename-partial-files', integer(cbPartExt.Checked) and 1);
+        if RpcObj.RPCVersion >= 9 then
+          args.Add('lpd-enabled', integer(cbLPD.Checked) and 1);
+        if RpcObj.RPCVersion >= 10 then begin
+          args.Add('cache-size-mb', edCacheSize.Value);
+          args.Add('idle-seeding-limit-enabled', integer(cbIdleSeedLimit.Checked) and 1);
+          args.Add('idle-seeding-limit', edIdleSeedLimit.Value);
+        end;
+        if edBlocklistURL.Visible then
+          if cbBlocklist.Checked then
+            args.Add('blocklist-url', UTF8Decode(edBlocklistURL.Text));
+        if RpcObj.RPCVersion >= 13 then
+          args.Add('utp-enabled', integer(cbUTP.Checked) and 1);
+
+        req.Add('arguments', args);
+        args:=RpcObj.SendRequest(req, False);
+        if args = nil then begin
+          CheckStatus(False);
+          exit;
+        end;
+        args.Free;
+      finally
+        req.Free;
+      end;
+      RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtSession];
+      AppNormal;
+    end;
+  finally
+    Free;
+  end;
+end;
+
+procedure TMainForm.acReannounceTorrentExecute(Sender: TObject);
+begin
+  TorrentAction(GetSelectedTorrents, 'reannounce');
+end;
+
+procedure TMainForm.acRemoveTorrentAndDataExecute(Sender: TObject);
+begin
+  InternalRemoveTorrent(sRemoveTorrentData, sRemoveTorrentDataMulti, True);
+end;
+
+procedure TMainForm.acRemoveTorrentExecute(Sender: TObject);
+begin
+  InternalRemoveTorrent(sRemoveTorrent, sRemoveTorrentMulti, False);
+end;
+
+procedure TMainForm.acResolveCountryExecute(Sender: TObject);
+begin
+  if not acResolveCountry.Checked then
+    if GetGeoIpDatabase = '' then
+      if not DownloadGeoIpDatabase(False) then
+        exit;
+
+  acResolveCountry.Checked:=not acResolveCountry.Checked;
+  FreeAndNil(FResolver);
+  DoRefresh;
+  acShowCountryFlag.Enabled:=acResolveCountry.Checked;
+end;
+
+procedure TMainForm.acResolveHostExecute(Sender: TObject);
+begin
+  acResolveHost.Checked:=not acResolveHost.Checked;
+  FreeAndNil(FResolver);
+  DoRefresh;
+end;
+
+procedure TMainForm.acSelectAllExecute(Sender: TObject);
+begin
+  Application.ProcessMessages;
+  if lvFiles.Focused then
+    lvFiles.SelectAll
+  else
+    gTorrents.SelectAll;
+end;
+
+procedure TMainForm.acSetHighPriorityExecute(Sender: TObject);
+begin
+  Application.ProcessMessages;
+  if lvFiles.Focused then
+    SetCurrentFilePriority('high')
+  else
+    SetTorrentPriority(TR_PRI_HIGH);
+end;
+
+procedure TMainForm.acSetLowPriorityExecute(Sender: TObject);
+begin
+  Application.ProcessMessages;
+  if lvFiles.Focused then
+    SetCurrentFilePriority('low')
+  else
+    SetTorrentPriority(TR_PRI_LOW);
+end;
+
+procedure TMainForm.acSetNormalPriorityExecute(Sender: TObject);
+begin
+  Application.ProcessMessages;
+  if lvFiles.Focused then
+    SetCurrentFilePriority('normal')
+  else
+    SetTorrentPriority(TR_PRI_NORMAL);
+end;
+
+procedure TMainForm.acSetNotDownloadExecute(Sender: TObject);
+begin
+  SetCurrentFilePriority('skip');
+end;
+
+procedure TMainForm.acSetupColumnsExecute(Sender: TObject);
+var
+  g: TVarGrid;
+  s: string;
+begin
+  Application.ProcessMessages;
+  if lvTrackers.Focused then
+    g:=lvTrackers
+  else
+  if lvPeers.Focused then
+    g:=lvPeers
+  else
+  if lvFiles.Focused then
+    g:=lvFiles
+  else
+    g:=gTorrents;
+  if g = gTorrents then
+    s:=sTorrents
+  else
+    s:=PageInfo.ActivePage.Caption;
+  if not SetupColumns(g, 0, s) then exit;
+  if g = gTorrents then
+    TorrentColumnsChanged;
+end;
+
+procedure TMainForm.acShowAppExecute(Sender: TObject);
+begin
+  ShowApp;
+end;
+
+procedure TMainForm.acShowCountryFlagExecute(Sender: TObject);
+const
+  FlagsURL = 'http://transmisson-remote-gui.googlecode.com/files/flags.zip';
+begin
+  if not acShowCountryFlag.Checked then
+    if GetFlagsArchive = '' then begin
+      if MessageDlg('', sFlagArchiveConfirm, mtConfirmation, mbYesNo, 0, mbYes) <> mrYes then
+        exit;
+      if not DownloadFile(FlagsURL, FHomeDir) then
+        exit;
+    end;
+  acShowCountryFlag.Checked:=not acShowCountryFlag.Checked;
+  DoRefresh;
+end;
+
+procedure TMainForm.acStartAllTorrentsExecute(Sender: TObject);
+begin
+  TorrentAction(NULL, 'start');
+end;
+
+procedure TMainForm.acStartTorrentExecute(Sender: TObject);
+begin
+  if gTorrents.Items.Count = 0 then exit;
+  TorrentAction(GetSelectedTorrents, 'start');
+end;
+
+procedure TMainForm.acStopAllTorrentsExecute(Sender: TObject);
+begin
+  TorrentAction(NULL, 'stop');
+end;
+
+procedure TMainForm.acStopTorrentExecute(Sender: TObject);
+begin
+  if gTorrents.Items.Count = 0 then exit;
+  TorrentAction(GetSelectedTorrents, 'stop');
+end;
+
+procedure TMainForm.acTorrentPropsExecute(Sender: TObject);
+const
+  TR_RATIOLIMIT_GLOBAL    = 0; // follow the global settings
+  TR_RATIOLIMIT_SINGLE    = 1; // override the global settings, seeding until a certain ratio
+  TR_RATIOLIMIT_UNLIMITED = 2; // override the global settings, seeding regardless of ratio
+
+  TR_IDLELIMIT_GLOBAL     = 0; // follow the global settings
+  TR_IDLELIMIT_SINGLE     = 1; // override the global settings, seeding until a certain idle time
+  TR_IDLELIMIT_UNLIMITED  = 2; // override the global settings, seeding regardless of activity
+
+var
+  req, args, t: TJSONObject;
+  i, j, id: integer;
+  ids: TJSONArray;
+  TorrentIds: variant;
+  s: string;
+begin
+  gTorrentsClick(nil);
+  id:=RpcObj.CurTorrentId;
+  if id = 0 then exit;
+  AppBusy;
+  with TTorrPropsForm.Create(Self) do
+  try
+    gTorrents.Tag:=1;
+    TorrentIds:=GetSelectedTorrents;
+    args:=RpcObj.RequestInfo(id, ['downloadLimit', 'downloadLimitMode', 'downloadLimited', 'uploadLimit', 'uploadLimitMode', 'uploadLimited',
+                                  'name', 'maxConnectedPeers', 'seedRatioMode', 'seedRatioLimit', 'seedIdleLimit', 'seedIdleMode']);
+    if args = nil then begin
+      CheckStatus(False);
+      exit;
+    end;
+    try
+      t:=args.Arrays['torrents'].Objects[0];
+
+      if gTorrents.SelCount > 1 then begin
+        s:=Format(sSeveralTorrents, [gTorrents.SelCount]);
+        Caption:=Caption + ' - ' + s;
+      end
+      else
+        s:=UTF8Encode(t.Strings['name']);
+
+      txName.Caption:=txName.Caption + ' ' + s;
+      if RpcObj.RPCVersion < 5 then begin
+        // RPC versions prior to v5
+        j:=t.Integers['downloadLimitMode'];
+        cbMaxDown.Checked:=j = TR_SPEEDLIMIT_SINGLE;
+        i:=t.Integers['downloadLimit'];
+        if (i < 0) or (j = TR_SPEEDLIMIT_UNLIMITED) then
+          edMaxDown.ValueEmpty:=True
+        else
+          edMaxDown.Value:=i;
+
+        j:=t.Integers['uploadLimitMode'];
+        cbMaxUp.Checked:=j = TR_SPEEDLIMIT_SINGLE;
+        i:=t.Integers['uploadLimit'];
+        if (i < 0) or (j = TR_SPEEDLIMIT_UNLIMITED) then
+          edMaxUp.ValueEmpty:=True
+        else
+          edMaxUp.Value:=i;
+        cbSeedRatio.Visible:=False;
+        edSeedRatio.Visible:=False;
+      end else begin
+        // RPC version 5
+        cbMaxDown.Checked:=t.Booleans['downloadLimited'];
+        i:=t.Integers['downloadLimit'];
+        if i < 0 then
+          edMaxDown.ValueEmpty:=True
+        else
+          edMaxDown.Value:=i;
+
+        cbMaxUp.Checked:=t.Booleans['uploadLimited'];
+        i:=t.Integers['uploadLimit'];
+        if i < 0 then
+          edMaxUp.ValueEmpty:=True
+        else
+          edMaxUp.Value:=i;
+
+        case t.Integers['seedRatioMode'] of
+          TR_RATIOLIMIT_SINGLE:
+            cbSeedRatio.State:=cbChecked;
+          TR_RATIOLIMIT_UNLIMITED:
+            cbSeedRatio.State:=cbUnchecked;
+          else
+            cbSeedRatio.State:=cbGrayed;
+        end;
+        edSeedRatio.Value:=t.Floats['seedRatioLimit'];
+      end;
+
+      if RpcObj.RPCVersion >= 10 then begin
+        case t.Integers['seedIdleMode'] of
+          TR_IDLELIMIT_SINGLE:
+            cbIdleSeedLimit.State:=cbChecked;
+          TR_IDLELIMIT_UNLIMITED:
+            cbIdleSeedLimit.State:=cbUnchecked;
+          else
+            cbIdleSeedLimit.State:=cbGrayed;
+        end;
+        edIdleSeedLimit.Value:=t.Integers['seedIdleLimit'];
+        cbIdleSeedLimitClick(nil);
+      end
+      else begin
+        cbIdleSeedLimit.Visible:=False;
+        edIdleSeedLimit.Visible:=False;
+        txMinutes.Visible:=False;
+      end;
+      edPeerLimit.Value:=t.Integers['maxConnectedPeers'];
+    finally
+      args.Free;
+    end;
+    cbMaxDownClick(nil);
+    cbMaxUpClick(nil);
+    cbSeedRatioClick(nil);
+    AppNormal;
+    if ShowModal = mrOk then begin
+      AppBusy;
+      Self.Update;
+      req:=TJSONObject.Create;
+      try
+        req.Add('method', 'torrent-set');
+        args:=TJSONObject.Create;
+        ids:=TJSONArray.Create;
+        for i:=VarArrayLowBound(TorrentIds, 1) to VarArrayHighBound(TorrentIds, 1) do
+          ids.Add(integer(TorrentIds[i]));
+        args.Add('ids', ids);
+
+        if RpcObj.RPCVersion < 5 then
+        begin
+          // RPC versions prior to v5
+          args.Add('speed-limit-down-enabled', integer(cbMaxDown.Checked) and 1);
+          args.Add('speed-limit-up-enabled', integer(cbMaxUp.Checked) and 1);
+          if cbMaxDown.Checked then
+            args.Add('speed-limit-down', edMaxDown.Value);
+          if cbMaxUp.Checked then
+            args.Add('speed-limit-up', edMaxUp.Value);
+        end else begin
+          // RPC version 5
+          args.Add('downloadLimited', integer(cbMaxDown.Checked) and 1);
+          args.Add('uploadLimited', integer(cbMaxUp.Checked) and 1);
+          if cbMaxDown.Checked then
+            args.Add('downloadLimit', edMaxDown.Value);
+          if cbMaxUp.Checked then
+            args.Add('uploadLimit', edMaxUp.Value);
+          case cbSeedRatio.State of
+            cbChecked:
+              i:=TR_RATIOLIMIT_SINGLE;
+            cbUnchecked:
+              i:=TR_RATIOLIMIT_UNLIMITED;
+            else
+              i:=TR_RATIOLIMIT_GLOBAL;
+          end;
+          args.Add('seedRatioMode', i);
+          if cbSeedRatio.State = cbChecked then
+            args.Add('seedRatioLimit', edSeedRatio.Value);
+        end;
+
+        if RpcObj.RPCVersion >= 10 then begin
+          case cbIdleSeedLimit.State of
+            cbChecked:
+              i:=TR_IDLELIMIT_SINGLE;
+            cbUnchecked:
+              i:=TR_IDLELIMIT_UNLIMITED;
+            else
+              i:=TR_IDLELIMIT_GLOBAL;
+          end;
+          args.Add('seedIdleMode', i);
+          if cbIdleSeedLimit.State = cbChecked then
+            args.Add('seedIdleLimit', edIdleSeedLimit.Value);
+        end;
+
+        args.Add('peer-limit', edPeerLimit.Value);
+        req.Add('arguments', args);
+        args:=nil;
+        args:=RpcObj.SendRequest(req, False);
+        if args = nil then begin
+          CheckStatus(False);
+          exit;
+        end;
+        args.Free;
+      finally
+        req.Free;
+      end;
+      DoRefresh;
+      AppNormal;
+    end;
+  finally
+    gTorrents.Tag:=0;
+    Free;
+  end;
+end;
+
+procedure TMainForm.acUpdateBlocklistExecute(Sender: TObject);
+var
+  req: TJSONObject;
+  res: TJSONObject;
+begin
+  Application.ProcessMessages;
+  AppBusy;
+  req:=TJSONObject.Create;
+  try
+    req.Add('method', 'blocklist-update');
+    res:=RpcObj.SendRequest(req, True, 3*60000);
+    AppNormal;
+    if res = nil then begin
+      CheckStatus(False);
+      exit;
+    end;
+    MessageDlg(Format(sBlocklistUpdateComplete, [res.Integers[('blocklist-size')]]), mtInformation, [mbOK], 0);
+    res.Free;
+  finally
+    req.Free;
+  end;
+end;
+
+procedure TMainForm.acUpdateGeoIPExecute(Sender: TObject);
+begin
+  if DownloadGeoIpDatabase(True) then
+    MessageDlg(sUpdateComplete, mtInformation, [mbOK], 0);
+end;
+
+procedure TMainForm.acVerifyTorrentExecute(Sender: TObject);
+var
+  ids: variant;
+  s: string;
+begin
+  if gTorrents.Items.Count = 0 then exit;
+  gTorrents.Tag:=1;
+  try
+    ids:=GetSelectedTorrents;
+    if gTorrents.SelCount < 2 then
+      s:=Format(sTorrentVerification, [UTF8Encode(widestring(gTorrents.Items[idxName, gTorrents.Items.IndexOf(idxTorrentId, ids[0])]))])
+    else
+      s:=Format(sTorrentsVerification, [gTorrents.SelCount]);
+    if MessageDlg('', s, mtConfirmation, mbYesNo, 0, mbNo) <> mrYes then
+      exit;
+  finally
+    gTorrents.Tag:=0;
+  end;
+  TorrentAction(ids, 'verify');
+end;
+
+procedure TMainForm.AnimateTimerTimer(Sender: TObject);
+begin
+  if RpcObj.RequestStartTime = 0 then begin
+    pbStatus.Visible:=False;
+    AnimateTimer.Enabled:=False;
+    exit;
+  end;
+  Inc(FStatusImgIndex);
+  if FStatusImgIndex > 37 then
+    FStatusImgIndex:=30;
+  pbStatus.Invalidate;
+end;
+
+procedure TMainForm.ApplicationPropertiesException(Sender: TObject; E: Exception);
+begin
+  ForceAppNormal;
+  MessageDlg(E.Message, mtError, [mbOK], 0);
+end;
+
+procedure TMainForm.ApplicationPropertiesIdle(Sender: TObject; var Done: Boolean);
+begin
+  UpdateUI;
+{$ifdef LCLcarbon}
+  CheckSynchronize;
+{$endif LCLcarbon}
+  Done:=True;
+end;
+
+procedure TMainForm.ApplicationPropertiesMinimize(Sender: TObject);
+begin
+{$ifndef darwin}
+  if FIni.ReadBool('Interface', 'TrayMinimize', True) then
+    HideApp;
+{$endif darwin}
+  UpdateTray;
+end;
+
+procedure TMainForm.ApplicationPropertiesRestore(Sender: TObject);
+begin
+  UpdateTray;
+end;
+
+procedure TMainForm.edSearchChange(Sender: TObject);
+begin
+  DoRefresh(True);
+end;
+
+procedure TMainForm.FormDropFiles(Sender: TObject; const FileNames: array of String);
+begin
+  if FileExistsUTF8(FileNames[0]) then
+    AddTorrentFile(FileNames[0]);
+end;
+
+procedure TMainForm.FormWindowStateChange(Sender: TObject);
+begin
+{$ifdef lclgtk2}
+  if WindowState = wsMinimized then
+    ApplicationPropertiesMinimize(nil)
+  else
+    ApplicationPropertiesRestore(nil);
+{$endif lclgtk2}
+end;
+
+procedure TMainForm.gTorrentsCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState;
+                                            var CellAttribs: TCellAttributes);
+var
+  j: integer;
+begin
+  if ARow < 0 then exit;
+  with CellAttribs do begin
+    if ACol = gTorrents.FirstVisibleColumn then
+      ImageIndex:=integer(Sender.Items[idxStateImg, ARow]);
+    if Text = '' then exit;
+    case ADataCol of
+      idxStatus:
+        Text:=GetTorrentStatus(ARow);
+      idxSize, idxDownloaded, idxUploaded, idxSizeToDowload:
+        Text:=GetHumanSize(Sender.Items[ADataCol, ARow]);
+      idxDone:
+        Text:=Format('%.1f%%', [double(Sender.Items[idxDone, ARow])]);
+      idxSeeds:
+        if not VarIsNull(Sender.Items[idxSeedsTotal, ARow]) then
+          Text:=GetSeedsText(Sender.Items[idxSeeds, ARow], Sender.Items[idxSeedsTotal, ARow]);
+      idxPeers:
+        Text:=GetPeersText(Sender.Items[idxPeers, ARow], -1, Sender.Items[idxLeechersTotal, ARow]);
+      idxDownSpeed, idxUpSpeed:
+        begin
+          j:=Sender.Items[ADataCol, ARow];
+          if j > 0 then
+            Text:=GetHumanSize(j, 1) + sPerSecond
+          else
+            Text:='';
+        end;
+      idxETA:
+        Text:=EtaToString(Sender.Items[idxETA, ARow]);
+      idxRatio:
+        Text:=RatioToString(Sender.Items[idxRatio, ARow]);
+      idxAddedOn, idxCompletedOn, idxLastActive:
+        Text:=TorrentDateTimeToString(Sender.Items[ADataCol, ARow]);
+      idxPriority:
+        Text:=PriorityToStr(Sender.Items[ADataCol, ARow], ImageIndex);
+    end;
+  end;
+end;
+
+procedure TMainForm.gTorrentsClick(Sender: TObject);
+var
+  i: integer;
+begin
+  if gTorrents.Tag <> 0 then exit;
+  RpcObj.Lock;
+  try
+    if gTorrents.Items.Count > 0 then
+      i:=gTorrents.Items[idxTorrentId, gTorrents.Row]
+    else
+      i:=0;
+    if RpcObj.CurTorrentId = i then
+      exit;
+    RpcObj.CurTorrentId:=i;
+  finally
+    RpcObj.Unlock;
+  end;
+
+  ClearDetailsInfo;
+
+  TorrentsListTimer.Enabled:=False;
+  TorrentsListTimer.Enabled:=True;
+end;
+
+procedure TMainForm.gTorrentsDblClick(Sender: TObject);
+begin
+  acTorrentProps.Execute;
+end;
+
+procedure TMainForm.gTorrentsDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean);
+begin
+  if ARow < 0 then exit;
+  if ADataCol = idxDone then begin
+    ADefaultDrawing:=False;
+    DrawProgressCell(Sender, ACol, ARow, ADataCol, AState, R);
+  end;
+end;
+
+procedure TMainForm.gTorrentsResize(Sender: TObject);
+begin
+  if not FStarted then begin
+    VSplitter.SetSplitterPosition(FIni.ReadInteger('MainForm', 'VSplitter', VSplitter.GetSplitterPosition));
+    HSplitter.SetSplitterPosition(FIni.ReadInteger('MainForm', 'HSplitter', HSplitter.GetSplitterPosition));
+  end;
+end;
+
+procedure TMainForm.gTorrentsSortColumn(Sender: TVarGrid; var ASortCol: integer);
+begin
+  if ASortCol = idxSeeds then
+    ASortCol:=idxSeedsTotal;
+  if ASortCol = idxPeers then
+    ASortCol:=idxLeechersTotal;
+end;
+
+procedure TMainForm.lvFilesCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+begin
+  if ARow < 0 then exit;
+  with CellAttribs do begin
+    if Text = '' then exit;
+    case ADataCol of
+      idxFilePriority:
+        Text:=PriorityToStr(FFiles[idxFilePriority, ARow], ImageIndex);
+      idxFileSize, idxFileDone:
+        Text:=GetHumanSize(FFiles[ADataCol, ARow]);
+      idxFileProgress:
+        Text:=Format('%.1f%%', [double(FFiles[ADataCol, ARow])]);
+    end;
+  end;
+end;
+
+procedure TMainForm.lvFilesDblClick(Sender: TObject);
+begin
+  acOpenFile.Execute;
+end;
+
+procedure TMainForm.lvFilesDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect;
+  var ADefaultDrawing: boolean);
+begin
+  if ARow < 0 then exit;
+  if ADataCol = idxFileProgress then begin
+    ADefaultDrawing:=False;
+    DrawProgressCell(Sender, ACol, ARow, ADataCol, AState, R);
+  end;
+end;
+
+procedure TMainForm.lvFilesKeyPress(Sender: TObject; var Key: char);
+begin
+  if Key = #13 then
+    acOpenFile.Execute;
+end;
+
+procedure TMainForm.lvFilterCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+begin
+  if ARow < 0 then exit;
+  with CellAttribs do begin
+    case ARow of
+      0: ImageIndex:=imgAll;
+      1: ImageIndex:=imgDown;
+      2: ImageIndex:=imgSeed;
+      3: ImageIndex:=imgActive;
+      4: ImageIndex:=15;
+      5: ImageIndex:=imgStopped;
+      else
+        if Text <> '' then
+          if ARow >= Sender.Items.Count - FTrackers.Count then
+            ImageIndex:=5
+          else
+            ImageIndex:=22;
+    end;
+  end;
+end;
+
+procedure TMainForm.lvFilterClick(Sender: TObject);
+begin
+  if VarIsNull(lvFilter.Items[0, lvFilter.Row]) then
+    if (FLastFilerIndex > lvFilter.Row) or (lvFilter.Row = lvFilter.Items.Count - 1) then
+      lvFilter.Row:=lvFilter.Row - 1
+    else
+      lvFilter.Row:=lvFilter.Row + 1;
+  FLastFilerIndex:=lvFilter.Row;
+  FilterTimer.Enabled:=False;
+  FilterTimer.Enabled:=True;
+end;
+
+procedure TMainForm.lvFilterDrawCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect;
+  var ADefaultDrawing: boolean);
+var
+  i: integer;
+  RR: TRect;
+begin
+  ADefaultDrawing:=not VarIsNull(Sender.Items[0, ARow]);
+  if ADefaultDrawing then exit;
+
+  with lvFilter.Canvas do begin
+    Brush.Color:=lvFilter.Color;
+    FillRect(R);
+    i:=(R.Bottom + R.Top) div 2;
+    Brush.Color:=clBtnFace;
+    RR:=R;
+    InflateRect(RR, -4, 0);
+    RR.Top:=i - 1;
+    RR.Bottom:=i + 1;
+    FillRect(RR);
+  end;
+end;
+
+procedure TMainForm.lvPeersCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+var
+  i: integer;
+begin
+  if ARow < 0 then exit;
+  with CellAttribs do begin
+    if Text = '' then exit;
+    if ACol = 0 then begin
+      ImageIndex:=Sender.Items[idxPeerCountryImage, ARow];
+      if ImageIndex = 0 then
+        ImageIndex:=-1;
+    end;
+    case ADataCol of
+      idxPeerDone:
+        Text:=Format('%.1f%%', [double(Sender.Items[ADataCol, ARow])*100.0]);
+      idxPeerDownSpeed, idxPeerUpSpeed:
+        begin
+          i:=Sender.Items[ADataCol, ARow];
+          if i > 0 then
+            Text:=GetHumanSize(i, 1) + sPerSecond
+          else
+            Text:='';
+        end;
+    end;
+  end;
+end;
+
+procedure TMainForm.lvTrackersCellAttributes(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+var
+  f: double;
+begin
+  if ARow < 0 then exit;
+  with CellAttribs do begin
+    if Text = '' then exit;
+    case ADataCol of
+      idxTrackersListSeeds:
+        if lvTrackers.Items[ADataCol, ARow] < 0 then
+          Text:='';
+      idxTrackersListUpdateIn:
+        begin
+          f:=double(lvTrackers.Items[ADataCol, ARow]);
+          if f = 0 then
+            Text:='-'
+          else
+          if f = 1 then
+            Text:=sUpdating
+          else
+            Text:=SecondsToString(Trunc(f));
+        end;
+    end;
+  end;
+end;
+
+procedure TMainForm.lvTrackersDblClick(Sender: TObject);
+begin
+  acEditTracker.Execute;
+end;
+
+procedure TMainForm.lvTrackersKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
+begin
+  if Key = VK_DELETE then begin
+    Key:=0;
+    acDelTracker.Execute;
+  end;
+end;
+
+procedure TMainForm.pbStatusPaint(Sender: TObject);
+begin
+  if FStatusBmp = nil then begin
+    FStatusBmp:=TBitmap.Create;
+    FStatusBmp.Width:=pbStatus.Width;
+    FStatusBmp.Height:=pbStatus.Height;
+  end;
+  with FStatusBmp.Canvas do begin
+    Brush.Color:=clBtnFace;
+    FillRect(pbStatus.ClientRect);
+    ImageList16.Draw(FStatusBmp.Canvas, (pbStatus.Width - ImageList16.Width) div 2, (pbStatus.Height - ImageList16.Height) div 2, FStatusImgIndex);
+  end;
+  pbStatus.Canvas.Draw(0, 0, FStatusBmp);
+end;
+
+procedure TMainForm.panReconnectResize(Sender: TObject);
+begin
+  panReconnectFrame.BoundsRect:=panReconnect.ClientRect;
+end;
+
+procedure TMainForm.pbDownloadedPaint(Sender: TObject);
+begin
+  if FTorrentProgress <> nil then
+    pbDownloaded.Canvas.StretchDraw(pbDownloaded.ClientRect, FTorrentProgress);
+end;
+
+procedure TMainForm.StatusBarMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
+var
+  pt: TPoint;
+begin
+  if (Button = mbRight) and RpcObj.Connected then begin
+    pt:=StatusBar.ClientToScreen(Point(X, Y));
+    case StatusBar.GetPanelIndexAt(X, Y) of
+      1: pmDownSpeeds.PopUp(pt.X, pt.Y);
+      2: pmUpSpeeds.PopUp(pt.X, pt.Y);
+    end;
+  end;
+end;
+
+{$ifdef LCLcarbon}
+type
+  THackApplication = class(TApplication)
+  end;
+{$endif LCLcarbon}
+
+procedure TMainForm.TickTimerTimer(Sender: TObject);
+var
+  s: string;
+begin
+  TickTimer.Enabled:=False;
+  try
+    if not FStarted then begin
+      Application.ProcessMessages;
+      FStarted:=True;
+      acConnect.Execute;
+      Application.ProcessMessages;
+      panTransfer.ChildSizing.Layout:=cclLeftToRightThenTopToBottom;
+      panGeneralInfo.ChildSizing.Layout:=cclLeftToRightThenTopToBottom;
+      panTransfer.ChildSizing.Layout:=cclNone;
+      panGeneralInfo.ChildSizing.Layout:=cclNone;
+      with panTransfer do
+        ClientHeight:=Controls[ControlCount - 1].BoundsRect.Bottom + ChildSizing.TopBottomSpacing;
+      with panGeneralInfo do
+        ClientHeight:=Controls[ControlCount - 1].BoundsRect.Bottom + ChildSizing.TopBottomSpacing;
+
+      if FIni.ReadBool('MainForm', 'FirstRun', True) then begin
+        if not acResolveCountry.Checked then
+          acResolveCountry.Execute;
+        if acResolveCountry.Checked and not acShowCountryFlag.Checked then
+          acShowCountryFlag.Execute;
+        FIni.WriteBool('MainForm', 'FirstRun', False);
+      end;
+      panSearch.AutoSize:=False;
+    end;
+
+    if FileExists(FIPCFileName) then begin
+      s:=ReadFileToString(UTF8Encode(FIPCFileName));
+      DeleteFile(FIPCFileName);
+      ShowApp;
+
+      if s = '' then
+        exit;
+
+      Application.ProcessMessages;
+      TickTimer.Enabled:=True;
+      DoAddTorrent(s);
+    end;
+
+    if RpcObj.Connected then
+      FReconnectTimeOut:=0
+    else
+      if panReconnect.Visible then
+        if Now - FReconnectWaitStart >= FReconnectTimeOut/SecsPerDay then
+          DoConnect
+        else
+          txReconnectSecs.Caption:=Format(sReconnect, [FReconnectTimeOut - Round(SecsPerDay*(Now - FReconnectWaitStart))]);
+
+    if not pbStatus.Visible and (RpcObj.RequestStartTime <> 0) and (Now - RpcObj.RequestStartTime >= 1/SecsPerDay) then begin
+      pbStatus.Visible:=True;
+      AnimateTimer.Enabled:=True;
+    end;
+{$ifdef LCLcarbon}
+     THackApplication(Application).ProcessAsyncCallQueue;
+{$endif LCLcarbon}
+  finally
+    TickTimer.Enabled:=True;
+  end;
+end;
+
+procedure TMainForm.FilterTimerTimer(Sender: TObject);
+begin
+  FilterTimer.Enabled:=False;
+  FFilterChanged:=True;
+  DoRefresh(True);
+end;
+
+procedure TMainForm.FormClose(Sender: TObject; var CloseAction: TCloseAction);
+begin
+{$ifndef darwin}
+  if FIni.ReadBool('Interface', 'TrayClose', False) then begin
+    CloseAction:=caHide;
+    HideApp;
+    UpdateTray;
+    exit;
+  end;
+{$endif darwin}
+  BeforeCloseApp;
+end;
+
+procedure TMainForm.PageInfoChange(Sender: TObject);
+begin
+  RpcObj.Lock;
+  try
+    if PageInfo.ActivePage = tabGeneral then
+      RpcObj.AdvInfo:=aiGeneral
+    else
+    if PageInfo.ActivePage = tabPeers then
+      RpcObj.AdvInfo:=aiPeers
+    else
+    if PageInfo.ActivePage = tabFiles then
+      RpcObj.AdvInfo:=aiFiles
+    else
+    if PageInfo.ActivePage = tabTrackers then
+      RpcObj.AdvInfo:=aiTrackers;
+    DoRefresh;
+  finally
+    RpcObj.Unlock;
+  end;
+end;
+
+procedure TMainForm.TorrentsListTimerTimer(Sender: TObject);
+begin
+  TorrentsListTimer.Enabled:=False;
+  DoRefresh;
+end;
+
+procedure TMainForm.pmFilesPopup(Sender: TObject);
+begin
+  UpdateUI;
+end;
+
+procedure TMainForm.pmTorrentsPopup(Sender: TObject);
+begin
+  UpdateUI;
+end;
+
+procedure TMainForm.TrayIconDblClick(Sender: TObject);
+begin
+{$ifndef darwin}
+  acShowApp.Execute;
+{$endif darwin}
+end;
+
+procedure TMainForm.UrlLabelClick(Sender: TObject);
+begin
+  AppBusy;
+  OpenURL((Sender as TLabel).Caption);
+  AppNormal;
+end;
+
+procedure TMainForm.CenterReconnectWindow;
+begin
+  panReconnect.Left:=(ClientWidth - panReconnect.Width) div 2;
+  panReconnect.Top:=(ClientHeight - panReconnect.Height) div 2;
+end;
+
+procedure TMainForm.DrawProgressCell(Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const ACellRect: TRect);
+var
+  R, RR: TRect;
+  i, j, h: integer;
+  s: string;
+  cl: TColor;
+  Progress: double;
+  sz: TSize;
+  ts: TTextStyle;
+begin
+  Progress:=double(Sender.Items[ADataCol, ARow]);
+  with Sender.Canvas do begin
+    R:=ACellRect;
+    Pen.Color:=Brush.Color;
+    Rectangle(R);
+    s:=Format('%.1f%%', [Progress]);
+    sz:=TextExtent(s);
+    InflateRect(R, -1, -1);
+    Pen.Color:=clBtnFace;
+    Rectangle(R);
+    InflateRect(R, -1, -1);
+
+    i:=R.Left + Round(Progress*(R.Right - R.Left)/100.0);
+    j:=(R.Top + R.Bottom) div 2;
+    h:=TextHeight(s);
+    h:=(R.Top + R.Bottom - h) div 2;
+    cl:=GetLikeColor(clHighlight, 70);
+    GradientFill(Rect(R.Left, R.Top, i, j), cl, clHighlight, gdVertical);
+    GradientFill(Rect(R.Left, j, i, R.Bottom), clHighlight, cl, gdVertical);
+
+    ts:=TextStyle;
+    ts.Layout:=tlTop;
+    ts.Alignment:=taLeftJustify;
+    TextStyle:=ts;
+    j:=(R.Left + R.Right - sz.cx) div 2;
+    if i > R.Left then begin
+      RR:=Rect(R.Left, R.Top, i, R.Bottom);
+      Font.Color:=clHighlightText;
+      TextRect(RR, j, h, s);
+    end;
+    if i < R.Right then begin
+      RR:=Rect(i, R.Top, R.Right, R.Bottom);
+      Brush.Color:=Sender.Color;
+      FillRect(RR);
+      Font.Color:=clWindowText;
+      TextRect(RR, j, h, s);
+    end;
+  end;
+end;
+
+procedure TMainForm.DoConnect;
+var
+  Sec: string;
+  i, j: integer;
+begin
+  panReconnect.Hide;
+  DoDisconnect;
+  Sec:='Connection.' + FCurConn;
+  if not FIni.SectionExists(Sec) then
+    Sec:='Connection';
+  if FIni.ReadBool(Sec, 'UseSSL', False) then begin
+    RpcObj.InitSSL;
+    if not IsSSLloaded then begin
+      MessageDlg(Format(sSSLLoadError, [DLLSSLName, DLLUtilName]), mtError, [mbOK], 0);
+      exit;
+    end;
+    RpcObj.Url:='https';
+  end
+  else
+    RpcObj.Url:='http';
+  RpcObj.Http.UserName:=FIni.ReadString(Sec, 'UserName', '');
+  RpcObj.Http.Password:=DecodeBase64(FIni.ReadString(Sec, 'Password', ''));
+  if FIni.ReadBool(Sec, 'UseProxy', False) then begin
+    RpcObj.Http.ProxyHost:=FIni.ReadString(Sec, 'ProxyHost', '');
+    RpcObj.Http.ProxyPort:=IntToStr(FIni.ReadInteger(Sec, 'ProxyPort', 8080));
+    RpcObj.Http.ProxyUser:=FIni.ReadString(Sec, 'ProxyUser', '');
+    RpcObj.Http.ProxyPass:=DecodeBase64(FIni.ReadString(Sec, 'ProxyPass', ''));
+  end
+  else begin
+    RpcObj.Http.ProxyHost:='';
+    RpcObj.Http.ProxyPort:='';
+    RpcObj.Http.ProxyUser:='';
+    RpcObj.Http.ProxyPass:='';
+  end;
+  RpcObj.Url:=Format('%s://%s:%d/transmission/rpc', [RpcObj.Url, FIni.ReadString(Sec, 'Host', ''), FIni.ReadInteger(Sec, 'Port', 9091)]);
+  SetRefreshInterval;
+  RpcObj.InfoStatus:=sConnectingToDaemon;
+  CheckStatus;
+  TrayIcon.Hint:=RpcObj.InfoStatus;
+  RpcObj.Connect;
+  FPathMap.Text:=StringReplace(Ini.ReadString(Sec, 'PathMap', ''), '|', LineEnding, [rfReplaceAll]);
+  i:=0;
+  while i < FPathMap.Count do
+    if Trim(FPathMap.ValueFromIndex[i]) = '' then
+      FPathMap.Delete(i)
+    else
+      Inc(i);
+
+  Ini.WriteString('Hosts', 'CurHost', FCurConn);
+  if FCurConn <> Ini.ReadString('Hosts', 'Host1', '') then begin
+    Ini.WriteString('Hosts', 'Host1', FCurConn);
+    j:=2;
+    for i:=0 to pmConnections.Items.Count - 1 do
+      with pmConnections.Items[i] do
+        if (Tag = 0) and (Caption <> FCurConn) then begin
+          Ini.WriteString('Hosts', Format('Host%d', [j]), Caption);
+          Inc(j);
+        end;
+    UpdateConnections;
+  end
+  else
+    if pmConnections.Items[0].Tag = 0 then begin
+      pmConnections.Items[0].Checked:=True;
+      miConnect.Items[0].Checked:=True;
+    end;
+end;
+
+procedure TMainForm.DoDisconnect;
+begin
+  TorrentsListTimer.Enabled:=False;
+  FilterTimer.Enabled:=False;
+  ClearDetailsInfo;
+  gTorrents.Items.Clear;
+  gTorrents.Enabled:=False;
+  gTorrents.Color:=clBtnFace;
+  lvPeers.Enabled:=False;
+  lvPeers.Color:=gTorrents.Color;
+  lvFiles.Enabled:=False;
+  lvFiles.Color:=gTorrents.Color;
+  lvTrackers.Enabled:=False;
+  lvTrackers.Color:=gTorrents.Color;
+
+  lvFilter.Enabled:=False;
+  lvFilter.Color:=gTorrents.Color;
+  with lvFilter do begin
+    Items[0, 0]:=UTF8Decode(SAll);
+    Items[0, 1]:=UTF8Decode(SDownloading);
+    Items[0, 2]:=UTF8Decode(SCompleted);
+    Items[0, 3]:=UTF8Decode(SActive);
+    Items[0, 4]:=UTF8Decode(SInactive);
+    Items[0, 5]:=UTF8Decode(sStopped);
+  end;
+  edSearch.Enabled:=False;
+  edSearch.Color:=gTorrents.Color;
+  edSearch.Text:='';
+
+  RpcObj.Disconnect;
+
+  RpcObj.InfoStatus:=sDisconnected;
+  CheckStatus;
+  UpdateUI;
+  TrayIcon.Hint:=RpcObj.InfoStatus;
+  gTorrents.Items.RowCnt:=0;
+  FTorrents.RowCnt:=0;
+  lvFilter.Row:=0;
+  lvFilter.Items.RowCnt:=StatusFiltersCount;
+  TorrentsListTimer.Enabled:=False;
+  FilterTimer.Enabled:=False;
+  pmConnections.Items[0].Checked:=False;
+  miConnect.Items[0].Checked:=False;
+  FCurDownSpeedLimit:=-2;
+  FCurUpSpeedLimit:=-2;
+  FillSpeedsMenu;
+end;
+
+procedure TMainForm.ClearDetailsInfo;
+
+  procedure ClearChildren(AParent: TPanel);
+  var
+    i: integer;
+  begin
+    AParent.AutoSize:=False;
+    AParent.ChildSizing.Layout:=cclNone;
+    for i:=0 to AParent.ControlCount - 1 do begin
+      if AParent.Controls[i] is TLabel then
+        with AParent.Controls[i] as TLabel do begin
+          if (Length(Name) < 5) or (Copy(Name, Length(Name) - 4, 5) <> 'Label') then
+            Caption:='';
+          PopupMenu:=pmLabels;
+        end;
+    end;
+  end;
+
+begin
+  FFiles.Clear;
+  lvPeers.Items.Clear;
+  lvTrackers.Items.Clear;
+  ClearChildren(panGeneralInfo);
+  ClearChildren(panTransfer);
+  ProcessPieces('', 0, 0);
+  txDownProgress.AutoSize:=False;
+  txDownProgress.Caption:='';
+end;
+
+function TMainForm.SelectRemoteFolder(const CurFolder, DialogTitle: string): string;
+var
+  i, j: integer;
+  s, ss, fn: string;
+  dlg: TSelectDirectoryDialog;
+  d: char;
+begin
+  Result:='';
+  if Trim(FPathMap.Text) = '' then begin
+    MessageDlg(sNoPathMapping, mtInformation, [mbOK], 0);
+    exit;
+  end;
+  s:=MapRemoteToLocal(CurFolder);
+  if (s = '') or not DirectoryExistsUTF8(s) then
+    s:=FPathMap.ValueFromIndex[0];
+
+  if not DirectoryExistsUTF8(s) then begin
+    MessageDlg(sNoPathMapping, mtInformation, [mbOK], 0);
+    exit;
+  end;
+
+  dlg:=TSelectDirectoryDialog.Create(nil);
+  try
+    dlg.Title:=DialogTitle;
+    dlg.InitialDir:=s;
+    if not dlg.Execute then
+      exit;
+
+    fn:=dlg.FileName;
+    for i:=0 to FPathMap.Count - 1 do begin
+      s:=FPathMap[i];
+      j:=Pos('=', s);
+      if j > 0 then begin
+        ss:=FixSeparators(Copy(s, j + 1, MaxInt));
+        if (ss = fn) or (Pos(IncludeProperTrailingPathDelimiter(ss), fn) = 1) then begin
+          Result:=Copy(s, 1, j - 1);
+          d:='/';
+          for j:=1 to Length(Result) do
+            if Result[j] in ['/','\'] then begin
+              d:=Result[j];
+              break;
+            end;
+          if ss <> fn then begin
+            if (Result <> '') and (Copy(Result, Length(Result), 1) <> d) then
+              Result:=Result + d;
+            ss:=IncludeProperTrailingPathDelimiter(ss);
+            Result:=Result + Copy(fn, Length(ss) + 1, MaxInt);
+          end;
+
+          Result:=StringReplace(Result, DirectorySeparator, d, [rfReplaceAll]);
+          if Copy(Result, Length(Result), 1) = d then
+            SetLength(Result, Length(Result) - 1);
+        end;
+      end;
+    end;
+  finally
+    dlg.Free;
+  end;
+  if Result = '' then
+    MessageDlg(sNoPathMapping, mtError, [mbOK], 0);
+end;
+
+procedure TMainForm.UpdateUI;
+var
+  e: boolean;
+begin
+  e:=((Screen.ActiveForm = Self) or not Visible);
+  acConnect.Enabled:=e;
+  acOptions.Enabled:=e;
+  acConnOptions.Enabled:=e;
+  e:=RpcObj.Connected and e;
+  acDisconnect.Enabled:=e;
+  acSelectAll.Enabled:=e;
+  acAddTorrent.Enabled:=e;
+  acAddLink.Enabled:=e;
+  acDaemonOptions.Enabled:=e;
+  acStartAllTorrents.Enabled:=e and (gTorrents.Items.Count > 0);
+  acStopAllTorrents.Enabled:=acStartAllTorrents.Enabled;
+  acStartTorrent.Enabled:=e and (gTorrents.Items.Count > 0);
+  acStopTorrent.Enabled:=e and (gTorrents.Items.Count > 0);
+  acVerifyTorrent.Enabled:=e and (gTorrents.Items.Count > 0);
+  acRemoveTorrent.Enabled:=e and (gTorrents.Items.Count > 0) and not edSearch.Focused;
+  acRemoveTorrentAndData.Enabled:=acRemoveTorrent.Enabled and (RpcObj.RPCVersion >= 4);
+  acReannounceTorrent.Enabled:=acVerifyTorrent.Enabled and (RpcObj.RPCVersion >= 5);
+  acMoveTorrent.Enabled:=acVerifyTorrent.Enabled and (RpcObj.RPCVersion >= 6);
+  acTorrentProps.Enabled:=acVerifyTorrent.Enabled;
+  acOpenContainingFolder.Enabled:=acTorrentProps.Enabled and (RpcObj.RPCVersion >= 4);
+  pmiPriority.Enabled:=e and (gTorrents.Items.Count > 0);
+  miPriority.Enabled:=pmiPriority.Enabled;
+  acSetHighPriority.Enabled:=e and (gTorrents.Items.Count > 0) and
+                      ( ( not lvFiles.Focused and (RpcObj.RPCVersion >=5) ) or
+                        ((lvFiles.Items.Count > 0) and (PageInfo.ActivePage = tabFiles)) );
+  acSetNormalPriority.Enabled:=acSetHighPriority.Enabled;
+  acSetLowPriority.Enabled:=acSetHighPriority.Enabled;
+  acOpenFile.Enabled:=acSetHighPriority.Enabled and (lvFiles.SelCount < 2) and (RpcObj.RPCVersion >= 4);
+  acSetNotDownload.Enabled:=acSetHighPriority.Enabled;
+  acSetupColumns.Enabled:=e;
+  acUpdateBlocklist.Enabled:=(acUpdateBlocklist.Tag <> 0) and e and (RpcObj.RPCVersion >= 5);
+  acAddTracker.Enabled:=acTorrentProps.Enabled and (RpcObj.RPCVersion >= 10);
+  acEditTracker.Enabled:=acAddTracker.Enabled and (lvTrackers.Items.Count > 0);
+  acDelTracker.Enabled:=acEditTracker.Enabled;
+  acAltSpeed.Enabled:=e and (RpcObj.RPCVersion >= 5);
+  pmiDownSpeedLimit.Enabled:=RpcObj.Connected;
+  pmiUpSpeedLimit.Enabled:=RpcObj.Connected;
+end;
+
+procedure TMainForm.ShowConnOptions(NewConnection: boolean);
+var
+  frm: TConnOptionsForm;
+begin
+  AppBusy;
+  frm:=TConnOptionsForm.Create(Self);
+  with frm do
+  try
+    ActiveConnection:=FCurConn;
+    if NewConnection then begin
+      btNewClick(nil);
+      btNew.Hide;
+      btRename.Hide;
+      btDel.Hide;
+      panTop.ClientHeight:=btNew.Top;
+      AutoSizeForm(frm);
+    end;
+    AppNormal;
+    ShowModal;
+    UpdateConnections;
+    if (FCurConn <> ActiveConnection) or ActiveSettingChanged then begin
+      DoDisconnect;
+      FReconnectTimeOut:=-1;
+      FCurConn:=ActiveConnection;
+      if FCurConn <> '' then
+        DoConnect;
+    end;
+  finally
+    Free;
+  end;
+end;
+
+procedure TMainForm.SaveColumns(LV: TVarGrid; const AName: string; FullInfo: boolean);
+var
+  i: integer;
+begin
+  for i:=0 to LV.Columns.Count - 1 do
+    with LV.Columns[i] do begin
+      FIni.WriteInteger(AName, Format('Id%d', [i]), ID - 1);
+      FIni.WriteInteger(AName, Format('Width%d', [i]), Width);
+      if FullInfo then begin
+        FIni.WriteInteger(AName, Format('Index%d', [i]), Index);
+        FIni.WriteBool(AName, Format('Visible%d', [i]), Visible);
+      end;
+    end;
+  if LV.SortColumn >= 0 then begin
+    FIni.WriteInteger(AName, 'SortColumn', LV.SortColumn);
+    FIni.WriteInteger(AName, 'SortOrder', integer(LV.SortOrder));
+  end;
+end;
+
+procedure TMainForm.LoadColumns(LV: TVarGrid; const AName: string; FullInfo: boolean);
+var
+  i, j, ColId: integer;
+begin
+  LV.Columns.BeginUpdate;
+  try
+    for i:=0 to LV.Columns.Count - 1 do begin
+      ColId:=FIni.ReadInteger(AName, Format('Id%d', [i]), -1);
+      if ColId = -1 then continue;
+      for j:=0 to LV.Columns.Count - 1 do
+        with LV.Columns[j] do
+          if ID - 1 = ColId then begin
+            if FullInfo then begin
+              Index:=FIni.ReadInteger(AName, Format('Index%d', [i]), Index);
+              Visible:=FIni.ReadBool(AName, Format('Visible%d', [i]), Visible);
+            end;
+            Width:=FIni.ReadInteger(AName, Format('Width%d', [i]), Width);
+            break;
+          end;
+    end;
+  finally
+    LV.Columns.EndUpdate;
+  end;
+  LV.SortColumn:=FIni.ReadInteger(AName, 'SortColumn', LV.SortColumn);
+  LV.SortOrder:=TSortOrder(FIni.ReadInteger(AName, 'SortOrder', integer(LV.SortOrder)));
+end;
+
+function TMainForm.GetTorrentError(t: TJSONObject): string;
+var
+  i: integer;
+  stats: TJSONArray;
+  err, gerr: widestring;
+  NoTrackerError: boolean;
+begin
+  Result:='';
+  gerr:=t.Strings['errorString'];
+  if RpcObj.RPCVersion >= 7 then begin
+    NoTrackerError:=False;
+    stats:=t.Arrays['trackerStats'];
+    for i:=0 to stats.Count - 1 do
+      with stats.Objects[i] do begin
+        err:='';
+        if Booleans['hasAnnounced'] and not Booleans['lastAnnounceSucceeded'] then
+          err:=Strings['lastAnnounceResult'];
+        if err = 'Success' then
+          err:='';
+        if err = '' then begin
+          // If at least one tracker is working, then report no error
+          NoTrackerError:=True;
+          Result:='';
+        end
+        else begin
+          if not NoTrackerError and (Result = '') then
+            Result:=sTrackerError + ': ' + UTF8Encode(err);
+          // Workaround for transmission bug
+          // If the global error string is equal to some tracker error string,
+          // then igonore the global error string
+          if gerr = err then
+            gerr:='';
+        end;
+      end;
+  end
+  else begin
+    Result:=UTF8Encode(t.Strings['announceResponse']);
+    if Result = 'Success' then
+      Result:=''
+    else
+      if Result <> '' then begin
+        i:=Pos('(', Result);
+        if i <> 0 then
+          if Copy(Result, i, 5) = '(200)' then
+            Result:=''
+          else
+            Result:=sTrackerError + ': ' + Copy(Result, 1, i - 1);
+      end;
+  end;
+
+  if Result = '' then
+    Result:=UTF8Encode(gerr);
+end;
+
+function TMainForm.SecondsToString(j: integer): string;
+begin
+  if j < 60 then
+    Result:=Format(sSec, [j])
+  else
+  if j < 60*60 then
+    Result:=Format(sMinSec, [j div 60, j mod 60])
+  else begin
+    j:=(j + 30) div 60;
+    if j < 60*24 then
+      Result:=Format(sHourMin, [j div 60, j mod 60])
+    else begin
+      j:=(j + 30) div 60;
+      Result:=Format(sDayHour, [j div 24, j mod 24])
+    end;
+  end;
+
+end;
+
+procedure TMainForm.FillTorrentsList(list: TJSONArray);
+var
+  i, j, row, crow, id, StateImg: integer;
+  t: TJSONObject;
+  f: double;
+  ExistingRow: boolean;
+  s, ss: string;
+
+  function GetTorrentValue(AIndex: integer; const AName: string; AType: integer): boolean;
+  var
+    res: variant;
+  begin
+    Result:=t.IndexOfName(AName) >= 0;
+    if Result then
+      case AType of
+        vtInteger:
+          res:=t.Integers[AName];
+        vtExtended:
+          res:=t.Floats[AName];
+        else
+          res:=t.Strings[AName];
+      end
+    else
+      res:=NULL;
+
+    FTorrents[AIndex, row]:=res;
+  end;
+
+var
+  FilterIdx, OldId: integer;
+  TrackerFilter, PathFilter: string;
+  UpSpeed, DownSpeed: double;
+  DownCnt, SeedCnt, CompletedCnt, ActiveCnt, StoppedCnt: integer;
+  IsActive: boolean;
+  Paths: TStringList;
+  v: variant;
+begin
+  if gTorrents.Tag <> 0 then exit;
+  if list = nil then begin
+    ClearDetailsInfo;
+    exit;
+  end;
+{
+  for i:=1 to 1000 do begin
+    t:=TJSONObject.Create;
+    t.Integers['id']:=i + 10000;
+    t.Strings['name']:=Format('ZName %d', [i]);
+    t.Integers['status']:=TR_STATUS_STOPPED;
+    t.Arrays['trackerStats']:=TJSONArray.Create;
+    t.Floats['sizeWhenDone']:=0;
+    t.Floats['leftUntilDone']:=0;
+    t.Integers['rateDownload']:=0;
+    t.Integers['rateUpload']:=0;
+    list.Add(t);
+  end;
+}
+  Paths:=TStringList.Create;
+  try
+  Paths.Sorted:=True;
+  OldId:=RpcObj.CurTorrentId;
+  IsActive:=gTorrents.Enabled;
+  gTorrents.Enabled:=True;
+  lvFilter.Enabled:=True;
+  gTorrents.Color:=clWindow;
+  lvFilter.Color:=clWindow;
+  edSearch.Enabled:=True;
+  edSearch.Color:=clWindow;
+  if not IsActive then
+    ActiveControl:=gTorrents;
+
+  for i:=0 to FTrackers.Count - 1 do
+    FTrackers.Objects[i]:=nil;
+
+  UpSpeed:=0;
+  DownSpeed:=0;
+  DownCnt:=0;
+  SeedCnt:=0;
+  CompletedCnt:=0;
+  ActiveCnt:=0;
+  StoppedCnt:=0;
+
+  FilterIdx:=lvFilter.Row;
+  if VarIsNull(lvFilter.Items[0, FilterIdx]) then
+    Dec(FilterIdx);
+  if FilterIdx >= StatusFiltersCount then
+    if FilterIdx < lvFilter.Items.Count - FTrackers.Count then begin
+      PathFilter:=UTF8Encode(widestring(lvFilter.Items[-1, FilterIdx]));
+      FilterIdx:=fltAll;
+    end
+    else begin
+      TrackerFilter:=UTF8Encode(widestring(lvFilter.Items[0, FilterIdx]));
+      FilterIdx:=fltAll;
+      i:=RPos('(', TrackerFilter);
+      if i > 0 then
+        TrackerFilter:=Trim(Copy(TrackerFilter, 1, i - 1));
+    end;
+
+  for i:=0 to FTorrents.Count - 1 do
+    FTorrents[idxTag, i]:=0;
+
+  for i:=0 to list.Count - 1 do begin
+    StateImg:=-1;
+
+    t:=list[i] as TJSONObject;
+    id:=t.Integers['id'];
+    ExistingRow:=FTorrents.Find(idxTorrentId, id, row);
+    if not ExistingRow then
+      FTorrents.InsertRow(row);
+
+    FTorrents[idxTorrentId, row]:=t.Integers['id'];
+
+    if t.IndexOfName('name') >= 0 then
+      FTorrents[idxName, row]:=t.Strings['name'];
+
+    j:=t.Integers['status'];
+    if ExistingRow and (j = TR_STATUS_SEED) and (FTorrents[idxStatus, row] = TR_STATUS_DOWNLOAD) then
+      DownloadFinished(UTF8Encode(widestring(FTorrents[idxName, row])));
+    FTorrents[idxStatus, row]:=j;
+    case j of
+      TR_STATUS_CHECK_WAIT: StateImg:=imgDownQueue;
+      TR_STATUS_CHECK:      StateImg:=imgDownQueue;
+      TR_STATUS_DOWNLOAD:   StateImg:=imgDown;
+      TR_STATUS_SEED:       StateImg:=imgSeed;
+      TR_STATUS_STOPPED:    StateImg:=imgDone;
+    end;
+
+    if RpcObj.RPCVersion >= 7 then begin
+      if t.Arrays['trackerStats'].Count > 0 then
+        with t.Arrays['trackerStats'].Objects[0] do begin
+          s:='';
+          if integer(Integers['announceState']) in [2, 3] then
+            s:=sTrackerUpdating
+          else
+            if Booleans['hasAnnounced'] then
+              if Booleans['lastAnnounceSucceeded'] then
+                s:=sTrackerWorking
+              else
+                s:=TranslateString(UTF8Encode(Strings['lastAnnounceResult']));
+
+          if s = 'Success' then
+            s:=sTrackerWorking;
+          FTorrents[idxTrackerStatus, row]:=UTF8Decode(s);
+        end
+      else
+        FTorrents[idxTrackerStatus, row]:='';
+    end
+    else
+      FTorrents[idxTrackerStatus, row]:=t.Strings['announceResponse'];
+    if (FTorrents[idxStatus, row] <> TR_STATUS_STOPPED) and (GetTorrentError(t) <> '') then
+      if t.Strings['errorString'] <> '' then
+        StateImg:=imgError
+      else
+        if StateImg in [imgDown,imgSeed] then
+          Inc(StateImg, 2);
+
+    if FTorrents[idxStatus, row] = TR_STATUS_CHECK then
+      f:=t.Floats['recheckProgress']*100.0
+    else begin
+      f:=t.Floats['sizeWhenDone'];
+      if f <> 0 then
+        f:=(f - t.Floats['leftUntilDone'])*100.0/f;
+      if StateImg = imgDone then
+        if (t.Floats['leftUntilDone'] <> 0) or (t.Floats['sizeWhenDone'] = 0) then
+          StateImg:=imgStopped
+        else
+          FTorrents[idxStatus, row]:=TR_STATUS_FINISHED;
+    end;
+    if f < 0 then
+      f:=0;
+    FTorrents[idxDone, row]:=Int(f*10.0)/10.0;
+    FTorrents[idxStateImg, row]:=StateImg;
+    GetTorrentValue(idxDownSpeed, 'rateDownload', vtInteger);
+    GetTorrentValue(idxUpSpeed, 'rateUpload', vtInteger);
+
+    GetTorrentValue(idxSize, 'totalSize', vtExtended);
+    GetTorrentValue(idxSizeToDowload, 'sizeWhenDone', vtExtended);
+    GetTorrentValue(idxSeeds, 'peersSendingToUs', vtInteger);
+    GetTorrentValue(idxPeers, 'peersGettingFromUs', vtInteger);
+    GetTorrentValue(idxETA, 'eta', vtInteger);
+    v:=FTorrents[idxETA, row];
+    if not VarIsNull(v) and (v < 0) then
+      FTorrents[idxETA, row]:=MaxInt;
+    GetTorrentValue(idxDownloaded, 'downloadedEver', vtExtended);
+    GetTorrentValue(idxUploaded, 'uploadedEver', vtExtended);
+    GetTorrentValue(idxAddedOn, 'addedDate', vtExtended);
+    GetTorrentValue(idxCompletedOn, 'doneDate', vtExtended);
+    GetTorrentValue(idxLastActive, 'activityDate', vtExtended);
+
+    if RpcObj.RPCVersion >= 7 then begin
+      if t.Arrays['trackerStats'].Count > 0 then
+        with t.Arrays['trackerStats'].Objects[0] do begin
+          FTorrents[idxSeedsTotal, row]:=Integers['seederCount'];
+          FTorrents[idxLeechersTotal, row]:=Integers['leecherCount'];
+        end
+      else begin
+        FTorrents[idxSeedsTotal, row]:=-1;
+        FTorrents[idxLeechersTotal, row]:=-1;
+      end;
+    end
+    else begin
+      GetTorrentValue(idxSeedsTotal, 'seeders', vtInteger);
+      GetTorrentValue(idxLeechersTotal, 'leechers', vtInteger);
+    end;
+    if t.IndexOfName('uploadRatio') >= 0 then begin
+      f:=t.Floats['uploadRatio'];
+      if f = -2 then
+        f:=MaxInt;
+      FTorrents[idxRatio, row]:=f;
+    end
+    else
+      FTorrents[idxRatio, row]:=NULL;
+
+    if RpcObj.RPCVersion >= 7 then begin
+      if t.Arrays['trackerStats'].Count > 0 then
+        s:=t.Arrays['trackerStats'].Objects[0].Strings['announce']
+      else
+        s:=sNoTracker;
+    end
+    else
+      if t.IndexOfName('trackers') >= 0 then
+        s:=UTF8Encode(t.Arrays['trackers'].Objects[0].Strings['announce'])
+      else begin
+        s:='';
+        if VarIsEmpty(FTorrents[idxTracker, row]) then
+          RpcObj.RequestFullInfo:=True;
+      end;
+
+    if s <> '' then begin
+      j:=Pos('://', s);
+      if j > 0 then
+        s:=Copy(s, j + 3, MaxInt);
+      j:=Pos('/', s);
+      if j > 0 then
+        s:=Copy(s, 1, j - 1);
+      j:=Pos('.', s);
+      if j > 0 then begin
+        ss:=Copy(s, 1, j - 1);
+        if AnsiCompareText(ss, 'bt') = 0 then
+          System.Delete(s, 1, 3)
+        else
+          if (Length(ss) = 3) and (AnsiCompareText(Copy(ss, 1, 2), 'bt') = 0) and (ss[3] in ['1'..'9']) then
+            System.Delete(s, 1, 4);
+      end;
+      j:=Pos(':', s);
+      if j > 0 then
+        System.Delete(s, j, MaxInt);
+      FTorrents[idxTracker, row]:=UTF8Decode(s);
+    end;
+
+    if t.IndexOfName('downloadDir') >= 0 then
+      FTorrents[idxPath, row]:=UTF8Decode(ExcludeTrailingPathDelimiter(UTF8Encode(t.Strings['downloadDir'])))
+    else
+      if VarIsEmpty(FTorrents[idxPath, row]) then
+        RpcObj.RequestFullInfo:=True;
+
+    if not VarIsEmpty(FTorrents[idxPath, row]) then begin
+      s:=UTF8Encode(widestring(FTorrents[idxPath, row]));
+      j:=Paths.IndexOf(s);
+      if j < 0 then
+        Paths.AddObject(s, TObject(1))
+      else
+        Paths.Objects[j]:=TObject(PtrInt(Paths.Objects[j]) + 1);
+    end;
+
+    if t.IndexOfName('bandwidthPriority') >= 0 then
+      FTorrents[idxPriority, row]:=t.Integers['bandwidthPriority'];
+
+    DownSpeed:=DownSpeed + FTorrents[idxDownSpeed, row];
+    UpSpeed:=UpSpeed + FTorrents[idxUpSpeed, row];
+
+    FTorrents[idxTag, row]:=1;
+  end;
+
+  i:=0;
+  while i < FTorrents.Count do
+    if FTorrents[idxTag, i] = 0 then
+      FTorrents.Delete(i)
+    else
+      Inc(i);
+
+  gTorrents.Items.BeginUpdate;
+  try
+    for i:=0 to gTorrents.Items.Count - 1 do
+      gTorrents.Items[idxTag, i]:=0;
+
+    gTorrents.Items.Sort(idxTorrentId);
+
+    for i:=0 to FTorrents.Count - 1 do begin
+      IsActive:=(FTorrents[idxDownSpeed, i] <> 0) or (FTorrents[idxUpSpeed, i] <> 0);
+      if IsActive then
+        Inc(ActiveCnt);
+
+      case integer(FTorrents[idxStatus, i]) of
+        TR_STATUS_DOWNLOAD:
+          Inc(DownCnt);
+        TR_STATUS_SEED:
+          begin
+            Inc(SeedCnt);
+            Inc(CompletedCnt);
+          end;
+        TR_STATUS_FINISHED:
+          Inc(CompletedCnt);
+      end;
+
+      if integer(FTorrents[idxStateImg, i]) in [imgStopped, imgDone] then
+        Inc(StoppedCnt);
+
+      if not VarIsEmpty(FTorrents[idxTracker, i]) then begin
+        s:=UTF8Encode(widestring(FTorrents[idxTracker, i]));
+        j:=FTrackers.IndexOf(s);
+        if j < 0 then
+          j:=FTrackers.Add(s);
+        FTrackers.Objects[j]:=TObject(ptruint(FTrackers.Objects[j]) + 1);
+        if (TrackerFilter <> '') and (TrackerFilter <> s) then
+          continue;
+      end;
+
+      if (PathFilter <> '') and not VarIsEmpty(FTorrents[idxPath, i]) and (UTF8Decode(PathFilter) <> FTorrents[idxPath, i]) then
+        continue;
+
+      case FilterIdx of
+        fltActive:
+          if not IsActive then
+            continue;
+        fltInactive:
+          if IsActive then
+            continue;
+        fltDown:
+          if FTorrents[idxStatus, i] <> TR_STATUS_DOWNLOAD then
+            continue;
+        fltDone:
+          if (FTorrents[idxStateImg, i] <> imgDone) and (FTorrents[idxStatus, i] <> TR_STATUS_SEED) then
+            continue;
+        fltStopped:
+          if not (integer(FTorrents[idxStateImg, i]) in [imgStopped, imgDone]) then
+            continue;
+      end;
+
+      if edSearch.Text <> '' then
+        if UTF8Pos(UTF8UpperCase(edSearch.Text), UTF8UpperCase(UTF8Encode(widestring(FTorrents[idxName, i])))) = 0 then
+          continue;
+
+      if not gTorrents.Items.Find(idxTorrentId, FTorrents[idxTorrentId, i], row) then
+        gTorrents.Items.InsertRow(row);
+      for j:=-TorrentsExtraColumns to FTorrents.ColCnt - 1 do
+        gTorrents.Items[j, row]:=FTorrents[j, i];
+      gTorrents.Items[idxTag, row]:=1;
+    end;
+
+    i:=0;
+    while i < gTorrents.Items.Count do
+      if gTorrents.Items[idxTag, i] = 0 then
+        gTorrents.Items.Delete(i)
+      else
+        Inc(i);
+
+    gTorrents.Sort;
+    if gTorrents.Items.Count > 0 then begin
+      if OldId <> 0 then begin
+        i:=gTorrents.Items.IndexOf(idxTorrentId, OldId);
+        if i >= 0 then
+          gTorrents.Row:=i
+        else
+          if FFilterChanged then
+            OldId:=0;
+      end;
+      if OldId = 0 then
+        gTorrents.Row:=0;
+    end;
+    FFilterChanged:=False;
+  finally
+    gTorrents.Items.EndUpdate;
+  end;
+  gTorrentsClick(nil);
+
+  crow:=lvFilter.Row;
+  lvFilter.Items.BeginUpdate;
+  try
+    lvFilter.Items[0, 0]:=UTF8Decode(Format('%s (%d)', [SAll, list.Count]));
+    lvFilter.Items[0, 1]:=UTF8Decode(Format('%s (%d)', [SDownloading, DownCnt]));
+    lvFilter.Items[0, 2]:=UTF8Decode(Format('%s (%d)', [SCompleted, CompletedCnt]));
+    lvFilter.Items[0, 3]:=UTF8Decode(Format('%s (%d)', [SActive, ActiveCnt]));
+    lvFilter.Items[0, 4]:=UTF8Decode(Format('%s (%d)', [SInactive, FTorrents.Count - ActiveCnt]));
+    lvFilter.Items[0, 5]:=UTF8Decode(Format('%s (%d)', [sStopped, StoppedCnt]));
+
+    j:=StatusFiltersCount;
+    lvFilter.Items[0, j]:=NULL;
+    Inc(j);
+
+    for i:=0 to Paths.Count - 1 do begin
+      s:=ExtractFileName(Paths[i]);
+      for row:=StatusFiltersCount + 1 to j - 1 do
+        if ExtractFileName(UTF8Encode(widestring(lvFilter.Items[-1, row]))) = s then begin
+          s:=Paths[i];
+          lvFilter.Items[0, row]:=UTF8Decode(Format('%s (%d)', [UTF8Encode(widestring(lvFilter.Items[-1, row])), ptruint(Paths.Objects[row - StatusFiltersCount - 1])]));
+        end;
+      lvFilter.Items[0, j]:=UTF8Decode(Format('%s (%d)', [s, ptruint(Paths.Objects[i])]));
+      lvFilter.Items[-1, j]:=UTF8Decode(Paths[i]);
+      if Paths[i] = PathFilter then
+        crow:=j;
+      Inc(j);
+    end;
+
+    row:=j;
+    if row > StatusFiltersCount + 1 then begin
+      lvFilter.Items[0, row]:=NULL;
+      Inc(row);
+    end;
+
+    i:=0;
+    while i < FTrackers.Count do begin
+      j:=ptruint(FTrackers.Objects[i]);
+      if j > 0 then begin
+        lvFilter.Items[0, row]:=UTF8Decode(Format('%s (%d)', [FTrackers[i], j]));
+        if FTrackers[i] = TrackerFilter then
+          crow:=row;
+        Inc(i);
+        Inc(row);
+      end
+      else
+        FTrackers.Delete(i);
+    end;
+    lvFilter.Items.RowCnt:=row;
+  finally
+    lvFilter.Items.EndUpdate;
+  end;
+  lvFilter.Row:=crow;
+
+  CheckStatus;
+
+  StatusBar.Panels[1].Text:=Format(sDownSpeed, [GetHumanSize(DownSpeed, 1)]);
+  StatusBar.Panels[2].Text:=Format(sUpSpeed, [GetHumanSize(UpSpeed, 1)]);
+
+{$ifndef LCLcarbon}
+  // There is memory leak in TTrayIcon implementation for Mac.
+  // Disable tray icon update for Mac.
+  TrayIcon.Hint:=Format(sDownloadingSeeding,
+        [RpcObj.InfoStatus, LineEnding, DownCnt, SeedCnt, LineEnding, StatusBar.Panels[1].Text, StatusBar.Panels[2].Text]);
+{$endif LCLcarbon}
+  finally
+    Paths.Free;
+  end;
+end;
+
+procedure TMainForm.FillPeersList(list: TJSONArray);
+var
+  i, j, row: integer;
+  port: integer;
+  d: TJSONData;
+  p: TJSONObject;
+  ip, s: string;
+  hostinfo: PHostEntry;
+  opt: TResolverOptions;
+  WasEmpty: boolean;
+begin
+  if list = nil then begin
+    ClearDetailsInfo;
+    exit;
+  end;
+  WasEmpty:=lvPeers.Items.Count = 0;
+  lvPeers.Items.BeginUpdate;
+  try
+    lvPeers.Enabled:=True;
+    lvPeers.Color:=clWindow;
+    if FResolver = nil then begin
+      opt:=[];
+      if acResolveHost.Checked then
+        Include(opt, roResolveIP);
+      if acResolveCountry.Checked then
+        Include(opt, roResolveCountry);
+      if opt <> [] then
+        FResolver:=TIpResolver.Create(GetGeoIpDatabase, opt);
+    end;
+
+    for i:=0 to lvPeers.Items.Count - 1 do
+      lvPeers.Items[idxPeerTag, i]:=0;
+
+    lvPeers.Items.Sort(idxPeerIP);
+    for i:=0 to list.Count - 1 do begin
+      d:=list[i];
+      if not (d is TJSONObject) then continue;
+      p:=d as TJSONObject;
+      ip:=p.Strings['address'];
+      if p.IndexOfName('port') >= 0 then
+        port:=p.Integers['port']
+      else
+        port:=0;
+
+      s:=ip + ':' + IntToStr(port);
+      if not lvPeers.Items.Find(idxPeerIP, s, row) then
+        lvPeers.Items.InsertRow(row);
+      lvPeers.Items[idxPeerIP, row]:=s;
+      lvPeers.Items[idxPeerPort, row]:=port;
+
+      if FResolver <> nil then
+        hostinfo:=FResolver.Resolve(ip)
+      else
+        hostinfo:=nil;
+      if hostinfo <> nil then
+        lvPeers.Items[idxPeerHost, row]:=hostinfo^.HostName
+      else
+        lvPeers.Items[idxPeerHost, row]:=ip;
+
+      if hostinfo <> nil then
+        lvPeers.Items[idxPeerCountry, row]:=hostinfo^.CountryName
+      else
+        lvPeers.Items[idxPeerCountry, row]:='';
+
+      if acShowCountryFlag.Checked and (hostinfo <> nil) then begin
+        if hostinfo^.ImageIndex = 0 then
+          hostinfo^.ImageIndex:=GetFlagImage(hostinfo^.CountryCode);
+        j:=hostinfo^.ImageIndex
+      end
+      else
+        j:=0;
+      lvPeers.Items[idxPeerCountryImage, row]:=j;
+      lvPeers.Items[idxPeerClient, row]:=p.Strings['clientName'];
+      lvPeers.Items[idxPeerFlags, row]:=p.Strings['flagStr'];
+      lvPeers.Items[idxPeerDone, row]:=p.Floats['progress'];
+
+      if p.IndexOfName('rateToClient') >= 0 then
+        lvPeers.Items[idxPeerDownSpeed, row]:=p.Integers['rateToClient'];
+      if p.IndexOfName('rateToPeer') >= 0 then
+        lvPeers.Items[idxPeerUpSpeed, row]:=p.Integers['rateToPeer'];
+
+      lvPeers.Items[idxPeerTag, row]:=1;
+    end;
+
+    i:=0;
+    while i < lvPeers.Items.Count do
+      if lvPeers.Items[idxPeerTag, i] = 0 then
+        lvPeers.Items.Delete(i)
+      else
+        Inc(i);
+    lvPeers.Sort;
+    if WasEmpty and (lvPeers.Items.Count > 0) then
+      lvPeers.Row:=0;
+  finally
+    lvPeers.Items.EndUpdate;
+  end;
+end;
+
+function TMainForm.GetFilesCommonPath(files: TJSONArray): string;
+var
+  i: integer;
+  d: TJSONData;
+  f: TJSONObject;
+  s: string;
+begin
+  Result:='';
+  for i:=0 to files.Count - 1 do begin
+    d:=files[i];
+    if not (d is TJSONObject) then continue;
+    f:=d as TJSONObject;
+    s:=UTF8Encode(f.Strings['name']);
+    if i = 0 then
+      Result:=ExtractFilePath(s)
+    else begin
+      while True do begin
+        if Result = '' then
+          exit;
+        if Copy(s, 1, Length(Result)) <> Result then begin
+          SetLength(Result, Length(Result) - 1);
+          Result:=ExtractFilePath(Result);
+        end
+        else
+          break;
+      end;
+    end;
+  end;
+end;
+
+procedure TMainForm.InternalRemoveTorrent(const Msg, MsgMulti: string; RemoveLocalData: boolean);
+var
+  args: TJSONObject;
+  ids: variant;
+  s: string;
+begin
+  if gTorrents.Items.Count = 0 then exit;
+  gTorrents.Tag:=1;
+  try
+    ids:=GetSelectedTorrents;
+    if gTorrents.SelCount < 2 then
+      s:=Format(Msg, [UTF8Encode(widestring(gTorrents.Items[idxName, gTorrents.Items.IndexOf(idxTorrentId, ids[0])]))])
+    else
+      s:=Format(MsgMulti, [gTorrents.SelCount]);
+    if MessageDlg('', s, mtConfirmation, mbYesNo, 0, mbNo) <> mrYes then exit;
+  finally
+    gTorrents.Tag:=0;
+  end;
+  args:=TJSONObject.Create;
+  if RemoveLocalData then
+    args.Add('delete-local-data', TJSONIntegerNumber.Create(1));
+  TorrentAction(ids, 'remove', args);
+  if RemoveLocalData then
+    RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtSession];
+end;
+
+function TMainForm.IncludeProperTrailingPathDelimiter(const s: string): string;
+var
+  i: integer;
+  d: char;
+begin
+  Result:=s;
+  if Result = '' then exit;
+  d:='/';
+  for i:=1 to Length(Result) do
+    if Result[i] in ['/','\'] then begin
+      d:=Result[i];
+      break;
+    end;
+
+  if Result[Length(Result)] <> d then
+    Result:=Result + d;
+end;
+
+procedure TMainForm.FillFilesList(list, priorities, wanted: TJSONArray; const DownloadDir: WideString);
+var
+  i, row: integer;
+  d: TJSONData;
+  f: TJSONObject;
+  s, path, dir: string;
+  ff: double;
+  WasEmpty: boolean;
+begin
+  if (list = nil) or (priorities = nil) or (wanted = nil) then begin
+    ClearDetailsInfo;
+    exit;
+  end;
+
+  lvFiles.Enabled:=True;
+  lvFiles.Color:=clWindow;
+  dir:=UTF8Encode(DownloadDir);
+  path:=GetFilesCommonPath(list);
+  WasEmpty:=FFiles.Count = 0;
+
+  FFiles.BeginUpdate;
+  try
+    for i:=0 to FFiles.Count - 1 do
+      FFiles[idxFileTag, i]:=0;
+
+    FFiles.Sort(idxFileId);
+
+    for i:=0 to list.Count - 1 do begin
+      d:=list[i];
+      f:=d as TJSONObject;
+      if not FFiles.Find(idxFileId, i, row) then
+        FFiles.InsertRow(row);
+      FFiles[idxFileTag, row]:=1;
+      FFiles[idxFileId, row]:=i;
+
+      s:=UTF8Encode(f.Strings['name']);
+      FFiles[idxFileFullPath, row]:=UTF8Decode(IncludeProperTrailingPathDelimiter(dir) + s);
+      if (path <> '') and (Copy(s, 1, Length(path)) = path) then
+        s:=Copy(s, Length(path) + 1, MaxInt);
+
+      FFiles[idxFileName, row]:=UTF8Decode(s);
+      ff:=f.Floats['length'];
+      FFiles[idxFileSize, row]:=ff;
+      FFiles[idxFileDone, row]:=f.Floats['bytesCompleted'];
+      if ff = 0 then
+        ff:=100.0
+      else
+        ff:=double(FFiles[idxFileDone, row])*100.0/ff;
+      FFiles[idxFileProgress, row]:=Int(ff*10.0)/10.0;
+
+      if wanted.Integers[i] = 0 then
+        FFiles[idxFilePriority, row]:=TR_PRI_SKIP
+      else
+        FFiles[idxFilePriority, row]:=priorities.Integers[i];
+    end;
+
+    i:=0;
+    while i < FFiles.Count do
+      if FFiles[idxFileTag, i] = 0 then
+        FFiles.Delete(i)
+      else
+        Inc(i);
+
+    lvFiles.Sort;
+    if WasEmpty and (FFiles.Count > 0) then
+      lvFiles.Row:=0;
+  finally
+    FFiles.EndUpdate;
+  end;
+end;
+
+procedure TMainForm.FillGeneralInfo(t: TJSONObject);
+var
+  i, j, idx: integer;
+  s: string;
+  f: double;
+begin
+  if (gTorrents.Items.Count = 0) or (t = nil) then begin
+    ClearDetailsInfo;
+    exit;
+  end;
+  idx:=gTorrents.Items.IndexOf(idxTorrentId, t.Integers['id']);
+  if idx = -1 then begin
+    ClearDetailsInfo;
+    exit;
+  end;
+
+  txDownProgress.Caption:=Format('%.1f%%', [double(gTorrents.Items[idxDone, idx])]);
+  txDownProgress.AutoSize:=True;
+  if RpcObj.RPCVersion >= 5 then
+    s:=t.Strings['pieces']
+  else
+    s:='';
+  ProcessPieces(s, t.Integers['pieceCount'], gTorrents.Items[idxDone, idx]);
+
+  panTransfer.ChildSizing.Layout:=cclNone;
+  txStatus.Caption:=GetTorrentStatus(idx);
+  txError.Caption:=GetTorrentError(t);
+  txRemaining.Caption:=EtaToString(t.Integers['eta']);
+  txDownloaded.Caption:=GetHumanSize(t.Floats['downloadedEver']);
+  txUploaded.Caption:=GetHumanSize(t.Floats['uploadedEver']);
+  f:=t.Floats['pieceSize'];
+  if f > 0 then
+    i:=Round(t.Floats['corruptEver']/f)
+  else
+    i:=0;
+  txWasted.Caption:=Format(sHashfails, [GetHumanSize(t.Floats['corruptEver']), i]);
+  s:=GetHumanSize(gTorrents.Items[idxDownSpeed, idx], 1)+sPerSecond;
+  if t.IndexOfName('secondsDownloading') >= 0 then begin
+    f:=t.Integers['secondsDownloading'];
+    if f > 0 then
+      s:=Format('%s (%s: %s)', [s, SAverage, GetHumanSize(t.Floats['downloadedEver']/f, 1) + sPerSecond]);
+  end;
+  txDownSpeed.Caption:=s;
+  txUpSpeed.Caption:=GetHumanSize(gTorrents.Items[idxUpSpeed, idx], 1)+sPerSecond;
+  txRatio.Caption:=RatioToString(t.Floats['uploadRatio']);
+
+  if RpcObj.RPCVersion < 5 then
+  begin
+    // RPC versions prior to v5
+    j:=t.Integers['downloadLimitMode'];
+    if j = TR_SPEEDLIMIT_GLOBAL then
+      s:='-'
+    else begin
+      i:=t.Integers['downloadLimit'];
+      if (i < 0) or (j = TR_SPEEDLIMIT_UNLIMITED) then
+        s:=Utf8Encode(WideString(WideChar($221E)))
+      else
+        s:=GetHumanSize(i*1024)+sPerSecond;
+    end;
+    txDownLimit.Caption:=s;
+    j:=t.Integers['uploadLimitMode'];
+    if j = TR_SPEEDLIMIT_GLOBAL then
+      s:='-'
+    else begin
+      i:=t.Integers['uploadLimit'];
+      if (i < 0) or (j = TR_SPEEDLIMIT_UNLIMITED) then
+        s:=Utf8Encode(WideString(WideChar($221E)))
+      else
+        s:=GetHumanSize(i*1024)+sPerSecond;
+    end;
+    txUpLimit.Caption:=s;
+  end else begin
+    // RPC version 5
+    if t.Booleans['downloadLimited'] then
+    begin
+      i:=t.Integers['downloadLimit'];
+      if i < 0 then
+        s:=Utf8Encode(WideString(WideChar($221E)))
+      else
+        s:=GetHumanSize(i*1024)+sPerSecond;
+    end else s:='-';
+    txDownLimit.Caption:=s;
+
+    if t.Booleans['uploadLimited'] then
+    begin
+      i:=t.Integers['uploadLimit'];
+      if i < 0 then
+        s:=Utf8Encode(WideString(WideChar($221E)))
+      else
+        s:=GetHumanSize(i*1024)+sPerSecond;
+    end else s:='-';
+    txUpLimit.Caption:=s;
+  end;
+
+  if RpcObj.RPCVersion >= 7 then
+    with t.Arrays['trackerStats'] do begin
+      if Count > 0 then begin
+        if integer(Objects[0].Integers['announceState']) in [2, 3] then
+          f:=1
+        else
+          f:=Objects[0].Floats['nextAnnounceTime'];
+      end
+      else
+        f:=0;
+    end
+  else
+    f:=t.Floats['nextAnnounceTime'];
+  if f = 0 then
+    s:='-'
+  else
+  if f = 1 then
+    s:=sUpdating
+  else
+    s:=DateTimeToStr(UnixToDateTime(Trunc(f)) + GetTimeZoneDelta);
+  txTrackerUpdate.Caption:=s;
+  txTracker.Caption:=UTF8Encode(widestring(gTorrents.Items[idxTracker, idx]));
+  if RpcObj.RPCVersion >= 7 then
+    if t.Arrays['trackerStats'].Count > 0 then
+      i:=t.Arrays['trackerStats'].Objects[0].Integers['seederCount']
+    else
+      i:=-1
+  else
+    i:=t.Integers['seeders'];
+  s:=GetSeedsText(t.Integers['peersSendingToUs'], i);
+  txSeeds.Caption:=StringReplace(s, '/', ' ' + sOf + ' ', []) + ' '+ sConnected;
+  if RpcObj.RPCVersion >= 7 then
+    if t.Arrays['trackerStats'].Count > 0 then
+      i:=t.Arrays['trackerStats'].Objects[0].Integers['leecherCount']
+    else
+      i:=-1
+  else
+    i:=t.Integers['leechers'];
+  s:=GetPeersText(t.Integers['peersGettingFromUs'], -1, i);
+  s:=StringReplace(s, ' ', ' '+ sConnected +' ', []);
+  s:=StringReplace(s, '/', ' ' + sOf + ' ', []);
+  txPeers.Caption:=StringReplace(s, ')', ' '+ sInSwarm+ ')', []);
+  txMaxPeers.Caption:=t.Strings['maxConnectedPeers'];
+  txLastActive.Caption:=TorrentDateTimeToString(Trunc(t.Floats['activityDate']));
+  panTransfer.ChildSizing.Layout:=cclLeftToRightThenTopToBottom;
+
+  panGeneralInfo.ChildSizing.Layout:=cclNone;
+
+  s:=UTF8Encode(widestring(gTorrents.Items[idxName, idx]));
+  if RpcObj.RPCVersion >= 4 then
+    s:=IncludeProperTrailingPathDelimiter(UTF8Encode(t.Strings['downloadDir'])) + s;
+  txTorrentName.Caption:=s;
+  txCreated.Caption:=Format('%s by %s', [TorrentDateTimeToString(Trunc(t.Floats['dateCreated'])), UTF8Encode(t.Strings['creator'])]);
+  txTotalSize.Caption:=Format(sDone, [GetHumanSize(t.Floats['totalSize']), GetHumanSize(t.Floats['sizeWhenDone'] - t.Floats['leftUntilDone'])]);
+  if t.Floats['totalSize'] = t.Floats['haveValid'] then
+    i:=t.Integers['pieceCount']
+  else
+    i:=Trunc(t.Floats['haveValid']/t.Floats['pieceSize']);
+  txPieces.Caption:=Format(sHave, [t.Integers['pieceCount'], GetHumanSize(t.Floats['pieceSize']), i]);
+
+  txHash.Caption:=t.Strings['hashString'];
+  txComment.Caption:=UTF8Encode(t.Strings['comment']);
+  if (AnsiCompareText(Copy(txComment.Caption, 1, 7), 'http://') = 0)
+     or (AnsiCompareText(Copy(txComment.Caption, 1, 8), 'https://') = 0)
+  then begin
+    if not Assigned(txComment.OnClick) then begin
+      txComment.OnClick:=@UrlLabelClick;
+      txComment.Cursor:=crHandPoint;
+      txComment.Font.Color:=clBlue;
+      txComment.Font.Style:=[fsUnderline];
+    end;
+  end
+  else begin
+    if Assigned(txComment.OnClick) then begin
+      txComment.OnClick:=nil;
+      txComment.Cursor:=crDefault;
+      txComment.ParentFont:=True;
+    end;
+  end;
+  txAddedOn.Caption:=TorrentDateTimeToString(Trunc(t.Floats['addedDate']));
+  txCompletedOn.Caption:=TorrentDateTimeToString(Trunc(t.Floats['doneDate']));
+  panGeneralInfo.ChildSizing.Layout:=cclLeftToRightThenTopToBottom;
+end;
+
+procedure TMainForm.FillTrackersList(TrackersData: TJSONObject);
+var
+  i, tidx, row: integer;
+  id: integer;
+  d: TJSONData;
+  t: TJSONObject;
+  f: double;
+  s: string;
+  Trackers, TrackerStats: TJSONArray;
+  WasEmpty: boolean;
+begin
+  if TrackersData = nil then begin
+    ClearDetailsInfo;
+    exit;
+  end;
+  Trackers:=TrackersData.Arrays['trackers'];
+  if RpcObj.RPCVersion >= 7 then
+    TrackerStats:=TrackersData.Arrays['trackerStats']
+  else
+    TrackerStats:=nil;
+  tidx:=gTorrents.Items.IndexOf(idxTorrentId, TrackersData.Integers['id']);
+  if tidx = -1 then begin
+    ClearDetailsInfo;
+    exit;
+  end;
+  WasEmpty:=lvTrackers.Items.Count = 0;
+  lvTrackers.Items.BeginUpdate;
+  try
+    lvTrackers.Enabled:=True;
+    lvTrackers.Color:=clWindow;
+    for i:=0 to lvTrackers.Items.Count - 1 do
+      lvTrackers.Items[idxTrackerTag, i]:=0;
+
+    lvTrackers.Items.Sort(idxTrackerID);
+    for i:=0 to Trackers.Count - 1 do begin
+      d:=Trackers[i];
+      if not (d is TJSONObject) then continue;
+      t:=d as TJSONObject;
+      if t.IndexOfName('id') >= 0 then
+        id:=t.Integers['id']
+      else
+        id:=i;
+      if not lvTrackers.Items.Find(idxTrackerID, id, row) then
+        lvTrackers.Items.InsertRow(row);
+      lvTrackers.Items[idxTrackerID, row]:=id;
+      lvTrackers.Items[idxTrackersListName, row]:=t.Strings['announce'];
+      if TrackerStats <> nil then begin
+        f:=0;
+        if i < TrackerStats.Count then
+          with TrackerStats.Objects[i] do begin
+            s:='';
+            if integer(Integers['announceState']) in [2, 3] then
+              s:=sTrackerUpdating
+            else
+              if Booleans['hasAnnounced'] then
+                if Booleans['lastAnnounceSucceeded'] then
+                  s:=sTrackerWorking
+                else
+                  s:=TranslateString(UTF8Encode(Strings['lastAnnounceResult']));
+
+            if s = 'Success' then
+              s:=sTrackerWorking;
+
+            lvTrackers.Items[idxTrackersListStatus, row]:=UTF8Decode(s);
+            lvTrackers.Items[idxTrackersListSeeds, row]:=Integers['seederCount'];
+
+            if integer(Integers['announceState']) in [2, 3] then
+              f:=1
+            else
+              f:=Floats['nextAnnounceTime'];
+          end;
+      end
+      else begin
+        if i = 0 then begin
+          lvTrackers.Items[idxTrackersListStatus, row]:=gTorrents.Items[idxTrackerStatus, tidx];
+          lvTrackers.Items[idxTrackersListSeeds, row]:=gTorrents.Items[idxSeedsTotal, tidx];
+        end;
+        f:=TrackersData.Floats['nextAnnounceTime'];
+      end;
+
+      if f > 1 then begin
+        f:=(UnixToDateTime(Trunc(f)) + GetTimeZoneDelta - Now)*SecsPerDay;
+        if f < 0 then
+          f:=0;
+      end;
+      if (TrackerStats <> nil) or (i = 0) then
+        lvTrackers.Items[idxTrackersListUpdateIn, row]:=f;
+
+      lvTrackers.Items[idxTrackerTag, row]:=1;
+    end;
+
+    i:=0;
+    while i < lvTrackers.Items.Count do
+      if lvTrackers.Items[idxTrackerTag, i] = 0 then
+        lvTrackers.Items.Delete(i)
+      else
+        Inc(i);
+
+    lvTrackers.Sort;
+    if WasEmpty and (lvTrackers.Items.Count > 0) then
+      lvTrackers.Row:=0;
+  finally
+    lvTrackers.Items.EndUpdate;
+  end;
+end;
+
+procedure TMainForm.FillSessionInfo(s: TJSONObject);
+var
+  d, u: integer;
+begin
+  acRemoveTorrentAndData.Visible:=RpcObj.RPCVersion >= 4;
+  acReannounceTorrent.Visible:=RpcObj.RPCVersion >= 5;
+  acUpdateBlocklist.Visible:=RpcObj.RPCVersion >= 5;
+  acMoveTorrent.Visible:=RpcObj.RPCVersion >= 6;
+  pmiPriority.Visible:=RpcObj.RPCVersion >= 5;
+  miPriority.Visible:=pmiPriority.Visible;
+  acOpenContainingFolder.Visible:=RpcObj.RPCVersion >= 4;
+  acOpenFile.Visible:=acOpenContainingFolder.Visible;
+  pmSepOpen1.Visible:=acOpenContainingFolder.Visible;
+  pmSepOpen2.Visible:=acOpenContainingFolder.Visible;
+  sepAltSpeed.Visible:=RpcObj.RPCVersion >= 5;
+  acAltSpeed.Visible:=RpcObj.RPCVersion >= 5;
+  acAddTracker.Visible:=RpcObj.RPCVersion >= 10;
+  acEditTracker.Visible:=acAddTracker.Visible;
+  acDelTracker.Visible:=acAddTracker.Visible;
+  sepTrackers.Visible:=acAddTracker.Visible;
+
+  if RpcObj.RPCVersion >= 5 then begin
+    acAltSpeed.Checked:=s.Integers['alt-speed-enabled'] <> 0;
+    acUpdateBlocklist.Tag:=s.Integers['blocklist-enabled'];
+    acUpdateBlocklist.Enabled:=acUpdateBlocklist.Tag <> 0;
+  end;
+  if s.IndexOfName('download-dir-free-space') >= 0 then
+    StatusBar.Panels[3].Text:=Format(SFreeSpace, [GetHumanSize(s.Floats['download-dir-free-space'])]);
+
+  if (RpcObj.RPCVersion >= 5) and acAltSpeed.Checked then begin
+    d:=s.Integers['alt-speed-down'];
+    u:=s.Integers['alt-speed-up']
+  end
+  else begin
+    if s.Integers['speed-limit-down-enabled'] <> 0 then
+      d:=s.Integers['speed-limit-down']
+    else
+      d:=-1;
+    if s.Integers['speed-limit-up-enabled'] <> 0 then
+      u:=s.Integers['speed-limit-up']
+    else
+      u:=-1;
+  end;
+  if (FCurDownSpeedLimit <> d) or (FCurUpSpeedLimit <> u) then begin
+    FCurDownSpeedLimit:=d;
+    FCurUpSpeedLimit:=u;
+    FillSpeedsMenu;
+  end;
+end;
+
+procedure TMainForm.CheckStatus(Fatal: boolean);
+var
+  s: string;
+  i: integer;
+begin
+  with MainForm do begin
+    s:=RpcObj.Status;
+    if s <> '' then begin
+      RpcObj.Status:='';
+      if Fatal then
+        DoDisconnect;
+      ForceAppNormal;
+      if Fatal and not RpcObj.Connected and RpcObj.ReconnectAllowed and (FReconnectTimeOut <> -1) then begin
+        FReconnectWaitStart:=Now;
+        if FReconnectTimeOut < 60 then
+          if FReconnectTimeOut < 10 then
+            Inc(FReconnectTimeOut, 5)
+          else
+            Inc(FReconnectTimeOut, 10);
+        txConnError.Caption:=s;
+        panReconnectFrame.Hide;
+        panReconnect.AutoSize:=True;
+        CenterReconnectWindow;
+        panReconnect.Show;
+        panReconnect.BringToFront;
+        TickTimerTimer(nil);
+        panReconnect.AutoSize:=False;
+        panReconnectFrame.Show;
+        CenterReconnectWindow;
+      end
+      else
+        MessageDlg(s, mtError, [mbOK], 0);
+    end;
+
+    if StatusBar.Panels[0].Text <> RpcObj.InfoStatus then begin
+      StatusBar.Panels[0].Text:=RpcObj.InfoStatus;
+      TrayIcon.Hint:=RpcObj.InfoStatus;
+    end;
+    if not RpcObj.Connected then
+      for i:=1 to StatusBar.Panels.Count - 1 do
+        StatusBar.Panels[i].Text:='';
+  end;
+end;
+
+function TMainForm.TorrentAction(const TorrentIds: variant; const AAction: string; args: TJSONObject): boolean;
+var
+  req: TJSONObject;
+  ids: TJSONArray;
+  i: integer;
+begin
+  Application.ProcessMessages;
+  AppBusy;
+  req:=TJSONObject.Create;
+  try
+    req.Add('method', 'torrent-' + AAction);
+    if args = nil then
+      args:=TJSONObject.Create;
+    if not VarIsNull(TorrentIds) then begin
+      ids:=TJSONArray.Create;
+      for i:=VarArrayLowBound(TorrentIds, 1) to VarArrayHighBound(TorrentIds, 1) do
+        ids.Add(integer(TorrentIds[i]));
+      args.Add('ids', ids);
+    end;
+    req.Add('arguments', args);
+    args:=RpcObj.SendRequest(req, False, 30000);
+    Result:=args <> nil;
+    args.Free;
+  finally
+    req.Free;
+  end;
+  if not Result then
+    CheckStatus(False)
+  else
+    DoRefresh(True);
+  AppNormal;
+end;
+
+function TMainForm.SetFilePriority(TorrentId: integer; const Files: array of integer; const APriority: string): boolean;
+
+  function CreateFilesArray: TJSONArray;
+  var
+    i: integer;
+  begin
+    Result:=TJSONArray.Create;
+    for i:=Low(Files) to High(Files) do
+      Result.Add(Files[i]);
+  end;
+
+var
+  req, args: TJSONObject;
+begin
+  AppBusy;
+  req:=TJSONObject.Create;
+  try
+    req.Add('method', 'torrent-set');
+    args:=TJSONObject.Create;
+    if TorrentId <> 0 then
+      args.Add('ids', TJSONArray.Create([TorrentId]));
+    if APriority = 'skip' then
+      args.Add('files-unwanted', CreateFilesArray)
+    else begin
+      args.Add('files-wanted', CreateFilesArray);
+      args.Add('priority-' + APriority, CreateFilesArray);
+    end;
+    req.Add('arguments', args);
+    args:=RpcObj.SendRequest(req, False);
+    Result:=args<> nil;
+    args.Free;
+  finally
+    req.Free;
+  end;
+  if not Result then
+    CheckStatus(False)
+  else
+    DoRefresh;
+  AppNormal;
+end;
+
+function TMainForm.SetCurrentFilePriority(const APriority: string): boolean;
+var
+  Files: array of integer;
+  i, j: integer;
+begin
+  if (gTorrents.Items.Count = 0) or (PageInfo.ActivePage <> tabFiles) then exit;
+  if lvFiles.SelCount = 0 then
+    lvFiles.RowSelected[lvFiles.Row]:=True;
+  SetLength(Files, lvFiles.Items.Count);
+  j:=0;
+  for i:=0 to lvFiles.Items.Count - 1 do
+    if lvFiles.RowSelected[i] then begin
+      Files[j]:=FFiles[idxFileId, i];
+      Inc(j);
+    end;
+  if j = 0 then exit;
+  SetLength(Files, j);
+  Result:=SetFilePriority(RpcObj.CurTorrentId, Files, APriority);
+end;
+
+procedure TMainForm.SetTorrentPriority(APriority: integer);
+var
+  args: TJSONObject;
+begin
+  if gTorrents.Items.Count = 0 then exit;
+  args:=TJSONObject.Create;
+  args.Add('bandwidthPriority', TJSONIntegerNumber.Create(APriority));
+  TorrentAction(GetSelectedTorrents, 'set', args);
+end;
+
+procedure TMainForm.ProcessPieces(const Pieces: string; PieceCount: integer; const Done: double);
+const
+  MaxPieces = 4000;
+var
+  i, j, k, x, xx: integer;
+  s: string;
+  R: TRect;
+  bmp: TBitmap;
+  c: double;
+begin
+  FLastPieces:=Pieces;
+  FLastPieceCount:=PieceCount;
+  FLastDone:=Done;
+  bmp:=nil;
+  try
+    if FTorrentProgress = nil then
+      FTorrentProgress:=TBitmap.Create;
+    if RpcObj.RPCVersion >= 5 then begin
+      bmp:=TBitmap.Create;
+      if PieceCount > MaxPieces then begin
+        bmp.Width:=MaxPieces;
+        c:=MaxPieces/PieceCount;
+      end
+      else begin
+        bmp.Width:=PieceCount;
+        c:=1;
+      end;
+      bmp.Height:=12;
+      bmp.Canvas.Brush.Color:=clWindow;
+      bmp.Canvas.FillRect(0, 0, bmp.Width, bmp.Height);
+      bmp.Canvas.Brush.Color:=clHighlight;
+      x:=0;
+      s:=DecodeBase64(Pieces);
+      for i:=1 to Length(s) do begin
+        j:=byte(s[i]);
+        for k:=1 to 8 do begin
+          if PieceCount = 0 then
+            break;
+          if j and $80 <> 0 then begin
+            xx:=Trunc(x*c);
+            bmp.Canvas.FillRect(xx, 0, xx + 1, bmp.Height);
+          end;
+          Inc(x);
+          j:=j shl 1;
+          Dec(PieceCount);
+        end;
+      end;
+    end;
+
+    with FTorrentProgress.Canvas do begin
+      FTorrentProgress.Width:=pbDownloaded.ClientWidth;
+      if bmp <> nil then begin
+        i:=bmp.Height div 3;
+        FTorrentProgress.Height:=bmp.Height + 5 + i;
+        Brush.Color:=clWindow;
+        FillRect(0, 0, FTorrentProgress.Width, FTorrentProgress.Height);
+        Brush.Color:=clBtnShadow;
+        R:=Rect(0, i + 3, FTorrentProgress.Width, FTorrentProgress.Height);
+        FillRect(R);
+        InflateRect(R, -1, -1);
+        if bmp.Width > 0 then
+          StretchDraw(R, bmp)
+        else begin
+          Brush.Color:=clWindow;
+          FillRect(R);
+        end;
+        R:=Rect(0, 0, FTorrentProgress.Width, i + 2);
+      end
+      else begin
+        FTorrentProgress.Height:=14;
+        R:=Rect(0, 0, FTorrentProgress.Width, FTorrentProgress.Height);
+      end;
+      Brush.Color:=clBtnShadow;
+      FillRect(R);
+      InflateRect(R, -1, -1);
+      x:=R.Left + Round((R.Right - R.Left)*Done/100.0);
+      Brush.Color:=clHighlight;
+      FillRect(R.Left, R.Top, x, R.Bottom);
+      Brush.Color:=clWindow;
+      FillRect(x, R.Top, R.Right, R.Bottom);
+    end;
+    if pbDownloaded.Height <> FTorrentProgress.Height then begin
+      pbDownloaded.Constraints.MaxHeight:=FTorrentProgress.Height;
+      pbDownloaded.Height:=FTorrentProgress.Height;
+      panProgress.AutoSize:=True;
+      panProgress.AutoSize:=False;
+    end;
+    pbDownloaded.Invalidate;
+  finally
+    bmp.Free;
+  end;
+end;
+
+function TMainForm.ExecRemoteFile(const FileName: string; SelectFile: boolean): boolean;
+
+  procedure _Exec(s: string);
+  var
+    p: string;
+  begin
+    AppBusy;
+    if SelectFile then
+      if FileExistsUTF8(s) then begin
+{$ifdef mswindows}
+        p:=Format('/select,"%s"', [s]);
+        s:='explorer.exe';
+{$else}
+        p:='';
+        s:=ExtractFilePath(s);
+{$endif mswindows}
+      end
+      else begin
+        p:='';
+        s:=ExtractFilePath(s);
+      end;
+    Result:=OpenURL(s, p);
+    AppNormal;
+    if not Result then begin
+      ForceAppNormal;
+      MessageDlg(Format(sUnableToExecute, [s]), mtError, [mbOK], 0);
+    end;
+  end;
+
+var
+  s: string;
+begin
+  s:=MapRemoteToLocal(FileName);
+  if s <> '' then begin
+    _Exec(s);
+    exit;
+  end;
+  if FileExistsUTF8(FileName) or DirectoryExistsUTF8(FileName) then begin
+    _Exec(FileName);
+    exit;
+  end;
+
+  ForceAppNormal;
+  MessageDlg(sNoPathMapping, mtInformation, [mbOK], 0);
+end;
+
+function TMainForm.GetSelectedTorrents: variant;
+var
+  i, j: integer;
+begin
+  with gTorrents do begin
+    if SelCount = 0 then
+      Result:=VarArrayOf([Items[idxTorrentId, Row]])
+    else begin
+      Result:=VarArrayCreate([0, SelCount - 1], varinteger);
+      j:=0;
+      for i:=0 to gTorrents.Items.Count - 1 do
+        if gTorrents.RowSelected[i] then begin
+          Result[j]:=Items[idxTorrentId, i];
+          Inc(j);
+        end;
+    end;
+  end;
+end;
+
+procedure TMainForm.FillDownloadDirs(CB: TComboBox);
+var
+  i, j: integer;
+  s, IniSec: string;
+begin
+  CB.Items.Clear;
+  IniSec:='AddTorrent.' + FCurConn;
+  j:=FIni.ReadInteger(IniSec, 'FolderCount', 0);
+  for i:=0 to j - 1 do begin
+    s:=FIni.ReadString(IniSec, Format('Folder%d', [i]), '');
+    if s <> '' then
+      CB.Items.Add(s);
+  end;
+  if CB.Items.Count > 0 then
+    CB.ItemIndex:=0;
+end;
+
+function TMainForm.PriorityToStr(p: integer; var ImageIndex: integer): string;
+begin
+  case p of
+    TR_PRI_SKIP:   begin Result:=sSkip; ImageIndex:=23; end;
+    TR_PRI_LOW:    begin Result:=sLow; ImageIndex:=24; end;
+    TR_PRI_NORMAL: begin Result:=sNormal; ImageIndex:=25; end;
+    TR_PRI_HIGH:   begin Result:=sHigh; ImageIndex:=26; end;
+    else           Result:='???';
+  end;
+end;
+
+procedure TMainForm.SetRefreshInterval;
+var
+  i: TDateTime;
+begin
+  if Visible and (WindowState <> wsMinimized) then
+    i:=FIni.ReadInteger('Interface', 'RefreshInterval', 5)
+  else
+    i:=FIni.ReadInteger('Interface', 'RefreshIntervalMin', 20);
+  if i < 1 then
+    i:=1;
+  RpcObj.RefreshInterval:=i/SecsPerDay;
+end;
+
+procedure TMainForm.AddTracker(EditMode: boolean);
+var
+  req, args: TJSONObject;
+  id, torid: integer;
+begin
+  AppBusy;
+  with TAddTrackerForm.Create(Self) do
+  try
+    id:=0;
+    torid:=RpcObj.CurTorrentId;
+    if EditMode then begin
+      Caption:=STrackerProps;
+      edTracker.Text:=UTF8Encode(widestring(lvTrackers.Items[idxTrackersListName, lvTrackers.Row]));
+      id:=lvTrackers.Items[idxTrackerID, lvTrackers.Row];
+    end;
+    AppNormal;
+    if ShowModal = mrOk then begin
+      AppBusy;
+      Self.Update;
+      req:=TJSONObject.Create;
+      try
+        req.Add('method', 'torrent-set');
+        args:=TJSONObject.Create;
+        args.Add('ids', TJSONArray.Create([torid]));
+        if EditMode then
+          args.Add('trackerReplace', TJSONArray.Create([id, UTF8Decode(edTracker.Text)]))
+        else
+          args.Add('trackerAdd', TJSONArray.Create([UTF8Decode(edTracker.Text)]));
+        req.Add('arguments', args);
+        args:=nil;
+        args:=RpcObj.SendRequest(req, False);
+        if args = nil then begin
+          CheckStatus(False);
+          exit;
+        end;
+        args.Free;
+      finally
+        req.Free;
+      end;
+      DoRefresh;
+      AppNormal;
+    end;
+  finally
+    Free;
+  end;
+end;
+
+procedure TMainForm.UpdateConnections;
+var
+  i, j, cnt: integer;
+  s, cur: string;
+  mi: TMenuItem;
+begin
+  while (pmConnections.Items.Count > 0) and (pmConnections.Items[0].Tag = 0) do
+    pmConnections.Items[0].Free;
+  while (miConnect.Count > 0) and (miConnect.Items[0].Tag = 0) do
+    miConnect.Items[0].Free;
+  cur:=Ini.ReadString('Hosts', 'CurHost', '');
+  cnt:=Ini.ReadInteger('Hosts', 'Count', 0);
+  j:=0;
+  for i:=1 to cnt do begin
+    s:=Ini.ReadString('Hosts', Format('Host%d', [i]), '');
+    if s <> '' then begin
+      mi:=TMenuItem.Create(pmConnections);
+      mi.Caption:=s;
+      if s = cur then
+        mi.Checked:=True;
+      mi.OnClick:=@DoConnectToHost;
+      pmConnections.Items.Insert(j, mi);
+
+      mi:=TMenuItem.Create(miConnect);
+      mi.Caption:=s;
+      if s = cur then
+        mi.Checked:=True;
+      mi.OnClick:=@DoConnectToHost;
+      miConnect.Insert(j, mi);
+      Inc(j);
+    end;
+  end;
+  sepCon1.Visible:=j > 0;
+  sepCon2.Visible:=j > 0;
+end;
+
+procedure TMainForm.DoConnectToHost(Sender: TObject);
+var
+  mi: TMenuItem;
+begin
+  mi:=TMenuItem(Sender);
+  if RpcObj.Connected and (FCurConn = mi.Caption) then
+    exit;
+  DoDisconnect;
+  FReconnectTimeOut:=-1;
+  FCurConn:=mi.Caption;
+  DoConnect;
+end;
+
+procedure TMainForm.DoSetDownloadSpeed(Sender: TObject);
+begin
+  SetSpeedLimit('down', TMenuItem(Sender).Tag);
+end;
+
+procedure TMainForm.DoSetUploadSpeed(Sender: TObject);
+begin
+  SetSpeedLimit('up', TMenuItem(Sender).Tag);
+end;
+
+procedure TMainForm.SetSpeedLimit(const Dir: string; Speed: integer);
+var
+  req, args: TJSONObject;
+begin
+  AppBusy;
+  req:=TJSONObject.Create;
+  try
+    req.Add('method', 'session-set');
+    args:=TJSONObject.Create;
+    args.Add(Format('speed-limit-%s-enabled', [Dir]), integer(Speed >= 0) and 1);
+    if Speed >= 0 then
+      args.Add(Format('speed-limit-%s', [Dir]), Speed);
+    args.Add('alt-speed-enabled', 0);
+    req.Add('arguments', args);
+    args:=RpcObj.SendRequest(req, False);
+    if args = nil then begin
+      CheckStatus(False);
+      exit;
+    end;
+    args.Free;
+  finally
+    req.Free;
+  end;
+  RpcObj.RefreshNow:=RpcObj.RefreshNow + [rtSession];
+  AppNormal;
+end;
+
+function TMainForm.FixSeparators(const p: string): string;
+begin
+  Result:=StringReplace(p, '/', DirectorySeparator, [rfReplaceAll]);
+  Result:=StringReplace(Result, '\', DirectorySeparator, [rfReplaceAll]);
+end;
+
+function TMainForm.MapRemoteToLocal(const RemotePath: string): string;
+var
+  i, j: integer;
+  s, ss, fn: string;
+begin
+  Result:='';
+  fn:=FixSeparators(Trim(RemotePath));
+  for i:=0 to FPathMap.Count - 1 do begin
+    s:=FPathMap[i];
+    j:=Pos('=', s);
+    if j > 0 then begin
+      ss:=FixSeparators(Copy(s, 1, j - 1));
+      if (ss = fn) or (Pos(IncludeProperTrailingPathDelimiter(ss), fn) = 1) then begin
+        if ss = fn then
+          ss:=Copy(s, j + 1, MaxInt)
+        else begin
+          ss:=IncludeProperTrailingPathDelimiter(ss);
+          ss:=IncludeTrailingPathDelimiter(Copy(s, j + 1, MaxInt)) + Copy(fn, Length(ss) + 1, MaxInt);
+        end;
+        Result:=FixSeparators(ss);
+        exit;
+      end;
+    end;
+  end;
+end;
+
+procedure TMainForm.FillSpeedsMenu;
+
+  procedure _FillMenu(Items: TMenuItem; const Speeds: string; OnClickHandler: TNotifyEvent; CurSpeed: integer);
+  var
+    sl: TStringList;
+    i, j: integer;
+    mi: TMenuItem;
+  begin
+    Items.Clear;
+    if not RpcObj.Connected then
+      exit;
+    sl:=TStringList.Create;
+    try
+      sl.Delimiter:=',';
+      sl.DelimitedText:=Speeds;
+      i:=0;
+      while i < sl.Count do begin
+        j:=StrToIntDef(Trim(sl[i]), -1);
+        if j >= 0 then begin
+          sl[i]:=Format('%.08d', [j]);
+          Inc(i);
+        end
+        else
+          sl.Delete(i);
+      end;
+      sl.Duplicates:=dupIgnore;
+      sl.Sorted:=True;
+      sl.Add(Format('%.08d', [CurSpeed]));
+
+      for i:=0 to sl.Count - 1 do begin
+        j:=StrToIntDef(Trim(sl[i]), -1);
+        if j >= 0 then begin
+          mi:=TMenuItem.Create(Items);
+          mi.Caption:=Format('%d %s%s', [j, sKByte, sPerSecond]);
+          mi.Tag:=j;
+          mi.OnClick:=OnClickHandler;
+          if j = CurSpeed then
+            mi.Checked:=True;
+          Items.Insert(0, mi);
+        end;
+      end;
+    finally
+      sl.Free;
+    end;
+    if Items.Count > 0 then begin
+      mi:=TMenuItem.Create(Items);
+      mi.Caption:='-';
+      Items.Insert(0, mi);
+    end;
+    mi:=TMenuItem.Create(Items);
+    mi.Caption:=SUnlimited;
+    mi.Tag:=-1;
+    mi.OnClick:=OnClickHandler;
+    if CurSpeed = -1 then
+      mi.Checked:=True;
+    Items.Insert(0, mi);
+  end;
+
+var
+  s: string;
+begin
+  s:=Ini.ReadString('Connection.' + FCurConn, 'DownSpeeds', DefSpeeds);
+  _FillMenu(pmDownSpeeds.Items, s, @DoSetDownloadSpeed, FCurDownSpeedLimit);
+  _FillMenu(pmiDownSpeedLimit, s, @DoSetDownloadSpeed, FCurDownSpeedLimit);
+
+  s:=Ini.ReadString('Connection.' + FCurConn, 'UpSpeeds', DefSpeeds);
+  _FillMenu(pmUpSpeeds.Items, s, @DoSetUploadSpeed, FCurUpSpeedLimit);
+  _FillMenu(pmiUpSpeedLimit, s, @DoSetUploadSpeed, FCurUpSpeedLimit);
+end;
+
+initialization
+  {$I main.lrs}
+
+end.
diff -ru TransGUI/movetorrent.lfm TransGUI_new/movetorrent.lfm
--- TransGUI/movetorrent.lfm	2011-04-03 13:28:18.000000000 +0200
+++ TransGUI_new/movetorrent.lfm	2011-09-18 12:32:09.000000000 +0200
@@ -1,74 +1,85 @@
-object MoveTorrentForm: TMoveTorrentForm
-  Left = 354
-  Height = 125
-  Top = 193
-  Width = 561
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'Torrent data location'
-  ClientHeight = 125
-  ClientWidth = 561
-  OnCreate = FormCreate
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 36
-    Top = 81
-    Width = 545
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 1
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-  end
-  object Panel1: TPanel
-    Left = 8
-    Height = 65
-    Top = 8
-    Width = 545
-    Align = alClient
-    BevelOuter = bvNone
-    ClientHeight = 65
-    ClientWidth = 545
-    TabOrder = 0
-    object txTorrentDir: TLabel
-      Left = 0
-      Height = 14
-      Top = 0
-      Width = 145
-      Caption = 'New location for torrent data:'
-      ParentColor = False
-    end
-    object edTorrentDir: TComboBox
-      Left = 0
-      Height = 21
-      Top = 20
-      Width = 449
-      Anchors = [akTop, akLeft, akRight]
-      ItemHeight = 13
-      TabOrder = 0
-    end
-    object cbMoveData: TCheckBox
-      Left = 0
-      Height = 17
-      Top = 47
-      Width = 285
-      Caption = 'Move torrent data from current location to new location'
-      Checked = True
-      State = cbChecked
-      TabOrder = 2
-    end
-    object btBrowse: TButton
-      Left = 454
-      Height = 23
-      Top = 19
-      Width = 91
-      Anchors = [akTop, akRight]
-      Caption = 'Browse...'
-      OnClick = btBrowseClick
-      TabOrder = 1
-    end
-  end
-end
+object MoveTorrentForm: TMoveTorrentForm
+  Left = 354
+  Height = 126
+  Top = 193
+  Width = 561
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  Caption = 'Torrent data location'
+  ClientHeight = 126
+  ClientWidth = 561
+  OnCreate = FormCreate
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 36
+    Top = 82
+    Width = 561
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 1
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+  end
+  object Panel1: TPanel
+    Left = 8
+    Height = 74
+    Top = 8
+    Width = 545
+    Align = alClient
+    BorderSpacing.Left = 8
+    BorderSpacing.Top = 8
+    BorderSpacing.Right = 8
+    BevelOuter = bvNone
+    ClientHeight = 74
+    ClientWidth = 545
+    Constraints.MinWidth = 545
+    TabOrder = 0
+    object txTorrentDir: TLabel
+      Left = 0
+      Height = 14
+      Top = 0
+      Width = 145
+      Caption = 'New location for torrent data:'
+      ParentColor = False
+    end
+    object edTorrentDir: TComboBox
+      Left = 0
+      Height = 21
+      Top = 20
+      Width = 449
+      Anchors = [akTop, akLeft, akRight]
+      ItemHeight = 13
+      TabOrder = 0
+    end
+    object cbMoveData: TCheckBox
+      Left = 0
+      Height = 17
+      Top = 47
+      Width = 285
+      Caption = 'Move torrent data from current location to new location'
+      Checked = True
+      State = cbChecked
+      TabOrder = 2
+    end
+    object btBrowse: TButton
+      Left = 454
+      Height = 23
+      Top = 19
+      Width = 91
+      Anchors = [akTop, akRight]
+      Caption = 'Browse...'
+      OnClick = btBrowseClick
+      TabOrder = 1
+    end
+  end
+end
diff -ru TransGUI/options.lfm TransGUI_new/options.lfm
--- TransGUI/options.lfm	2011-02-21 23:11:09.000000000 +0100
+++ TransGUI_new/options.lfm	2011-09-18 12:32:16.000000000 +0200
@@ -1,166 +1,174 @@
-object OptionsForm: TOptionsForm
-  Left = 313
-  Height = 329
-  Top = 230
-  Width = 525
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'Options'
-  ClientHeight = 329
-  ClientWidth = 525
-  OnCreate = FormCreate
-  OnDestroy = FormDestroy
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object Page: TPageControl
-    Left = 8
-    Height = 279
-    Top = 8
-    Width = 509
-    ActivePage = tabInterface
-    Align = alClient
-    TabIndex = 0
-    TabOrder = 0
-    object tabInterface: TTabSheet
-      Caption = 'Interface'
-      ClientHeight = 253
-      ClientWidth = 501
-      object txSeconds: TLabel
-        Left = 396
-        Height = 14
-        Top = 14
-        Width = 40
-        Caption = 'seconds'
-        ParentColor = False
-      end
-      object txRefreshInterval: TLabel
-        Left = 8
-        Height = 14
-        Top = 13
-        Width = 82
-        Caption = 'Refresh interval:'
-        ParentColor = False
-      end
-      object txLanguage: TLabel
-        Left = 8
-        Height = 14
-        Top = 222
-        Width = 52
-        Caption = 'Language:'
-        ParentColor = False
-      end
-      object txRefreshIntervalMin: TLabel
-        Left = 8
-        Height = 14
-        Top = 41
-        Width = 159
-        Caption = 'Refresh interval when minimized:'
-        ParentColor = False
-      end
-      object txSeconds2: TLabel
-        Left = 396
-        Height = 14
-        Top = 42
-        Width = 40
-        Caption = 'seconds'
-        ParentColor = False
-      end
-      object edRefreshInterval: TSpinEdit
-        Left = 316
-        Height = 21
-        Top = 10
-        Width = 70
-        MaxValue = 999
-        MinValue = 1
-        TabOrder = 0
-        Value = 1
-      end
-      object gbTray: TGroupBox
-        Left = 8
-        Height = 85
-        Top = 66
-        Width = 484
-        Anchors = [akTop, akLeft, akRight]
-        Caption = 'Tray icon'
-        ClientHeight = 67
-        ClientWidth = 480
-        TabOrder = 2
-        object cbTrayIconAlways: TCheckBox
-          Left = 10
-          Height = 17
-          Top = 42
-          Width = 130
-          Caption = 'Tray icon always visible'
-          TabOrder = 2
-        end
-        object cbTrayMinimize: TCheckBox
-          Left = 10
-          Height = 17
-          Top = 2
-          Width = 93
-          Caption = 'Minimize to tray'
-          TabOrder = 0
-        end
-        object cbTrayClose: TCheckBox
-          Left = 10
-          Height = 17
-          Top = 22
-          Width = 80
-          Caption = 'Close to tray'
-          TabOrder = 1
-        end
-      end
-      object cbShowAddTorrentWindow: TCheckBox
-        Left = 8
-        Height = 17
-        Top = 162
-        Width = 274
-        Caption = 'Show parameters window when adding a new torrent'
-        TabOrder = 3
-      end
-      object cbDeleteTorrentFile: TCheckBox
-        Left = 8
-        Height = 17
-        Top = 182
-        Width = 272
-        Caption = 'Delete a .torrent file after after a successful addition'
-        TabOrder = 4
-      end
-      object cbLanguage: TComboBox
-        Left = 128
-        Height = 21
-        Top = 220
-        Width = 364
-        Anchors = [akTop, akLeft, akRight]
-        ItemHeight = 13
-        OnEnter = cbLanguageEnter
-        OnMouseDown = cbLanguageMouseDown
-        Style = csDropDownList
-        TabOrder = 5
-      end
-      object edRefreshIntervalMin: TSpinEdit
-        Left = 316
-        Height = 21
-        Top = 38
-        Width = 70
-        MaxValue = 999
-        MinValue = 1
-        TabOrder = 1
-        Value = 1
-      end
-    end
-  end
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 26
-    Top = 295
-    Width = 509
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 1
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-    ShowBevel = False
-  end
-end
+object OptionsForm: TOptionsForm
+  Left = 313
+  Height = 329
+  Top = 230
+  Width = 525
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  Caption = 'Options'
+  ClientHeight = 329
+  ClientWidth = 525
+  OnCreate = FormCreate
+  OnDestroy = FormDestroy
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object Page: TPageControl
+    Left = 8
+    Height = 279
+    Top = 8
+    Width = 509
+    ActivePage = tabInterface
+    Align = alClient
+    BorderSpacing.Around = 8
+    TabIndex = 0
+    TabOrder = 0
+    object tabInterface: TTabSheet
+      Caption = 'Interface'
+      ClientHeight = 253
+      ClientWidth = 501
+      object txSeconds: TLabel
+        Left = 396
+        Height = 14
+        Top = 14
+        Width = 40
+        Caption = 'seconds'
+        ParentColor = False
+      end
+      object txRefreshInterval: TLabel
+        Left = 8
+        Height = 14
+        Top = 13
+        Width = 82
+        Caption = 'Refresh interval:'
+        ParentColor = False
+      end
+      object txLanguage: TLabel
+        Left = 8
+        Height = 14
+        Top = 222
+        Width = 52
+        Caption = 'Language:'
+        ParentColor = False
+      end
+      object txRefreshIntervalMin: TLabel
+        Left = 8
+        Height = 14
+        Top = 41
+        Width = 159
+        Caption = 'Refresh interval when minimized:'
+        ParentColor = False
+      end
+      object txSeconds2: TLabel
+        Left = 396
+        Height = 14
+        Top = 42
+        Width = 40
+        Caption = 'seconds'
+        ParentColor = False
+      end
+      object edRefreshInterval: TSpinEdit
+        Left = 316
+        Height = 21
+        Top = 10
+        Width = 70
+        MaxValue = 999
+        MinValue = 1
+        TabOrder = 0
+        Value = 1
+      end
+      object gbTray: TGroupBox
+        Left = 8
+        Height = 85
+        Top = 66
+        Width = 484
+        Anchors = [akTop, akLeft, akRight]
+        Caption = 'Tray icon'
+        ClientHeight = 67
+        ClientWidth = 480
+        TabOrder = 2
+        object cbTrayIconAlways: TCheckBox
+          Left = 10
+          Height = 17
+          Top = 42
+          Width = 130
+          Caption = 'Tray icon always visible'
+          TabOrder = 2
+        end
+        object cbTrayMinimize: TCheckBox
+          Left = 10
+          Height = 17
+          Top = 2
+          Width = 93
+          Caption = 'Minimize to tray'
+          TabOrder = 0
+        end
+        object cbTrayClose: TCheckBox
+          Left = 10
+          Height = 17
+          Top = 22
+          Width = 80
+          Caption = 'Close to tray'
+          TabOrder = 1
+        end
+      end
+      object cbShowAddTorrentWindow: TCheckBox
+        Left = 8
+        Height = 17
+        Top = 162
+        Width = 274
+        Caption = 'Show parameters window when adding a new torrent'
+        TabOrder = 3
+      end
+      object cbDeleteTorrentFile: TCheckBox
+        Left = 8
+        Height = 17
+        Top = 182
+        Width = 272
+        Caption = 'Delete a .torrent file after after a successful addition'
+        TabOrder = 4
+      end
+      object cbLanguage: TComboBox
+        Left = 128
+        Height = 21
+        Top = 220
+        Width = 364
+        Anchors = [akTop, akLeft, akRight]
+        ItemHeight = 13
+        OnEnter = cbLanguageEnter
+        OnMouseDown = cbLanguageMouseDown
+        Style = csDropDownList
+        TabOrder = 5
+      end
+      object edRefreshIntervalMin: TSpinEdit
+        Left = 316
+        Height = 21
+        Top = 38
+        Width = 70
+        MaxValue = 999
+        MinValue = 1
+        TabOrder = 1
+        Value = 1
+      end
+    end
+  end
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 26
+    Top = 295
+    Width = 525
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 1
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+    ShowBevel = False
+  end
+end
diff -ru TransGUI/torrprops.lfm TransGUI_new/torrprops.lfm
--- TransGUI/torrprops.lfm	2011-02-20 14:30:14.000000000 +0100
+++ TransGUI_new/torrprops.lfm	2011-09-18 12:32:24.000000000 +0200
@@ -1,180 +1,188 @@
-object TorrPropsForm: TTorrPropsForm
-  Left = 364
-  Height = 251
-  Top = 185
-  Width = 464
-  HorzScrollBar.Page = 349
-  HorzScrollBar.Range = 40
-  VertScrollBar.Page = 155
-  VertScrollBar.Range = 22
-  BorderIcons = [biSystemMenu]
-  BorderStyle = bsDialog
-  BorderWidth = 8
-  Caption = 'Torrent properties'
-  ClientHeight = 251
-  ClientWidth = 464
-  Constraints.MinHeight = 186
-  Constraints.MinWidth = 350
-  OnCreate = FormCreate
-  Position = poMainFormCenter
-  LCLVersion = '0.9.28.2'
-  object gbOptions: TGroupBox
-    Left = 8
-    Height = 201
-    Top = 8
-    Width = 448
-    Align = alClient
-    Caption = ' '
-    ClientHeight = 183
-    ClientWidth = 444
-    TabOrder = 0
-    object txKbs1: TLabel
-      Left = 391
-      Height = 14
-      Top = 27
-      Width = 22
-      Anchors = [akTop, akRight]
-      Caption = 'KB/s'
-      ParentColor = False
-    end
-    object txKbs2: TLabel
-      Left = 391
-      Height = 14
-      Top = 59
-      Width = 22
-      Anchors = [akTop, akRight]
-      Caption = 'KB/s'
-      ParentColor = False
-    end
-    object txName: TLabel
-      Left = 10
-      Height = 14
-      Top = 0
-      Width = 32
-      Caption = 'Name:'
-      ParentColor = False
-      ShowAccelChar = False
-    end
-    object txPeerLimit: TLabel
-      Left = 10
-      Height = 14
-      Top = 91
-      Width = 48
-      Caption = 'Peer limit:'
-      ParentColor = False
-    end
-    object txMinutes: TLabel
-      Left = 391
-      Height = 14
-      Top = 153
-      Width = 38
-      Anchors = [akTop, akRight]
-      Caption = 'minutes'
-      ParentColor = False
-    end
-    object cbMaxDown: TCheckBox
-      Left = 10
-      Height = 17
-      Top = 26
-      Width = 147
-      Caption = 'Maximum download speed:'
-      OnClick = cbMaxDownClick
-      TabOrder = 0
-    end
-    object edMaxDown: TSpinEdit
-      Left = 311
-      Height = 21
-      Top = 24
-      Width = 66
-      Anchors = [akTop, akRight]
-      Increment = 10
-      MaxValue = 999999
-      TabOrder = 1
-    end
-    object cbMaxUp: TCheckBox
-      Left = 10
-      Height = 17
-      Top = 58
-      Width = 133
-      Caption = 'Maximum upload speed:'
-      OnClick = cbMaxUpClick
-      TabOrder = 2
-    end
-    object edMaxUp: TSpinEdit
-      Left = 311
-      Height = 21
-      Top = 56
-      Width = 66
-      Anchors = [akTop, akRight]
-      Increment = 10
-      MaxValue = 999999
-      TabOrder = 3
-    end
-    object edPeerLimit: TSpinEdit
-      Left = 311
-      Height = 21
-      Top = 88
-      Width = 66
-      Anchors = [akTop, akRight]
-      MaxValue = 999
-      MinValue = 1
-      TabOrder = 4
-      Value = 1
-    end
-    object cbSeedRatio: TCheckBox
-      Left = 10
-      Height = 17
-      Top = 121
-      Width = 71
-      AllowGrayed = True
-      Caption = 'Seed ratio:'
-      OnClick = cbSeedRatioClick
-      TabOrder = 5
-    end
-    object edSeedRatio: TFloatSpinEdit
-      Left = 311
-      Height = 21
-      Top = 119
-      Width = 66
-      Anchors = [akTop, akRight]
-      Increment = 0.1
-      MaxValue = 9999
-      MinValue = 0
-      TabOrder = 6
-      Value = 0
-    end
-    object cbIdleSeedLimit: TCheckBox
-      Left = 10
-      Height = 17
-      Top = 152
-      Width = 170
-      AllowGrayed = True
-      Caption = 'Stop seeding when inactive for:'
-      OnClick = cbIdleSeedLimitClick
-      TabOrder = 7
-    end
-    object edIdleSeedLimit: TSpinEdit
-      Left = 311
-      Height = 21
-      Top = 150
-      Width = 66
-      Anchors = [akTop, akRight]
-      MaxValue = 999999
-      MinValue = 1
-      TabOrder = 8
-      Value = 1
-    end
-  end
-  object Buttons: TButtonPanel
-    Left = 8
-    Height = 26
-    Top = 217
-    Width = 448
-    BorderSpacing.Top = 8
-    BorderSpacing.Around = 0
-    TabOrder = 1
-    Spacing = 8
-    ShowButtons = [pbOK, pbCancel]
-    ShowBevel = False
-  end
-end
+object TorrPropsForm: TTorrPropsForm
+  Left = 364
+  Height = 251
+  Top = 185
+  Width = 469
+  HorzScrollBar.Page = 349
+  HorzScrollBar.Range = 40
+  VertScrollBar.Page = 155
+  VertScrollBar.Range = 22
+  BorderIcons = [biSystemMenu]
+  BorderStyle = bsDialog
+  Caption = 'Torrent properties'
+  ClientHeight = 251
+  ClientWidth = 469
+  Constraints.MinHeight = 186
+  Constraints.MinWidth = 350
+  OnCreate = FormCreate
+  Position = poMainFormCenter
+  LCLVersion = '0.9.30.1'
+  object gbOptions: TGroupBox
+    Left = 8
+    Height = 201
+    Top = 8
+    Width = 453
+    Align = alClient
+    BorderSpacing.Around = 8
+    Caption = ' '
+    ClientHeight = 183
+    ClientWidth = 449
+    TabOrder = 0
+    object txKbs1: TLabel
+      Left = 396
+      Height = 14
+      Top = 27
+      Width = 22
+      Anchors = [akTop, akRight]
+      Caption = 'KB/s'
+      ParentColor = False
+    end
+    object txKbs2: TLabel
+      Left = 396
+      Height = 14
+      Top = 59
+      Width = 22
+      Anchors = [akTop, akRight]
+      Caption = 'KB/s'
+      ParentColor = False
+    end
+    object txName: TLabel
+      Left = 10
+      Height = 14
+      Top = 0
+      Width = 32
+      Caption = 'Name:'
+      ParentColor = False
+      ShowAccelChar = False
+    end
+    object txPeerLimit: TLabel
+      Left = 10
+      Height = 14
+      Top = 91
+      Width = 48
+      Caption = 'Peer limit:'
+      ParentColor = False
+    end
+    object txMinutes: TLabel
+      Left = 396
+      Height = 14
+      Top = 153
+      Width = 38
+      Anchors = [akTop, akRight]
+      Caption = 'minutes'
+      ParentColor = False
+    end
+    object cbMaxDown: TCheckBox
+      Left = 10
+      Height = 17
+      Top = 26
+      Width = 147
+      Caption = 'Maximum download speed:'
+      OnClick = cbMaxDownClick
+      TabOrder = 0
+    end
+    object edMaxDown: TSpinEdit
+      Left = 316
+      Height = 21
+      Top = 24
+      Width = 66
+      Anchors = [akTop, akRight]
+      Increment = 10
+      MaxValue = 999999
+      TabOrder = 1
+    end
+    object cbMaxUp: TCheckBox
+      Left = 10
+      Height = 17
+      Top = 58
+      Width = 133
+      Caption = 'Maximum upload speed:'
+      OnClick = cbMaxUpClick
+      TabOrder = 2
+    end
+    object edMaxUp: TSpinEdit
+      Left = 316
+      Height = 21
+      Top = 56
+      Width = 66
+      Anchors = [akTop, akRight]
+      Increment = 10
+      MaxValue = 999999
+      TabOrder = 3
+    end
+    object edPeerLimit: TSpinEdit
+      Left = 316
+      Height = 21
+      Top = 88
+      Width = 66
+      Anchors = [akTop, akRight]
+      MaxValue = 999
+      MinValue = 1
+      TabOrder = 4
+      Value = 1
+    end
+    object cbSeedRatio: TCheckBox
+      Left = 10
+      Height = 17
+      Top = 121
+      Width = 71
+      AllowGrayed = True
+      Caption = 'Seed ratio:'
+      OnClick = cbSeedRatioClick
+      TabOrder = 5
+    end
+    object edSeedRatio: TFloatSpinEdit
+      Left = 316
+      Height = 21
+      Top = 119
+      Width = 66
+      Anchors = [akTop, akRight]
+      Increment = 0.1
+      MaxValue = 9999
+      MinValue = 0
+      TabOrder = 6
+      Value = 0
+    end
+    object cbIdleSeedLimit: TCheckBox
+      Left = 10
+      Height = 17
+      Top = 152
+      Width = 170
+      AllowGrayed = True
+      Caption = 'Stop seeding when inactive for:'
+      OnClick = cbIdleSeedLimitClick
+      TabOrder = 7
+    end
+    object edIdleSeedLimit: TSpinEdit
+      Left = 316
+      Height = 21
+      Top = 150
+      Width = 66
+      Anchors = [akTop, akRight]
+      MaxValue = 999999
+      MinValue = 1
+      TabOrder = 8
+      Value = 1
+    end
+  end
+  object Buttons: TButtonPanel
+    Left = 0
+    Height = 26
+    Top = 217
+    Width = 469
+    BorderSpacing.Bottom = 8
+    BorderSpacing.Around = 0
+    OKButton.Name = 'OKButton'
+    OKButton.Caption = '&OK'
+    HelpButton.Name = 'HelpButton'
+    HelpButton.Caption = '&Help'
+    CloseButton.Name = 'CloseButton'
+    CloseButton.Caption = '&Close'
+    CancelButton.Name = 'CancelButton'
+    CancelButton.Caption = 'Cancel'
+    TabOrder = 1
+    Spacing = 8
+    ShowButtons = [pbOK, pbCancel]
+    ShowBevel = False
+  end
+end
diff -ru TransGUI/transgui.lpi TransGUI_new/transgui.lpi
--- TransGUI/transgui.lpi	2011-04-03 10:42:08.000000000 +0200
+++ TransGUI_new/transgui.lpi	2011-09-18 12:32:31.000000000 +0200
@@ -1,209 +1,210 @@
-<?xml version="1.0"?>
-<CONFIG>
-  <ProjectOptions>
-    <PathDelim Value="\"/>
-    <Version Value="7"/>
-    <General>
-      <Flags>
-        <AlwaysBuild Value="False"/>
-        <LRSInOutputDirectory Value="False"/>
-      </Flags>
-      <SessionStorage Value="InProjectDir"/>
-      <MainUnit Value="0"/>
-      <AutoCreateForms Value="False"/>
-      <TargetFileExt Value=".exe"/>
-      <Icon Value="0"/>
-      <UseXPManifest Value="True"/>
-    </General>
-    <VersionInfo>
-      <UseVersionInfo Value="True"/>
-      <CurrentVersionNr Value="3"/>
-      <CurrentMajorRevNr Value="1"/>
-      <ProjectVersion Value="3.1.0.0"/>
-      <CompanyName Value="Yury Sidorov"/>
-      <FileDescription Value="Transmission Remote GUI"/>
-      <InternalName Value="transgui"/>
-      <LegalCopyright Value="Copyright (c) 2008-2011 by Yury Sidorov"/>
-      <OriginalFilename Value="transgui.exe"/>
-      <ProductName Value="Transmission Remote GUI"/>
-    </VersionInfo>
-    <PublishOptions>
-      <Version Value="2"/>
-      <IgnoreBinaries Value="False"/>
-      <IncludeFileFilter Value="*.(pas|pp|inc|lfm|lpr|lrs|lpi|lpk|sh|xml)"/>
-      <ExcludeFileFilter Value="*.(bak|ppu|ppw|o|so);*~;backup"/>
-    </PublishOptions>
-    <RunParams>
-      <local>
-        <FormatVersion Value="1"/>
-        <LaunchingApplication PathPlusParams="/usr/X11R6/bin/xterm -T 'Lazarus Run Output' -e $(LazarusDir)/tools/runwait.sh $(TargetCmdLine)"/>
-      </local>
-    </RunParams>
-    <RequiredPackages Count="2">
-      <Item1>
-        <PackageName Value="trcomp"/>
-        <MinVersion Major="1" Valid="True"/>
-      </Item1>
-      <Item2>
-        <PackageName Value="LCL"/>
-      </Item2>
-    </RequiredPackages>
-    <Units Count="18">
-      <Unit0>
-        <Filename Value="transgui.lpr"/>
-        <IsPartOfProject Value="True"/>
-        <UnitName Value="transgui"/>
-      </Unit0>
-      <Unit1>
-        <Filename Value="main.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="MainForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="Main"/>
-      </Unit1>
-      <Unit2>
-        <Filename Value="rpc.pas"/>
-        <IsPartOfProject Value="True"/>
-        <UnitName Value="rpc"/>
-      </Unit2>
-      <Unit3>
-        <Filename Value="addtorrent.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="AddTorrentForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="AddTorrent"/>
-      </Unit3>
-      <Unit4>
-        <Filename Value="connoptions.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="ConnOptionsForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="ConnOptions"/>
-      </Unit4>
-      <Unit5>
-        <Filename Value="varlist.pas"/>
-        <IsPartOfProject Value="True"/>
-        <UnitName Value="varlist"/>
-      </Unit5>
-      <Unit6>
-        <Filename Value="torrprops.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="TorrPropsForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="TorrProps"/>
-      </Unit6>
-      <Unit7>
-        <Filename Value="daemonoptions.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="DaemonOptionsForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="DaemonOptions"/>
-      </Unit7>
-      <Unit8>
-        <Filename Value="about.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="AboutForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="About"/>
-      </Unit8>
-      <Unit9>
-        <Filename Value="ipresolver.pas"/>
-        <IsPartOfProject Value="True"/>
-        <UnitName Value="IpResolver"/>
-      </Unit9>
-      <Unit10>
-        <Filename Value="download.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="DownloadForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="download"/>
-      </Unit10>
-      <Unit11>
-        <Filename Value="colsetup.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="ColSetupForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="ColSetup"/>
-      </Unit11>
-      <Unit12>
-        <Filename Value="utils.pas"/>
-        <IsPartOfProject Value="True"/>
-        <UnitName Value="utils"/>
-      </Unit12>
-      <Unit13>
-        <Filename Value="restranslator.pas"/>
-        <IsPartOfProject Value="True"/>
-        <UnitName Value="ResTranslator"/>
-      </Unit13>
-      <Unit14>
-        <Filename Value="addlink.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="AddLinkForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="AddLink"/>
-      </Unit14>
-      <Unit15>
-        <Filename Value="movetorrent.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="MoveTorrentForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="MoveTorrent"/>
-      </Unit15>
-      <Unit16>
-        <Filename Value="addtracker.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="AddTrackerForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="AddTracker"/>
-      </Unit16>
-      <Unit17>
-        <Filename Value="options.pas"/>
-        <IsPartOfProject Value="True"/>
-        <ComponentName Value="OptionsForm"/>
-        <ResourceBaseClass Value="Form"/>
-        <UnitName Value="Options"/>
-      </Unit17>
-    </Units>
-  </ProjectOptions>
-  <CompilerOptions>
-    <Version Value="8"/>
-    <PathDelim Value="\"/>
-    <SearchPaths>
-      <IncludeFiles Value="synapse\source\lib\"/>
-      <OtherUnitFiles Value="synapse\source\lib\;json\"/>
-      <UnitOutputDirectory Value="units"/>
-    </SearchPaths>
-    <Parsing>
-      <SyntaxOptions>
-        <CStyleOperator Value="False"/>
-      </SyntaxOptions>
-    </Parsing>
-    <CodeGeneration>
-      <Checks>
-        <RangeChecks Value="True"/>
-        <OverflowChecks Value="True"/>
-        <StackChecks Value="True"/>
-      </Checks>
-      <Optimizations>
-        <OptimizationLevel Value="0"/>
-      </Optimizations>
-    </CodeGeneration>
-    <Linking>
-      <Debugging>
-        <GenerateDebugInfo Value="True"/>
-      </Debugging>
-      <Options>
-        <Win32>
-          <GraphicApplication Value="True"/>
-        </Win32>
-      </Options>
-    </Linking>
-    <Other>
-      <Verbosity>
-        <ShowHints Value="False"/>
-      </Verbosity>
-      <CustomOptions Value="-Sa"/>
-      <CompilerPath Value="$(CompPath)"/>
-    </Other>
-  </CompilerOptions>
-</CONFIG>
+<?xml version="1.0"?>
+<CONFIG>
+  <ProjectOptions>
+    <Version Value="9"/>
+    <PathDelim Value="\"/>
+    <General>
+      <Flags>
+        <AlwaysBuild Value="False"/>
+        <LRSInOutputDirectory Value="False"/>
+      </Flags>
+      <SessionStorage Value="InProjectDir"/>
+      <MainUnit Value="0"/>
+      <AutoCreateForms Value="False"/>
+      <UseXPManifest Value="True"/>
+      <Icon Value="0"/>
+    </General>
+    <VersionInfo>
+      <UseVersionInfo Value="True"/>
+      <MajorVersionNr Value="3"/>
+      <MinorVersionNr Value="2"/>
+      <StringTable CompanyName="Yury Sidorov" FileDescription="Transmission Remote GUI" InternalName="transgui" LegalCopyright="Copyright (c) 2008-2011 by Yury Sidorov" OriginalFilename="transgui.exe" ProductName="Transmission Remote GUI" ProductVersion=""/>
+    </VersionInfo>
+    <BuildModes Count="1">
+      <Item1 Name="default" Default="True"/>
+    </BuildModes>
+    <PublishOptions>
+      <Version Value="2"/>
+      <IgnoreBinaries Value="False"/>
+      <IncludeFileFilter Value="*.(pas|pp|inc|lfm|lpr|lrs|lpi|lpk|sh|xml)"/>
+      <ExcludeFileFilter Value="*.(bak|ppu|ppw|o|so);*~;backup"/>
+    </PublishOptions>
+    <RunParams>
+      <local>
+        <FormatVersion Value="1"/>
+        <CommandLineParams Value="--home=C:\Develop\Delphi\TransGUI\units\home"/>
+        <LaunchingApplication PathPlusParams="/usr/X11R6/bin/xterm -T 'Lazarus Run Output' -e $(LazarusDir)/tools/runwait.sh $(TargetCmdLine)"/>
+      </local>
+    </RunParams>
+    <RequiredPackages Count="2">
+      <Item1>
+        <PackageName Value="trcomp"/>
+        <MinVersion Major="1" Valid="True"/>
+      </Item1>
+      <Item2>
+        <PackageName Value="LCL"/>
+      </Item2>
+    </RequiredPackages>
+    <Units Count="18">
+      <Unit0>
+        <Filename Value="transgui.lpr"/>
+        <IsPartOfProject Value="True"/>
+        <UnitName Value="transgui"/>
+      </Unit0>
+      <Unit1>
+        <Filename Value="main.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="MainForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="Main"/>
+      </Unit1>
+      <Unit2>
+        <Filename Value="rpc.pas"/>
+        <IsPartOfProject Value="True"/>
+        <UnitName Value="rpc"/>
+      </Unit2>
+      <Unit3>
+        <Filename Value="addtorrent.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="AddTorrentForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="AddTorrent"/>
+      </Unit3>
+      <Unit4>
+        <Filename Value="connoptions.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="ConnOptionsForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="ConnOptions"/>
+      </Unit4>
+      <Unit5>
+        <Filename Value="varlist.pas"/>
+        <IsPartOfProject Value="True"/>
+        <UnitName Value="varlist"/>
+      </Unit5>
+      <Unit6>
+        <Filename Value="torrprops.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="TorrPropsForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="TorrProps"/>
+      </Unit6>
+      <Unit7>
+        <Filename Value="daemonoptions.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="DaemonOptionsForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="DaemonOptions"/>
+      </Unit7>
+      <Unit8>
+        <Filename Value="about.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="AboutForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="About"/>
+      </Unit8>
+      <Unit9>
+        <Filename Value="ipresolver.pas"/>
+        <IsPartOfProject Value="True"/>
+        <UnitName Value="IpResolver"/>
+      </Unit9>
+      <Unit10>
+        <Filename Value="download.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="DownloadForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="download"/>
+      </Unit10>
+      <Unit11>
+        <Filename Value="colsetup.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="ColSetupForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="ColSetup"/>
+      </Unit11>
+      <Unit12>
+        <Filename Value="utils.pas"/>
+        <IsPartOfProject Value="True"/>
+        <UnitName Value="utils"/>
+      </Unit12>
+      <Unit13>
+        <Filename Value="restranslator.pas"/>
+        <IsPartOfProject Value="True"/>
+        <UnitName Value="ResTranslator"/>
+      </Unit13>
+      <Unit14>
+        <Filename Value="addlink.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="AddLinkForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="AddLink"/>
+      </Unit14>
+      <Unit15>
+        <Filename Value="movetorrent.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="MoveTorrentForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="MoveTorrent"/>
+      </Unit15>
+      <Unit16>
+        <Filename Value="addtracker.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="AddTrackerForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="AddTracker"/>
+      </Unit16>
+      <Unit17>
+        <Filename Value="options.pas"/>
+        <IsPartOfProject Value="True"/>
+        <ComponentName Value="OptionsForm"/>
+        <ResourceBaseClass Value="Form"/>
+        <UnitName Value="Options"/>
+      </Unit17>
+    </Units>
+  </ProjectOptions>
+  <CompilerOptions>
+    <Version Value="9"/>
+    <PathDelim Value="\"/>
+    <SearchPaths>
+      <IncludeFiles Value="synapse\source\lib"/>
+      <OtherUnitFiles Value="synapse\source\lib;json"/>
+      <UnitOutputDirectory Value="units"/>
+    </SearchPaths>
+    <Parsing>
+      <SyntaxOptions>
+        <CStyleOperator Value="False"/>
+        <UseAnsiStrings Value="False"/>
+      </SyntaxOptions>
+    </Parsing>
+    <CodeGeneration>
+      <Checks>
+        <RangeChecks Value="True"/>
+        <OverflowChecks Value="True"/>
+        <StackChecks Value="True"/>
+      </Checks>
+      <Optimizations>
+        <OptimizationLevel Value="0"/>
+      </Optimizations>
+    </CodeGeneration>
+    <Linking>
+      <Debugging>
+        <GenerateDebugInfo Value="True"/>
+      </Debugging>
+      <Options>
+        <Win32>
+          <GraphicApplication Value="True"/>
+        </Win32>
+      </Options>
+    </Linking>
+    <Other>
+      <Verbosity>
+        <ShowHints Value="False"/>
+      </Verbosity>
+      <CompilerMessages>
+        <UseMsgFile Value="True"/>
+      </CompilerMessages>
+      <CustomOptions Value="-Sa"/>
+      <CompilerPath Value="$(CompPath)"/>
+    </Other>
+  </CompilerOptions>
+</CONFIG>
diff -ru TransGUI/transgui.lpr TransGUI_new/transgui.lpr
--- TransGUI/transgui.lpr	2011-02-19 16:05:46.000000000 +0100
+++ TransGUI_new/transgui.lpr	2011-09-18 12:32:40.000000000 +0200
@@ -1,45 +1,42 @@
-{*************************************************************************************
-  This file is part of Transmission Remote GUI.
-  Copyright (c) 2008-2009 by Yury Sidorov.
-
-  Transmission Remote GUI is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  Transmission Remote GUI is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with Transmission Remote GUI; if not, write to the Free Software
-  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-*************************************************************************************}
-
-program transgui;
-
-{$mode objfpc}{$H+}
-
-uses
-  {$IFDEF UNIX}
-  cthreads,
-  {$ENDIF}
-  Interfaces, // this includes the LCL widgetset
-  Forms
-  { you can add units after this }, Main, LResources, rpc, AddTorrent, ConnOptions, varlist,
-  TorrProps, DaemonOptions, About, IpResolver, download, ColSetup, utils, ResTranslator, AddLink, MoveTorrent, AddTracker, Options;
-
-{$IFDEF WINDOWS}{$R transgui.rc}{$ENDIF}
-
-begin
-  if not CheckAppParams then exit;
-{$ifndef darwin}
-  {$I transgui.lrs}
-{$endif darwin}
-
-  Application.Initialize;
-  Application.CreateForm(TMainForm, MainForm);
-  Application.Run;
-end.
-
+{*************************************************************************************
+  This file is part of Transmission Remote GUI.
+  Copyright (c) 2008-2009 by Yury Sidorov.
+
+  Transmission Remote GUI is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  Transmission Remote GUI is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with Transmission Remote GUI; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+*************************************************************************************}
+
+program transgui;
+
+{$mode objfpc}{$H+}
+
+uses
+  {$IFDEF UNIX}
+  cthreads,
+  {$ENDIF}
+  Interfaces, // this includes the LCL widgetset
+  Forms
+  { you can add units after this }, Main, rpc, AddTorrent, ConnOptions, varlist,
+  TorrProps, DaemonOptions, About, IpResolver, download, ColSetup, utils, ResTranslator, AddLink, MoveTorrent, AddTracker, Options;
+
+{$R *.res}
+
+begin
+  if not CheckAppParams then exit;
+
+  Application.Initialize;
+  Application.CreateForm(TMainForm, MainForm);
+  Application.Run;
+end.
+
Tylko w TransGUI/: transgui.lrs
Tylko w TransGUI/: transgui.manifest
Tylko w TransGUI/: transgui.rc
Tylko w TransGUI_new/: transgui.res
diff -ru TransGUI/vargrid.pas TransGUI_new/vargrid.pas
--- TransGUI/vargrid.pas	2011-02-20 18:24:55.000000000 +0100
+++ TransGUI_new/vargrid.pas	2011-09-18 12:33:19.000000000 +0200
@@ -1,1001 +1,1004 @@
-{*************************************************************************************
-  This file is part of Transmission Remote GUI.
-  Copyright (c) 2008-2010 by Yury Sidorov.
-
-  Transmission Remote GUI is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  Transmission Remote GUI is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with Transmission Remote GUI; if not, write to the Free Software
-  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-*************************************************************************************}
-
-unit VarGrid;
-
-{$mode objfpc}{$H+}
-
-interface
-
-uses
-  Classes, SysUtils, Grids, VarList, Graphics, Controls, LMessages, Forms, StdCtrls;
-
-type
-  TVarGrid = class;
-
-  TCellOption = (coDrawCheckBox, coDrawTreeButton);
-  TCellOptions = set of TCellOption;
-
-  TCellAttributes = record
-    Text: string;
-    ImageIndex: integer;
-    Indent: integer;
-    Options: TCellOptions;
-    State: TCheckBoxState;
-    Expanded: boolean;
-  end;
-
-  TOnCellAttributes = procedure (Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes) of object;
-  TOnDrawCellEvent = procedure (Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean) of object;
-  TOnSortColumnEvent = procedure (Sender: TVarGrid; var ASortCol: integer) of object;
-  TCellNotifyEvent = procedure (Sender: TVarGrid; ACol, ARow, ADataCol: integer) of object;
-
-  { TVarGrid }
-
-  TVarGrid = class(TCustomDrawGrid)
-  private
-    FHideSelection: boolean;
-    FImages: TImageList;
-    FItems: TVarList;
-    FItemsChanging: boolean;
-    FColumnsMap: array of integer;
-    FMultiSelect: boolean;
-    FOnCellAttributes: TOnCellAttributes;
-    FOnCheckBoxClick: TCellNotifyEvent;
-    FOnDrawCell: TOnDrawCellEvent;
-    FOnTreeButtonClick: TCellNotifyEvent;
-    FSelCount: integer;
-    FAnchor: integer;
-    FSortColumn: integer;
-    FOnSortColumn: TOnSortColumnEvent;
-    FRow: integer;
-    FHintCell: TPoint;
-
-    function GetRow: integer;
-    function GetRowSelected(RowIndex: integer): boolean;
-    function GetRowVisible(RowIndex: integer): boolean;
-    function GetSortOrder: TSortOrder;
-    procedure ItemsChanged(Sender: TObject);
-    procedure SetHideSelection(const AValue: boolean);
-    procedure SetRow(const AValue: integer);
-    procedure SetRowSelected(RowIndex: integer; const AValue: boolean);
-    procedure SetRowVisible(RowIndex: integer; const AValue: boolean);
-    procedure SetSortColumn(const AValue: integer);
-    procedure SetSortOrder(const AValue: TSortOrder);
-    procedure UpdateColumnsMap;
-    procedure UpdateSelCount;
-    procedure SelectRange(OldRow, NewRow: integer);
-    procedure CMHintShow(var Message: TCMHintShow); message CM_HINTSHOW;
-    function CellNeedsCheckboxBitmaps(const aCol,aRow: Integer): boolean;
-    procedure DrawCellCheckboxBitmaps(const aCol,aRow: Integer; const aRect: TRect);
-
-  protected
-    procedure SizeChanged(OldColCount, OldRowCount: Integer); override;
-    procedure DrawCell(aCol,aRow: Integer; aRect: TRect; aState:TGridDrawState); override;
-    procedure ColRowMoved(IsColumn: Boolean; FromIndex,ToIndex: Integer); override;
-    procedure PrepareCanvas(aCol,aRow: Integer; aState:TGridDrawState); override;
-    procedure MouseDown(Button: TMouseButton; Shift:TShiftState; X,Y:Integer); override;
-    procedure MouseMove(Shift: TShiftState; X,Y: Integer);override;
-    procedure KeyDown(var Key : Word; Shift : TShiftState); override;
-    procedure DoOnCellAttributes(ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-    procedure HeaderClick(IsColumn: Boolean; index: Integer); override;
-    procedure AutoAdjustColumn(aCol: Integer); override;
-    procedure VisualChange; override;
-    procedure DrawColumnText(aCol,aRow: Integer; aRect: TRect; aState:TGridDrawState); override;
-    procedure DblClick; override;
-    procedure Click; override;
-    procedure GetCheckBoxState(const aCol, aRow:Integer; var aState:TCheckboxState); override;
-    procedure SetCheckboxState(const aCol, aRow:Integer; const aState: TCheckboxState); override;
-    procedure SetupCell(ACol, ARow: integer; AState: TGridDrawState; out CellAttribs: TCellAttributes);
-    procedure DoOnCheckBoxClick(ACol, ARow: integer);
-    procedure DoOnTreeButtonClick(ACol, ARow: integer);
-
-  public
-    constructor Create(AOwner: TComponent); override;
-    destructor Destroy; override;
-    procedure RemoveSelection;
-    procedure SelectAll;
-    procedure Sort; reintroduce;
-    function ColToDataCol(ACol: integer): integer;
-
-    property Items: TVarList read FItems;
-    property RowSelected[RowIndex: integer]: boolean read GetRowSelected write SetRowSelected;
-    property RowVisible[RowIndex: integer]: boolean read GetRowVisible write SetRowVisible;
-    property SelCount: integer read FSelCount;
-    property Row: integer read GetRow write SetRow;
-  published
-    property Align;
-    property AlternateColor;
-    property Anchors;
-    property BorderSpacing;
-    property BorderStyle;
-    property Color;
-    property Columns;
-    property Constraints;
-    property DragCursor;
-    property DragKind;
-    property DragMode;
-    property Enabled;
-    property FixedCols;
-    property FixedRows;
-    property Font;
-    property GridLineWidth;
-    property Options;
-    property ParentColor default false;
-    property ParentFont;
-    property ParentShowHint default false;
-    property PopupMenu;
-    property RowCount;
-    property ScrollBars;
-    property ShowHint default True;
-    property TabOrder;
-    property TabStop;
-    property TitleFont;
-    property TitleImageList;
-    property TitleStyle default tsNative;
-    property Visible;
-
-    property OnClick;
-    property OnDblClick;
-    property OnEnter;
-    property OnExit;
-    property OnHeaderClick;
-    property OnHeaderSized;
-    property OnKeyDown;
-    property OnKeyPress;
-    property OnKeyUp;
-    property OnMouseDown;
-    property OnMouseMove;
-    property OnMouseUp;
-    property OnMouseWheelDown;
-    property OnMouseWheelUp;
-    property OnContextPopup;
-    property OnDragDrop;
-    property OnDragOver;
-    property OnEndDock;
-    property OnEndDrag;
-    property OnStartDock;
-    property OnStartDrag;
-    property OnUTF8KeyPress;
-    property OnResize;
-
-    property Images: TImageList read FImages write FImages;
-    property MultiSelect: boolean read FMultiSelect write FMultiSelect default False;
-    property SortColumn: integer read FSortColumn write SetSortColumn default -1;
-    property SortOrder: TSortOrder read GetSortOrder write SetSortOrder default soAscending;
-    property HideSelection: boolean read FHideSelection write SetHideSelection default False;
-
-    property OnCellAttributes: TOnCellAttributes read FOnCellAttributes write FOnCellAttributes;
-    property OnDrawCell: TOnDrawCellEvent read FOnDrawCell write FOnDrawCell;
-    property OnSortColumn: TOnSortColumnEvent read FOnSortColumn write FOnSortColumn;
-    property OnCheckBoxClick: TCellNotifyEvent read FOnCheckBoxClick write FOnCheckBoxClick;
-    property OnTreeButtonClick: TCellNotifyEvent read FOnTreeButtonClick write FOnTreeButtonClick;
-  end;
-
-procedure Register;
-
-implementation
-
-uses Variants, LCLType, Math, GraphType, lclintf, Themes, types
-     {$ifdef LCLcarbon} , carbonproc {$endif LCLcarbon};
-
-const
-  roSelected = 1;
-  roCurRow   = 2;
-
-procedure Register;
-begin
-  RegisterComponents('TransGUI', [TVarGrid]);
-end;
-
-{ TVarGrid }
-
-procedure TVarGrid.ItemsChanged(Sender: TObject);
-var
-  i, OldRows, OldCols: integer;
-begin
-  FItemsChanging:=True;
-  try
-    OldRows:=RowCount;
-    OldCols:=Columns.Count;
-    RowCount:=FItems.RowCnt + FixedRows;
-    if FRow <> -1 then begin
-      Row:=FRow;
-      FRow:=-1;
-    end;
-    UpdateSelCount;
-    while Columns.Count > FItems.ColCnt do
-      Columns.Delete(Columns.Count - 1);
-    if Columns.Count <> FItems.ColCnt then begin
-      Columns.BeginUpdate;
-      try
-        for i:=Columns.Count to FItems.ColCnt - 1 do
-          Columns.Add;
-      finally
-        Columns.EndUpdate;
-      end;
-    end;
-    if (OldRows <> RowCount) or (OldCols <> Columns.Count) then begin
-      if Parent <> nil then
-        HandleNeeded;
-      ResetSizes;
-    end
-    else
-      Invalidate;
-  finally
-    FItemsChanging:=False;
-  end;
-end;
-
-procedure TVarGrid.SetHideSelection(const AValue: boolean);
-begin
-  if FHideSelection=AValue then exit;
-  FHideSelection:=AValue;
-  Invalidate;
-end;
-
-procedure TVarGrid.SetRow(const AValue: integer);
-var
-  i: integer;
-begin
-  if FItems.IsUpdating then
-    FRow:=AValue
-  else begin
-    i:=LeftCol;
-    inherited Row:=AValue + FixedRows;
-    LeftCol:=i;
-  end;
-end;
-
-function TVarGrid.GetRowSelected(RowIndex: integer): boolean;
-begin
-  Result:=LongBool(FItems.RowOptions[RowIndex] and roSelected);
-end;
-
-function TVarGrid.GetRowVisible(RowIndex: integer): boolean;
-begin
-  Result:=RowHeights[RowIndex + FixedRows] > 0;
-end;
-
-function TVarGrid.GetSortOrder: TSortOrder;
-begin
-  Result:=inherited SortOrder;
-end;
-
-function TVarGrid.GetRow: integer;
-begin
-  if FItems.IsUpdating and (FRow <> -1) then
-    Result:=FRow
-  else begin
-    Result:=inherited Row - FixedRows;
-  end;
-end;
-
-procedure TVarGrid.SetRowSelected(RowIndex: integer; const AValue: boolean);
-var
-  i, j: integer;
-begin
-  i:=FItems.RowOptions[RowIndex];
-  if AValue then begin
-    j:=i or roSelected;
-    if j <> i then
-      Inc(FSelCount);
-  end
-  else begin
-    j:=i and not roSelected;
-    if j <> i then
-      Dec(FSelCount);
-  end;
-  FItems.RowOptions[RowIndex]:=j;
-  InvalidateRow(RowIndex + FixedRows);
-  if FSelCount <= 1 then
-    InvalidateRow(inherited Row);
-end;
-
-procedure TVarGrid.SetRowVisible(RowIndex: integer; const AValue: boolean);
-begin
-  if AValue then
-    RowHeights[RowIndex + FixedRows]:=DefaultRowHeight
-  else
-    RowHeights[RowIndex + FixedRows]:=0;
-end;
-
-procedure TVarGrid.SetSortColumn(const AValue: integer);
-begin
-  if FSortColumn=AValue then exit;
-  FSortColumn:=AValue;
-  if FSortColumn >= 0 then
-    Options:=Options + [goHeaderPushedLook, goHeaderHotTracking]
-  else
-    Options:=Options - [goHeaderPushedLook, goHeaderHotTracking];
-  Sort;
-end;
-
-procedure TVarGrid.SetSortOrder(const AValue: TSortOrder);
-begin
-  if SortOrder = AValue then exit;
-  inherited SortOrder:=AValue;
-  Sort;
-end;
-
-procedure TVarGrid.UpdateColumnsMap;
-var
-  i, j: integer;
-begin
-  SetLength(FColumnsMap, Columns.Count);
-  j:=0;
-  for i:=0 to Columns.Count - 1 do
-    with Columns[i] do
-      if Visible then begin
-        FColumnsMap[j]:=ID - 1;
-        Inc(j);
-      end;
-  SetLength(FColumnsMap, j);
-end;
-
-procedure TVarGrid.UpdateSelCount;
-var
-  i: integer;
-begin
-  FSelCount:=0;
-  for i:=0 to FItems.Count - 1 do
-    if RowSelected[i] then
-      Inc(FSelCount);
-end;
-
-procedure TVarGrid.SelectRange(OldRow, NewRow: integer);
-var
-  dir: integer;
-  sel: boolean;
-begin
-  if OldRow = NewRow then
-    exit;
-  if FAnchor = -1 then
-    FAnchor:=OldRow;
-  dir:=Sign(NewRow - OldRow);
-  if Sign(FAnchor - OldRow) <> Sign(FAnchor - NewRow) then
-    while OldRow <> FAnchor do begin
-      RowSelected[OldRow]:=False;
-      Inc(OldRow, dir);
-    end;
-  sel:=Abs(FAnchor - OldRow) < Abs(FAnchor - NewRow);
-  while OldRow <> NewRow do begin
-    RowSelected[OldRow]:=sel;
-    Inc(OldRow, dir);
-  end;
-  RowSelected[NewRow]:=True;
-end;
-
-procedure TVarGrid.CMHintShow(var Message: TCMHintShow);
-var
-  ca: TCellAttributes;
-  pt: TPoint;
-  wd: integer;
-  R: TRect;
-begin
-  with Message.HintInfo^ do begin
-    pt:=MouseToCell(CursorPos);
-    if (pt.x >= FixedCols) and (pt.y >= 0) then begin
-      R:=CellRect(pt.x, pt.y);
-      if PtInRect(R, CursorPos) then begin
-        SetupCell(pt.x, pt.y, [], ca);
-        if ca.Text <> '' then begin
-          wd:=Canvas.TextWidth(ca.Text);
-          Inc(R.Left, ca.Indent);
-          if coDrawTreeButton in ca.Options then
-            Inc(R.Left, R.Bottom - R.Top);
-          if coDrawCheckBox in ca.Options then
-            Inc(R.Left, R.Bottom - R.Top);
-          if (ca.ImageIndex <> -1) and Assigned(FImages) then
-            Inc(R.Left, FImages.Width + 2);
-          if (R.Right <= R.Left) or (R.Right - R.Left < wd + 5) then begin
-            HintStr:=ca.Text;
-            R.Top:=(R.Top + R.Bottom - Canvas.TextHeight(ca.Text)) div 2 - 4;
-            Dec(R.Left);
-            HintPos:=ClientToScreen(R.TopLeft);
-          end;
-          FHintCell:=pt;
-        end
-        else
-          Message.Result:=1;
-      end
-      else
-        Message.Result:=1;
-    end;
-  end;
-end;
-
-function TVarGrid.CellNeedsCheckboxBitmaps(const aCol, aRow: Integer): boolean;
-var
-  C: TGridColumn;
-begin
-  Result := false;
-  if (aRow>=FixedRows) and Columns.Enabled then begin
-    C := ColumnFromGridColumn(aCol);
-    result := (C<>nil) and (C.ButtonStyle=cbsCheckboxColumn)
-  end;
-end;
-
-procedure TVarGrid.DrawCellCheckboxBitmaps(const aCol, aRow: Integer; const aRect: TRect);
-var
-  AState: TCheckboxState;
-begin
-  AState := cbUnchecked;
-  GetCheckBoxState(aCol, aRow, aState);
-  DrawGridCheckboxBitmaps(aRect, aState);
-end;
-
-procedure TVarGrid.SizeChanged(OldColCount, OldRowCount: Integer);
-begin
-  if not FItemsChanging and (FItems <> nil) then begin
-    FItems.ColCnt:=Columns.Count;
-    FItems.RowCnt:=RowCount - FixedRows;
-    UpdateColumnsMap;
-  end;
-  inherited;
-end;
-
-procedure TVarGrid.DrawCell(aCol, aRow: Integer; aRect: TRect; aState: TGridDrawState);
-var
-  ca: TCellAttributes;
-  ts: TTextStyle;
-  dd, IsHeader: boolean;
-  R: TRect;
-  det: TThemedElementDetails;
-  sz: TSize;
-  i: integer;
-begin
-  if RowHeights[aRow] = 0 then
-    exit;
-  IsHeader:=(gdFixed in aState) and (aRow=0) and (aCol>=FirstGridColumn);
-  if not IsHeader and MultiSelect and (FSelCount > 0) then
-    if (aRow >= FixedRows) and (aCol >= FixedCols) and RowSelected[aRow - FixedRows] then
-      Include(aState, gdSelected)
-    else
-      Exclude(aState, gdSelected);
-
-  PrepareCanvas(aCol, aRow, aState);
-  if DefaultDrawing then
-    SetupCell(aCol, aRow, aState, ca);
-  if not IsHeader or (TitleStyle<>tsNative) then
-    Canvas.FillRect(aRect);
-
-  if not IsHeader then begin
-    dd:=True;
-    if Assigned(FOnDrawCell) then begin
-      R:=CellRect(aCol, aRow);
-      if goVertLine in Options then
-        Dec(R.Right, 1);
-      if goHorzLine in Options then
-        Dec(R.Bottom, 1);
-      FOnDrawCell(Self, aCol, aRow - FixedRows, ColToDataCol(aCol), aState, R, dd);
-    end;
-
-    if DefaultDrawing and dd then begin
-      if CellNeedsCheckboxBitmaps(aCol,aRow) then
-        DrawCellCheckboxBitmaps(aCol,aRow,aRect)
-      else begin
-        Inc(aRect.Left, ca.Indent);
-        if coDrawTreeButton in ca.Options then begin
-          R:=aRect;
-          R.Right:=R.Left + (R.Bottom - R.Top);
-          aRect.Left:=R.Right;
-          if ThemeServices.ThemesEnabled then begin
-            if ca.Expanded then
-              det:=ThemeServices.GetElementDetails(ttGlyphOpened)
-            else
-              det:=ThemeServices.GetElementDetails(ttGlyphClosed);
-            sz:=ThemeServices.GetDetailSize(det);
-            with R do begin
-              Left:=(Left + Right - sz.cx) div 2;
-              Top:=(Top + Bottom - sz.cy) div 2;
-              R:=Bounds(Left, Top, sz.cx, sz.cy);
-            end;
-            ThemeServices.DrawElement(Canvas.Handle, det, R, nil);
-          end
-          else
-            with Canvas do begin
-              i:=(R.Bottom - R.Top) div 4;
-              InflateRect(R, -i, -i);
-              if (R.Right - R.Left) and 1 = 0 then
-                Dec(R.Right);
-              if (R.Bottom - R.Top) and 1 = 0 then
-                Dec(R.Bottom);
-              Pen.Color:=clWindowText;
-              Rectangle(R);
-              InflateRect(R, -1, -1);
-              Brush.Color:=clWindow;
-              FillRect(R);
-              InflateRect(R, -1, -1);
-              i:=(R.Top + R.Bottom) div 2;
-              MoveTo(R.Left, i);
-              LineTo(R.Right, i);
-              if not ca.Expanded then begin
-                i:=(R.Left + R.Right) div 2;
-                MoveTo(i, R.Top);
-                LineTo(i, R.Bottom);
-              end;
-            end;
-        end;
-        if coDrawCheckBox in ca.Options then begin
-          R:=aRect;
-          R.Right:=R.Left + (R.Bottom - R.Top);
-          aRect.Left:=R.Right;
-          DrawGridCheckboxBitmaps(R, ca.State);
-        end;
-        if (ca.ImageIndex <> -1) and Assigned(FImages) then begin
-          FImages.Draw(Canvas, aRect.Left + 2, (aRect.Bottom + aRect.Top - FImages.Height) div 2, ca.ImageIndex, gdeNormal);
-          Inc(aRect.Left, FImages.Width + 2);
-        end;
-        if (Canvas.TextStyle.Alignment <> taLeftJustify) and (ca.Text <> '') then
-          if (aRect.Right <= aRect.Left) or (aRect.Right - aRect.Left < Canvas.TextWidth(ca.Text) + 9) then begin
-            ts:=Canvas.TextStyle;
-            ts.Alignment:=taLeftJustify;
-            Canvas.TextStyle:=ts;
-          end;
-        DrawCellText(aCol, aRow, aRect, aState, ca.Text);
-      end;
-    end;
-  end;
-  if TitleStyle<>tsNative then
-    DrawColumnText(aCol,aRow,aRect,aState);
-  DrawCellGrid(aCol,aRow,aRect,aState);
-  if TitleStyle=tsNative then
-    DrawColumnText(aCol,aRow,aRect,aState);
-end;
-
-procedure TVarGrid.ColRowMoved(IsColumn: Boolean; FromIndex, ToIndex: Integer);
-begin
-  inherited ColRowMoved(IsColumn, FromIndex, ToIndex);
-  UpdateColumnsMap;
-end;
-
-procedure TVarGrid.PrepareCanvas(aCol, aRow: Integer; aState: TGridDrawState);
-var
-  F: TCustomForm;
-begin
-  F:=GetParentForm(Self);
-  if FHideSelection and (FSelCount = 0) and (F <> nil) and (F.ActiveControl <> Self) then
-    aState:=aState - [gdSelected];
-  inherited PrepareCanvas(aCol, aRow, aState);
-  with Canvas do
-    if (Font.Color = clWindow) and (Brush.Color = clHighlight) then begin
-      Font.Color:=clHighlightText;
-{$ifdef LCLgtk2}
-      Brush.Color:=ColorToRGB(Brush.Color); // Workaround for LCL bug
-{$endif LCLgtk2}
-    end;
-end;
-
-procedure TVarGrid.MouseDown(Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
-var
-  pt: TPoint;
-  IsCtrl, CheckBoxClicked: boolean;
-  ca: TCellAttributes;
-  R, RR: TRect;
-begin
-{$ifdef LCLcarbon}
-  IsCtrl:=ssMeta in GetCarbonShiftState;
-{$else}
-  IsCtrl:=ssCtrl in Shift;
-{$endif LCLcarbon}
-  CheckBoxClicked:=False;
-  pt:=MouseToCell(Point(X,Y));
-  if ssLeft in Shift then begin
-    SetupCell(pt.x, pt.y, [], ca);
-    RR:=CellRect(pt.x, pt.y);
-    Inc(RR.Left, ca.Indent);
-    if (RR.Left <= RR.Right) and (coDrawTreeButton in ca.Options) then begin
-      R:=RR;
-      R.Right:=R.Left + (R.Bottom - R.Top);
-      if R.Right > RR.Right then
-        R.Right:=RR.Right;
-      if PtInRect(R, Point(X,Y)) then begin
-        DoOnTreeButtonClick(pt.x, pt.y);
-        InvalidateCell(pt.x, pt.y);
-      end;
-      Inc(RR.Left, RR.Bottom - RR.Top);
-    end;
-    if (RR.Left <= RR.Right) and (coDrawCheckBox in ca.Options) then begin
-      R:=RR;
-      R.Right:=R.Left + (R.Bottom - R.Top);
-      if R.Right > RR.Right then
-        R.Right:=RR.Right;
-      if PtInRect(R, Point(X,Y)) then begin
-        DoOnCheckBoxClick(pt.x, pt.y);
-        InvalidateCell(pt.x, pt.y);
-        CheckBoxClicked:=True;
-      end;
-    end;
-  end;
-  if (ssRight in Shift) {$ifdef darwin} or (Shift*[ssLeft, ssCtrl] = [ssLeft, ssCtrl]) {$endif} then begin
-    SetFocus;
-    if (pt.x >= FixedCols) and (pt.y >= FixedRows) then begin
-      if MultiSelect and (SelCount > 0) and not RowSelected[pt.y - FixedRows] then
-        RemoveSelection;
-      Row:=pt.y - FixedRows;
-    end;
-  end
-  else
-    if MultiSelect and (ssLeft in Shift) and (pt.x >= FixedCols) and (pt.y >= FixedRows) then begin
-      if IsCtrl then begin
-        if SelCount = 0 then
-          RowSelected[Row]:=True;
-        RowSelected[pt.y - FixedRows]:=not RowSelected[pt.y - FixedRows];
-        FAnchor:=-1;
-      end
-      else
-        if ssShift in Shift then
-          SelectRange(Row, pt.y - FixedRows)
-        else begin
-          if (SelCount > 0) and not CheckBoxClicked then
-            RemoveSelection;
-          FAnchor:=-1;
-        end;
-    end;
-  inherited MouseDown(Button, Shift, X, Y);
-end;
-
-procedure TVarGrid.MouseMove(Shift: TShiftState; X, Y: Integer);
-var
-  pt: TPoint;
-begin
-  inherited MouseMove(Shift, X, Y);
-  pt:=MouseToCell(Point(x, y));
-  if (FHintCell.x <> -1) and ((FHintCell.x <> pt.x) or (FHintCell.y <> pt.y)) then begin
-    Application.CancelHint;
-    FHintCell.x:=-1;
-  end;
-end;
-
-procedure TVarGrid.KeyDown(var Key: Word; Shift: TShiftState);
-var
-  r, k: integer;
-  ca: TCellAttributes;
-begin
-  r:=Row;
-  k:=Key;
-  if goRowSelect in Options then
-    Col:=FixedCols;
-
-  if (Shift = []) and ( (k = VK_SPACE) or (k = VK_LEFT) or (k = VK_RIGHT) or (k = VK_ADD) or (k = VK_SUBTRACT) ) then begin
-    SetupCell(FixedCols, inherited Row, [], ca);
-    case k of
-      VK_SPACE:
-        if coDrawCheckBox in ca.Options then begin
-          DoOnCheckBoxClick(FixedCols, inherited Row);
-          exit;
-        end;
-      VK_LEFT, VK_SUBTRACT:
-        if (coDrawTreeButton in ca.Options) and ca.Expanded then begin
-          DoOnTreeButtonClick(FixedCols, inherited Row);
-          exit;
-        end;
-      VK_RIGHT, VK_ADD:
-        if (coDrawTreeButton in ca.Options) and not ca.Expanded then begin
-          DoOnTreeButtonClick(FixedCols, inherited Row);
-          exit;
-        end;
-    end;
-  end;
-
-  inherited KeyDown(Key, Shift);
-
-  if MultiSelect then begin
-    if ssCtrl in Shift then begin
-      if k = VK_SPACE then
-        RowSelected[Row]:=not RowSelected[Row];
-      FAnchor:=-1;
-    end
-    else
-      if ssShift in Shift then begin
-        SelectRange(r, Row);
-      end
-      else
-        if k in [VK_LEFT, VK_RIGHT, VK_UP, VK_DOWN, VK_HOME, VK_END, VK_NEXT, VK_PRIOR] then begin
-          if SelCount > 0 then
-            RemoveSelection;
-          FAnchor:=-1;
-        end;
-  end;
-  if (Key = VK_RETURN) and Assigned(OnDblClick) then
-    OnDblClick(Self);
-end;
-
-procedure TVarGrid.DoOnCellAttributes(ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
-begin
-  if Assigned(FOnCellAttributes) then
-    FOnCellAttributes(Self, ACol, ARow, ADataCol, AState, CellAttribs);
-end;
-
-procedure TVarGrid.HeaderClick(IsColumn: Boolean; index: Integer);
-var
-  i: integer;
-begin
-  inherited HeaderClick(IsColumn, index);
-  if IsColumn and (FSortColumn >= 0) then begin
-    i:=ColToDataCol(index);
-    if FSortColumn = i then begin
-      if SortOrder = soAscending then
-        SortOrder:=soDescending
-      else
-        SortOrder:=soAscending;
-    end
-    else begin
-      SortOrder:=soAscending;
-      SortColumn:=i;
-    end;
-  end;
-end;
-
-procedure TVarGrid.AutoAdjustColumn(aCol: Integer);
-var
-  i, j, wd, h: integer;
-  ca: TCellAttributes;
-begin
-  wd:=4;
-  for i:=0 to FItems.Count - 1 do begin
-    h:=RowHeights[i + FixedRows];
-    if h > 0 then begin
-      SetupCell(aCol, i, [], ca);
-      j:=Canvas.TextWidth(ca.Text) + 6;
-      Inc(j, ca.Indent);
-      if coDrawTreeButton in ca.Options then
-        Inc(j, h);
-      if coDrawCheckBox in ca.Options then
-        Inc(j, h);
-      if (ca.ImageIndex <> -1) and Assigned(FImages) then
-        Inc(j, FImages.Width + 2);
-      if j > wd then
-        wd:=j;
-    end;
-  end;
-  ColumnFromGridColumn(aCol).Width:=wd;
-end;
-
-procedure TVarGrid.VisualChange;
-begin
-  inherited VisualChange;
-  if HandleAllocated then
-    DefaultRowHeight:=Canvas.TextHeight('Xy') + 5;
-  UpdateColumnsMap;
-end;
-
-procedure TVarGrid.DrawColumnText(aCol, aRow: Integer; aRect: TRect; aState: TGridDrawState);
-var
-  R: TRect;
-  i: integer;
-begin
-  if (gdFixed in aState) and (aRow=0) and (aCol>=FirstGridColumn) then begin
-    R:=aRect;
-    if FSortColumn = ColToDataCol(aCol) then begin
-      R.Right:=R.Left + R.Bottom - R.Top;
-      InflateRect(R, -5, -5);
-      OffsetRect(R, -3, 0);
-      Dec(R.Bottom, 2);
-      aRect.Left:=R.Right + 2;
-    end;
-    inherited DrawColumnText(aCol, aRow, aRect, aState);
-    if FSortColumn = ColToDataCol(aCol) then
-      with Canvas do begin
-        Pen.Color:=clGrayText;
-        i:=(R.Left + R.Right) div 2;
-        if SortOrder = soAscending then begin
-          MoveTo(i, R.Top);
-          LineTo(R.Right, R.Bottom);
-          LineTo(R.Left, R.Bottom);
-          LineTo(i, R.Top);
-        end
-        else begin
-          MoveTo(R.TopLeft);
-          LineTo(R.Right, R.Top);
-          LineTo(i, R.Bottom);
-          LineTo(R.TopLeft);
-        end;
-      end;
-  end;
-end;
-
-procedure TVarGrid.DblClick;
-var
-  pt: TPoint;
-begin
-  pt:=MouseToCell(ScreenToClient(Mouse.CursorPos));
-  if (pt.y < FixedRows) and (pt.y = 0) and (Cursor <> crHSplit) then
-    exit;
-  inherited DblClick;
-end;
-
-procedure TVarGrid.Click;
-begin
-  if Assigned(OnClick) then
-    OnClick(Self);
-end;
-
-procedure TVarGrid.GetCheckBoxState(const aCol, aRow: Integer; var aState: TCheckboxState);
-var
-  s: string;
-begin
-  if (aCol >= FixedCols) and (aRow >= FixedRows) then begin
-    s:=Items[ColToDataCol(aCol), aRow - FixedRows];
-    with Columns[GridColumnFromColumnIndex(aCol)] do
-      if s = ValueChecked then
-        aState:=cbChecked
-      else
-        if s = ValueUnchecked then
-          aState:=cbUnchecked
-        else
-          aState:=cbGrayed;
-  end;
-  inherited GetCheckBoxState(aCol, aRow, aState);
-end;
-
-procedure TVarGrid.SetCheckboxState(const aCol, aRow: Integer; const aState: TCheckboxState);
-var
-  s: string;
-begin
-  if (aCol >= FixedCols) and (aRow >= FixedRows) then begin
-    with Columns[GridColumnFromColumnIndex(aCol)] do
-      case aState of
-        cbUnchecked:
-          s:=ValueUnchecked;
-        cbChecked:
-          s:=ValueChecked;
-        else
-          s:='?';
-      end;
-    Items[ColToDataCol(aCol), aRow - FixedRows]:=s;
-  end;
-  inherited SetCheckboxState(aCol, aRow, aState);
-end;
-
-procedure TVarGrid.SetupCell(ACol, ARow: integer; AState: TGridDrawState; out CellAttribs: TCellAttributes);
-var
-  v: variant;
-  dc: integer;
-begin
-  if (ACol < 0) or (ARow < 0) then
-    exit;
-  CellAttribs.ImageIndex:=-1;
-  CellAttribs.Indent:=0;
-  CellAttribs.Options:=[];
-  CellAttribs.State:=cbUnchecked;
-  CellAttribs.Expanded:=True;
-  if ACol >= FixedCols then begin
-    dc:=ColToDataCol(ACol);
-    if ARow >= FixedRows then begin
-      v:=Items[dc, ARow - FixedRows];
-      if not VarIsNull(v) and not VarIsEmpty(v) then
-        CellAttribs.Text:=UTF8Encode(WideString(v))
-      else
-        CellAttribs.Text:='';
-    end
-    else
-      CellAttribs.Text:=ColumnFromGridColumn(ACol).Title.Caption;
-  end
-  else
-    dc:=-1;
-  DoOnCellAttributes(ACol - FixedCols, ARow - FixedRows, dc, AState, CellAttribs);
-end;
-
-procedure TVarGrid.DoOnCheckBoxClick(ACol, ARow: integer);
-var
-  i, dc, c: integer;
-  ca: TCellAttributes;
-  st: TCheckBoxState;
-begin
-  if Assigned(FOnCheckBoxClick) then begin
-    dc:=ColToDataCol(ACol);
-    c:=ACol - FixedCols;
-    FOnCheckBoxClick(Self, c, ARow - FixedRows, dc);
-    if (SelCount > 0) and RowSelected[ARow - FixedRows] then begin
-      SetupCell(ACol, ARow, [], ca);
-      st:=ca.State;
-      for i:=0 to Items.Count - 1 do
-        if RowSelected[i] then begin
-          SetupCell(ACol, i + FixedRows, [], ca);
-          if (coDrawCheckBox in ca.Options) and (ca.State <> st) then
-            FOnCheckBoxClick(Self, c, i, dc);
-        end;
-    end;
-  end;
-end;
-
-procedure TVarGrid.DoOnTreeButtonClick(ACol, ARow: integer);
-begin
-  if Assigned(FOnTreeButtonClick) then
-    FOnTreeButtonClick(Self, ACol - FixedCols, ARow - FixedRows, ColToDataCol(ACol));
-end;
-
-constructor TVarGrid.Create(AOwner: TComponent);
-begin
-  FRow:=-1;
-  FHintCell.x:=-1;
-  inherited Create(AOwner);
-  FixedRows:=1;
-  FixedCols:=0;
-  Options:=[goRowSelect, goThumbTracking, goVertLine, goHorzLine, goColSizing, goColMoving, goDblClickAutoSize, goFixedHorzLine, goFixedVertLine];
-  MouseWheelOption:=mwGrid;
-  FItems:=TVarList.Create(1, 0);
-  FItems.OnDataChanged:=@ItemsChanged;
-  ItemsChanged(nil);
-  TitleStyle:=tsNative;
-  FAnchor:=-1;
-  FSortColumn:=-1;
-  ShowHint:=True;
-  SetLength(FColumnsMap, 1);
-  FColumnsMap[0]:=0;
-end;
-
-destructor TVarGrid.Destroy;
-begin
-  inherited Destroy;
-  FItems.Free;
-end;
-
-procedure TVarGrid.RemoveSelection;
-var
-  i: integer;
-begin
-  for i:=0 to FItems.Count - 1 do
-    RowSelected[i]:=False;
-  FSelCount:=0;
-end;
-
-procedure TVarGrid.SelectAll;
-var
-  i: integer;
-begin
-  for i:=0 to FItems.Count - 1 do
-    RowSelected[i]:=True;
-end;
-
-procedure TVarGrid.Sort;
-var
-  i, c: integer;
-begin
-  if (FSortColumn >= 0) and (FItems.Count > 0) then begin
-    c:=FSortColumn;
-    if Assigned(FOnSortColumn) then
-      FOnSortColumn(Self, c);
-    if not FItems.IsUpdating and (Row >= 0) and (Row < FItems.Count) then
-      FItems.RowOptions[Row]:=FItems.RowOptions[Row] or roCurRow;
-    FItems.Sort(c, SortOrder = soDescending);
-    if not FItems.IsUpdating then begin
-      for i:=0 to FItems.Count - 1 do
-        if LongBool(FItems.RowOptions[i] and roCurRow) then begin
-          FItems.RowOptions[i]:=FItems.RowOptions[i] and not roCurRow;
-          Row:=i;
-          break;
-        end;
-      Invalidate;
-    end;
-  end;
-end;
-
-function TVarGrid.ColToDataCol(ACol: integer): integer;
-begin
-  if (ACol >= FixedCols) and (ACol < ColCount) then
-    Result:=FColumnsMap[ACol]
-  else
-    Result:=-1;
-end;
-
-end.
-
+{*************************************************************************************
+  This file is part of Transmission Remote GUI.
+  Copyright (c) 2008-2010 by Yury Sidorov.
+
+  Transmission Remote GUI is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  Transmission Remote GUI is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with Transmission Remote GUI; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+*************************************************************************************}
+
+unit VarGrid;
+
+{$mode objfpc}{$H+}
+
+interface
+
+uses
+  Classes, SysUtils, Grids, VarList, Graphics, Controls, LMessages, Forms, StdCtrls;
+
+type
+  TVarGrid = class;
+
+  TCellOption = (coDrawCheckBox, coDrawTreeButton);
+  TCellOptions = set of TCellOption;
+
+  TCellAttributes = record
+    Text: string;
+    ImageIndex: integer;
+    Indent: integer;
+    Options: TCellOptions;
+    State: TCheckBoxState;
+    Expanded: boolean;
+  end;
+
+  TOnCellAttributes = procedure (Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes) of object;
+  TOnDrawCellEvent = procedure (Sender: TVarGrid; ACol, ARow, ADataCol: integer; AState: TGridDrawState; const R: TRect; var ADefaultDrawing: boolean) of object;
+  TOnSortColumnEvent = procedure (Sender: TVarGrid; var ASortCol: integer) of object;
+  TCellNotifyEvent = procedure (Sender: TVarGrid; ACol, ARow, ADataCol: integer) of object;
+
+  { TVarGrid }
+
+  TVarGrid = class(TCustomDrawGrid)
+  private
+    FFirstVisibleColumn: integer;
+    FHideSelection: boolean;
+    FImages: TImageList;
+    FItems: TVarList;
+    FItemsChanging: boolean;
+    FColumnsMap: array of integer;
+    FMultiSelect: boolean;
+    FOnCellAttributes: TOnCellAttributes;
+    FOnCheckBoxClick: TCellNotifyEvent;
+    FOnDrawCell: TOnDrawCellEvent;
+    FOnTreeButtonClick: TCellNotifyEvent;
+    FSelCount: integer;
+    FAnchor: integer;
+    FSortColumn: integer;
+    FOnSortColumn: TOnSortColumnEvent;
+    FRow: integer;
+    FHintCell: TPoint;
+
+    function GetRow: integer;
+    function GetRowSelected(RowIndex: integer): boolean;
+    function GetRowVisible(RowIndex: integer): boolean;
+    function GetSortOrder: TSortOrder;
+    procedure ItemsChanged(Sender: TObject);
+    procedure SetHideSelection(const AValue: boolean);
+    procedure SetRow(const AValue: integer);
+    procedure SetRowSelected(RowIndex: integer; const AValue: boolean);
+    procedure SetRowVisible(RowIndex: integer; const AValue: boolean);
+    procedure SetSortColumn(const AValue: integer);
+    procedure SetSortOrder(const AValue: TSortOrder);
+    procedure UpdateColumnsMap;
+    procedure UpdateSelCount;
+    procedure SelectRange(OldRow, NewRow: integer);
+    procedure CMHintShow(var Message: TCMHintShow); message CM_HINTSHOW;
+    function CellNeedsCheckboxBitmaps(const aCol,aRow: Integer): boolean;
+    procedure DrawCellCheckboxBitmaps(const aCol,aRow: Integer; const aRect: TRect);
+
+  protected
+    procedure SizeChanged(OldColCount, OldRowCount: Integer); override;
+    procedure DrawCell(aCol,aRow: Integer; aRect: TRect; aState:TGridDrawState); override;
+    procedure ColRowMoved(IsColumn: Boolean; FromIndex,ToIndex: Integer); override;
+    procedure PrepareCanvas(aCol,aRow: Integer; aState:TGridDrawState); override;
+    procedure MouseDown(Button: TMouseButton; Shift:TShiftState; X,Y:Integer); override;
+    procedure MouseMove(Shift: TShiftState; X,Y: Integer);override;
+    procedure KeyDown(var Key : Word; Shift : TShiftState); override;
+    procedure DoOnCellAttributes(ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+    procedure HeaderClick(IsColumn: Boolean; index: Integer); override;
+    procedure AutoAdjustColumn(aCol: Integer); override;
+    procedure VisualChange; override;
+    procedure DrawColumnText(aCol,aRow: Integer; aRect: TRect; aState:TGridDrawState); override;
+    procedure DblClick; override;
+    procedure Click; override;
+    procedure GetCheckBoxState(const aCol, aRow:Integer; var aState:TCheckboxState); override;
+    procedure SetCheckboxState(const aCol, aRow:Integer; const aState: TCheckboxState); override;
+    procedure SetupCell(ACol, ARow: integer; AState: TGridDrawState; out CellAttribs: TCellAttributes);
+    procedure DoOnCheckBoxClick(ACol, ARow: integer);
+    procedure DoOnTreeButtonClick(ACol, ARow: integer);
+
+  public
+    constructor Create(AOwner: TComponent); override;
+    destructor Destroy; override;
+    procedure RemoveSelection;
+    procedure SelectAll;
+    procedure Sort; reintroduce;
+    function ColToDataCol(ACol: integer): integer;
+
+    property Items: TVarList read FItems;
+    property RowSelected[RowIndex: integer]: boolean read GetRowSelected write SetRowSelected;
+    property RowVisible[RowIndex: integer]: boolean read GetRowVisible write SetRowVisible;
+    property SelCount: integer read FSelCount;
+    property Row: integer read GetRow write SetRow;
+    property FirstVisibleColumn: integer read FFirstVisibleColumn;
+  published
+    property Align;
+    property AlternateColor;
+    property Anchors;
+    property BorderSpacing;
+    property BorderStyle;
+    property Color;
+    property Columns;
+    property Constraints;
+    property DragCursor;
+    property DragKind;
+    property DragMode;
+    property Enabled;
+    property FixedCols;
+    property FixedRows;
+    property Font;
+    property GridLineWidth;
+    property Options;
+    property ParentColor default false;
+    property ParentFont;
+    property ParentShowHint default false;
+    property PopupMenu;
+    property RowCount;
+    property ScrollBars;
+    property ShowHint default True;
+    property TabOrder;
+    property TabStop;
+    property TitleFont;
+    property TitleImageList;
+    property TitleStyle default tsNative;
+    property Visible;
+
+    property OnClick;
+    property OnDblClick;
+    property OnEnter;
+    property OnExit;
+    property OnHeaderClick;
+    property OnHeaderSized;
+    property OnKeyDown;
+    property OnKeyPress;
+    property OnKeyUp;
+    property OnMouseDown;
+    property OnMouseMove;
+    property OnMouseUp;
+    property OnMouseWheelDown;
+    property OnMouseWheelUp;
+    property OnContextPopup;
+    property OnDragDrop;
+    property OnDragOver;
+    property OnEndDock;
+    property OnEndDrag;
+    property OnStartDock;
+    property OnStartDrag;
+    property OnUTF8KeyPress;
+    property OnResize;
+
+    property Images: TImageList read FImages write FImages;
+    property MultiSelect: boolean read FMultiSelect write FMultiSelect default False;
+    property SortColumn: integer read FSortColumn write SetSortColumn default -1;
+    property SortOrder: TSortOrder read GetSortOrder write SetSortOrder default soAscending;
+    property HideSelection: boolean read FHideSelection write SetHideSelection default False;
+
+    property OnCellAttributes: TOnCellAttributes read FOnCellAttributes write FOnCellAttributes;
+    property OnDrawCell: TOnDrawCellEvent read FOnDrawCell write FOnDrawCell;
+    property OnSortColumn: TOnSortColumnEvent read FOnSortColumn write FOnSortColumn;
+    property OnCheckBoxClick: TCellNotifyEvent read FOnCheckBoxClick write FOnCheckBoxClick;
+    property OnTreeButtonClick: TCellNotifyEvent read FOnTreeButtonClick write FOnTreeButtonClick;
+  end;
+
+procedure Register;
+
+implementation
+
+uses Variants, LCLType, Math, GraphType, lclintf, Themes, types
+     {$ifdef LCLcarbon} , carbonproc {$endif LCLcarbon};
+
+const
+  roSelected = 1;
+  roCurRow   = 2;
+
+procedure Register;
+begin
+  RegisterComponents('TransGUI', [TVarGrid]);
+end;
+
+{ TVarGrid }
+
+procedure TVarGrid.ItemsChanged(Sender: TObject);
+var
+  i, OldRows, OldCols: integer;
+begin
+  FItemsChanging:=True;
+  try
+    OldRows:=RowCount;
+    OldCols:=Columns.Count;
+    RowCount:=FItems.RowCnt + FixedRows;
+    if FRow <> -1 then begin
+      Row:=FRow;
+      FRow:=-1;
+    end;
+    UpdateSelCount;
+    while Columns.Count > FItems.ColCnt do
+      Columns.Delete(Columns.Count - 1);
+    if Columns.Count <> FItems.ColCnt then begin
+      Columns.BeginUpdate;
+      try
+        for i:=Columns.Count to FItems.ColCnt - 1 do
+          Columns.Add;
+      finally
+        Columns.EndUpdate;
+      end;
+    end;
+    if (OldRows <> RowCount) or (OldCols <> Columns.Count) then begin
+      if Parent <> nil then
+        HandleNeeded;
+      ResetSizes;
+    end
+    else
+      Invalidate;
+  finally
+    FItemsChanging:=False;
+  end;
+end;
+
+procedure TVarGrid.SetHideSelection(const AValue: boolean);
+begin
+  if FHideSelection=AValue then exit;
+  FHideSelection:=AValue;
+  Invalidate;
+end;
+
+procedure TVarGrid.SetRow(const AValue: integer);
+var
+  i: integer;
+begin
+  if FItems.IsUpdating then
+    FRow:=AValue
+  else begin
+    i:=LeftCol;
+    inherited Row:=AValue + FixedRows;
+    LeftCol:=i;
+  end;
+end;
+
+function TVarGrid.GetRowSelected(RowIndex: integer): boolean;
+begin
+  Result:=LongBool(FItems.RowOptions[RowIndex] and roSelected);
+end;
+
+function TVarGrid.GetRowVisible(RowIndex: integer): boolean;
+begin
+  Result:=RowHeights[RowIndex + FixedRows] > 0;
+end;
+
+function TVarGrid.GetSortOrder: TSortOrder;
+begin
+  Result:=inherited SortOrder;
+end;
+
+function TVarGrid.GetRow: integer;
+begin
+  if FItems.IsUpdating and (FRow <> -1) then
+    Result:=FRow
+  else begin
+    Result:=inherited Row - FixedRows;
+  end;
+end;
+
+procedure TVarGrid.SetRowSelected(RowIndex: integer; const AValue: boolean);
+var
+  i, j: integer;
+begin
+  i:=FItems.RowOptions[RowIndex];
+  if AValue then begin
+    j:=i or roSelected;
+    if j <> i then
+      Inc(FSelCount);
+  end
+  else begin
+    j:=i and not roSelected;
+    if j <> i then
+      Dec(FSelCount);
+  end;
+  FItems.RowOptions[RowIndex]:=j;
+  InvalidateRow(RowIndex + FixedRows);
+  if FSelCount <= 1 then
+    InvalidateRow(inherited Row);
+end;
+
+procedure TVarGrid.SetRowVisible(RowIndex: integer; const AValue: boolean);
+begin
+  if AValue then
+    RowHeights[RowIndex + FixedRows]:=DefaultRowHeight
+  else
+    RowHeights[RowIndex + FixedRows]:=0;
+end;
+
+procedure TVarGrid.SetSortColumn(const AValue: integer);
+begin
+  if FSortColumn=AValue then exit;
+  FSortColumn:=AValue;
+  if FSortColumn >= 0 then
+    Options:=Options + [goHeaderPushedLook, goHeaderHotTracking]
+  else
+    Options:=Options - [goHeaderPushedLook, goHeaderHotTracking];
+  Sort;
+end;
+
+procedure TVarGrid.SetSortOrder(const AValue: TSortOrder);
+begin
+  if SortOrder = AValue then exit;
+  inherited SortOrder:=AValue;
+  Sort;
+end;
+
+procedure TVarGrid.UpdateColumnsMap;
+var
+  i, j: integer;
+begin
+  FFirstVisibleColumn:=-1;
+  SetLength(FColumnsMap, Columns.Count);
+  j:=0;
+  for i:=0 to Columns.Count - 1 do
+    with Columns[i] do begin
+      if (FFirstVisibleColumn < 0) and Visible then
+        FFirstVisibleColumn:=i;
+      FColumnsMap[j]:=ID - 1;
+      Inc(j);
+    end;
+  SetLength(FColumnsMap, j);
+end;
+
+procedure TVarGrid.UpdateSelCount;
+var
+  i: integer;
+begin
+  FSelCount:=0;
+  for i:=0 to FItems.Count - 1 do
+    if RowSelected[i] then
+      Inc(FSelCount);
+end;
+
+procedure TVarGrid.SelectRange(OldRow, NewRow: integer);
+var
+  dir: integer;
+  sel: boolean;
+begin
+  if OldRow = NewRow then
+    exit;
+  if FAnchor = -1 then
+    FAnchor:=OldRow;
+  dir:=Sign(NewRow - OldRow);
+  if Sign(FAnchor - OldRow) <> Sign(FAnchor - NewRow) then
+    while OldRow <> FAnchor do begin
+      RowSelected[OldRow]:=False;
+      Inc(OldRow, dir);
+    end;
+  sel:=Abs(FAnchor - OldRow) < Abs(FAnchor - NewRow);
+  while OldRow <> NewRow do begin
+    RowSelected[OldRow]:=sel;
+    Inc(OldRow, dir);
+  end;
+  RowSelected[NewRow]:=True;
+end;
+
+procedure TVarGrid.CMHintShow(var Message: TCMHintShow);
+var
+  ca: TCellAttributes;
+  pt: TPoint;
+  wd: integer;
+  R: TRect;
+begin
+  with Message.HintInfo^ do begin
+    pt:=MouseToCell(CursorPos);
+    if (pt.x >= FixedCols) and (pt.y >= 0) then begin
+      R:=CellRect(pt.x, pt.y);
+      if PtInRect(R, CursorPos) then begin
+        SetupCell(pt.x, pt.y, [], ca);
+        if ca.Text <> '' then begin
+          wd:=Canvas.TextWidth(ca.Text);
+          Inc(R.Left, ca.Indent);
+          if coDrawTreeButton in ca.Options then
+            Inc(R.Left, R.Bottom - R.Top);
+          if coDrawCheckBox in ca.Options then
+            Inc(R.Left, R.Bottom - R.Top);
+          if (ca.ImageIndex <> -1) and Assigned(FImages) then
+            Inc(R.Left, FImages.Width + 2);
+          if (R.Right <= R.Left) or (R.Right - R.Left < wd + 5) then begin
+            HintStr:=ca.Text;
+            R.Top:=(R.Top + R.Bottom - Canvas.TextHeight(ca.Text)) div 2 - 4;
+            Dec(R.Left);
+            HintPos:=ClientToScreen(R.TopLeft);
+          end;
+          FHintCell:=pt;
+        end
+        else
+          Message.Result:=1;
+      end
+      else
+        Message.Result:=1;
+    end;
+  end;
+end;
+
+function TVarGrid.CellNeedsCheckboxBitmaps(const aCol, aRow: Integer): boolean;
+var
+  C: TGridColumn;
+begin
+  Result := false;
+  if (aRow>=FixedRows) and Columns.Enabled then begin
+    C := ColumnFromGridColumn(aCol);
+    result := (C<>nil) and (C.ButtonStyle=cbsCheckboxColumn)
+  end;
+end;
+
+procedure TVarGrid.DrawCellCheckboxBitmaps(const aCol, aRow: Integer; const aRect: TRect);
+var
+  AState: TCheckboxState;
+begin
+  AState := cbUnchecked;
+  GetCheckBoxState(aCol, aRow, aState);
+  DrawGridCheckboxBitmaps(aCol, aRow, aRect, aState);
+end;
+
+procedure TVarGrid.SizeChanged(OldColCount, OldRowCount: Integer);
+begin
+  if not FItemsChanging and (FItems <> nil) then begin
+    FItems.ColCnt:=Columns.Count;
+    FItems.RowCnt:=RowCount - FixedRows;
+    UpdateColumnsMap;
+  end;
+  inherited;
+end;
+
+procedure TVarGrid.DrawCell(aCol, aRow: Integer; aRect: TRect; aState: TGridDrawState);
+var
+  ca: TCellAttributes;
+  ts: TTextStyle;
+  dd, IsHeader: boolean;
+  R: TRect;
+  det: TThemedElementDetails;
+  sz: TSize;
+  i: integer;
+begin
+  if RowHeights[aRow] = 0 then
+    exit;
+  IsHeader:=(gdFixed in aState) and (aRow=0) and (aCol>=FirstGridColumn);
+  if not IsHeader and MultiSelect and (FSelCount > 0) then
+    if (aRow >= FixedRows) and (aCol >= FixedCols) and RowSelected[aRow - FixedRows] then
+      Include(aState, gdSelected)
+    else
+      Exclude(aState, gdSelected);
+
+  PrepareCanvas(aCol, aRow, aState);
+  if DefaultDrawing then
+    SetupCell(aCol, aRow, aState, ca);
+  if not IsHeader or (TitleStyle<>tsNative) then
+    Canvas.FillRect(aRect);
+
+  if not IsHeader then begin
+    dd:=True;
+    if Assigned(FOnDrawCell) then begin
+      R:=CellRect(aCol, aRow);
+      if goVertLine in Options then
+        Dec(R.Right, 1);
+      if goHorzLine in Options then
+        Dec(R.Bottom, 1);
+      FOnDrawCell(Self, aCol, aRow - FixedRows, ColToDataCol(aCol), aState, R, dd);
+    end;
+
+    if DefaultDrawing and dd then begin
+      if CellNeedsCheckboxBitmaps(aCol,aRow) then
+        DrawCellCheckboxBitmaps(aCol,aRow,aRect)
+      else begin
+        Inc(aRect.Left, ca.Indent);
+        if coDrawTreeButton in ca.Options then begin
+          R:=aRect;
+          R.Right:=R.Left + (R.Bottom - R.Top);
+          aRect.Left:=R.Right;
+          if ThemeServices.ThemesEnabled then begin
+            if ca.Expanded then
+              det:=ThemeServices.GetElementDetails(ttGlyphOpened)
+            else
+              det:=ThemeServices.GetElementDetails(ttGlyphClosed);
+            sz:=ThemeServices.GetDetailSize(det);
+            with R do begin
+              Left:=(Left + Right - sz.cx) div 2;
+              Top:=(Top + Bottom - sz.cy) div 2;
+              R:=Bounds(Left, Top, sz.cx, sz.cy);
+            end;
+            ThemeServices.DrawElement(Canvas.Handle, det, R, nil);
+          end
+          else
+            with Canvas do begin
+              i:=(R.Bottom - R.Top) div 4;
+              InflateRect(R, -i, -i);
+              if (R.Right - R.Left) and 1 = 0 then
+                Dec(R.Right);
+              if (R.Bottom - R.Top) and 1 = 0 then
+                Dec(R.Bottom);
+              Pen.Color:=clWindowText;
+              Rectangle(R);
+              InflateRect(R, -1, -1);
+              Brush.Color:=clWindow;
+              FillRect(R);
+              InflateRect(R, -1, -1);
+              i:=(R.Top + R.Bottom) div 2;
+              MoveTo(R.Left, i);
+              LineTo(R.Right, i);
+              if not ca.Expanded then begin
+                i:=(R.Left + R.Right) div 2;
+                MoveTo(i, R.Top);
+                LineTo(i, R.Bottom);
+              end;
+            end;
+        end;
+        if coDrawCheckBox in ca.Options then begin
+          R:=aRect;
+          R.Right:=R.Left + (R.Bottom - R.Top);
+          aRect.Left:=R.Right;
+          DrawGridCheckboxBitmaps(aCol, aRow, R, ca.State);
+        end;
+        if (ca.ImageIndex <> -1) and Assigned(FImages) then begin
+          FImages.Draw(Canvas, aRect.Left + 2, (aRect.Bottom + aRect.Top - FImages.Height) div 2, ca.ImageIndex, gdeNormal);
+          Inc(aRect.Left, FImages.Width + 2);
+        end;
+        if (Canvas.TextStyle.Alignment <> taLeftJustify) and (ca.Text <> '') then
+          if (aRect.Right <= aRect.Left) or (aRect.Right - aRect.Left < Canvas.TextWidth(ca.Text) + 9) then begin
+            ts:=Canvas.TextStyle;
+            ts.Alignment:=taLeftJustify;
+            Canvas.TextStyle:=ts;
+          end;
+        DrawCellText(aCol, aRow, aRect, aState, ca.Text);
+      end;
+    end;
+  end;
+  if gdFixed in aState then
+    DefaultDrawCell(aCol, aRow, aRect, aState)
+  else
+    DrawCellGrid(aCol,aRow,aRect,aState);
+end;
+
+procedure TVarGrid.ColRowMoved(IsColumn: Boolean; FromIndex, ToIndex: Integer);
+begin
+  inherited ColRowMoved(IsColumn, FromIndex, ToIndex);
+  UpdateColumnsMap;
+end;
+
+procedure TVarGrid.PrepareCanvas(aCol, aRow: Integer; aState: TGridDrawState);
+var
+  F: TCustomForm;
+begin
+  F:=GetParentForm(Self);
+  if FHideSelection and (FSelCount = 0) and (F <> nil) and (F.ActiveControl <> Self) then
+    aState:=aState - [gdSelected];
+  inherited PrepareCanvas(aCol, aRow, aState);
+  with Canvas do
+    if (Font.Color = clWindow) and (Brush.Color = clHighlight) then begin
+      Font.Color:=clHighlightText;
+{$ifdef LCLgtk2}
+      Brush.Color:=ColorToRGB(Brush.Color); // Workaround for LCL bug
+{$endif LCLgtk2}
+    end;
+end;
+
+procedure TVarGrid.MouseDown(Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
+var
+  pt: TPoint;
+  IsCtrl, CheckBoxClicked: boolean;
+  ca: TCellAttributes;
+  R, RR: TRect;
+begin
+{$ifdef LCLcarbon}
+  IsCtrl:=ssMeta in GetCarbonShiftState;
+{$else}
+  IsCtrl:=ssCtrl in Shift;
+{$endif LCLcarbon}
+  CheckBoxClicked:=False;
+  pt:=MouseToCell(Point(X,Y));
+  if ssLeft in Shift then begin
+    SetupCell(pt.x, pt.y, [], ca);
+    RR:=CellRect(pt.x, pt.y);
+    Inc(RR.Left, ca.Indent);
+    if (RR.Left <= RR.Right) and (coDrawTreeButton in ca.Options) then begin
+      R:=RR;
+      R.Right:=R.Left + (R.Bottom - R.Top);
+      if R.Right > RR.Right then
+        R.Right:=RR.Right;
+      if PtInRect(R, Point(X,Y)) then begin
+        DoOnTreeButtonClick(pt.x, pt.y);
+        InvalidateCell(pt.x, pt.y);
+      end;
+      Inc(RR.Left, RR.Bottom - RR.Top);
+    end;
+    if (RR.Left <= RR.Right) and (coDrawCheckBox in ca.Options) then begin
+      R:=RR;
+      R.Right:=R.Left + (R.Bottom - R.Top);
+      if R.Right > RR.Right then
+        R.Right:=RR.Right;
+      if PtInRect(R, Point(X,Y)) then begin
+        DoOnCheckBoxClick(pt.x, pt.y);
+        InvalidateCell(pt.x, pt.y);
+        CheckBoxClicked:=True;
+      end;
+    end;
+  end;
+  if (ssRight in Shift) {$ifdef darwin} or (Shift*[ssLeft, ssCtrl] = [ssLeft, ssCtrl]) {$endif} then begin
+    SetFocus;
+    if (pt.x >= FixedCols) and (pt.y >= FixedRows) then begin
+      if MultiSelect and (SelCount > 0) and not RowSelected[pt.y - FixedRows] then
+        RemoveSelection;
+      Row:=pt.y - FixedRows;
+    end;
+  end
+  else
+    if MultiSelect and (ssLeft in Shift) and (pt.x >= FixedCols) and (pt.y >= FixedRows) then begin
+      if IsCtrl then begin
+        if SelCount = 0 then
+          RowSelected[Row]:=True;
+        RowSelected[pt.y - FixedRows]:=not RowSelected[pt.y - FixedRows];
+        FAnchor:=-1;
+      end
+      else
+        if ssShift in Shift then
+          SelectRange(Row, pt.y - FixedRows)
+        else begin
+          if (SelCount > 0) and not CheckBoxClicked then
+            RemoveSelection;
+          FAnchor:=-1;
+        end;
+    end;
+  inherited MouseDown(Button, Shift, X, Y);
+end;
+
+procedure TVarGrid.MouseMove(Shift: TShiftState; X, Y: Integer);
+var
+  pt: TPoint;
+begin
+  inherited MouseMove(Shift, X, Y);
+  pt:=MouseToCell(Point(x, y));
+  if (FHintCell.x <> -1) and ((FHintCell.x <> pt.x) or (FHintCell.y <> pt.y)) then begin
+    Application.CancelHint;
+    FHintCell.x:=-1;
+  end;
+end;
+
+procedure TVarGrid.KeyDown(var Key: Word; Shift: TShiftState);
+var
+  r, k: integer;
+  ca: TCellAttributes;
+begin
+  r:=Row;
+  k:=Key;
+  if goRowSelect in Options then
+    Col:=FixedCols;
+
+  if (Shift = []) and ( (k = VK_SPACE) or (k = VK_LEFT) or (k = VK_RIGHT) or (k = VK_ADD) or (k = VK_SUBTRACT) ) then begin
+    SetupCell(FixedCols, inherited Row, [], ca);
+    case k of
+      VK_SPACE:
+        if coDrawCheckBox in ca.Options then begin
+          DoOnCheckBoxClick(FixedCols, inherited Row);
+          exit;
+        end;
+      VK_LEFT, VK_SUBTRACT:
+        if (coDrawTreeButton in ca.Options) and ca.Expanded then begin
+          DoOnTreeButtonClick(FixedCols, inherited Row);
+          exit;
+        end;
+      VK_RIGHT, VK_ADD:
+        if (coDrawTreeButton in ca.Options) and not ca.Expanded then begin
+          DoOnTreeButtonClick(FixedCols, inherited Row);
+          exit;
+        end;
+    end;
+  end;
+
+  inherited KeyDown(Key, Shift);
+
+  if MultiSelect then begin
+    if ssCtrl in Shift then begin
+      if k = VK_SPACE then
+        RowSelected[Row]:=not RowSelected[Row];
+      FAnchor:=-1;
+    end
+    else
+      if ssShift in Shift then begin
+        SelectRange(r, Row);
+      end
+      else
+        if k in [VK_LEFT, VK_RIGHT, VK_UP, VK_DOWN, VK_HOME, VK_END, VK_NEXT, VK_PRIOR] then begin
+          if SelCount > 0 then
+            RemoveSelection;
+          FAnchor:=-1;
+        end;
+  end;
+  if (Key = VK_RETURN) and Assigned(OnDblClick) then
+    OnDblClick(Self);
+end;
+
+procedure TVarGrid.DoOnCellAttributes(ACol, ARow, ADataCol: integer; AState: TGridDrawState; var CellAttribs: TCellAttributes);
+begin
+  if Assigned(FOnCellAttributes) then
+    FOnCellAttributes(Self, ACol, ARow, ADataCol, AState, CellAttribs);
+end;
+
+procedure TVarGrid.HeaderClick(IsColumn: Boolean; index: Integer);
+var
+  i: integer;
+begin
+  inherited HeaderClick(IsColumn, index);
+  if IsColumn and (FSortColumn >= 0) then begin
+    i:=ColToDataCol(index);
+    if FSortColumn = i then begin
+      if SortOrder = soAscending then
+        SortOrder:=soDescending
+      else
+        SortOrder:=soAscending;
+    end
+    else begin
+      SortOrder:=soAscending;
+      SortColumn:=i;
+    end;
+  end;
+end;
+
+procedure TVarGrid.AutoAdjustColumn(aCol: Integer);
+var
+  i, j, wd, h: integer;
+  ca: TCellAttributes;
+begin
+  wd:=4;
+  for i:=0 to FItems.Count - 1 do begin
+    h:=RowHeights[i + FixedRows];
+    if h > 0 then begin
+      SetupCell(aCol, i, [], ca);
+      j:=Canvas.TextWidth(ca.Text) + 6;
+      Inc(j, ca.Indent);
+      if coDrawTreeButton in ca.Options then
+        Inc(j, h);
+      if coDrawCheckBox in ca.Options then
+        Inc(j, h);
+      if (ca.ImageIndex <> -1) and Assigned(FImages) then
+        Inc(j, FImages.Width + 2);
+      if j > wd then
+        wd:=j;
+    end;
+  end;
+  ColumnFromGridColumn(aCol).Width:=wd;
+end;
+
+procedure TVarGrid.VisualChange;
+begin
+  inherited VisualChange;
+  if HandleAllocated then
+    DefaultRowHeight:=Canvas.TextHeight('Xy') + 5;
+  UpdateColumnsMap;
+end;
+
+procedure TVarGrid.DrawColumnText(aCol, aRow: Integer; aRect: TRect; aState: TGridDrawState);
+var
+  R: TRect;
+  i: integer;
+begin
+  if (gdFixed in aState) and (aRow=0) and (aCol>=FirstGridColumn) then begin
+    R:=aRect;
+    if FSortColumn = ColToDataCol(aCol) then begin
+      R.Right:=R.Left + R.Bottom - R.Top;
+      InflateRect(R, -5, -5);
+      OffsetRect(R, -3, 0);
+      Dec(R.Bottom, 2);
+      aRect.Left:=R.Right + 2;
+    end;
+    inherited DrawColumnText(aCol, aRow, aRect, aState);
+    if FSortColumn = ColToDataCol(aCol) then
+      with Canvas do begin
+        Pen.Color:=clGrayText;
+        i:=(R.Left + R.Right) div 2;
+        if SortOrder = soAscending then begin
+          MoveTo(i, R.Top);
+          LineTo(R.Right, R.Bottom);
+          LineTo(R.Left, R.Bottom);
+          LineTo(i, R.Top);
+        end
+        else begin
+          MoveTo(R.TopLeft);
+          LineTo(R.Right, R.Top);
+          LineTo(i, R.Bottom);
+          LineTo(R.TopLeft);
+        end;
+      end;
+  end;
+end;
+
+procedure TVarGrid.DblClick;
+var
+  pt: TPoint;
+begin
+  pt:=MouseToCell(ScreenToClient(Mouse.CursorPos));
+  if (pt.y < FixedRows) and (pt.y = 0) and (Cursor <> crHSplit) then
+    exit;
+  inherited DblClick;
+end;
+
+procedure TVarGrid.Click;
+begin
+  if Assigned(OnClick) then
+    OnClick(Self);
+end;
+
+procedure TVarGrid.GetCheckBoxState(const aCol, aRow: Integer; var aState: TCheckboxState);
+var
+  s: string;
+begin
+  if (aCol >= FixedCols) and (aRow >= FixedRows) then begin
+    s:=Items[ColToDataCol(aCol), aRow - FixedRows];
+    with Columns[GridColumnFromColumnIndex(aCol)] do
+      if s = ValueChecked then
+        aState:=cbChecked
+      else
+        if s = ValueUnchecked then
+          aState:=cbUnchecked
+        else
+          aState:=cbGrayed;
+  end;
+  inherited GetCheckBoxState(aCol, aRow, aState);
+end;
+
+procedure TVarGrid.SetCheckboxState(const aCol, aRow: Integer; const aState: TCheckboxState);
+var
+  s: string;
+begin
+  if (aCol >= FixedCols) and (aRow >= FixedRows) then begin
+    with Columns[GridColumnFromColumnIndex(aCol)] do
+      case aState of
+        cbUnchecked:
+          s:=ValueUnchecked;
+        cbChecked:
+          s:=ValueChecked;
+        else
+          s:='?';
+      end;
+    Items[ColToDataCol(aCol), aRow - FixedRows]:=s;
+  end;
+  inherited SetCheckboxState(aCol, aRow, aState);
+end;
+
+procedure TVarGrid.SetupCell(ACol, ARow: integer; AState: TGridDrawState; out CellAttribs: TCellAttributes);
+var
+  v: variant;
+  dc: integer;
+begin
+  if (ACol < 0) or (ARow < 0) then
+    exit;
+  CellAttribs.ImageIndex:=-1;
+  CellAttribs.Indent:=0;
+  CellAttribs.Options:=[];
+  CellAttribs.State:=cbUnchecked;
+  CellAttribs.Expanded:=True;
+  if ACol >= FixedCols then begin
+    dc:=ColToDataCol(ACol);
+    if ARow >= FixedRows then begin
+      v:=Items[dc, ARow - FixedRows];
+      if not VarIsNull(v) and not VarIsEmpty(v) then
+        CellAttribs.Text:=UTF8Encode(WideString(v))
+      else
+        CellAttribs.Text:='';
+    end
+    else
+      CellAttribs.Text:=ColumnFromGridColumn(ACol).Title.Caption;
+  end
+  else
+    dc:=-1;
+  DoOnCellAttributes(ACol - FixedCols, ARow - FixedRows, dc, AState, CellAttribs);
+end;
+
+procedure TVarGrid.DoOnCheckBoxClick(ACol, ARow: integer);
+var
+  i, dc, c: integer;
+  ca: TCellAttributes;
+  st: TCheckBoxState;
+begin
+  if Assigned(FOnCheckBoxClick) then begin
+    dc:=ColToDataCol(ACol);
+    c:=ACol - FixedCols;
+    FOnCheckBoxClick(Self, c, ARow - FixedRows, dc);
+    if (SelCount > 0) and RowSelected[ARow - FixedRows] then begin
+      SetupCell(ACol, ARow, [], ca);
+      st:=ca.State;
+      for i:=0 to Items.Count - 1 do
+        if RowSelected[i] then begin
+          SetupCell(ACol, i + FixedRows, [], ca);
+          if (coDrawCheckBox in ca.Options) and (ca.State <> st) then
+            FOnCheckBoxClick(Self, c, i, dc);
+        end;
+    end;
+  end;
+end;
+
+procedure TVarGrid.DoOnTreeButtonClick(ACol, ARow: integer);
+begin
+  if Assigned(FOnTreeButtonClick) then
+    FOnTreeButtonClick(Self, ACol - FixedCols, ARow - FixedRows, ColToDataCol(ACol));
+end;
+
+constructor TVarGrid.Create(AOwner: TComponent);
+begin
+  FRow:=-1;
+  FHintCell.x:=-1;
+  inherited Create(AOwner);
+  FixedRows:=1;
+  FixedCols:=0;
+  Options:=[goRowSelect, goThumbTracking, goVertLine, goHorzLine, goColSizing, goColMoving, goDblClickAutoSize, goFixedHorzLine, goFixedVertLine];
+  MouseWheelOption:=mwGrid;
+  FItems:=TVarList.Create(1, 0);
+  FItems.OnDataChanged:=@ItemsChanged;
+  ItemsChanged(nil);
+  TitleStyle:=tsNative;
+  FAnchor:=-1;
+  FSortColumn:=-1;
+  ShowHint:=True;
+  SetLength(FColumnsMap, 1);
+  FColumnsMap[0]:=0;
+end;
+
+destructor TVarGrid.Destroy;
+begin
+  inherited Destroy;
+  FItems.Free;
+end;
+
+procedure TVarGrid.RemoveSelection;
+var
+  i: integer;
+begin
+  for i:=0 to FItems.Count - 1 do
+    RowSelected[i]:=False;
+  FSelCount:=0;
+end;
+
+procedure TVarGrid.SelectAll;
+var
+  i: integer;
+begin
+  for i:=0 to FItems.Count - 1 do
+    RowSelected[i]:=True;
+end;
+
+procedure TVarGrid.Sort;
+var
+  i, c: integer;
+begin
+  if (FSortColumn >= 0) and (FItems.Count > 0) then begin
+    c:=FSortColumn;
+    if Assigned(FOnSortColumn) then
+      FOnSortColumn(Self, c);
+    if not FItems.IsUpdating and (Row >= 0) and (Row < FItems.Count) then
+      FItems.RowOptions[Row]:=FItems.RowOptions[Row] or roCurRow;
+    FItems.Sort(c, SortOrder = soDescending);
+    if not FItems.IsUpdating then begin
+      for i:=0 to FItems.Count - 1 do
+        if LongBool(FItems.RowOptions[i] and roCurRow) then begin
+          FItems.RowOptions[i]:=FItems.RowOptions[i] and not roCurRow;
+          Row:=i;
+          break;
+        end;
+      Invalidate;
+    end;
+  end;
+end;
+
+function TVarGrid.ColToDataCol(ACol: integer): integer;
+begin
+  if (ACol >= FixedCols) and (ACol <= High(FColumnsMap)) then
+    Result:=FColumnsMap[ACol]
+  else
+    Result:=-1;
+end;
+
+end.
+
