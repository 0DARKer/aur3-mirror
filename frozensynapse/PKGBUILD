#Maintainer: Gadget3000 <gadget3000 at msn dot com>
#Contributor: wido <widowild [ta] myopera [tod] com>

pkgname=frozensynapse
pkgver=1.0.32
pkgrel=1
pkgdesc="A single player and multiplayer simultaneous-turn-based tactical game. (The Humble Frozen Synapse Bundle)"
url="http://www.frozensynapse.com/"
groups=('humblefsbundle' 'humblebundles')
license=('custom: "commercial"')
arch=('i686' 'x86_64')
makedepends=('unzip')
optdepends=('lib32-nvidia-utils: If you have nvidia graphics'
            'lib32-catalyst-utils: If you have ATI graphics'
            'lib32-ati-dri: If you have ATI graphics')
source=(${pkgname}.desktop)
md5sums=('eccdc9f63917fdb761d45c5621853485')

if [[ $CARCH == x86_64 ]]; then
	depends=('lib32-glibc' 'lib32-gcc-libs' 'lib32-openal' 'lib32-sdl' 'lib32-mesa')
else
	depends=('glibc' 'gcc-libs' 'openal' 'sdl' 'mesa')
fi

_archive="${pkgname}-linux-32-1339710386.run"
_archive_md5="bcbfce04bd280b69bddea7a4bef0864a"
_gamepkg="FS_Linux_Latest.run"
_gamesum="eab8e416aa08161fa7475dfe6f85fb98f954c722985a1fe2a3115f944d3ff8a3"

build() {
  cd ${srcdir}

  if [ ! -f ${_fsarchivelocation}${_archive} ]; then
	  if [ ! -f ${_archive} ] && [ -n "${_humblefsbundlekey}" ]; then
		rm -f ${_archive}* index.html\?key\=${_humblefsbundlekey}*
		wget http://www.humblebundle.com/?key=${_humblefsbundlekey}
		wget $(cat index.html\?key\=${_humblefsbundlekey} | grep "${_archive}" | cut -d "'" -f 10)
		mv ${_archive}* ${_archive}
	  elif [ -z "${_humblefsbundlekey}" ]; then
		echo You can automate the download of the archive using the _humblefsbundlekey bash variable.
		echo Just add \'export _humblefsbundlekey\=\<Your key here\>\' to \.bashrc
		echo
		echo Otherwise please just place ${_archive} or ${_gamepkg} into $(pwd)/
		echo Press Enter to continue
		read -a _unused
	  fi
  fi

  if [ ! -f ${_fsarchivelocation}${_archive} ]; then
    if [ ! -f ${_gamepkg} ]; then
    echo "${_fsarchivelocation}${_archive} not found!"
    echo "${_gamepkg} not found!"
    return 1
   fi
  fi

  if [ ! $(echo "${_archive_md5}  ${_fsarchivelocation}${_archive}" | md5sum -c --quiet) ]; then
     if [ ! $(echo "${_gamesum} ${_gamepkg}" | sha256sum -c --quiet 2> /dev/null) ]; then
    echo "Invalid checksum for ${_fsarchivelocation}${_archive}"
    echo "Invalid checksum for ${_gamepkg}"
    return 1
 fi
  fi
}

package(){

  cd ${srcdir}
   if [ -f ${_gamepkg} ]; then
      mv ${_gamepkg} ${_archive}
   fi

  # directories
  #install -d ${pkgdir}/opt/${pkgname}
  chmod +x ${_archive}
  ./${_archive} --mode unattended --prefix ${pkgdir}/opt/${pkgname}

  # startup scripts
  install -Dd ${pkgdir}/usr/bin
  echo \#\!/bin/bash > ${pkgdir}/usr/bin/frozensynapse
  echo cd /opt/frozensynapse/ >> ${pkgdir}/usr/bin/frozensynapse
  echo ./FrozenSynapse \$@ >> ${pkgdir}/usr/bin/frozensynapse
  chmod +x ${pkgdir}/usr/bin/frozensynapse

  # desktop entry
  install -Dm644 ${srcdir}/${pkgname}.desktop ${pkgdir}/usr/share/applications/${pkgname}.desktop
  install -Dm644 "${pkgdir}/opt/${pkgname}/fs_icon.png" "${pkgdir}/usr/share/pixmaps/${pkgname}.png"
}
