# Maintainer: Thomas Dziedzic <gostrc@gmail.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: tobias [ tobias at archlinux org ]
# Contributor: Daniel J Griffiths <ghost1227@archlinux.us>

pkgname=vim-x11
_topver=7.4
_patchlevel=410
__hgrev=7af530381fec
pkgver=${_topver}.${_patchlevel}
pkgrel=1
arch=('i686' 'x86_64')
license=('custom:vim')
url="http://www.vim.org"
makedepends=('gpm' 'python2' 'python' 'ruby' 'libxt' 'desktop-file-utils' 'gtk2' 'lua')
source=("ftp://ftp.archlinux.org/other/vim/vim-${pkgver}.tar.xz"
        "ftp://ftp.archlinux.org/other/vim/vim-${pkgver}.tar.xz.sig"
        'vimrc'
        'archlinux.vim')
md5sums=('8e9722fbd9ddc3c05d21210939c23f23'
         'SKIP'
         'b9d4dcb9d3ee2e151dc4be1e94934f6a'
         'f3c8931847a12949bdd14c9d48fdabb3')

pkgdesc='Vi Improved, a highly configurable, improved version of the vi text editor (X11 support, no GUI)'
depends=("vim-runtime=${pkgver}-${pkgrel}" 'gpm' 'ruby' 'lua' 'python2')
conflicts=('vim-minimal' 'vim-python3' 'gvim' 'gvim-python3')

# source PKGBUILD && mksource
mksource() {
  [[ -x /usr/bin/hg ]] || (echo "hg not found. Install mercurial." && return 1)

  __hgroot='http://vim.googlecode.com/hg/'
  __hgrepo='vim'
  __hgbranch='default'

  hg clone -b ${__hgbranch} -u ${__hgrev} "${__hgroot}${__hgrepo}" ${__hgrepo}

  pushd ${__hgrepo}
  if (( $(hg id -n) < $(hg id -nr ${__hgbranch}) )); then
    printf 'You are not building the latest revision!\n'
    printf "Consider updating __hgrev to $(hg id -r ${__hgbranch}).\n"
  fi
  popd

  (cd vim/src && autoconf)

  mv vim ${pkgbase}-${pkgver}
  find ${pkgbase}-${pkgver} -depth -type d -name .hg -exec rm -rf {} \;
  rm ${pkgbase}-${pkgver}/{.hgignore,.hgtags}
  tar -cJf ${pkgbase}-${pkgver}.tar.xz ${pkgbase}-${pkgver}/*
  rm -r ${pkgbase}-${pkgver}

  gpg --detach-sign ${pkgbase}-${pkgver}.tar.xz

  scp ${pkgbase}-${pkgver}.tar.xz nym:/srv/ftp/other/vim/
  scp ${pkgbase}-${pkgver}.tar.xz.sig nym:/srv/ftp/other/vim/
}

build() {
  # define the place for the global (g)vimrc file (set to /etc/vimrc)
  sed -i 's|^.*\(#define SYS_.*VIMRC_FILE.*"\) .*$|\1|' \
    ${pkgbase}-${pkgver}/src/feature.h
  sed -i 's|^.*\(#define VIMRC_FILE.*"\) .*$|\1|' \
    ${pkgbase}-${pkgver}/src/feature.h

  for pkg in ${pkgname[@]}
  do
    cp -a ${pkgbase}-${pkgver} ${pkg}-build
  done

  cd "${srcdir}"/vim-build

  ./configure \
    --prefix=/usr \
    --localstatedir=/var/lib/vim \
    --with-features=huge \
    --with-compiledby='Arch Linux' \
    --enable-gpm \
    --enable-acl \
    --with-x=yes \
    --disable-gui \
    --enable-multibyte \
    --enable-cscope \
    --enable-netbeans \
    --enable-perlinterp \
    --enable-pythoninterp \
    --disable-python3interp \
    --enable-rubyinterp \
    --enable-luainterp

  make
}

check() {
  # disable tests because they seem to freeze

  cd "${srcdir}"/vim-build

  #make test
}

package() {
  cd "${srcdir}"/vim-build
  make -j1 VIMRCLOC=/etc DESTDIR="${pkgdir}" install

  # provided by (n)vi in core
  rm "${pkgdir}"/usr/bin/{ex,view}

  # delete some manpages
  find "${pkgdir}"/usr/share/man -type d -name 'man1' 2>/dev/null | \
    while read _mandir; do
    cd ${_mandir}
    rm -f ex.1 view.1 # provided by (n)vi
    rm -f evim.1    # this does not make sense if we have no GUI
  done

  # Runtime provided by runtime package
  rm -r "${pkgdir}"/usr/share/vim

  # license
  install -Dm644 "${srcdir}"/vim-${pkgver}/runtime/doc/uganda.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/license.txt
}

# vim:set sw=2 sts=2 et:
