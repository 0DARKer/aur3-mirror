# Maintainer: Hanspeter Portner <dev at open-music-kontrollers dot ch>
_pkgname=midi_matrix.lv2
pkgname=midi-matrix-lv2
pkgver=0.1.3
pkgrel=1
pkgdesc="LV2 'Midi Matrix' plugin bundle: 'Channel Filter'"
arch=('i686' 'x86_64')
url='http://open-music-kontrollers.ch/lv2/midi_matrix'
license=('Artistic2.0')
groups=('lv2-plugins')
depends=('elementary')
makedepends=('git' 'cmake' 'lv2')
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
source=()
noextract=()
md5sums=()

_gitroot="https://github.com/OpenMusicKontrollers/$_pkgname"
_gitname="$_pkgname"
_gittag="0.1.3"

build() {
  cd "$srcdir"
  msg "Connecting to GIT server...."

  if [[ -d "$_gitname" ]]; then
    cd "$_gitname" && git checkout "tag-$_gittag" && git pull origin "$_gittag"
    msg "The local files are updated."
  else
    git clone --recursive "$_gitroot" "$_gitname"
    cd "$_gitname" && git checkout -b "tag-$_gittag" "$_gittag"
  fi

  msg "GIT checkout done or server timeout"
  msg "Starting build..."

  # clear out-of-source build directory
  rm -rf "$srcdir/$_gitname/build"
  mkdir "$srcdir/$_gitname/build"

  # build in build directory
  cd "$srcdir/$_gitname/build"
  cmake \
    -DCMAKE_BUILD_TYPE="Release" \
		-DCMAKE_INSTALL_PREFIX="/usr" \
		-DCMAKE_C_FLAGS="-std=gnu11" \
		..
  make
}

package() {
  cd "$srcdir/$_gitname/build"
  make DESTDIR="$pkgdir/" install
}

# vim:set ts=2 sw=2 et:
