diff -ruN StormLib.orig/Makefile.am StormLib.fix/Makefile.am
--- StormLib.orig/Makefile.am	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/Makefile.am	2008-11-20 12:05:22.000000000 +0800
@@ -0,0 +1 @@
+SUBDIRS = stormlib
diff -ruN StormLib.orig/Makefile.config StormLib.fix/Makefile.config
--- StormLib.orig/Makefile.config	2003-04-09 10:50:48.000000000 +0800
+++ StormLib.fix/Makefile.config	1970-01-01 08:00:00.000000000 +0800
@@ -1,21 +0,0 @@
-########################################################################
-#
-# Makefile.config for compiling StormLib under linux
-#  
-#   set constants here (CFLAGS, LDFLAGS, the compiler to use, etc.)
-#
-# Author: Marko Friedemann <marko.friedemann@bmx-chemnitz.de>
-# Created at: Mon Jan 29 18:26:01 CEST 2001
-# Computer: whiplash.flachland-chemnitz.de 
-# System: Linux 2.4.0 on i686
-#    
-# Copyright (c) 2001 BMX-Chemnitz.DE All rights reserved.
-#
-#####################################################################G++ = g++
-#G++ = g++-3.0.1
-
-CFLAGS_ADD = -Wall
-LDFLAGS_ADD = 
-
-# installation flags: "-s" => strip; dont use together with CFLAG -g if you want to actually debug ;)
-I_FLAGS_ADD = -s
diff -ruN StormLib.orig/autogen.sh StormLib.fix/autogen.sh
--- StormLib.orig/autogen.sh	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/autogen.sh	2008-11-21 13:14:39.000000000 +0800
@@ -0,0 +1,9 @@
+#!/bin/bash
+set -x
+libtoolize --copy
+aclocal
+autoheader
+autoconf
+automake --foreign --add-missing --copy
+
+
diff -ruN StormLib.orig/configure.in StormLib.fix/configure.in
--- StormLib.orig/configure.in	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/configure.in	2008-11-21 13:20:08.000000000 +0800
@@ -0,0 +1,75 @@
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+
+AC_PREREQ([2.63])
+AC_INIT([stormlib], [6.23], [[email]zarraxx@gmail.com[/email]])
+AC_CONFIG_SRCDIR([stormlib/SFileOpenFileEx.cpp])
+AC_CONFIG_HEADERS([config.h])
+lt_major=6
+lt_age=0
+lt_revision=23
+dist_version=6.23.0
+AM_INIT_AUTOMAKE(stormlib, $dist_version)
+AC_CONFIG_MACRO_DIR([m4])
+AC_SUBST(lt_major)
+AC_SUBST(lt_revision)
+AC_SUBST(lt_age)
+# Checks for programs.
+AC_PROG_CXX
+AC_CANONICAL_HOST
+AC_PROG_CC
+AC_PROG_INSTALL
+AC_PROG_LN_S
+AC_PROG_RANLIB
+AC_PROG_LIBTOOL
+# Checks for libraries.
+
+ARCH=''
+case "$host" in
+    *linux*|*gnu*|*freebsd*|*netbsd*|*openbsd*|*sysv5*|*solaris*|*hpux*|*irix*|*aix*|*osf*)
+        ARCH=posix;;  
+    *-cygwin*|*-mingw32*)
+        ARCH=win32;;
+    *-darwin* )
+        ARCH=macosx;;
+    *)  ARCH='';;
+esac
+
+AM_CONDITIONAL([ARCH_WIN32],  [test x$ARCH = xwin32])
+AM_CONDITIONAL([ARCH_POSIX],  [test x$ARCH = xposix])
+AM_CONDITIONAL([ARCH_MACOSX], [test x$ARCH = xmacosx])
+
+if test x$ARCH != xwin32;then
+AC_CHECK_LIB([bz2], [BZ2_bzopen])
+AC_CHECK_LIB([z], [gzopen])
+fi
+
+
+# Checks for header files.
+AC_CHECK_HEADERS([fcntl.h stdint.h stdlib.h string.h unistd.h utime.h])
+
+# Checks for typedefs, structures, and compiler characteristics.
+AC_HEADER_STDBOOL
+AC_TYPE_INT16_T
+AC_TYPE_INT32_T
+AC_TYPE_INT64_T
+AC_TYPE_SIZE_T
+AC_TYPE_SSIZE_T
+AC_TYPE_UINT16_T
+AC_TYPE_UINT32_T
+AC_TYPE_UINT8_T
+
+# Checks for library functions.
+AC_FUNC_CHOWN
+AC_FUNC_ERROR_AT_LINE
+AC_FUNC_MALLOC
+AC_CHECK_FUNCS([ftruncate memmove memset pow rint sqrt strerror strrchr strstr utime])
+
+AC_CONFIG_FILES([Makefile
+                 stormlib/Makefile
+                 stormlib/pklib/Makefile
+		 stormlib/zlib/Makefile
+		 stormlib/bzip2/Makefile
+		])
+#AC_CONFIG_SUBDIRS([stormlib])
+AC_OUTPUT(stormlib/Stormlib.pc)
diff -ruN StormLib.orig/makefile StormLib.fix/makefile
--- StormLib.orig/makefile	2004-06-12 13:14:34.000000000 +0800
+++ StormLib.fix/makefile	1970-01-01 08:00:00.000000000 +0800
@@ -1,58 +0,0 @@
-########################################################################
-#
-# Makefile for compiling StormLib under linux
-#
-# Author: Marko Friedemann <marko.friedemann@bmx-chemnitz.de>
-# Created at: Mon Jan 29 18:26:01 CEST 2001
-# Computer: whiplash.flachland-chemnitz.de 
-# System: Linux 2.4.0 on i686
-#    
-# Copyright (c) 2001 BMX-Chemnitz.DE All rights reserved.
-#
-########################################################################
-
-FILES.cpp = SCommon.cpp SFileCreateArchiveEx.cpp SFileFindFile.cpp \
-            SFileOpenArchive.cpp SFileOpenFileEx.cpp SFileReadFile.cpp \
-            SFileCompress.cpp SFileDecompress.cpp \
-            SListFile.cpp \
-            wavunp/wavunp1.cpp wavunp/wavunp2.cpp \
-            dcl/explode.c \
-FILES.o = $(FILES.cpp:.cpp=.o)
-
-include Makefile.config
-
-LIB = libStorm.so
-
-CFLAGS = $(CFLAGS_ADD) -D__SYS_ZLIB
-I_FLAGS = $(I_FLAGS_ADD)
-LDFLAGS = $(LDFLAGS_ADD) -lz
-
-all: .dep $(LIB)
-
-$(LIB): $(FILES.o)
-	ld -shared $(LDFLAGS) -o $(LIB) $(FILES.o)
-
-include .dep
-
-%.o: %.cpp
-	$(G++) $(CFLAGS) -c $< -o $@
-
-clean:
-	-rm $(FILES.o)
-
-new: clean all
-
-mrproper: clean
-	-rm $(LIB) .dep
-
-mrnew: mrproper new
-
-install: $(LIB)
-	install $(I_FLAGS) $(LIB) /usr/local/lib
-	mkdir -p /usr/local/include/StormLib
-	cp Storm.h /usr/local/include/StormLib
-	cp StormPort.h /usr/local/include/StormLib
-	ldconfig
-
-.dep:
-	$(G++) -MM $(CFLAGS) $(FILES.cpp) > .dep
diff -ruN StormLib.orig/stormlib/GfxDecode.cpp StormLib.fix/stormlib/GfxDecode.cpp
--- StormLib.orig/stormlib/GfxDecode.cpp	2005-07-15 17:30:56.000000000 +0800
+++ StormLib.fix/stormlib/GfxDecode.cpp	2008-11-21 13:17:33.000000000 +0800
@@ -20,13 +20,15 @@
 #include <vector>
 #include <cmath>
 #include <iostream>
-
+#include <algorithm>
 #include "StormLib.h"
 
 #define TRANS_COL 256
 
 using std::cerr;
-using std::vector;
+using std::vector;
+using std::min;
+using std::max;
 
 /****** RAMP stuff *****************************************************
  * for a more detailed description/explanation see below
diff -ruN StormLib.orig/stormlib/Makefile StormLib.fix/stormlib/Makefile
--- StormLib.orig/stormlib/Makefile	2008-10-06 12:38:44.000000000 +0800
+++ StormLib.fix/stormlib/Makefile	1970-01-01 08:00:00.000000000 +0800
@@ -1,63 +0,0 @@
-#####################################################################
-###
-#
-# Makefile for compiling StormLib under linux
-#
-# Author: Marko Friedemann <marko.friedemann@bmx-chemnitz.de>
-# Created at: Mon Jan 29 18:26:01 CEST 2001
-# Computer: whiplash.flachland-chemnitz.de 
-# System: Linux 2.4.0 on i686
-#    
-# Copyright (c) 2001 BMX-Chemnitz.DE All rights reserved.
-#
-#####################################################################
-###
-
-##############################################
-# updated on October 6, 2008 by Trevor Hogan #
-##############################################
-
-C++ = g++
-CC = gcc
-DFLAGS = -D__SYS_ZLIB
-OFLAGS =
-LFLAGS = -lbz2 -lz
-CFLAGS = -fPIC
-CFLAGS += $(OFLAGS) $(DFLAGS)
-
-OBJS = SCommon.o SCompression.o SFileCompactArchive.o \
-       SFileCreateArchiveEx.o SFileExtractFile.o SFileFindFile.o \
-       SListFile.o SFileOpenArchive.o SFileOpenFileEx.o \
-       SAttrFile.o SFileReadFile.o StormPortLinux.o \
-       wave/wave.o \
-       huffman/huff.o \
-       misc/crc32.o misc/md5.o
-
-COBJS = pklib/crc32.o pklib/explode.o pklib/implode.o
-
-LIB = libStorm.so
-
-all: $(OBJS) $(COBJS) $(LIB)
-
-$(LIB): $(OBJS) $(COBJS)
-	$(C++) -shared -o $(LIB) $(OBJS) $(COBJS) $(LFLAGS)
-
-clean:
-	rm -f $(OBJS) $(COBJS) $(LIB)
-
-$(OBJS): %.o: %.cpp
-	$(C++) -o $@ $(CFLAGS) -c $<
-
-$(COBJS): %.o: %.c
-	$(CC) -o $@ $(CFLAGS) -c $<
-
-$(LIB): $(OBJS) $(COBJS)
-
-all: $(LIB)
-
-install: $(LIB)
-	install $(LIB) /usr/local/lib
-	mkdir -p /usr/local/include/StormLib
-	cp StormLib.h /usr/local/include/StormLib
-	cp StormPort.h /usr/local/include/StormLib
-	ldconfig
diff -ruN StormLib.orig/stormlib/Makefile.am StormLib.fix/stormlib/Makefile.am
--- StormLib.orig/stormlib/Makefile.am	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/stormlib/Makefile.am	2008-11-21 14:01:53.000000000 +0800
@@ -0,0 +1,54 @@
+#MAINTAINERCLEANFILES = Makefile.in
+SUBDIRS = pklib
+
+if ARCH_WIN32
+SUBDIRS += zlib bzip2
+endif
+
+INCLUDES = -I../ -I./
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = Stormlib.pc
+installincludedir=$(includedir)/Stormlib
+installinclude_HEADERS= StormLib.h StormPort.h
+#AM_CPPFLAGS=-DINSTALL_PREFIX="\"$(prefix)\""
+lib_LTLIBRARIES = libStorm.la
+libStorm_la_LDFLAGS = -version-info @lt_major@:@lt_revision@:@lt_age@
+libStorm_la_SOURCES = \
+		      StormLib.h \
+                      SCommon.cpp \
+                      SCompression.cpp \
+                      SFileCompactArchive.cpp \
+                      SFileCreateArchiveEx.cpp \
+                      SFileExtractFile.cpp \
+                      SFileFindFile.cpp \
+                      SListFile.cpp \
+		      SFileOpenArchive.cpp \
+                      SFileOpenFileEx.cpp \
+                      SAttrFile.cpp \
+                      SFileReadFile.cpp \
+		      wave/wave.cpp \
+                      huffman/huff.cpp \
+                      misc/crc32.cpp \
+                      misc/md5.cpp 
+if ARCH_POSIX
+    libStorm_la_SOURCES   += StormPort.h 
+    libStorm_la_SOURCES   += StormPortLinux.cpp
+endif
+
+if ARCH_MACOSX
+    libStorm_la_SOURCES   += StormPort.h 
+    libStorm_la_SOURCES   += StormPortMac.cpp
+endif
+
+
+
+libStorm_la_LIBADD = pklib/libpk.la
+if ARCH_WIN32
+libStorm_la_SOURCES += GfxDecode.cpp
+libStorm_la_LIBADD += zlib/libz.la bzip2/libbz2.la
+libStorm_la_LDFLAGS += -no-undefined -no-cygwin
+endif
+
+                      
+
+
diff -ruN StormLib.orig/stormlib/SFileFindFile.cpp StormLib.fix/stormlib/SFileFindFile.cpp
--- StormLib.orig/stormlib/SFileFindFile.cpp	2008-04-22 15:15:46.000000000 +0800
+++ StormLib.fix/stormlib/SFileFindFile.cpp	2008-11-20 12:05:22.000000000 +0800
@@ -147,7 +147,7 @@
         pNode = ha->pListFile[hs->dwNextIndex++];
 
         // If this entry is free, do nothing
-        if(pHash->dwBlockIndex < HASH_ENTRY_DELETED && (DWORD_PTR)pNode < LISTFILE_ENTRY_DELETED)
+        if(pHash->dwBlockIndex < HASH_ENTRY_DELETED && (unsigned long)pNode < (unsigned long)LISTFILE_ENTRY_DELETED)
         {
             // Check the file name.
             if(CheckWildCard(pNode->szFileName, hs->szSearchMask))
diff -ruN StormLib.orig/stormlib/StormPort.h StormLib.fix/stormlib/StormPort.h
--- StormLib.orig/stormlib/StormPort.h	2008-10-07 15:32:24.000000000 +0800
+++ StormLib.fix/stormlib/StormPort.h	2008-11-20 12:32:37.000000000 +0800
@@ -36,7 +36,8 @@
   #endif
 
   #include <assert.h>      
-  #include <stdio.h>      
+  #include <stdio.h>
+  #include <ctype.h>      
   #include <windows.h>      
   #define PLATFORM_LITTLE_ENDIAN  1
 
diff -ruN StormLib.orig/stormlib/StormPortLinux.cpp StormLib.fix/stormlib/StormPortLinux.cpp
--- StormLib.orig/stormlib/StormPortLinux.cpp	2008-10-07 15:33:46.000000000 +0800
+++ StormLib.fix/stormlib/StormPortLinux.cpp	2008-11-20 12:05:22.000000000 +0800
@@ -72,22 +72,24 @@
 }
 
 HANDLE CreateFile(const char *sFileName, DWORD ulMode, DWORD ulSharing, void *pSecAttrib, DWORD ulCreation, DWORD ulFlags, HANDLE hFile)
-{
+{
+#define FILE_MODE (S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH)
     switch (ulCreation)
     {
     case OPEN_EXISTING:
         return (HANDLE)open(sFileName, O_RDONLY | O_LARGEFILE);
 
     case OPEN_ALWAYS:
-        return (HANDLE)open(sFileName, O_RDWR | O_CREAT);
+        return (HANDLE)open(sFileName, O_RDWR | O_CREAT ,FILE_MODE);
 
     case CREATE_ALWAYS:
     case CREATE_NEW:
-        return (HANDLE)open(sFileName, O_RDWR | O_CREAT | O_TRUNC);
+        return (HANDLE)open(sFileName, O_RDWR | O_CREAT | O_TRUNC ,FILE_MODE);
 
     default:
         return INVALID_HANDLE_VALUE;
-    }
+    }
+#undef FILE_MODE
 }
 
 BOOL CloseHandle(HANDLE hFile)
diff -ruN StormLib.orig/stormlib/Stormlib.pc.in StormLib.fix/stormlib/Stormlib.pc.in
--- StormLib.orig/stormlib/Stormlib.pc.in	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/stormlib/Stormlib.pc.in	2008-11-20 12:05:22.000000000 +0800
@@ -0,0 +1,11 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: StormLib
+Description: StormLib library.
+Requires: 
+Version: @VERSION@
+Libs: -L${libdir} -lStorm -lbz2 -lz
+Cflags: -I${includedir}/Stormlib
diff -ruN StormLib.orig/stormlib/bzip2/Makefile StormLib.fix/stormlib/bzip2/Makefile
--- StormLib.orig/stormlib/bzip2/Makefile	2005-02-17 13:28:24.000000000 +0800
+++ StormLib.fix/stormlib/bzip2/Makefile	1970-01-01 08:00:00.000000000 +0800
@@ -1,205 +0,0 @@
-
-SHELL=/bin/sh
-
-# To assist in cross-compiling
-CC=gcc
-AR=ar
-RANLIB=ranlib
-LDFLAGS=
-
-BIGFILES=-D_FILE_OFFSET_BITS=64
-CFLAGS=-Wall -Winline -O -g $(BIGFILES)
-
-# Where you want it installed when you do 'make install'
-PREFIX=/usr
-
-
-OBJS= blocksort.o  \
-      huffman.o    \
-      crctable.o   \
-      randtable.o  \
-      compress.o   \
-      decompress.o \
-      bzlib.o
-
-all: libbz2.a bzip2 bzip2recover test
-
-bzip2: libbz2.a bzip2.o
-	$(CC) $(CFLAGS) $(LDFLAGS) -o bzip2 bzip2.o -L. -lbz2
-
-bzip2recover: bzip2recover.o
-	$(CC) $(CFLAGS) $(LDFLAGS) -o bzip2recover bzip2recover.o
-
-libbz2.a: $(OBJS)
-	rm -f libbz2.a
-	$(AR) cq libbz2.a $(OBJS)
-	@if ( test -f $(RANLIB) -o -f /usr/bin/ranlib -o \
-		-f /bin/ranlib -o -f /usr/ccs/bin/ranlib ) ; then \
-		echo $(RANLIB) libbz2.a ; \
-		$(RANLIB) libbz2.a ; \
-	fi
-
-check: test
-test: bzip2
-	@cat words1
-	./bzip2 -1  < sample1.ref > sample1.rb2
-	./bzip2 -2  < sample2.ref > sample2.rb2
-	./bzip2 -3  < sample3.ref > sample3.rb2
-	./bzip2 -d  < sample1.bz2 > sample1.tst
-	./bzip2 -d  < sample2.bz2 > sample2.tst
-	./bzip2 -ds < sample3.bz2 > sample3.tst
-	cmp sample1.bz2 sample1.rb2 
-	cmp sample2.bz2 sample2.rb2
-	cmp sample3.bz2 sample3.rb2
-	cmp sample1.tst sample1.ref
-	cmp sample2.tst sample2.ref
-	cmp sample3.tst sample3.ref
-	@cat words3
-
-install: bzip2 bzip2recover
-	if ( test ! -d $(PREFIX)/bin ) ; then mkdir -p $(PREFIX)/bin ; fi
-	if ( test ! -d $(PREFIX)/lib ) ; then mkdir -p $(PREFIX)/lib ; fi
-	if ( test ! -d $(PREFIX)/man ) ; then mkdir -p $(PREFIX)/man ; fi
-	if ( test ! -d $(PREFIX)/man/man1 ) ; then mkdir -p $(PREFIX)/man/man1 ; fi
-	if ( test ! -d $(PREFIX)/include ) ; then mkdir -p $(PREFIX)/include ; fi
-	cp -f bzip2 $(PREFIX)/bin/bzip2
-	cp -f bzip2 $(PREFIX)/bin/bunzip2
-	cp -f bzip2 $(PREFIX)/bin/bzcat
-	cp -f bzip2recover $(PREFIX)/bin/bzip2recover
-	chmod a+x $(PREFIX)/bin/bzip2
-	chmod a+x $(PREFIX)/bin/bunzip2
-	chmod a+x $(PREFIX)/bin/bzcat
-	chmod a+x $(PREFIX)/bin/bzip2recover
-	cp -f bzip2.1 $(PREFIX)/man/man1
-	chmod a+r $(PREFIX)/man/man1/bzip2.1
-	cp -f bzlib.h $(PREFIX)/include
-	chmod a+r $(PREFIX)/include/bzlib.h
-	cp -f libbz2.a $(PREFIX)/lib
-	chmod a+r $(PREFIX)/lib/libbz2.a
-	cp -f bzgrep $(PREFIX)/bin/bzgrep
-	ln $(PREFIX)/bin/bzgrep $(PREFIX)/bin/bzegrep
-	ln $(PREFIX)/bin/bzgrep $(PREFIX)/bin/bzfgrep
-	chmod a+x $(PREFIX)/bin/bzgrep
-	cp -f bzmore $(PREFIX)/bin/bzmore
-	ln $(PREFIX)/bin/bzmore $(PREFIX)/bin/bzless
-	chmod a+x $(PREFIX)/bin/bzmore
-	cp -f bzdiff $(PREFIX)/bin/bzdiff
-	ln $(PREFIX)/bin/bzdiff $(PREFIX)/bin/bzcmp
-	chmod a+x $(PREFIX)/bin/bzdiff
-	cp -f bzgrep.1 bzmore.1 bzdiff.1 $(PREFIX)/man/man1
-	chmod a+r $(PREFIX)/man/man1/bzgrep.1
-	chmod a+r $(PREFIX)/man/man1/bzmore.1
-	chmod a+r $(PREFIX)/man/man1/bzdiff.1
-	echo ".so man1/bzgrep.1" > $(PREFIX)/man/man1/bzegrep.1
-	echo ".so man1/bzgrep.1" > $(PREFIX)/man/man1/bzfgrep.1
-	echo ".so man1/bzmore.1" > $(PREFIX)/man/man1/bzless.1
-	echo ".so man1/bzdiff.1" > $(PREFIX)/man/man1/bzcmp.1
-
-clean: 
-	rm -f *.o libbz2.a bzip2 bzip2recover \
-	sample1.rb2 sample2.rb2 sample3.rb2 \
-	sample1.tst sample2.tst sample3.tst
-
-blocksort.o: blocksort.c
-	@cat words0
-	$(CC) $(CFLAGS) -c blocksort.c
-huffman.o: huffman.c
-	$(CC) $(CFLAGS) -c huffman.c
-crctable.o: crctable.c
-	$(CC) $(CFLAGS) -c crctable.c
-randtable.o: randtable.c
-	$(CC) $(CFLAGS) -c randtable.c
-compress.o: compress.c
-	$(CC) $(CFLAGS) -c compress.c
-decompress.o: decompress.c
-	$(CC) $(CFLAGS) -c decompress.c
-bzlib.o: bzlib.c
-	$(CC) $(CFLAGS) -c bzlib.c
-bzip2.o: bzip2.c
-	$(CC) $(CFLAGS) -c bzip2.c
-bzip2recover.o: bzip2recover.c
-	$(CC) $(CFLAGS) -c bzip2recover.c
-
-
-distclean: clean
-	rm -f manual.ps manual.html manual.pdf
-
-DISTNAME=bzip2-1.0.3
-dist: check manual
-	rm -f $(DISTNAME)
-	ln -sf . $(DISTNAME)
-	tar cvf $(DISTNAME).tar \
-	   $(DISTNAME)/blocksort.c \
-	   $(DISTNAME)/huffman.c \
-	   $(DISTNAME)/crctable.c \
-	   $(DISTNAME)/randtable.c \
-	   $(DISTNAME)/compress.c \
-	   $(DISTNAME)/decompress.c \
-	   $(DISTNAME)/bzlib.c \
-	   $(DISTNAME)/bzip2.c \
-	   $(DISTNAME)/bzip2recover.c \
-	   $(DISTNAME)/bzlib.h \
-	   $(DISTNAME)/bzlib_private.h \
-	   $(DISTNAME)/Makefile \
-	   $(DISTNAME)/LICENSE \
-	   $(DISTNAME)/bzip2.1 \
-	   $(DISTNAME)/bzip2.1.preformatted \
-	   $(DISTNAME)/bzip2.txt \
-	   $(DISTNAME)/words0 \
-	   $(DISTNAME)/words1 \
-	   $(DISTNAME)/words2 \
-	   $(DISTNAME)/words3 \
-	   $(DISTNAME)/sample1.ref \
-	   $(DISTNAME)/sample2.ref \
-	   $(DISTNAME)/sample3.ref \
-	   $(DISTNAME)/sample1.bz2 \
-	   $(DISTNAME)/sample2.bz2 \
-	   $(DISTNAME)/sample3.bz2 \
-	   $(DISTNAME)/dlltest.c \
-	   $(DISTNAME)/manual.html \
-	   $(DISTNAME)/manual.pdf \
-	   $(DISTNAME)/manual.ps \
-	   $(DISTNAME)/README \
-	   $(DISTNAME)/README.COMPILATION.PROBLEMS \
-	   $(DISTNAME)/README.XML.STUFF \
-	   $(DISTNAME)/CHANGES \
-	   $(DISTNAME)/libbz2.def \
-	   $(DISTNAME)/libbz2.dsp \
-	   $(DISTNAME)/dlltest.dsp \
-	   $(DISTNAME)/makefile.msc \
-	   $(DISTNAME)/Y2K_INFO \
-	   $(DISTNAME)/unzcrash.c \
-	   $(DISTNAME)/spewG.c \
-	   $(DISTNAME)/mk251.c \
-	   $(DISTNAME)/bzdiff \
-	   $(DISTNAME)/bzdiff.1 \
-	   $(DISTNAME)/bzmore \
-	   $(DISTNAME)/bzmore.1 \
-	   $(DISTNAME)/bzgrep \
-	   $(DISTNAME)/bzgrep.1 \
-	   $(DISTNAME)/Makefile-libbz2_so \
-	   $(DISTNAME)/bz-common.xsl \
-	   $(DISTNAME)/bz-fo.xsl \
-	   $(DISTNAME)/bz-html.xsl \
-	   $(DISTNAME)/bzip.css \
-	   $(DISTNAME)/entities.xml \
-	   $(DISTNAME)/manual.xml \
-	   $(DISTNAME)/format.pl \
-	   $(DISTNAME)/xmlproc.sh
-	gzip -v $(DISTNAME).tar
-
-# For rebuilding the manual from sources on my SuSE 9.1 box
-
-MANUAL_SRCS= 	bz-common.xsl bz-fo.xsl bz-html.xsl bzip.css \
-		entities.xml manual.xml 
-
-manual: manual.html manual.ps manual.pdf
-
-manual.ps: $(MANUAL_SRCS)
-	./xmlproc.sh -ps manual.xml
-
-manual.pdf: $(MANUAL_SRCS)
-	./xmlproc.sh -pdf manual.xml
-
-manual.html: $(MANUAL_SRCS)
-	./xmlproc.sh -html manual.xml
diff -ruN StormLib.orig/stormlib/bzip2/Makefile.am StormLib.fix/stormlib/bzip2/Makefile.am
--- StormLib.orig/stormlib/bzip2/Makefile.am	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/stormlib/bzip2/Makefile.am	2008-11-20 12:51:59.000000000 +0800
@@ -0,0 +1,8 @@
+noinst_LTLIBRARIES = libbz2.la
+libbz2_la_SOURCES = blocksort.c  \
+      huffman.c    \
+      crctable.c   \
+      randtable.c  \
+      compress.c   \
+      decompress.c \
+      bzlib.c
diff -ruN StormLib.orig/stormlib/bzip2/Makefile.old StormLib.fix/stormlib/bzip2/Makefile.old
--- StormLib.orig/stormlib/bzip2/Makefile.old	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/stormlib/bzip2/Makefile.old	2005-02-17 13:28:24.000000000 +0800
@@ -0,0 +1,205 @@
+
+SHELL=/bin/sh
+
+# To assist in cross-compiling
+CC=gcc
+AR=ar
+RANLIB=ranlib
+LDFLAGS=
+
+BIGFILES=-D_FILE_OFFSET_BITS=64
+CFLAGS=-Wall -Winline -O -g $(BIGFILES)
+
+# Where you want it installed when you do 'make install'
+PREFIX=/usr
+
+
+OBJS= blocksort.o  \
+      huffman.o    \
+      crctable.o   \
+      randtable.o  \
+      compress.o   \
+      decompress.o \
+      bzlib.o
+
+all: libbz2.a bzip2 bzip2recover test
+
+bzip2: libbz2.a bzip2.o
+	$(CC) $(CFLAGS) $(LDFLAGS) -o bzip2 bzip2.o -L. -lbz2
+
+bzip2recover: bzip2recover.o
+	$(CC) $(CFLAGS) $(LDFLAGS) -o bzip2recover bzip2recover.o
+
+libbz2.a: $(OBJS)
+	rm -f libbz2.a
+	$(AR) cq libbz2.a $(OBJS)
+	@if ( test -f $(RANLIB) -o -f /usr/bin/ranlib -o \
+		-f /bin/ranlib -o -f /usr/ccs/bin/ranlib ) ; then \
+		echo $(RANLIB) libbz2.a ; \
+		$(RANLIB) libbz2.a ; \
+	fi
+
+check: test
+test: bzip2
+	@cat words1
+	./bzip2 -1  < sample1.ref > sample1.rb2
+	./bzip2 -2  < sample2.ref > sample2.rb2
+	./bzip2 -3  < sample3.ref > sample3.rb2
+	./bzip2 -d  < sample1.bz2 > sample1.tst
+	./bzip2 -d  < sample2.bz2 > sample2.tst
+	./bzip2 -ds < sample3.bz2 > sample3.tst
+	cmp sample1.bz2 sample1.rb2 
+	cmp sample2.bz2 sample2.rb2
+	cmp sample3.bz2 sample3.rb2
+	cmp sample1.tst sample1.ref
+	cmp sample2.tst sample2.ref
+	cmp sample3.tst sample3.ref
+	@cat words3
+
+install: bzip2 bzip2recover
+	if ( test ! -d $(PREFIX)/bin ) ; then mkdir -p $(PREFIX)/bin ; fi
+	if ( test ! -d $(PREFIX)/lib ) ; then mkdir -p $(PREFIX)/lib ; fi
+	if ( test ! -d $(PREFIX)/man ) ; then mkdir -p $(PREFIX)/man ; fi
+	if ( test ! -d $(PREFIX)/man/man1 ) ; then mkdir -p $(PREFIX)/man/man1 ; fi
+	if ( test ! -d $(PREFIX)/include ) ; then mkdir -p $(PREFIX)/include ; fi
+	cp -f bzip2 $(PREFIX)/bin/bzip2
+	cp -f bzip2 $(PREFIX)/bin/bunzip2
+	cp -f bzip2 $(PREFIX)/bin/bzcat
+	cp -f bzip2recover $(PREFIX)/bin/bzip2recover
+	chmod a+x $(PREFIX)/bin/bzip2
+	chmod a+x $(PREFIX)/bin/bunzip2
+	chmod a+x $(PREFIX)/bin/bzcat
+	chmod a+x $(PREFIX)/bin/bzip2recover
+	cp -f bzip2.1 $(PREFIX)/man/man1
+	chmod a+r $(PREFIX)/man/man1/bzip2.1
+	cp -f bzlib.h $(PREFIX)/include
+	chmod a+r $(PREFIX)/include/bzlib.h
+	cp -f libbz2.a $(PREFIX)/lib
+	chmod a+r $(PREFIX)/lib/libbz2.a
+	cp -f bzgrep $(PREFIX)/bin/bzgrep
+	ln $(PREFIX)/bin/bzgrep $(PREFIX)/bin/bzegrep
+	ln $(PREFIX)/bin/bzgrep $(PREFIX)/bin/bzfgrep
+	chmod a+x $(PREFIX)/bin/bzgrep
+	cp -f bzmore $(PREFIX)/bin/bzmore
+	ln $(PREFIX)/bin/bzmore $(PREFIX)/bin/bzless
+	chmod a+x $(PREFIX)/bin/bzmore
+	cp -f bzdiff $(PREFIX)/bin/bzdiff
+	ln $(PREFIX)/bin/bzdiff $(PREFIX)/bin/bzcmp
+	chmod a+x $(PREFIX)/bin/bzdiff
+	cp -f bzgrep.1 bzmore.1 bzdiff.1 $(PREFIX)/man/man1
+	chmod a+r $(PREFIX)/man/man1/bzgrep.1
+	chmod a+r $(PREFIX)/man/man1/bzmore.1
+	chmod a+r $(PREFIX)/man/man1/bzdiff.1
+	echo ".so man1/bzgrep.1" > $(PREFIX)/man/man1/bzegrep.1
+	echo ".so man1/bzgrep.1" > $(PREFIX)/man/man1/bzfgrep.1
+	echo ".so man1/bzmore.1" > $(PREFIX)/man/man1/bzless.1
+	echo ".so man1/bzdiff.1" > $(PREFIX)/man/man1/bzcmp.1
+
+clean: 
+	rm -f *.o libbz2.a bzip2 bzip2recover \
+	sample1.rb2 sample2.rb2 sample3.rb2 \
+	sample1.tst sample2.tst sample3.tst
+
+blocksort.o: blocksort.c
+	@cat words0
+	$(CC) $(CFLAGS) -c blocksort.c
+huffman.o: huffman.c
+	$(CC) $(CFLAGS) -c huffman.c
+crctable.o: crctable.c
+	$(CC) $(CFLAGS) -c crctable.c
+randtable.o: randtable.c
+	$(CC) $(CFLAGS) -c randtable.c
+compress.o: compress.c
+	$(CC) $(CFLAGS) -c compress.c
+decompress.o: decompress.c
+	$(CC) $(CFLAGS) -c decompress.c
+bzlib.o: bzlib.c
+	$(CC) $(CFLAGS) -c bzlib.c
+bzip2.o: bzip2.c
+	$(CC) $(CFLAGS) -c bzip2.c
+bzip2recover.o: bzip2recover.c
+	$(CC) $(CFLAGS) -c bzip2recover.c
+
+
+distclean: clean
+	rm -f manual.ps manual.html manual.pdf
+
+DISTNAME=bzip2-1.0.3
+dist: check manual
+	rm -f $(DISTNAME)
+	ln -sf . $(DISTNAME)
+	tar cvf $(DISTNAME).tar \
+	   $(DISTNAME)/blocksort.c \
+	   $(DISTNAME)/huffman.c \
+	   $(DISTNAME)/crctable.c \
+	   $(DISTNAME)/randtable.c \
+	   $(DISTNAME)/compress.c \
+	   $(DISTNAME)/decompress.c \
+	   $(DISTNAME)/bzlib.c \
+	   $(DISTNAME)/bzip2.c \
+	   $(DISTNAME)/bzip2recover.c \
+	   $(DISTNAME)/bzlib.h \
+	   $(DISTNAME)/bzlib_private.h \
+	   $(DISTNAME)/Makefile \
+	   $(DISTNAME)/LICENSE \
+	   $(DISTNAME)/bzip2.1 \
+	   $(DISTNAME)/bzip2.1.preformatted \
+	   $(DISTNAME)/bzip2.txt \
+	   $(DISTNAME)/words0 \
+	   $(DISTNAME)/words1 \
+	   $(DISTNAME)/words2 \
+	   $(DISTNAME)/words3 \
+	   $(DISTNAME)/sample1.ref \
+	   $(DISTNAME)/sample2.ref \
+	   $(DISTNAME)/sample3.ref \
+	   $(DISTNAME)/sample1.bz2 \
+	   $(DISTNAME)/sample2.bz2 \
+	   $(DISTNAME)/sample3.bz2 \
+	   $(DISTNAME)/dlltest.c \
+	   $(DISTNAME)/manual.html \
+	   $(DISTNAME)/manual.pdf \
+	   $(DISTNAME)/manual.ps \
+	   $(DISTNAME)/README \
+	   $(DISTNAME)/README.COMPILATION.PROBLEMS \
+	   $(DISTNAME)/README.XML.STUFF \
+	   $(DISTNAME)/CHANGES \
+	   $(DISTNAME)/libbz2.def \
+	   $(DISTNAME)/libbz2.dsp \
+	   $(DISTNAME)/dlltest.dsp \
+	   $(DISTNAME)/makefile.msc \
+	   $(DISTNAME)/Y2K_INFO \
+	   $(DISTNAME)/unzcrash.c \
+	   $(DISTNAME)/spewG.c \
+	   $(DISTNAME)/mk251.c \
+	   $(DISTNAME)/bzdiff \
+	   $(DISTNAME)/bzdiff.1 \
+	   $(DISTNAME)/bzmore \
+	   $(DISTNAME)/bzmore.1 \
+	   $(DISTNAME)/bzgrep \
+	   $(DISTNAME)/bzgrep.1 \
+	   $(DISTNAME)/Makefile-libbz2_so \
+	   $(DISTNAME)/bz-common.xsl \
+	   $(DISTNAME)/bz-fo.xsl \
+	   $(DISTNAME)/bz-html.xsl \
+	   $(DISTNAME)/bzip.css \
+	   $(DISTNAME)/entities.xml \
+	   $(DISTNAME)/manual.xml \
+	   $(DISTNAME)/format.pl \
+	   $(DISTNAME)/xmlproc.sh
+	gzip -v $(DISTNAME).tar
+
+# For rebuilding the manual from sources on my SuSE 9.1 box
+
+MANUAL_SRCS= 	bz-common.xsl bz-fo.xsl bz-html.xsl bzip.css \
+		entities.xml manual.xml 
+
+manual: manual.html manual.ps manual.pdf
+
+manual.ps: $(MANUAL_SRCS)
+	./xmlproc.sh -ps manual.xml
+
+manual.pdf: $(MANUAL_SRCS)
+	./xmlproc.sh -pdf manual.xml
+
+manual.html: $(MANUAL_SRCS)
+	./xmlproc.sh -html manual.xml
diff -ruN StormLib.orig/stormlib/pklib/Makefile.am StormLib.fix/stormlib/pklib/Makefile.am
--- StormLib.orig/stormlib/pklib/Makefile.am	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/stormlib/pklib/Makefile.am	2008-11-20 12:05:22.000000000 +0800
@@ -0,0 +1,2 @@
+noinst_LTLIBRARIES = libpk.la
+libpk_la_SOURCES = crc32.c explode.c implode.c pklib.h
diff -ruN StormLib.orig/stormlib/zlib/Makefile StormLib.fix/stormlib/zlib/Makefile
--- StormLib.orig/stormlib/zlib/Makefile	2005-07-18 05:25:22.000000000 +0800
+++ StormLib.fix/stormlib/zlib/Makefile	1970-01-01 08:00:00.000000000 +0800
@@ -1,154 +0,0 @@
-# Makefile for zlib
-# Copyright (C) 1995-2005 Jean-loup Gailly.
-# For conditions of distribution and use, see copyright notice in zlib.h
-
-# To compile and test, type:
-#    ./configure; make test
-# The call of configure is optional if you don't have special requirements
-# If you wish to build zlib as a shared library, use: ./configure -s
-
-# To use the asm code, type:
-#    cp contrib/asm?86/match.S ./match.S
-#    make LOC=-DASMV OBJA=match.o
-
-# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:
-#    make install
-# To install in $HOME instead of /usr/local, use:
-#    make install prefix=$HOME
-
-CC=cc
-
-CFLAGS=-O
-#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7
-#CFLAGS=-g -DDEBUG
-#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \
-#           -Wstrict-prototypes -Wmissing-prototypes
-
-LDFLAGS=libz.a
-LDSHARED=$(CC)
-CPP=$(CC) -E
-
-LIBS=libz.a
-SHAREDLIB=libz.so
-SHAREDLIBV=libz.so.1.2.3
-SHAREDLIBM=libz.so.1
-
-AR=ar rc
-RANLIB=ranlib
-TAR=tar
-SHELL=/bin/sh
-EXE=
-
-prefix = /usr/local
-exec_prefix = ${prefix}
-libdir = ${exec_prefix}/lib
-includedir = ${prefix}/include
-mandir = ${prefix}/share/man
-man3dir = ${mandir}/man3
-
-OBJS = adler32.o compress.o crc32.o gzio.o uncompr.o deflate.o trees.o \
-       zutil.o inflate.o infback.o inftrees.o inffast.o
-
-OBJA =
-# to use the asm code: make OBJA=match.o
-
-TEST_OBJS = example.o minigzip.o
-
-all: example$(EXE) minigzip$(EXE)
-
-check: test
-test: all
-	@LD_LIBRARY_PATH=.:$(LD_LIBRARY_PATH) ; export LD_LIBRARY_PATH; \
-	echo hello world | ./minigzip | ./minigzip -d || \
-	  echo '		*** minigzip test FAILED ***' ; \
-	if ./example; then \
-	  echo '		*** zlib test OK ***'; \
-	else \
-	  echo '		*** zlib test FAILED ***'; \
-	fi
-
-libz.a: $(OBJS) $(OBJA)
-	$(AR) $@ $(OBJS) $(OBJA)
-	-@ ($(RANLIB) $@ || true) >/dev/null 2>&1
-
-match.o: match.S
-	$(CPP) match.S > _match.s
-	$(CC) -c _match.s
-	mv _match.o match.o
-	rm -f _match.s
-
-$(SHAREDLIBV): $(OBJS)
-	$(LDSHARED) -o $@ $(OBJS)
-	rm -f $(SHAREDLIB) $(SHAREDLIBM)
-	ln -s $@ $(SHAREDLIB)
-	ln -s $@ $(SHAREDLIBM)
-
-example$(EXE): example.o $(LIBS)
-	$(CC) $(CFLAGS) -o $@ example.o $(LDFLAGS)
-
-minigzip$(EXE): minigzip.o $(LIBS)
-	$(CC) $(CFLAGS) -o $@ minigzip.o $(LDFLAGS)
-
-install: $(LIBS)
-	-@if [ ! -d $(exec_prefix) ]; then mkdir -p $(exec_prefix); fi
-	-@if [ ! -d $(includedir)  ]; then mkdir -p $(includedir); fi
-	-@if [ ! -d $(libdir)      ]; then mkdir -p $(libdir); fi
-	-@if [ ! -d $(man3dir)     ]; then mkdir -p $(man3dir); fi
-	cp zlib.h zconf.h $(includedir)
-	chmod 644 $(includedir)/zlib.h $(includedir)/zconf.h
-	cp $(LIBS) $(libdir)
-	cd $(libdir); chmod 755 $(LIBS)
-	-@(cd $(libdir); $(RANLIB) libz.a || true) >/dev/null 2>&1
-	cd $(libdir); if test -f $(SHAREDLIBV); then \
-	  rm -f $(SHAREDLIB) $(SHAREDLIBM); \
-	  ln -s $(SHAREDLIBV) $(SHAREDLIB); \
-	  ln -s $(SHAREDLIBV) $(SHAREDLIBM); \
-	  (ldconfig || true)  >/dev/null 2>&1; \
-	fi
-	cp zlib.3 $(man3dir)
-	chmod 644 $(man3dir)/zlib.3
-# The ranlib in install is needed on NeXTSTEP which checks file times
-# ldconfig is for Linux
-
-uninstall:
-	cd $(includedir); \
-	cd $(libdir); rm -f libz.a; \
-	if test -f $(SHAREDLIBV); then \
-	  rm -f $(SHAREDLIBV) $(SHAREDLIB) $(SHAREDLIBM); \
-	fi
-	cd $(man3dir); rm -f zlib.3
-
-mostlyclean: clean
-clean:
-	rm -f *.o *~ example$(EXE) minigzip$(EXE) \
-	   libz.* foo.gz so_locations \
-	   _match.s maketree contrib/infback9/*.o
-
-maintainer-clean: distclean
-distclean: clean
-	cp -p Makefile.in Makefile
-	cp -p zconf.in.h zconf.h
-	rm -f .DS_Store
-
-tags:
-	etags *.[ch]
-
-depend:
-	makedepend -- $(CFLAGS) -- *.[ch]
-
-# DO NOT DELETE THIS LINE -- make depend depends on it.
-
-adler32.o: zlib.h zconf.h
-compress.o: zlib.h zconf.h
-crc32.o: crc32.h zlib.h zconf.h
-deflate.o: deflate.h zutil.h zlib.h zconf.h
-example.o: zlib.h zconf.h
-gzio.o: zutil.h zlib.h zconf.h
-inffast.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
-inflate.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
-infback.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
-inftrees.o: zutil.h zlib.h zconf.h inftrees.h
-minigzip.o: zlib.h zconf.h
-trees.o: deflate.h zutil.h zlib.h zconf.h trees.h
-uncompr.o: zlib.h zconf.h
-zutil.o: zutil.h zlib.h zconf.h
diff -ruN StormLib.orig/stormlib/zlib/Makefile.am StormLib.fix/stormlib/zlib/Makefile.am
--- StormLib.orig/stormlib/zlib/Makefile.am	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/stormlib/zlib/Makefile.am	2008-11-20 12:51:06.000000000 +0800
@@ -0,0 +1,3 @@
+noinst_LTLIBRARIES = libz.la
+libz_la_SOURCES = adler32.c compress.c crc32.c gzio.c uncompr.c deflate.c trees.c \
+       zutil.c inflate.c infback.c inftrees.c inffast.c
diff -ruN StormLib.orig/stormlib/zlib/Makefile.in StormLib.fix/stormlib/zlib/Makefile.in
--- StormLib.orig/stormlib/zlib/Makefile.in	2005-07-18 05:25:22.000000000 +0800
+++ StormLib.fix/stormlib/zlib/Makefile.in	1970-01-01 08:00:00.000000000 +0800
@@ -1,154 +0,0 @@
-# Makefile for zlib
-# Copyright (C) 1995-2005 Jean-loup Gailly.
-# For conditions of distribution and use, see copyright notice in zlib.h
-
-# To compile and test, type:
-#    ./configure; make test
-# The call of configure is optional if you don't have special requirements
-# If you wish to build zlib as a shared library, use: ./configure -s
-
-# To use the asm code, type:
-#    cp contrib/asm?86/match.S ./match.S
-#    make LOC=-DASMV OBJA=match.o
-
-# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:
-#    make install
-# To install in $HOME instead of /usr/local, use:
-#    make install prefix=$HOME
-
-CC=cc
-
-CFLAGS=-O
-#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7
-#CFLAGS=-g -DDEBUG
-#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \
-#           -Wstrict-prototypes -Wmissing-prototypes
-
-LDFLAGS=libz.a
-LDSHARED=$(CC)
-CPP=$(CC) -E
-
-LIBS=libz.a
-SHAREDLIB=libz.so
-SHAREDLIBV=libz.so.1.2.3
-SHAREDLIBM=libz.so.1
-
-AR=ar rc
-RANLIB=ranlib
-TAR=tar
-SHELL=/bin/sh
-EXE=
-
-prefix = /usr/local
-exec_prefix = ${prefix}
-libdir = ${exec_prefix}/lib
-includedir = ${prefix}/include
-mandir = ${prefix}/share/man
-man3dir = ${mandir}/man3
-
-OBJS = adler32.o compress.o crc32.o gzio.o uncompr.o deflate.o trees.o \
-       zutil.o inflate.o infback.o inftrees.o inffast.o
-
-OBJA =
-# to use the asm code: make OBJA=match.o
-
-TEST_OBJS = example.o minigzip.o
-
-all: example$(EXE) minigzip$(EXE)
-
-check: test
-test: all
-	@LD_LIBRARY_PATH=.:$(LD_LIBRARY_PATH) ; export LD_LIBRARY_PATH; \
-	echo hello world | ./minigzip | ./minigzip -d || \
-	  echo '		*** minigzip test FAILED ***' ; \
-	if ./example; then \
-	  echo '		*** zlib test OK ***'; \
-	else \
-	  echo '		*** zlib test FAILED ***'; \
-	fi
-
-libz.a: $(OBJS) $(OBJA)
-	$(AR) $@ $(OBJS) $(OBJA)
-	-@ ($(RANLIB) $@ || true) >/dev/null 2>&1
-
-match.o: match.S
-	$(CPP) match.S > _match.s
-	$(CC) -c _match.s
-	mv _match.o match.o
-	rm -f _match.s
-
-$(SHAREDLIBV): $(OBJS)
-	$(LDSHARED) -o $@ $(OBJS)
-	rm -f $(SHAREDLIB) $(SHAREDLIBM)
-	ln -s $@ $(SHAREDLIB)
-	ln -s $@ $(SHAREDLIBM)
-
-example$(EXE): example.o $(LIBS)
-	$(CC) $(CFLAGS) -o $@ example.o $(LDFLAGS)
-
-minigzip$(EXE): minigzip.o $(LIBS)
-	$(CC) $(CFLAGS) -o $@ minigzip.o $(LDFLAGS)
-
-install: $(LIBS)
-	-@if [ ! -d $(exec_prefix) ]; then mkdir -p $(exec_prefix); fi
-	-@if [ ! -d $(includedir)  ]; then mkdir -p $(includedir); fi
-	-@if [ ! -d $(libdir)      ]; then mkdir -p $(libdir); fi
-	-@if [ ! -d $(man3dir)     ]; then mkdir -p $(man3dir); fi
-	cp zlib.h zconf.h $(includedir)
-	chmod 644 $(includedir)/zlib.h $(includedir)/zconf.h
-	cp $(LIBS) $(libdir)
-	cd $(libdir); chmod 755 $(LIBS)
-	-@(cd $(libdir); $(RANLIB) libz.a || true) >/dev/null 2>&1
-	cd $(libdir); if test -f $(SHAREDLIBV); then \
-	  rm -f $(SHAREDLIB) $(SHAREDLIBM); \
-	  ln -s $(SHAREDLIBV) $(SHAREDLIB); \
-	  ln -s $(SHAREDLIBV) $(SHAREDLIBM); \
-	  (ldconfig || true)  >/dev/null 2>&1; \
-	fi
-	cp zlib.3 $(man3dir)
-	chmod 644 $(man3dir)/zlib.3
-# The ranlib in install is needed on NeXTSTEP which checks file times
-# ldconfig is for Linux
-
-uninstall:
-	cd $(includedir); \
-	cd $(libdir); rm -f libz.a; \
-	if test -f $(SHAREDLIBV); then \
-	  rm -f $(SHAREDLIBV) $(SHAREDLIB) $(SHAREDLIBM); \
-	fi
-	cd $(man3dir); rm -f zlib.3
-
-mostlyclean: clean
-clean:
-	rm -f *.o *~ example$(EXE) minigzip$(EXE) \
-	   libz.* foo.gz so_locations \
-	   _match.s maketree contrib/infback9/*.o
-
-maintainer-clean: distclean
-distclean: clean
-	cp -p Makefile.in Makefile
-	cp -p zconf.in.h zconf.h
-	rm -f .DS_Store
-
-tags:
-	etags *.[ch]
-
-depend:
-	makedepend -- $(CFLAGS) -- *.[ch]
-
-# DO NOT DELETE THIS LINE -- make depend depends on it.
-
-adler32.o: zlib.h zconf.h
-compress.o: zlib.h zconf.h
-crc32.o: crc32.h zlib.h zconf.h
-deflate.o: deflate.h zutil.h zlib.h zconf.h
-example.o: zlib.h zconf.h
-gzio.o: zutil.h zlib.h zconf.h
-inffast.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
-inflate.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
-infback.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
-inftrees.o: zutil.h zlib.h zconf.h inftrees.h
-minigzip.o: zlib.h zconf.h
-trees.o: deflate.h zutil.h zlib.h zconf.h trees.h
-uncompr.o: zlib.h zconf.h
-zutil.o: zutil.h zlib.h zconf.h
diff -ruN StormLib.orig/stormlib/zlib/Makefile.in.old StormLib.fix/stormlib/zlib/Makefile.in.old
--- StormLib.orig/stormlib/zlib/Makefile.in.old	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/stormlib/zlib/Makefile.in.old	2005-07-18 05:25:22.000000000 +0800
@@ -0,0 +1,154 @@
+# Makefile for zlib
+# Copyright (C) 1995-2005 Jean-loup Gailly.
+# For conditions of distribution and use, see copyright notice in zlib.h
+
+# To compile and test, type:
+#    ./configure; make test
+# The call of configure is optional if you don't have special requirements
+# If you wish to build zlib as a shared library, use: ./configure -s
+
+# To use the asm code, type:
+#    cp contrib/asm?86/match.S ./match.S
+#    make LOC=-DASMV OBJA=match.o
+
+# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:
+#    make install
+# To install in $HOME instead of /usr/local, use:
+#    make install prefix=$HOME
+
+CC=cc
+
+CFLAGS=-O
+#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7
+#CFLAGS=-g -DDEBUG
+#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \
+#           -Wstrict-prototypes -Wmissing-prototypes
+
+LDFLAGS=libz.a
+LDSHARED=$(CC)
+CPP=$(CC) -E
+
+LIBS=libz.a
+SHAREDLIB=libz.so
+SHAREDLIBV=libz.so.1.2.3
+SHAREDLIBM=libz.so.1
+
+AR=ar rc
+RANLIB=ranlib
+TAR=tar
+SHELL=/bin/sh
+EXE=
+
+prefix = /usr/local
+exec_prefix = ${prefix}
+libdir = ${exec_prefix}/lib
+includedir = ${prefix}/include
+mandir = ${prefix}/share/man
+man3dir = ${mandir}/man3
+
+OBJS = adler32.o compress.o crc32.o gzio.o uncompr.o deflate.o trees.o \
+       zutil.o inflate.o infback.o inftrees.o inffast.o
+
+OBJA =
+# to use the asm code: make OBJA=match.o
+
+TEST_OBJS = example.o minigzip.o
+
+all: example$(EXE) minigzip$(EXE)
+
+check: test
+test: all
+	@LD_LIBRARY_PATH=.:$(LD_LIBRARY_PATH) ; export LD_LIBRARY_PATH; \
+	echo hello world | ./minigzip | ./minigzip -d || \
+	  echo '		*** minigzip test FAILED ***' ; \
+	if ./example; then \
+	  echo '		*** zlib test OK ***'; \
+	else \
+	  echo '		*** zlib test FAILED ***'; \
+	fi
+
+libz.a: $(OBJS) $(OBJA)
+	$(AR) $@ $(OBJS) $(OBJA)
+	-@ ($(RANLIB) $@ || true) >/dev/null 2>&1
+
+match.o: match.S
+	$(CPP) match.S > _match.s
+	$(CC) -c _match.s
+	mv _match.o match.o
+	rm -f _match.s
+
+$(SHAREDLIBV): $(OBJS)
+	$(LDSHARED) -o $@ $(OBJS)
+	rm -f $(SHAREDLIB) $(SHAREDLIBM)
+	ln -s $@ $(SHAREDLIB)
+	ln -s $@ $(SHAREDLIBM)
+
+example$(EXE): example.o $(LIBS)
+	$(CC) $(CFLAGS) -o $@ example.o $(LDFLAGS)
+
+minigzip$(EXE): minigzip.o $(LIBS)
+	$(CC) $(CFLAGS) -o $@ minigzip.o $(LDFLAGS)
+
+install: $(LIBS)
+	-@if [ ! -d $(exec_prefix) ]; then mkdir -p $(exec_prefix); fi
+	-@if [ ! -d $(includedir)  ]; then mkdir -p $(includedir); fi
+	-@if [ ! -d $(libdir)      ]; then mkdir -p $(libdir); fi
+	-@if [ ! -d $(man3dir)     ]; then mkdir -p $(man3dir); fi
+	cp zlib.h zconf.h $(includedir)
+	chmod 644 $(includedir)/zlib.h $(includedir)/zconf.h
+	cp $(LIBS) $(libdir)
+	cd $(libdir); chmod 755 $(LIBS)
+	-@(cd $(libdir); $(RANLIB) libz.a || true) >/dev/null 2>&1
+	cd $(libdir); if test -f $(SHAREDLIBV); then \
+	  rm -f $(SHAREDLIB) $(SHAREDLIBM); \
+	  ln -s $(SHAREDLIBV) $(SHAREDLIB); \
+	  ln -s $(SHAREDLIBV) $(SHAREDLIBM); \
+	  (ldconfig || true)  >/dev/null 2>&1; \
+	fi
+	cp zlib.3 $(man3dir)
+	chmod 644 $(man3dir)/zlib.3
+# The ranlib in install is needed on NeXTSTEP which checks file times
+# ldconfig is for Linux
+
+uninstall:
+	cd $(includedir); \
+	cd $(libdir); rm -f libz.a; \
+	if test -f $(SHAREDLIBV); then \
+	  rm -f $(SHAREDLIBV) $(SHAREDLIB) $(SHAREDLIBM); \
+	fi
+	cd $(man3dir); rm -f zlib.3
+
+mostlyclean: clean
+clean:
+	rm -f *.o *~ example$(EXE) minigzip$(EXE) \
+	   libz.* foo.gz so_locations \
+	   _match.s maketree contrib/infback9/*.o
+
+maintainer-clean: distclean
+distclean: clean
+	cp -p Makefile.in Makefile
+	cp -p zconf.in.h zconf.h
+	rm -f .DS_Store
+
+tags:
+	etags *.[ch]
+
+depend:
+	makedepend -- $(CFLAGS) -- *.[ch]
+
+# DO NOT DELETE THIS LINE -- make depend depends on it.
+
+adler32.o: zlib.h zconf.h
+compress.o: zlib.h zconf.h
+crc32.o: crc32.h zlib.h zconf.h
+deflate.o: deflate.h zutil.h zlib.h zconf.h
+example.o: zlib.h zconf.h
+gzio.o: zutil.h zlib.h zconf.h
+inffast.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
+inflate.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
+infback.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
+inftrees.o: zutil.h zlib.h zconf.h inftrees.h
+minigzip.o: zlib.h zconf.h
+trees.o: deflate.h zutil.h zlib.h zconf.h trees.h
+uncompr.o: zlib.h zconf.h
+zutil.o: zutil.h zlib.h zconf.h
diff -ruN StormLib.orig/stormlib/zlib/Makefile.old StormLib.fix/stormlib/zlib/Makefile.old
--- StormLib.orig/stormlib/zlib/Makefile.old	1970-01-01 08:00:00.000000000 +0800
+++ StormLib.fix/stormlib/zlib/Makefile.old	2005-07-18 05:25:22.000000000 +0800
@@ -0,0 +1,154 @@
+# Makefile for zlib
+# Copyright (C) 1995-2005 Jean-loup Gailly.
+# For conditions of distribution and use, see copyright notice in zlib.h
+
+# To compile and test, type:
+#    ./configure; make test
+# The call of configure is optional if you don't have special requirements
+# If you wish to build zlib as a shared library, use: ./configure -s
+
+# To use the asm code, type:
+#    cp contrib/asm?86/match.S ./match.S
+#    make LOC=-DASMV OBJA=match.o
+
+# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:
+#    make install
+# To install in $HOME instead of /usr/local, use:
+#    make install prefix=$HOME
+
+CC=cc
+
+CFLAGS=-O
+#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7
+#CFLAGS=-g -DDEBUG
+#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \
+#           -Wstrict-prototypes -Wmissing-prototypes
+
+LDFLAGS=libz.a
+LDSHARED=$(CC)
+CPP=$(CC) -E
+
+LIBS=libz.a
+SHAREDLIB=libz.so
+SHAREDLIBV=libz.so.1.2.3
+SHAREDLIBM=libz.so.1
+
+AR=ar rc
+RANLIB=ranlib
+TAR=tar
+SHELL=/bin/sh
+EXE=
+
+prefix = /usr/local
+exec_prefix = ${prefix}
+libdir = ${exec_prefix}/lib
+includedir = ${prefix}/include
+mandir = ${prefix}/share/man
+man3dir = ${mandir}/man3
+
+OBJS = adler32.o compress.o crc32.o gzio.o uncompr.o deflate.o trees.o \
+       zutil.o inflate.o infback.o inftrees.o inffast.o
+
+OBJA =
+# to use the asm code: make OBJA=match.o
+
+TEST_OBJS = example.o minigzip.o
+
+all: example$(EXE) minigzip$(EXE)
+
+check: test
+test: all
+	@LD_LIBRARY_PATH=.:$(LD_LIBRARY_PATH) ; export LD_LIBRARY_PATH; \
+	echo hello world | ./minigzip | ./minigzip -d || \
+	  echo '		*** minigzip test FAILED ***' ; \
+	if ./example; then \
+	  echo '		*** zlib test OK ***'; \
+	else \
+	  echo '		*** zlib test FAILED ***'; \
+	fi
+
+libz.a: $(OBJS) $(OBJA)
+	$(AR) $@ $(OBJS) $(OBJA)
+	-@ ($(RANLIB) $@ || true) >/dev/null 2>&1
+
+match.o: match.S
+	$(CPP) match.S > _match.s
+	$(CC) -c _match.s
+	mv _match.o match.o
+	rm -f _match.s
+
+$(SHAREDLIBV): $(OBJS)
+	$(LDSHARED) -o $@ $(OBJS)
+	rm -f $(SHAREDLIB) $(SHAREDLIBM)
+	ln -s $@ $(SHAREDLIB)
+	ln -s $@ $(SHAREDLIBM)
+
+example$(EXE): example.o $(LIBS)
+	$(CC) $(CFLAGS) -o $@ example.o $(LDFLAGS)
+
+minigzip$(EXE): minigzip.o $(LIBS)
+	$(CC) $(CFLAGS) -o $@ minigzip.o $(LDFLAGS)
+
+install: $(LIBS)
+	-@if [ ! -d $(exec_prefix) ]; then mkdir -p $(exec_prefix); fi
+	-@if [ ! -d $(includedir)  ]; then mkdir -p $(includedir); fi
+	-@if [ ! -d $(libdir)      ]; then mkdir -p $(libdir); fi
+	-@if [ ! -d $(man3dir)     ]; then mkdir -p $(man3dir); fi
+	cp zlib.h zconf.h $(includedir)
+	chmod 644 $(includedir)/zlib.h $(includedir)/zconf.h
+	cp $(LIBS) $(libdir)
+	cd $(libdir); chmod 755 $(LIBS)
+	-@(cd $(libdir); $(RANLIB) libz.a || true) >/dev/null 2>&1
+	cd $(libdir); if test -f $(SHAREDLIBV); then \
+	  rm -f $(SHAREDLIB) $(SHAREDLIBM); \
+	  ln -s $(SHAREDLIBV) $(SHAREDLIB); \
+	  ln -s $(SHAREDLIBV) $(SHAREDLIBM); \
+	  (ldconfig || true)  >/dev/null 2>&1; \
+	fi
+	cp zlib.3 $(man3dir)
+	chmod 644 $(man3dir)/zlib.3
+# The ranlib in install is needed on NeXTSTEP which checks file times
+# ldconfig is for Linux
+
+uninstall:
+	cd $(includedir); \
+	cd $(libdir); rm -f libz.a; \
+	if test -f $(SHAREDLIBV); then \
+	  rm -f $(SHAREDLIBV) $(SHAREDLIB) $(SHAREDLIBM); \
+	fi
+	cd $(man3dir); rm -f zlib.3
+
+mostlyclean: clean
+clean:
+	rm -f *.o *~ example$(EXE) minigzip$(EXE) \
+	   libz.* foo.gz so_locations \
+	   _match.s maketree contrib/infback9/*.o
+
+maintainer-clean: distclean
+distclean: clean
+	cp -p Makefile.in Makefile
+	cp -p zconf.in.h zconf.h
+	rm -f .DS_Store
+
+tags:
+	etags *.[ch]
+
+depend:
+	makedepend -- $(CFLAGS) -- *.[ch]
+
+# DO NOT DELETE THIS LINE -- make depend depends on it.
+
+adler32.o: zlib.h zconf.h
+compress.o: zlib.h zconf.h
+crc32.o: crc32.h zlib.h zconf.h
+deflate.o: deflate.h zutil.h zlib.h zconf.h
+example.o: zlib.h zconf.h
+gzio.o: zutil.h zlib.h zconf.h
+inffast.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
+inflate.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
+infback.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
+inftrees.o: zutil.h zlib.h zconf.h inftrees.h
+minigzip.o: zlib.h zconf.h
+trees.o: deflate.h zutil.h zlib.h zconf.h trees.h
+uncompr.o: zlib.h zconf.h
+zutil.o: zutil.h zlib.h zconf.h
