--- include/vapor/MyBase.h~	2009-06-05 23:19:28.000000000 +0600
+++ include/vapor/MyBase.h	2009-11-12 15:59:20.299151873 +0500
@@ -38,6 +38,7 @@
 #include <string>
 #include <cstring>
 #include <vector>
+#include <cstdarg>
 #include "vaporinternal/common.h"
 
 #ifdef WIN32
--- lib/vdf/WRF.cpp~	2009-11-12 16:03:55.572457807 +0500
+++ lib/vdf/WRF.cpp	2009-11-12 16:04:17.365791593 +0500
@@ -7,6 +7,7 @@
 #include <sstream>
 #include <ctime>
 #include <netcdf.h>
+#include <cstdio>
 #include "assert.h"
 
 #include <vapor/CFuncs.h>
--- apps/vaporversion/vaporversion.cpp~	2009-11-12 16:13:26.613164858 +0500
+++ apps/vaporversion/vaporversion.cpp	2009-11-12 16:14:00.329065292 +0500
@@ -26,6 +26,7 @@
 #include <vector>
 #include <sstream>
 #include <cerrno>
+#include <cstdio>
 
 #include <vapor/CFuncs.h>
 #include <vapor/OptionParser.h>
--- apps/wrfvdfcreate/wrfvdfcreate.cpp~	2009-11-12 16:23:54.515671981 +0500
+++ apps/wrfvdfcreate/wrfvdfcreate.cpp	2009-11-12 16:25:06.102332762 +0500
@@ -4,6 +4,7 @@
 #include <sstream>
 #include <algorithm>
 #include <netcdf.h>
+#include <cstdio>
 #include "proj_api.h"
 #include <vapor/CFuncs.h>
 #include <vapor/OptionParser.h>
--- apps/vdfedit/vdfedit.cpp~	2009-11-12 16:33:42.272279155 +0500
+++ apps/vdfedit/vdfedit.cpp	2009-11-12 16:33:56.772281223 +0500
@@ -26,6 +26,7 @@
 #include <sstream>
 #include <algorithm>
 #include <netcdf.h>
+#include <cstdio>
 
 #include <vapor/CFuncs.h>
 #include <vapor/OptionParser.h>
--- apps/tiff2geotiff/tiff2geotiff.cpp~	2009-11-12 16:40:59.735569530 +0500
+++ apps/tiff2geotiff/tiff2geotiff.cpp	2009-11-12 16:41:04.282236044 +0500
@@ -519,7 +519,7 @@
     else if (streq(opt, "packbits"))
         defcompression = COMPRESSION_PACKBITS;
     else if (strneq(opt, "jpeg", 4)) {
-        char* cp = strchr(opt, ':');
+        const char* cp = strchr(opt, ':');
         if (cp && isdigit(cp[1]))
             quality = atoi(cp+1);
         if (cp && strchr(cp, 'r'))
@@ -531,12 +531,12 @@
     } else if (streq(opt, "g4"))
         defcompression = COMPRESSION_CCITTFAX4;
     else if (strneq(opt, "lzw", 3)) {
-        char* cp = strchr(opt, ':');
+        const char* cp = strchr(opt, ':');
         if (cp)
             defpredictor = atoi(cp+1);
         defcompression = COMPRESSION_LZW;
     } else if (strneq(opt, "zip", 3)) {
-        char* cp = strchr(opt, ':');
+        const char* cp = strchr(opt, ':');
         if (cp)
             defpredictor = atoi(cp+1);
         defcompression = COMPRESSION_DEFLATE;
--- apps/tiff2geotiff/getopt.cpp~	2009-11-12 16:47:16.578865102 +0500
+++ apps/tiff2geotiff/getopt.cpp	2009-11-12 16:50:57.935509746 +0500
@@ -55,7 +55,7 @@
 getopt(int nargc, char** nargv, const char* ostr)
 {
 	const static char *place = EMSG;		/* option letter processing */
-	register char *oli;			/* option letter list index */
+	const register char *oli;			/* option letter list index */
 	char *p;
 
 	if (!*place) {				/* update scanning pointer */
--- apps/flashamr2vdf/flashhdf5.cpp	2009-11-12 16:59:30.645458489 +0500
+++ apps/flashamr2vdf/flashhdf5.cpp~	2009-11-12 16:53:47.738825775 +0500
@@ -141,7 +141,7 @@
     memspace = H5Screate_simple(rank, &dimens_1d, NULL);
 	if (memspace < 0) return(-1);
     
-    dataset = H5Dopen(_datasetId, "gid");
+    dataset = H5Dopen(_datasetId, "gid", 0);
 	if (dataset < 0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_INT, memspace, dataspace, 
 		      H5P_DEFAULT, gids);
@@ -196,7 +196,7 @@
     memspace = H5Screate_simple(rank, &dimens_1d, NULL);
 	if (memspace < 0) return(-1);
     
-    dataset = H5Dopen(_datasetId, "gid");
+    dataset = H5Dopen(_datasetId, "gid", 0);
 	if (dataset < 0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_INT, memspace, dataspace, 
 		      H5P_DEFAULT, gids);
@@ -254,7 +254,7 @@
     memspace = H5Screate_simple(rank, &dimens_1d, NULL);
 	if (memspace < 0) return(-1);
     
-    dataset = H5Dopen(_datasetId, "bounding box");
+    dataset = H5Dopen(_datasetId, "bounding box", 0);
 	if (dataset < 0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_FLOAT, memspace, dataspace, 
 		      H5P_DEFAULT, bboxes);
@@ -333,7 +333,7 @@
     memspace = H5Screate_simple(rank, &dimens_1d, NULL);
     
     /* create the dataset from scratch only if this is our first time */
-    dataset = H5Dopen(_datasetId, "node type");
+    dataset = H5Dopen(_datasetId, "node type", 0);
 	if (dataset <  0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_INT, memspace, dataspace, 
 		      H5P_DEFAULT, (void *)&ntype);
@@ -382,7 +382,7 @@
 	if (memspace < 0) return(-1);
     
     /* create the dataset from scratch only if this is our first time */
-    dataset = H5Dopen(_datasetId, "refine level");
+    dataset = H5Dopen(_datasetId, "refine level", 0);
 	if (dataset < 0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_INT, memspace, dataspace, 
 		      H5P_DEFAULT, (void *)refine_levels);
@@ -431,7 +431,7 @@
 	if (memspace < 0) return(-1);
     
     /* create the dataset from scratch only if this is our first time */
-    dataset = H5Dopen(_datasetId, "refine level");
+    dataset = H5Dopen(_datasetId, "refine level", 0);
 	if (dataset < 0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_INT, memspace, dataspace, 
 		      H5P_DEFAULT, (void *)&refinelevel);
@@ -548,7 +548,7 @@
 			       start_4d, stride_4d, count_4d, NULL);
 	if (ierr < 0) return(-1);
     
-    dataset = H5Dopen(_datasetId,flash_var_name);
+    dataset = H5Dopen(_datasetId,flash_var_name, 0);
 	if (dataset < 0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_FLOAT, memspace, dataspace, 
 		      H5P_DEFAULT, variable);
@@ -679,7 +679,7 @@
     memspace = H5Screate_simple(rank, &dimens_1d, NULL);
 	if (memspace < 0) return(-1);
     
-    dataset = H5Dopen(_datasetId, "coordinates");
+    dataset = H5Dopen(_datasetId, "coordinates", 0);
 	if (dataset < 0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_DOUBLE, memspace, dataspace, 
   		      H5P_DEFAULT, coord);
@@ -740,7 +740,7 @@
     memspace = H5Screate_simple(rank, &dimens_1d, NULL);
 	if (memspace < 0) return(-1);
     
-    dataset = H5Dopen(_datasetId, "block size");
+    dataset = H5Dopen(_datasetId, "block size", 0);
 	if (dataset < 0) return(-1);
     herr_t status  = H5Dread(dataset, H5T_NATIVE_DOUBLE, memspace, dataspace, 
   		      H5P_DEFAULT, size);
@@ -768,7 +768,7 @@
 
     /* manually set the string size */
     
-    hid_t dataset = H5Dopen(_datasetId, "unknown names");
+    hid_t dataset = H5Dopen(_datasetId, "unknown names", 0);
 	if (dataset < 0) return(-1);
     hid_t dataspace = H5Dget_space(dataset);
 	if (dataspace < 0) return(-1);
@@ -824,7 +824,7 @@
 
 	hid_t sp_type;
 	
-	hid_t dataset = H5Dopen(_datasetId, "simulation parameters");
+	hid_t dataset = H5Dopen(_datasetId, "simulation parameters", 0);
 	if (dataset < 0) return(-1);
 
 	/* create the HDF 5 compound data type to describe the record */
@@ -893,7 +893,7 @@
 
 	int_scalars_t *int_scalars = NULL;
 
-	hid_t dataset = H5Dopen(_datasetId, "integer scalars");
+	hid_t dataset = H5Dopen(_datasetId, "integer scalars", 0);
 	if (dataset < 0) return(-1);
 
     hid_t dataspace = H5Dget_space(dataset);
@@ -964,7 +964,7 @@
 
 	real_scalars_t *real_scalars = NULL;
 
-	dataset = H5Dopen(_datasetId, "real scalars");
+	dataset = H5Dopen(_datasetId, "real scalars", 0);
 	if (dataset < 0) return(-1);
 
     dataspace = H5Dget_space(dataset);
@@ -1035,7 +1035,7 @@
 
 	run_params_t *run_params = NULL;
 
-	hid_t dataset = H5Dopen(_datasetId, "integer runtime parameters");
+	hid_t dataset = H5Dopen(_datasetId, "integer runtime parameters", 0);
 	if (dataset < 0) return(-1);
 
     hid_t dataspace = H5Dget_space(dataset);
@@ -1114,7 +1114,7 @@
 
 	run_params_t *run_params = NULL;
 
-	hid_t dataset = H5Dopen(_datasetId, "real runtime parameters");
+	hid_t dataset = H5Dopen(_datasetId, "real runtime parameters", 0);
 	if (dataset < 0) return(-1);
 
     hid_t dataspace = H5Dget_space(dataset);
@@ -1194,7 +1194,7 @@
 
 	run_params_t *run_params = NULL;
 
-	hid_t dataset = H5Dopen(_datasetId, "string runtime parameters");
+	hid_t dataset = H5Dopen(_datasetId, "string runtime parameters", 0);
 	if (dataset < 0) return(-1);
 
     hid_t dataspace = H5Dget_space(dataset);
