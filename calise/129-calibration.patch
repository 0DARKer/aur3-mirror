--- calise/calibration.py       2011/08/27 06:34:45     125
+++ calise/calibration.py       2011/08/28 08:34:22     129
@@ -120,25 +120,26 @@
 
 def calibrate(configpath=None,prog='calise'):
 
-    while True:
-        configname = raw_input( _('Enter a name for the new profile') + ': ' )
-        if (
-            configname != configname + os.path.dirname(configname) or
-            configname == ''
-        ):
-            print( _('Please retry and enter a valid name.') )
-            print( _(
-                'Since it\'ll be a filename, chars not supported by your os '
-                'will raise an error' ) + '\n')
-        elif os.listdir(save_config_path(prog)).count(configname +'.cfg') > 0:
-            dummy = query_yes_no(
-                _('The selected profile already exists, overwrite?'), 'no'
-            )
-            if dummy == 'yes': del dummy; break
-            if dummy == 'no': sys.stdout.write('\n')
-        else: break
+    if configpath is None:
+        while True:
+            configname = raw_input(_('Enter a name for the new profile')+': ')
+            if (
+                configname != configname + os.path.dirname(configname) or
+                configname == ''
+            ):
+                print( _('Please retry and enter a valid name.') )
+                print( _(
+                    'Since it\'ll be a filename, chars not supported by your '
+                    'os will raise an error' ) + '\n')
+            elif os.listdir(save_config_path(prog)).count(configname+'.cfg')>0:
+                dummy = query_yes_no(
+                    _('The selected profile already exists, overwrite?'), 'no'
+                )
+                if dummy == 'yes': del dummy; break
+                if dummy == 'no': sys.stdout.write('\n')
+            else: break
+        configpath = os.path.join(save_config_path(prog), configname + '.cfg')
     sys.stdout.write('\n')
-    configpath = os.path.join(save_config_path(prog), configname + '.cfg')
 
     print('Step 1 of 5\n⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺')
     webcam = set_cam_path()