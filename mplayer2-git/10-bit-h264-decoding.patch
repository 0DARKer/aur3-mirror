diff --git a/codec-cfg.c b/codec-cfg.c
index 792972f..f144ad2 100644
--- a/codec-cfg.c
+++ b/codec-cfg.c
@@ -181,7 +181,10 @@ static const struct {
     {"420P16BE", IMGFMT_420P16_BE},
     {"444P16", IMGFMT_444P16},
     {"422P16", IMGFMT_422P16},
+    {"422P10", IMGFMT_422P10},
     {"420P16", IMGFMT_420P16},
+    {"420P10", IMGFMT_420P10},
+    {"420P9", IMGFMT_420P9},
     {"420A",  IMGFMT_420A},
     {"444P",  IMGFMT_444P},
     {"422P",  IMGFMT_422P},
diff --git a/etc/codecs.conf b/etc/codecs.conf
index b61c5d4..aaf649f 100644
--- a/etc/codecs.conf
+++ b/etc/codecs.conf
@@ -986,7 +986,7 @@ videocodec ffh264
   format 0x10000005
   driver ffmpeg
   dll h264
-  out YV12,I420,IYUV
+  out YV12,I420,IYUV,420P10,420P9
 
 videocodec ffh264vdpau
   info "FFmpeg H.264 (VDPAU)"
@@ -2918,7 +2918,7 @@ videocodec ffv210
   fourcc v210
   driver ffmpeg
   dll v210
-  out 422P16
+  out 422P10
 
 videocodec qtcine
   info "cinewave uncompressed 10-bit codec"
diff --git a/fmt-conversion.c b/fmt-conversion.c
index 9e88100..0400d4a 100644
--- a/fmt-conversion.c
+++ b/fmt-conversion.c
@@ -74,8 +74,14 @@ static const struct {
 
     {IMGFMT_420P16_LE,  PIX_FMT_YUV420P16LE},
     {IMGFMT_420P16_BE,  PIX_FMT_YUV420P16BE},
+    {IMGFMT_420P10_LE,  PIX_FMT_YUV420P10LE},
+    {IMGFMT_420P10_BE,  PIX_FMT_YUV420P10BE},
+    {IMGFMT_420P9_LE,   PIX_FMT_YUV420P9LE},
+    {IMGFMT_420P9_BE,   PIX_FMT_YUV420P9BE},
     {IMGFMT_422P16_LE,  PIX_FMT_YUV422P16LE},
     {IMGFMT_422P16_BE,  PIX_FMT_YUV422P16BE},
+    {IMGFMT_422P10_LE,  PIX_FMT_YUV422P10LE},
+    {IMGFMT_422P10_BE,  PIX_FMT_YUV422P10BE},
     {IMGFMT_444P16_LE,  PIX_FMT_YUV444P16LE},
     {IMGFMT_444P16_BE,  PIX_FMT_YUV444P16BE},
 
diff --git a/libmpcodecs/img_format.c b/libmpcodecs/img_format.c
index df47ce0..32bd3e8 100644
--- a/libmpcodecs/img_format.c
+++ b/libmpcodecs/img_format.c
@@ -59,8 +59,14 @@ const char *vo_format_name(int format)
 	case IMGFMT_Y8: return "Planar Y8";
 	case IMGFMT_420P16_LE: return "Planar 420P 16-bit little-endian";
 	case IMGFMT_420P16_BE: return "Planar 420P 16-bit big-endian";
+	case IMGFMT_420P10_LE: return "Planar 420P 10-bit little-endian";
+	case IMGFMT_420P10_BE: return "Planar 420P 10-bit big-endian";
+	case IMGFMT_420P9_LE: return "Planar 420P 9-bit little-endian";
+	case IMGFMT_420P9_BE: return "Planar 420P 9-bit big-endian";
 	case IMGFMT_422P16_LE: return "Planar 422P 16-bit little-endian";
 	case IMGFMT_422P16_BE: return "Planar 422P 16-bit big-endian";
+	case IMGFMT_422P10_LE: return "Planar 422P 10-bit little-endian";
+	case IMGFMT_422P10_BE: return "Planar 422P 10-bit big-endian";
 	case IMGFMT_444P16_LE: return "Planar 444P 16-bit little-endian";
 	case IMGFMT_444P16_BE: return "Planar 444P 16-bit big-endian";
 	case IMGFMT_420A: return "Planar 420P with alpha";
@@ -116,6 +122,10 @@ int mp_get_chroma_shift(int format, int *x_shift, int *y_shift)
     switch (format) {
     case IMGFMT_420P16_LE:
     case IMGFMT_420P16_BE:
+    case IMGFMT_420P10_LE:
+    case IMGFMT_420P10_BE:
+    case IMGFMT_420P9_LE:
+    case IMGFMT_420P9_BE:
         bpp_factor = 2;
     case IMGFMT_420A:
     case IMGFMT_I420:
@@ -138,6 +148,8 @@ int mp_get_chroma_shift(int format, int *x_shift, int *y_shift)
         break;
     case IMGFMT_422P16_LE:
     case IMGFMT_422P16_BE:
+    case IMGFMT_422P10_LE:
+    case IMGFMT_422P10_BE:
         bpp_factor = 2;
     case IMGFMT_422P:
         xs = 1;
diff --git a/libmpcodecs/img_format.h b/libmpcodecs/img_format.h
index c95ed4d..9d616d2 100644
--- a/libmpcodecs/img_format.h
+++ b/libmpcodecs/img_format.h
@@ -125,20 +125,32 @@
 #define IMGFMT_444P16_BE 0x34343451
 #define IMGFMT_422P16_LE 0x51323234
 #define IMGFMT_422P16_BE 0x34323251
+#define IMGFMT_422P10_LE 0x52323234
+#define IMGFMT_422P10_BE 0x34323252
 #define IMGFMT_420P16_LE 0x51303234
 #define IMGFMT_420P16_BE 0x34323051
+#define IMGFMT_420P10_LE 0x52303234
+#define IMGFMT_420P10_BE 0x34323052
+#define IMGFMT_420P9_LE 0x53303234
+#define IMGFMT_420P9_BE 0x34323053
 #if HAVE_BIGENDIAN
 #define IMGFMT_444P16 IMGFMT_444P16_BE
 #define IMGFMT_422P16 IMGFMT_422P16_BE
+#define IMGFMT_422P10 IMGFMT_422P10_BE
 #define IMGFMT_420P16 IMGFMT_420P16_BE
+#define IMGFMT_420P10 IMGFMT_420P10_BE
+#define IMGFMT_420P9 IMGFMT_420P9_BE
 #else
 #define IMGFMT_444P16 IMGFMT_444P16_LE
 #define IMGFMT_422P16 IMGFMT_422P16_LE
+#define IMGFMT_422P10 IMGFMT_422P10_LE
 #define IMGFMT_420P16 IMGFMT_420P16_LE
+#define IMGFMT_420P10 IMGFMT_420P10_LE
+#define IMGFMT_420P9 IMGFMT_420P9_LE
 #endif
 
-#define IMGFMT_IS_YUVP16_LE(fmt) (((fmt  ^ IMGFMT_420P16_LE) & 0xff0000ff) == 0)
-#define IMGFMT_IS_YUVP16_BE(fmt) (((fmt  ^ IMGFMT_420P16_BE) & 0xff0000ff) == 0)
+#define IMGFMT_IS_YUVP16_LE(fmt) (((fmt - 0x51000034) & 0xfc0000ff) == 0)
+#define IMGFMT_IS_YUVP16_BE(fmt) (((fmt - 0x34000051) & 0xff0000fc) == 0)
 #define IMGFMT_IS_YUVP16_NE(fmt) (((fmt  ^ IMGFMT_420P16   ) & 0xff0000ff) == 0)
 #define IMGFMT_IS_YUVP16(fmt)    (IMGFMT_IS_YUVP16_LE(fmt) || IMGFMT_IS_YUVP16_BE(fmt))
 
diff --git a/libmpcodecs/mp_image.c b/libmpcodecs/mp_image.c
index d250376..b18d6f7 100644
--- a/libmpcodecs/mp_image.c
+++ b/libmpcodecs/mp_image.c
@@ -147,8 +147,14 @@ void mp_image_setfmt(mp_image_t* mpi,unsigned int out_fmt){
     case IMGFMT_444P16_BE:
     case IMGFMT_422P16_LE:
     case IMGFMT_422P16_BE:
+    case IMGFMT_422P10_LE:
+    case IMGFMT_422P10_BE:
     case IMGFMT_420P16_LE:
     case IMGFMT_420P16_BE:
+    case IMGFMT_420P10_LE:
+    case IMGFMT_420P10_BE:
+    case IMGFMT_420P9_LE:
+    case IMGFMT_420P9_BE:
 	return;
     case IMGFMT_Y800:
     case IMGFMT_Y8:
diff --git a/libmpcodecs/vf_scale.c b/libmpcodecs/vf_scale.c
index e8e846c..60b08fa 100644
--- a/libmpcodecs/vf_scale.c
+++ b/libmpcodecs/vf_scale.c
@@ -71,10 +71,16 @@ static const unsigned int outfmt_list[]={
     IMGFMT_422P,
     IMGFMT_422P16_LE,
     IMGFMT_422P16_BE,
+    IMGFMT_422P10_LE,
+    IMGFMT_422P10_BE,
     IMGFMT_YV12,
     IMGFMT_I420,
     IMGFMT_420P16_LE,
     IMGFMT_420P16_BE,
+    IMGFMT_420P10_LE,
+    IMGFMT_420P10_BE,
+    IMGFMT_420P9_LE,
+    IMGFMT_420P9_BE,
     IMGFMT_420A,
     IMGFMT_IYUV,
     IMGFMT_YVU9,
diff --git a/m_option.c b/m_option.c
index 927b93c..9abc7c5 100644
--- a/m_option.c
+++ b/m_option.c
@@ -1110,10 +1110,19 @@ static struct {
   {"444p16be", IMGFMT_444P16_BE},
   {"422p16le", IMGFMT_422P16_LE},
   {"422p16be", IMGFMT_422P16_BE},
+  {"422p10le", IMGFMT_422P10_LE},
+  {"422p10be", IMGFMT_422P10_BE},
   {"420p16le", IMGFMT_420P16_LE},
   {"420p16be", IMGFMT_420P16_BE},
+  {"420p10le", IMGFMT_420P10_LE},
+  {"420p10be", IMGFMT_420P10_BE},
+  {"420p9le", IMGFMT_420P9_LE},
+  {"420p9be", IMGFMT_420P9_BE},
   {"444p16", IMGFMT_444P16},
   {"422p16", IMGFMT_422P16},
+  {"422p10", IMGFMT_422P10},
+  {"420p10", IMGFMT_420P10},
+  {"420p9", IMGFMT_420P9},
   {"420p16", IMGFMT_420P16},
   {"420a", IMGFMT_420A},
   {"444p", IMGFMT_444P},
