--- a/data/com.ubuntu-tweak.daemon.policy.in
+++ b/data/com.ubuntu-tweak.daemon.policy.in
@@ -36,18 +36,4 @@
     </defaults>
   </action>
 
-  <action id="com.ubuntu-tweak.daemon.edit-sources">
-    <_description>
-      Edit the Software Sources lists
-    </_description>
-    <_message>
-      To edit the software sources, you need to authenticate.
-    </_message>
-    <defaults>
-      <allow_any>auth_admin</allow_any>
-      <allow_inactive>auth_admin</allow_inactive>
-      <allow_active>auth_admin_keep</allow_active>
-    </defaults>
-  </action>
-
 </policyconfig>
--- a/data/com.ubuntu-tweak.tweak.gschema.xml
+++ b/data/com.ubuntu-tweak.tweak.gschema.xml
@@ -8,7 +8,7 @@
 			</description>
 		</key>
 		<key name="clips" type="as">
-			<default>['HardwareInfo', 'SystemInfo', 'CleanerInfo', 'UpdateInfo']</default>
+			<default>['HardwareInfo', 'SystemInfo', 'CleanerInfo']</default>
 			<summary>The clips in overview page</summary>
 			<description>
 			  The clips you want to show in the overview page
@@ -28,13 +28,6 @@
 			  The third-party admins extension
 			</description>
 		</key>
-		<key name="auto-backup" type="b">
-			<default>true</default>
-			<summary>Auto Backup for every sources.list changes</summary>
-			<description>
-			  Auto Backup for every sources.list changes
-			</description>
-		</key>
 		<key name="window-size" type="(ii)">
 			<default>(-1,-1)</default>
 			<summary>The width and height of window</summary>
@@ -49,57 +42,6 @@
 			  Last clip selection location
 			</description>
 		</key>
-		<key name="appcenter-has-update" type="b">
-			<default>false</default>
-			<summary>Last clip selection location</summary>
-			<description>
-			  Last clip selection location
-			</description>
-		</key>
-		<key name="appcenter-version" type="s">
-			<default>''</default>
-			<summary>Last clip selection location</summary>
-			<description>
-			  Last clip selection location
-			</description>
-		</key>
-	</schema>
-	<schema id="com.ubuntu-tweak.apps" path="/apps/ubuntu-tweak/apps/" gettext-domain="ubuntu-tweak">
-		<key name="disable-warning" type="b">
-			<default>false</default>
-			<summary>Show warnings for sources</summary>
-			<description>
-              Show warnings for sources
-			</description>
-		</key>
-		<key name="apps-can-update" type="b">
-			<default>false</default>
-			<summary>Identify if there's update for apps</summary>
-			<description>
-              Identify if there's update for apps
-			</description>
-		</key>
-		<key name="apps-version" type="s">
-			<default>''</default>
-			<summary>The version of online apps data</summary>
-			<description>
-              The version of online apps data
-			</description>
-		</key>
-		<key name="sources-can-update" type="b">
-			<default>false</default>
-			<summary>Identify if there's update for sources</summary>
-			<description>
-              Identify if there's update for sources
-			</description>
-		</key>
-		<key name="sources-version" type="s">
-			<default>''</default>
-			<summary>The version of online sources data</summary>
-			<description>
-              The version of online sources data
-			</description>
-		</key>
 	</schema>
 	<schema id="com.ubuntu-tweak.janitor" path="/apps/ubuntu-tweak/janitor/" gettext-domain="ubuntu-tweak">
 		<key name="plugins" type="as">
--- a/data/ubuntu-tweak.desktop.in
+++ b/data/ubuntu-tweak.desktop.in
@@ -16,11 +16,6 @@
 Exec=ubuntu-tweak -f overview
 TargetEnvironment=Unity
 
-[Apps Shortcut Group]
-_Name=Apps
-Exec=ubuntu-tweak -f apps
-TargetEnvironment=Unity
-
 [Tweaks Shortcut Group]
 _Name=Tweaks
 Exec=ubuntu-tweak -f tweaks
--- a/data/ui/mainwindow.ui
+++ b/data/ui/mainwindow.ui
@@ -350,27 +350,6 @@
                               </packing>
                             </child>
                             <child>
-                              <object class="GtkRadioButton" id="apps_button">
-                                <property name="label" translatable="yes">_Apps</property>
-                                <property name="use_action_appearance">False</property>
-                                <property name="visible">True</property>
-                                <property name="can_focus">True</property>
-                                <property name="receives_default">False</property>
-                                <property name="use_action_appearance">False</property>
-                                <property name="use_underline">True</property>
-                                <property name="xalign">0.5</property>
-                                <property name="active">True</property>
-                                <property name="draw_indicator">False</property>
-                                <property name="group">overview_button</property>
-                                <signal name="toggled" handler="on_apps_button_toggled" swapped="no"/>
-                              </object>
-                              <packing>
-                                <property name="expand">False</property>
-                                <property name="fill">True</property>
-                                <property name="position">1</property>
-                              </packing>
-                            </child>
-                            <child>
                               <object class="GtkRadioButton" id="tweaks_button">
                                 <property name="label" translatable="yes">_Tweaks</property>
                                 <property name="use_action_appearance">False</property>
--- a/MANIFEST.in
+++ b/MANIFEST.in
@@ -1,5 +1,5 @@
 include *.in COPYING ChangeLog AUTHORS README NEWS
 include data/scripts/*
 include data/templates/*
-recursive-include data *.png *.xml *.in *.conf *.desktop *.service *.ui ubuntu-tweak-daemon script-worker uturl
+recursive-include data *.png *.xml *.in *.conf *.desktop *.service *.ui ubuntu-tweak-daemon script-worker
 recursive-include po *.po *.in
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -3,18 +3,11 @@
 data/com.ubuntu-tweak.daemon.policy.in
 [type: gettext/glade]data/ui/window.ui
 [type: gettext/glade]data/ui/preferences.ui
-[type: gettext/glade]data/ui/uturl.ui
 [type: gettext/glade]data/ui/templates.ui
-[type: gettext/glade]data/ui/appspage.ui
-[type: gettext/glade]data/ui/sourcecenter.ui
-[type: gettext/glade]data/ui/appcenter.ui
 [type: gettext/glade]data/ui/brokenmodule.ui
-[type: gettext/glade]data/ui/loginsettings.ui
 [type: gettext/glade]data/ui/quicklists.ui
 [type: gettext/glade]data/ui/clippage.ui
 [type: gettext/glade]data/ui/filetypemanager.ui
-[type: gettext/glade]data/ui/sourceeditor.ui
-[type: gettext/glade]data/ui/updatemanager.ui
 [type: gettext/glade]data/ui/janitorpage.ui
 [type: gettext/glade]data/ui/traceback.ui
 [type: gettext/glade]data/ui/mainwindow.ui
@@ -22,17 +15,13 @@
 ubuntutweak/factory.py
 ubuntutweak/system/distro.py
 ubuntutweak/system/__init__.py
-ubuntutweak/network/xmlrpc.py
 ubuntutweak/network/downloadmanager.py
-ubuntutweak/network/utdata.py
 ubuntutweak/network/__init__.py
-ubuntutweak/policykit/widgets.py
 ubuntutweak/policykit/dbusproxy.py
 ubuntutweak/policykit/__init__.py
 ubuntutweak/common/consts.py
 ubuntutweak/common/config.py
 ubuntutweak/common/inifile.py
-ubuntutweak/common/sourcedata.py
 ubuntutweak/common/download.py
 ubuntutweak/common/debug.py
 ubuntutweak/common/__init__.py
@@ -40,25 +29,17 @@
 ubuntutweak/janitor/opera_plugin.py
 ubuntutweak/janitor/googleearth_plugin.py
 ubuntutweak/janitor/thumbnailcache_plugin.py
-ubuntutweak/janitor/softwarecenter_plugin.py
 ubuntutweak/janitor/mozilla_plugin.py
 ubuntutweak/janitor/chrome_plugin.py
 ubuntutweak/janitor/empathy_plugin.py
-ubuntutweak/janitor/autoremoval_plugin.py
-ubuntutweak/janitor/aptcache_plugin.py
 ubuntutweak/janitor/__init__.py
-ubuntutweak/janitor/packageconfigs_plugin.py
-ubuntutweak/janitor/oldkernel_plugin.py
 ubuntutweak/settings/gconfsettings.py
 ubuntutweak/settings/gsettings.py
 ubuntutweak/settings/configsettings.py
 ubuntutweak/settings/compizsettings.py
 ubuntutweak/settings/__init__.py
 ubuntutweak/admins/desktoprecovery.py
-ubuntutweak/admins/sourcecenter.py
-ubuntutweak/admins/sourceeditor.py
 ubuntutweak/admins/templates.py
-ubuntutweak/admins/appcenter.py
 ubuntutweak/admins/userdir.py
 ubuntutweak/admins/quicklists.py
 ubuntutweak/admins/scripts.py
@@ -74,19 +55,16 @@
 ubuntutweak/tweaks/workspace.py
 ubuntutweak/tweaks/sound.py
 ubuntutweak/tweaks/misc.py
-ubuntutweak/tweaks/loginsettings.py
 ubuntutweak/tweaks/fonts.py
 ubuntutweak/tweaks/unity.py
 ubuntutweak/tweaks/__init__.py
 ubuntutweak/tweaks/workarounds.py
 ubuntutweak/tweaks/lovewallpaperhd.py
-ubuntutweak/apps/__init__.py
 ubuntutweak/clips/userinfo.py
 ubuntutweak/clips/hardwareinfo.py
 ubuntutweak/clips/systeminfo.py
 ubuntutweak/clips/cleanerinfo.py
 ubuntutweak/clips/__init__.py
-ubuntutweak/clips/updateinfo.py
 ubuntutweak/gui/widgets.py
 ubuntutweak/gui/dialogs.py
 ubuntutweak/gui/cellrenderers.py
@@ -99,10 +77,8 @@
 ubuntutweak/backends/daemon.py
 ubuntutweak/backends/__init__.py
 ubuntutweak/__init__.py
-ubuntutweak/utils/ppa.py
 ubuntutweak/utils/parser.py
 ubuntutweak/utils/icon.py
 ubuntutweak/utils/__init__.py
 ubuntutweak/utils/tar.py
-ubuntutweak/utils/package.py
 ubuntutweak/preferences.py
--- a/setup.cfg
+++ b/setup.cfg
@@ -7,7 +7,6 @@
 domain = ubuntu-tweak
 xml_files = [('share/polkit-1/actions/', ('data/com.ubuntu-tweak.daemon.policy.in',))]
 desktop_files = [	("share/applications",("data/ubuntu-tweak.desktop.in",)) ]
-schemas_files = [("share/gconf/schemas", ("data/uturl.schemas.in",))]
 
 [egg_info]
 tag_build = 
--- a/setup.py
+++ b/setup.py
@@ -18,7 +18,7 @@
           ('share/ubuntu-tweak/pixmaps/', glob.glob('data/pixmaps/*.png')),
           ('share/ubuntu-tweak/scripts/', glob.glob('data/scripts/*')),
           ('share/ubuntu-tweak/templates/', glob.glob('data/templates/*')),
-          ('share/ubuntu-tweak/', ['data/script-worker', 'data/uturl', 'data/ubuntu-tweak-daemon']),
+          ('share/ubuntu-tweak/', ['data/script-worker', 'data/ubuntu-tweak-daemon']),
           ],
       license='GNU GPL',
       platforms='linux',
--- a/ubuntutweak/backends/daemon.py
+++ b/ubuntutweak/backends/daemon.py
@@ -1,11 +1,6 @@
 #!/usr/bin/python
 
 # Copyright (C) 2007-2011 Tualatrix Chou <tualatrix@gmail.com>
-#
-# The class AptAuth is modified from softwareproperty. Author: Michael Vogt <mvo@debian.org>
-# The original file is: softwareproperties/AptAuth.py
-# GPL v2+
-# Copyright (c) 2004 Canonical
 
 import sys
 reload(sys)
@@ -20,415 +15,33 @@
 
 from subprocess import PIPE
 
-import apt
-import apt_pkg
 import dbus
 import dbus.service
 import dbus.mainloop.glib
 from gi.repository import GObject
 
-from aptsources.sourceslist import SourcesList
-
 from ubuntutweak import system
-from ubuntutweak.utils import ppa
 from ubuntutweak.backends import PolicyKitService
-from ubuntutweak.policykit import PK_ACTION_TWEAK, PK_ACTION_CLEAN, PK_ACTION_SOURCE
+from ubuntutweak.policykit import PK_ACTION_TWEAK
 from ubuntutweak.settings.configsettings import ConfigSetting
 
-apt_pkg.init()
-
 log = logging.getLogger('Daemon')
 
-PPA_KEY = '''-----BEGIN PGP PUBLIC KEY BLOCK-----
-Version: SKS 1.0.10
-
-mI0ESXTUHwEEAMtdNPmcgQcoPN3JcUcRrmdm1chJSmX6gj28OamOgE3Nxp3XgkDdg/vLFPv6
-Tk8zIMxQnvuSpuG1YGp3x8atcKlQAlEHncAo27Vlio6pk8jG+qipDBKq7X7FyXE6X9Peg/k7
-t7eXMLwH6ZJFN6IEmvPRTsiiQEd/dXRRuIRhPHirABEBAAG0G0xhdW5jaHBhZCBQUEEgZm9y
-IFR1YWxhdHJpWIi2BBMBAgAgBQJJdNQfAhsDBgsJCAcDAgQVAggDBBYCAwECHgECF4AACgkQ
-avDhlAYkoiC8mAQAmaxr4Kw/R2WZKde7MfbTPy7O9YoL/NQeThYGwxX6ICVr0IZUj9nxFQ/v
-tmhZ59p53bpdR8jpPXjdDwjZIIlxTf72Fky6Ri3/zsC4YRD6idS4c4L50dTy74W6IabCt8GQ
-LtJy5YASlEp5OGwRNptRSFxVE59LuOPRo2kvLIAa0Dc=
-=3itC
------END PGP PUBLIC KEY BLOCK-----'''
-
-class AptAuth:
-    def __init__(self):
-        self.gpg = ["/usr/bin/gpg"]
-        self.base_opt = self.gpg + ["--no-options", "--no-default-keyring",
-                                    "--secret-keyring", "/etc/apt/secring.gpg",
-                                    "--trustdb-name", "/etc/apt/trustdb.gpg",
-                                    "--keyring", "/etc/apt/trusted.gpg"]
-        self.list_opt = self.base_opt + ["--with-colons", "--batch",
-                                         "--list-keys"]
-        self.rm_opt = self.base_opt + ["--quiet", "--batch",
-                                       "--delete-key", "--yes"]
-        self.add_opt = self.base_opt + ["--quiet", "--batch",
-                                        "--import"]
-        
-       
-    def list(self):
-        res = []
-        #print self.list_opt
-        p = subprocess.Popen(self.list_opt,stdout=PIPE).stdout
-        for line in p.readlines():
-            fields = line.split(":")
-            if fields[0] == "pub":
-                name = fields[9]
-                res.append("%s %s\n%s" %((fields[4])[-8:],fields[5], _(name)))
-        return res
-
-    def add(self, filename):
-        #print "request to add " + filename
-        cmd = self.add_opt[:]
-        cmd.append(filename)
-        p = subprocess.Popen(cmd)
-        return (p.wait() == 0)
-        
-    def update(self):
-        cmd = ["/usr/bin/apt-key", "update"]
-        p = subprocess.Popen(cmd)
-        return (p.wait() == 0)
-
-    def rm(self, key):
-        #print "request to remove " + key
-        cmd = self.rm_opt[:]
-        cmd.append(key)
-        p = subprocess.Popen(cmd)
-        return (p.wait() == 0)
-
-
 INTERFACE = "com.ubuntu_tweak.daemon"
 PATH = "/com/ubuntu_tweak/daemon"
 
 class Daemon(PolicyKitService):
-    #TODO use signal
-    liststate = None
-    list = SourcesList()
-    cache = None
-    stable_url = 'http://ppa.launchpad.net/tualatrix/ppa/ubuntu'
-    ppa_list = []
-    p = None
-    SOURCES_LIST = '/etc/apt/sources.list'
-
     def __init__ (self, bus, mainloop):
         bus_name = dbus.service.BusName(INTERFACE, bus=bus)
         PolicyKitService.__init__(self, bus_name, PATH)
         self.mainloop = mainloop
 
-    def get_cache(self):
-        try:
-            self.update_apt_cache()
-        except Exception, e:
-            log.error("Error happened when get_cache(): %s" % str(e))
-        finally:
-            return self.cache
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='b', out_signature='b')
-    def update_apt_cache(self, init=False):
-        '''if init is true, force to update, or it will update only once'''
-        if init or not getattr(self, 'cache'):
-            apt_pkg.init()
-            self.cache = apt.Cache()
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='b', out_signature='bv')
-    def check_sources_is_valid(self, convert_source):
-        try:
-            if not os.path.exists(self.SOURCES_LIST):
-                os.system('touch %s' % self.SOURCES_LIST)
-        except Exception, e:
-            log.error(e)
-
-        self.list.refresh()
-        to_add_entry = []
-        to_rm_entry = []
-        disabled_list = ['']
-
-        for entry in self.list:
-            entry_line = entry.str().strip()
-            if entry.invalid and not entry.disabled and entry_line and not entry_line.startswith('#'):
-                try:
-                    entry.set_enabled(False)
-                except Exception, e:
-                    log.error(e)
-                if entry.file not in disabled_list:
-                    disabled_list.append(entry.file)
-                continue
-
-            if convert_source:
-                if os.path.basename(entry.file) == 'sources.list':
-                    continue
-                log.debug("Check for url: %s, type: %s, filename: %s" % (entry.uri, entry.type, entry.file))
-                if ppa.is_ppa(entry.uri):
-                    filename = '%s-%s.list' % (ppa.get_source_file_name(entry.uri), entry.dist)
-                    if filename != os.path.basename(entry.file):
-                        log.debug("[%s] %s need rename to %s" % (entry.type, entry.file, filename))
-                        to_rm_entry.append(entry)
-                        if os.path.exists(entry.file):
-                            log.debug("%s is exists, so remove it" % entry.file)
-                            os.remove(entry.file)
-                        entry.file = os.path.join(os.path.dirname(entry.file), filename)
-                        to_add_entry.append(entry)
-
-        for entry in to_rm_entry:
-            log.debug("To remove: ", entry.uri, entry.type, entry.file)
-            self.list.remove(entry)
-
-
-        valid = len(disabled_list) == 1
-        if '' in disabled_list and not valid:
-            disabled_list.remove('')
-
-        self.list.list.extend(to_add_entry)
-        self.list.save()
-
-        return valid, disabled_list
-
     def _setup_non_block_io(self, io):
         outfd = io.fileno()
         file_flags = fcntl.fcntl(outfd, fcntl.F_GETFL)
         fcntl.fcntl(outfd, fcntl.F_SETFL, file_flags | os.O_NDELAY)
 
     @dbus.service.method(INTERFACE,
-                         in_signature='sb', out_signature='b',
-                         sender_keyword='sender')
-    def set_source_enable(self, url, enable, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        self.list.refresh()
-
-        for source in self.list:
-            if url in source.str() and source.type == 'deb':
-                source.disabled = not enable
-
-        self.list.save()
-
-        for source in self.list:
-            if url in source.str() and source.type == 'deb':
-                return not source.disabled
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='ss', out_signature='b',
-                         sender_keyword='sender')
-    def purge_source(self, url, key_fingerprint='', sender=None):
-        #TODO enable
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        self.list.refresh()
-        to_remove = []
-
-        self.set_source_enable(url, False)
-
-        for source in self.list:
-            if url in source.str() and source.type == 'deb':
-                to_remove.extend(glob.glob(source.file + "*"))
-
-        for file in to_remove:
-            try:
-                if file != self.SOURCES_LIST:
-                    os.remove(file)
-            except Exception, e:
-                log.error(e)
-
-        # Must refresh! Because the sources.list.d has been changed
-        self.list.refresh()
-
-        # Search for whether there's other source from the same owner, if exists,
-        # don't remove the apt-key
-        owner_url = "http://" + ppa.PPA_URL + "/" + url.split('/')[3]
-        need_remove_key = True
-
-        for source in self.list:
-            if owner_url in source.str() and source.type == 'deb':
-                need_remove_key = False
-                break
-
-        if key_fingerprint and need_remove_key:
-            self.rm_apt_key(key_fingerprint)
-
-        for source in self.list:
-            if url in source.str() and source.type == 'deb':
-                return True
-
-        return False
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='ssssb', out_signature='s',
-                         sender_keyword='sender')
-    def set_entry(self, url, distro, comps, comment, enabled, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        self.list.refresh()
-
-        if enabled:
-            self.list.add('deb', url, distro, comps.split(' '), comment)
-            self.list.save()
-            return 'enabled'
-        else:
-            for entry in self.list:
-                if url in entry.str():
-                    entry.disabled = True
-
-            self.list.save()
-            return 'disabled'
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='ssssbs', out_signature='s',
-                         sender_keyword='sender')
-    def set_separated_entry(self, url, distro,
-                            comps, comment, enabled, file,
-                            sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        self.list.refresh()
-
-        partsdir = apt_pkg.Config.FindDir("Dir::Etc::sourceparts")
-        if not os.path.exists(partsdir):
-            os.mkdir(partsdir)
-        file = os.path.join(partsdir, file+'.list')
-
-        if enabled:
-            self.list.add('deb', url, distro, comps.split(' '), comment, -1, file)
-            self.list.save()
-            return 'enabled'
-        else:
-            for entry in self.list:
-                if url in entry.str():
-                    entry.disabled = True
-
-            self.list.save()
-            return 'disabled'
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='ss', out_signature='',
-                         sender_keyword='sender')
-    def replace_entry(self, old_url, new_url, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        self.list.refresh()
-
-        for entry in self.list:
-            if old_url in entry.uri:
-                entry.uri = entry.uri.replace(old_url, new_url)
-            elif new_url in entry.uri and entry.disabled:
-                self.list.remove(entry)
-
-        self.list.save()
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='', out_signature='')
-    def disable_ppa(self):
-        self.list.refresh()
-        self.ppa_list = []
-
-        for source in self.list:
-            if ppa.is_ppa(source.uri) and not source.disabled:
-                self.ppa_list.append(source.uri)
-                source.set_enabled(False)
-
-        self.list.save()
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='', out_signature='')
-    def enable_ppa(self):
-        self.list.refresh()
-
-        for source in self.list:
-            url = source.uri
-            if ppa.is_ppa(url) and url in self.ppa_list:
-                source.set_enabled(True)
-
-        self.list.save()
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='sv', out_signature='')
-    def upgrade_sources(self, check_string, source_dict):
-        self.list.refresh()
-
-        for source in self.list:
-            if source.uri in source_dict:
-                source.dist = source_dict[source.uri]
-                source.comment = source.comment.split(check_string)[0]
-                source.set_enabled(True)
-
-        self.list.save()
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='', out_signature='')
-    def enable_stable_source(self):
-        self.list.refresh()
-
-        for source in self.list:
-            if self.stable_url in source.str() and source.type == 'deb' and not source.disabled:
-                return
-
-        distro = system.CODENAME
-
-        if distro:
-            self.set_separated_entry(self.stable_url, distro, 'main',
-                                     'Ubuntu Tweak Stable Source', True,
-                                     'ubuntu-tweak-stable')
-            self.add_apt_key_from_content(PPA_KEY)
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='', out_signature='b')
-    def get_stable_source_enabled(self):
-        self.list.refresh()
-
-        for source in self.list:
-            if self.stable_url in source.str() and source.type == 'deb' and not source.disabled:
-                return True
-
-        return False
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='', out_signature='s')
-    def get_list_state(self):
-        if self.liststate:
-            return self.liststate
-        else:
-            return "normal"
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='', out_signature='s',
-                         sender_keyword='sender')
-    def clean_apt_cache(self, sender=None):
-        self._check_permission(sender, PK_ACTION_CLEAN)
-        os.system('apt-get clean')
-
-        return 'done'
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='b')
-    def is_package_installed(self, package):
-        try:
-            pkg = self.get_cache()[package]
-            return pkg.isInstalled
-        except Exception, e:
-            log.error(e)
-        else:
-            return False
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='b')
-    def is_package_upgradable(self, package):
-        try:
-            pkg = self.get_cache()[package]
-            return pkg.isUpgradable
-        except Exception, e:
-            log.error(e)
-        else:
-            return False
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='b')
-    def is_package_avaiable(self, package):
-        try:
-            return self.get_cache().has_key(package)
-        except Exception, e:
-            log.error(e)
-            return False
-        else:
-            return False
-
-    @dbus.service.method(INTERFACE,
                          in_signature='ss', out_signature='',
                          sender_keyword='sender')
     def link_file(self, src, dst, sender=None):
@@ -445,200 +58,11 @@
             os.unlink(path)
 
     @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='',
-                         sender_keyword='sender')
-    def set_list_state(self, state, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        self.liststate = state
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='ss', out_signature='s',
-                         sender_keyword='sender')
-    def edit_source(self, path, content, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        if path.startswith(self.SOURCES_LIST):
-            try:
-                file = open(path, 'w')
-                file.write(content)
-                file.close()
-            except Exception, e:
-                log.error(e)
-                return 'error'
-            finally:
-                return 'done'
-        else:
-            return 'error'
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='s',
-                         sender_keyword='sender')
-    def delete_source(self, path, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        if path.startswith(self.SOURCES_LIST):
-            os.system('rm "%s"' % path)
-            if os.path.exists(path):
-                return 'error'
-            else:
-                return 'done'
-        else:
-            return 'error'
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='ss', out_signature='b',
-                         sender_keyword='sender')
-    def backup_source(self, path, backup_name, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        if path.startswith(self.SOURCES_LIST):
-            new_path = path + '.' + backup_name + '.save'
-            shutil.copy(path, new_path)
-            return os.path.exists(new_path)
-        else:
-            return False
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='ss', out_signature='b',
-                         sender_keyword='sender')
-    def restore_source(self, backup_path, restore_path, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-        if restore_path.startswith(self.SOURCES_LIST) and \
-                restore_path in backup_path:
-            shutil.copy(backup_path, restore_path)
-            return True
-        else:
-            return False
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='sss', out_signature='b',
-                         sender_keyword='sender')
-    def rename_backup(self, backup_path, name, new_name, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-
-        if backup_path.startswith(self.SOURCES_LIST) and name and new_name:
-            os.rename(backup_path, backup_path.replace(name, new_name))
-            return True
-        else:
-            return False
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='',
-                         sender_keyword='sender')
-    def clean_configs(self, pkg, sender=None):
-        self._check_permission(sender, PK_ACTION_CLEAN)
-        cmd = ['sudo', 'dpkg', '--purge']
-        cmd.append(pkg)
-        self.p = subprocess.Popen(cmd, stdout=PIPE)
-        self._setup_non_block_io(self.p.stdout)
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='as', out_signature='',
-                         sender_keyword='sender')
-    def install_select_pkgs(self, pkgs, sender=None):
-        self._check_permission(sender, PK_ACTION_CLEAN)
-        cmd = ['sudo', 'apt-get', '-y', '--force-yes', 'install']
-        cmd.extend(pkgs)
-        log.debug("The install command is %s" % ' '.join(cmd))
-        self.p = subprocess.Popen(cmd, stdout=PIPE)
-        self._setup_non_block_io(self.p.stdout)
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='', out_signature='v')
-    def get_cmd_pipe(self):
-        if self.p:
-            terminaled = self.p.poll()
-            if terminaled == None:
-                try:
-                    return self.p.stdout.readline(), str(terminaled)
-                except:
-                    return '', 'None'
-            else:
-                strings, returncode = ''.join(self.p.stdout.readlines()), str(terminaled)
-                self.p = None
-                return strings, returncode
-        else:
-            return '', 'None'
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='',
-                         sender_keyword='sender')
-    def add_apt_key_from_content(self, content, sender=None):
-        #TODO leave only one method
-        self._check_permission(sender, PK_ACTION_SOURCE)
-
-        f = tempfile.NamedTemporaryFile()
-        f.write(content)
-        f.flush()
-
-        apt_key = AptAuth()
-        apt_key.add(f.name)
-        f.close()
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='',
-                         sender_keyword='sender')
-    def rm_apt_key(self, key_id, sender=None):
-        self._check_permission(sender, PK_ACTION_SOURCE)
-
-        apt_key = AptAuth()
-        apt_key.rm(key_id)
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='b',
-                         sender_keyword='sender')
-    def delete_apt_cache_file(self, file_name, sender=None):
-        self._check_permission(sender, PK_ACTION_CLEAN)
-
-        full_path = os.path.join('/var/cache/apt/archives/', file_name)
-        if os.path.exists(full_path):
-            os.remove(full_path)
-
-        return not os.path.exists(full_path)
-
-    @dbus.service.method(INTERFACE,
                          in_signature='s', out_signature='b')
     def is_exists(self, path):
         return os.path.exists(path)
 
     @dbus.service.method(INTERFACE,
-                         in_signature='ss', out_signature='',
-                         sender_keyword='sender')
-    def set_login_logo(self, src, dest, sender=None):
-        '''This is called by tweaks/loginsettings.py'''
-        self._check_permission(sender, PK_ACTION_TWEAK)
-        if not self.is_exists(os.path.dirname(dest)):
-           os.makedirs(os.path.dirname(dest))
-        self._delete_old_logofile(dest)
-        shutil.copy(src, dest)
-
-    def _delete_old_logofile(self, dest):
-        for old in glob.glob(os.path.splitext(dest)[0] + ".*"):
-            os.remove(old)
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='',
-                         sender_keyword='sender')
-    def unset_login_logo(self, dest, sender=None):
-        '''This is called by tweaks/loginsettings.py'''
-        self._check_permission(sender, PK_ACTION_TWEAK)
-
-        if dest.startswith(os.path.expanduser('~gdm/.icons')):
-            self._delete_old_logofile(dest)
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='b')
-    def is_link(self, path):
-        return os.path.islink(path)
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='si', out_signature='s')
-    def get_as_tempfile(self, path, uid):
-        f = tempfile.NamedTemporaryFile()
-        new_path = f.name
-        f.close()
-        os.popen('cp %s %s' % (path, new_path))
-        os.chown(new_path, uid, uid)
-        return new_path
-
-    @dbus.service.method(INTERFACE,
                          in_signature='ss', out_signature='s')
     def get_user_gconf(self, user, key):
         command = 'sudo -u %s gconftool-2 --get %s' % (user, key)
@@ -662,29 +86,6 @@
         return cmd.read().strip()
 
     @dbus.service.method(INTERFACE,
-                         in_signature='s', out_signature='s')
-    def get_system_gconf(self, key):
-        command = 'gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --get %s' % key
-        cmd = os.popen(command)
-        output = cmd.read().strip()
-        log.debug('get_system_gconf: %s is %s' % (key, output))
-        return output
-
-    @dbus.service.method(INTERFACE,
-                         in_signature='ssss', out_signature='s',
-                         sender_keyword='sender')
-    def set_system_gconf(self, key, value, type, list_type='', sender=None):
-        self._check_permission(sender, PK_ACTION_TWEAK)
-        log.debug('set_system_gconf: %s to %s' % (key, value))
-        if list_type == '':
-            command = 'gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type %s --set %s %s' % (type, key, value)
-        else:
-            command = 'gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type %s --list-type %s --set %s %s' % (type, list_type, key, value)
-        cmd = os.popen(command)
-        output = cmd.read().strip()
-        return output
-
-    @dbus.service.method(INTERFACE,
                          in_signature='ss', out_signature='b',
                          sender_keyword='sender')
     def set_config_setting(self, key, value, sender=None):
--- a/ubuntutweak/clips/cleanerinfo.py
+++ b/ubuntutweak/clips/cleanerinfo.py
@@ -13,16 +13,6 @@
     def __init__(self):
         Clip.__init__(self)
 
-        cache_number = len(glob.glob('/var/cache/apt/archives/*.deb'))
-
-        if cache_number:
-            self.set_title(_('Some cache can be cleaned to free your disk space'))
-
-        label = Gtk.Label(label=_('%s cache packages can be cleaned.') % cache_number)
-        label.set_alignment(0, 0.5)
-
-        self.add_content(label)
-
         try:
             if system.CODENAME in ['oneiric', 'precise']:
                 root_path = '~/.thumbnails'
--- a/ubuntutweak/common/config.py
+++ b/ubuntutweak/common/config.py
@@ -40,118 +40,11 @@
 
     url = 'tweak_url'
     version = 'tweak_version'
-    toolbar_size = 'toolbar_size'
-    window_size= 'window_size'
-    window_height = 'window_height'
-    window_width = 'window_width'
     show_donate_notify = 'show_donate_notify'
-    default_launch = 'default_launch'
-    check_update = 'check_update'
-    sync_notify = 'sync_notify'
-    separated_sources = 'separated_sources'
-    use_mirror_ppa = 'use_mirror_ppa'
-    enable_new_item = 'enable_new_item'
-    need_save = True
-
-    @classmethod
-    def get_enable_new_item(cls):
-        return cls.config.get_value_from_key(cls.enable_new_item, default=True)
-
-    @classmethod
-    def set_enable_new_item(cls, bool):
-        cls.config.set_value_from_key(cls.enable_new_item, bool)
-
-    @classmethod
-    def get_check_update(cls):
-        return cls.config.get_value_from_key(cls.check_update, default=True)
-
-    @classmethod
-    def set_check_update(cls, bool):
-        cls.config.set_value_from_key(cls.check_update, bool)
-
-    @classmethod
-    def set_default_launch(cls, id):
-        cls.config.set_value_from_key(cls.default_launch, id)
-
-    @classmethod
-    def get_default_launch(cls):
-        return cls.config.get_value_from_key(cls.default_launch)
-
-    @classmethod
-    def set_show_donate_notify(cls, bool):
-        return cls.config.set_value_from_key(cls.show_donate_notify, bool)
-
-    @classmethod
-    def get_show_donate_notify(cls):
-        return cls.config.get_value_from_key(cls.show_donate_notify, default=True)
-
-    @classmethod
-    def set_sync_notify(cls, bool):
-        return cls.config.set_value_from_key(cls.sync_notify, bool)
-
-    @classmethod
-    def get_sync_notify(cls):
-        return cls.config.get_value_from_key(cls.sync_notify, default=True)
-
-    def set_use_mirror_ppa(cls, bool):
-        return cls.config.set_value_from_key(cls.use_mirror_ppa, bool)
-
-    @classmethod
-    def get_use_mirror_ppa(cls):
-        return cls.config.get_value_from_key(cls.use_mirror_ppa, default=False)
-
-    @classmethod
-    def set_separated_sources(cls, bool):
-        return cls.config.set_value_from_key(cls.separated_sources, bool)
-
-    @classmethod
-    def get_separated_sources(cls):
-        return cls.config.get_value_from_key(cls.separated_sources, default=True)
-
-    @classmethod
-    def set_url(cls, url):
-        return cls.config.set_value_from_key(cls.url, url)
-
-    @classmethod
-    def get_url(cls):
-        return cls.config.get_value_from_key(cls.url)
 
     @classmethod
     def set_version(cls, version):
         return cls.config.set_value_from_key(cls.version, version)
 
-    @classmethod
-    def get_version(cls):
-        return cls.config.get_value_from_key(cls.version)
-
-    @classmethod
-    def set_paned_size(cls, size):
-        cls.config.set_value_from_key(cls.toolbar_size, size)
-
-    @classmethod
-    def get_paned_size(cls):
-        position = cls.config.get_value_from_key(cls.toolbar_size)
-
-        if position:
-            return position
-        else:
-            return 150
-
-    @classmethod
-    def set_window_size(cls, width, height):
-        cls.config.set_value_from_key(cls.window_width, width)
-        cls.config.set_value_from_key(cls.window_height, height)
-
-    @classmethod
-    def get_window_size(cls):
-        width = cls.config.get_value_from_key(cls.window_width, default=900)
-        height = cls.config.get_value_from_key(cls.window_height, default=500)
-
-        return (width, height)
-
-    @classmethod
-    def get_icon_theme(cls):
-        return cls.config.get_value_from_key('/desktop/gnome/interface/icon_theme')
-
 if __name__ == '__main__':
     print Config().get_value_from_key('show_donate_notify')
--- a/ubuntutweak/common/consts.py
+++ b/ubuntutweak/common/consts.py
@@ -41,7 +41,7 @@
     IS_INSTALLED = False
 
 try:
-    PKG_VERSION = os.popen("dpkg-query -f '${Version}' -W %s" % PACKAGE).read()
+    PKG_VERSION = os.popen("pacman -Q %s | awk '{print $2}'" % PACKAGE).read()
     IS_TESTING = '+' in PKG_VERSION
     if IS_TESTING:
         VERSION = PKG_VERSION
--- a/ubuntutweak/janitor/__init__.py
+++ b/ubuntutweak/janitor/__init__.py
@@ -18,8 +18,6 @@
 from ubuntutweak.common.debug import run_traceback, log_func
 from ubuntutweak.common.consts import DATA_DIR
 from ubuntutweak.gui.dialogs import ErrorDialog
-from ubuntutweak.policykit import PK_ACTION_CLEAN
-from ubuntutweak.policykit.widgets import PolkitAction
 
 log = logging.getLogger('Janitor')
 
@@ -45,22 +43,6 @@
         return None
 
 
-class PackageObject(CruftObject):
-    def __init__(self, name, package_name, size):
-        self.name = name
-        self.package_name = package_name
-        self.size = size
-
-    def get_size_display(self):
-        return filesizeformat(self.size)
-
-    def get_icon(self):
-        return icon.get_from_name('deb')
-
-    def get_package_name(self):
-        return self.package_name
-
-
 class CacheObject(CruftObject):
     def __init__(self, name, path, size):
         self.name = name
@@ -703,11 +685,6 @@
     @inline_callbacks
     def on_clean_button_clicked(self, widget):
         '''plugin_dict: {plugin: {cruft: iter}}'''
-        try:
-            yield PolkitAction(PK_ACTION_CLEAN).do_authenticate()
-        except Exception, e:
-            log.debug(e)
-            return
 
         self.plugin_to_run = 0
 
@@ -841,28 +818,6 @@
         loader = ModuleLoader('janitor')
         plugin_to_load = self.plugins_setting.get_value()
 
-        system_text = _('System')
-        iter = self.janitor_model.append(None, (None,
-                                                icon.get_from_name('distributor-logo'),
-                                                system_text,
-                                                "<b><big>%s</big></b>" % system_text,
-                                                None,
-                                                None,
-                                                None))
-
-        for plugin in loader.get_modules_by_category('system'):
-            if plugin.is_user_extension() and plugin.get_name() not in plugin_to_load:
-                log.debug("User extension: %s not in setting to load" % plugin.get_name())
-                continue
-            size_list.append(Gtk.Label(label=plugin.get_title()).get_layout().get_pixel_size()[0])
-            self.janitor_model.append(iter, (False,
-                                             None,
-                                             plugin.get_title(),
-                                             plugin.get_title(),
-                                             plugin(),
-                                             None,
-                                             None))
-
         personal_text = _('Personal')
 
         iter = self.janitor_model.append(None, (None,
--- a/ubuntutweak/main.py
+++ b/ubuntutweak/main.py
@@ -23,13 +23,11 @@
 
 from ubuntutweak.gui import GuiBuilder
 from ubuntutweak.gui.gtk import post_ui
-from ubuntutweak.policykit.widgets import PolkitButton
 from ubuntutweak.utils import icon
 from ubuntutweak.common.consts import VERSION
 from ubuntutweak.modules import ModuleLoader, create_broken_module_class
 from ubuntutweak.gui.dialogs import ErrorDialog
 from ubuntutweak.clips import ClipPage
-from ubuntutweak.apps import AppsPage
 from ubuntutweak.janitor import JanitorPage
 from ubuntutweak.policykit.dbusproxy import proxy
 from ubuntutweak.settings import GSetting
@@ -298,14 +296,12 @@
         self.no_result_box.label = self.result_text
         self.search_page = SearchPage(self.no_result_box)
         clip_page = ClipPage()
-        self.apps_page = AppsPage(self.back_button, self.next_button)
         janitor_page = JanitorPage()
         self.preferences_dialog = PreferencesDialog(self.mainwindow)
 
         self.recently_used_settings = GSetting('com.ubuntu-tweak.tweak.recently-used')
 
         self.feature_dict['overview'] = self.notebook.append_page(clip_page, Gtk.Label('overview'))
-        self.feature_dict['apps'] = self.notebook.append_page(self.apps_page, Gtk.Label())
         self.feature_dict['tweaks'] = self.notebook.append_page(tweaks_page, Gtk.Label('tweaks'))
         self.feature_dict['admins'] = self.notebook.append_page(admins_page, Gtk.Label('admins'))
         self.feature_dict['janitor'] = self.notebook.append_page(janitor_page, Gtk.Label('janitor'))
@@ -321,7 +317,6 @@
         tweaks_page.connect('module_selected', self.on_module_selected)
         self.search_page.connect('module_selected', self.on_module_selected)
         admins_page.connect('module_selected', self.on_module_selected)
-        self.apps_page.connect('loaded', self.show_apps_page)
         clip_page.connect('load_module', lambda widget, name: self.do_load_module(name))
         clip_page.connect('load_feature', lambda widget, name: self.select_target_feature(name))
 
@@ -339,14 +334,6 @@
                                           Gdk.ModifierType.CONTROL_MASK,
                                           Gtk.AccelFlags.VISIBLE)
         self.mainwindow.add_accel_group(accel_group)
-        thread.start_new_thread(self.preload_proxy_cache, ())
-
-    def show_apps_page(self, widget):
-        self.notebook.set_current_page(self.feature_dict['apps'])
-
-    def preload_proxy_cache(self):
-        #This function just called to make sure the cache is loaded as soon as possible
-        proxy.is_package_installed('ubuntu-tweak')
 
     def on_search_entry_activate(self, widget):
         widget.grab_focus()
@@ -386,7 +373,7 @@
         if width >= 900 and height >= 506:
             self.mainwindow.set_default_size(width, height)
 
-        for feature_button in ('overview_button', 'apps_button', 'admins_button', \
+        for feature_button in ('overview_button', 'admins_button', \
                                'tweaks_button', 'janitor_button'):
             button = getattr(self, feature_button)
 
@@ -454,18 +441,6 @@
             self.description_label.set_text(module.get_description())
             page = self.notebook.get_nth_page(index)
 
-            if page.__policykit__:
-                if hasattr(page, 'un_lock'):
-                    page.un_lock.show()
-                    self._last_unlock = page.un_lock
-                else:
-                    page.un_lock = PolkitButton(page.__policykit__)
-                    page.un_lock.connect('authenticated', page.on_polkit_action)
-                    page.un_lock.show()
-                    self._last_unlock = page.un_lock
-                    self.right_top_box.pack_start(page.un_lock, False, False, 6)
-                    self.right_top_box.reorder_child(page.un_lock, 0)
-
             if not module.__name__.startswith('Broken'):
                 self.log_used_module(module.__name__)
             self.update_jump_buttons()
@@ -475,9 +450,6 @@
             self.title_label.set_markup('')
             self.description_label.set_text('')
 
-            if hasattr(self, '_last_unlock'):
-                self._last_unlock.hide()
-
     def _save_loaded_info(self, name, module, index):
         log.info('_save_loaded_info: %s, %s, %s' % (name, module, index))
         self.loaded_modules[name] = index
@@ -541,13 +513,6 @@
 
         self.update_jump_buttons()
 
-    def on_apps_button_toggled(self, widget):
-        self.on_feature_button_clicked(widget, 'apps')
-
-    def on_apps_button_clicked(self, widget):
-        self.navigation_dict['apps'] = tuple(reversed(self.navigation_dict['apps']))
-        self.on_apps_button_toggled(widget)
-
     def on_tweaks_button_clicked(self, widget):
         self.navigation_dict['tweaks'] = tuple(reversed(self.navigation_dict['tweaks']))
         self.on_tweaks_button_toggled(widget)
@@ -591,22 +556,7 @@
                     self.notebook.set_current_page(self.feature_dict[feature])
                     self.set_current_module(None)
 
-            if feature == 'apps':
-                log.debug("handler_block_by_func by apps")
-                self.back_button.handler_block_by_func(self.on_back_button_clicked)
-                self.next_button.handler_block_by_func(self.on_next_button_clicked)
-                if not self.apps_page.is_loaded:
-                    self.notebook.set_current_page(self.feature_dict['wait'])
-                    self.apps_page.load()
-                self.apps_page.set_web_buttons_active(True)
-            else:
-                self.update_jump_buttons()
-        else:
-            if feature == 'apps':
-                log.debug("handler_unblock_by_func by apps")
-                self.apps_page.set_web_buttons_active(False)
-                self.back_button.handler_unblock_by_func(self.on_back_button_clicked)
-                self.next_button.handler_unblock_by_func(self.on_next_button_clicked)
+            self.update_jump_buttons()
 
     def log_used_module(self, name):
         log.debug("Log the %s to Recently Used" % name)
--- a/ubuntutweak/module/__init__.py
+++ b/ubuntutweak/module/__init__.py
@@ -275,18 +275,5 @@
     def __init__(self):
         super(BrokenModule, self).__init__('brokenmodule.ui')
 
-        if '/etc/apt/apt.conf.d' in self.get_error():
-            p = re.compile('(/etc/apt/apt.conf.d/[\w-]+)')
-            broken_file = p.findall(self.get_error())[0]
-            self.message_label.set_text(_("Ubuntu Tweak has detected that your apt configuration is broken.\nTry to fix by following steps:\n\n\t1. Open your terminal\n\t2. Run the commands to fix:\n\n\t\tsudo chmod 644 %(broken_file)s\n\t\tsudo chown root:root %(broken_file)s\n\nOr you can submit the Error Message to the developer for help:" % {'broken_file': broken_file}))
-        elif '/etc/apt/sources.list.d/' in self.get_error():
-            p = re.compile('(/etc/apt/sources.list.d/[\w-]+)')
-            broken_file = p.findall(self.get_error())[0]
-
-            self.message_label.set_text(_("Ubuntu Tweak has detected that your apt list file is broken.\nTry to fix by following steps:\n\n\t1. Open your terminal\n\t2. Run the command to open apt list file:\n\n\t\tsudo gedit %s\n\n\t3. Edit the list to make it correctly\n\nOr you can submit the Error Message to the developer for help:" % broken_file))
-
-        self.error_view.reparent(self.scrolled_window)
-        self.reparent(self.alignment1)
-
     def on_report_button_clicked(self, widget):
         webbrowser.open('https://bugs.launchpad.net/ubuntu-tweak/+filebug')
--- a/ubuntutweak/modules/__init__.py
+++ b/ubuntutweak/modules/__init__.py
@@ -421,29 +421,6 @@
     def __init__(self):
         TweakModule.__init__(self, 'brokenmodule.ui')
 
-        if '/etc/apt/apt.conf.d' in self.get_error():
-            p = re.compile('(/etc/apt/apt.conf.d/[\w-]+)')
-            broken_file = p.findall(self.get_error())[0]
-            self.message_label.set_text(_("Ubuntu Tweak has detected that your"
-             " apt configuration is broken.\nTry to fix by following steps:\n"
-             "\n\t1. Open your terminal\n\t2. Run the commands to fix:\n\n\t"
-             "\tsudo chmod 644 %(broken_file)s\n\t\tsudo chown root:root "
-             "%(broken_file)s\n\nOr you can submit the Error Message to the "
-             "developer for help:" % {'broken_file': broken_file}))
-        elif '/etc/apt/sources.list.d/' in self.get_error():
-            p = re.compile('(/etc/apt/sources.list.d/[\w-]+)')
-            broken_file = p.findall(self.get_error())[0]
-
-            self.message_label.set_text(_("Ubuntu Tweak has detected that your"
-             " apt list file is broken.\nTry to fix by following steps:\n\n\t1."
-             "Open your terminal\n\t2. Run the command to open apt list file:"
-             "\n\n\t\tsudo gedit %s\n\n\t3. Edit the list to make it correctly"
-             "\n\nOr you can submit the Error Message to the developer for"
-             "help:" % broken_file))
-
-        self.error_view.reparent(self.scrolled_window)
-        self.ohno_image.set_from_file(os.path.join(DATA_DIR, 'pixmaps/emblem-ohno.png'))
-
         self.add_start(self.alignment1)
 
     def on_report_button_clicked(self, widget):
--- a/ubuntutweak/policykit/__init__.py
+++ b/ubuntutweak/policykit/__init__.py
@@ -1,3 +1 @@
 PK_ACTION_TWEAK = 'com.ubuntu-tweak.daemon.tweak'
-PK_ACTION_CLEAN = 'com.ubuntu-tweak.daemon.clean'
-PK_ACTION_SOURCE = 'com.ubuntu-tweak.daemon.edit-sources'
--- a/ubuntutweak/system/distro.py
+++ b/ubuntutweak/system/distro.py
@@ -51,13 +51,9 @@
 
         # Because built-in funciton may not recognize all distrobution.
             self._reduce_name()
-            self._reduce_version()
             self.codename = self.codename.lower()
             self._reduce_ut_codename()
             self._get_is_supported()
-        elif self.system == 'Darwin':
-            self.name = 'macosx'
-            self.version = platform.mac_ver()[0]
     #}}}
 
     #{{{def _reduce_name(self):
@@ -66,74 +62,18 @@
         if not self.name:
             if os.path.exists('/etc/arch-release'):
                 self.name = 'arch'
-            elif os.path.exists('/usr/bin/pkg') and commands.getoutput('cat /etc/release | grep "OpenSolaris"'):
-                self.name = 'opensolaris'
-            elif os.path.exists('/etc/redflag-release'):
-                if commands.getoutput('cat /etc/redflag-release | grep "RedFlag"'):
-                    self.name = 'redflag'
-                elif commands.getoutput('cat /etc/redflag-release | grep "Qomo"'):
-                    self.name = 'qomo'
-            elif os.path.exists('/etc/slackware-version'):
-                self.name = 'slackware'
-            elif os.path.exists('/etc/linpus-release'):
-                self.name = 'linpus'
-            elif os.path.exists('/etc/magic-release'):
-                self.name = 'magiclinux'
             else:
-                print "Lazyscripts not support your Linux distribution."
+                print "This version of Ubuntu Tweak was modified for Arch Linux. Please use the official version for your distro."
                 self.name = None
                 raise DistrobutionNotFound()
-        elif self.name == 'susE':
-            if commands.getoutput('cat /etc/SuSE-release | grep "openSUSE"'):
-                self.name = 'opensuse'
-        elif self.name == 'redhat':
-            if commands.getoutput('cat /etc/redhat-release | grep "Red Hat"'):
-                self.name = 'redhat'
-            elif commands.getoutput('cat /etc/redhat-release | grep "CentOS"'):
-                self.name = 'centos'
-        elif self.name == 'mandrake':
-            if os.path.exists('/etc/mandriva-release') and commands.getoutput('cat /etc/mandriva-release | grep "Mandriva"'):
-                self.name = 'mandriva'
-            elif os.path.exists('/etc/pclinuxos-release') and commands.getoutput('cat /etc/pclinuxos-release | grep "PCLinuxOS"'):
-                self.name = 'pclinuxos'
-        elif self.name == 'gentoo':
-            if os.path.exists('/etc/sabayon-release'):
-                self.name = 'sabayon'
-    #}}}
-
-    #{{{def _reduce_version(self):
-    def _reduce_version(self):
-        if self.name == 'opensolaris' and not self.version:
-            self.version = commands.getoutput('cat /etc/release | grep "OpenSolaris" | cut -d " " -f 27')
-        elif self.name == 'sabayon' :
-            self.version = commands.getoutput('cat /etc/sabayon-edition | cut -d " " -f 3')
-        elif self.name == 'redflag':
-            self.version = commands.getoutput('cat /etc/redflag-release | cut -d " " -f 4')
-        elif self.name == 'qomo':
-            self.version = commands.getoutput('cat /etc/redflag-release | cut -d " " -f 2')
-        elif self.name == 'linpus':
-            self.version = commands.getoutput('cat /etc/linpus-release | cut -d " " -f 4')
-        elif self.name == 'magiclinux':
-            self.version = commands.getoutput('cat /etc/ark-release')
     #}}}
 
     def _reduce_ut_codename(self):
-        # Ubuntu-Tweak use only ubuntu version to distinguish.
-        if self.name == 'linuxmint':
-            if self.codename == 'helena':
-                self.ut_codename = 'karmic'
-            elif self.codename == 'isadora':
-                self.ut_codename = 'lucid'
-        else:
-            self.ut_codename = self.codename
+        self.ut_codename = self.codename
 
     def _get_is_supported(self):
-        if self.name == 'ubuntu':
-            if self.codename in ['karmic', 'lucid', 'maverick']:
-                self.is_supported = True
-        elif self.name == 'linuxmint':
-            if self.codename in ['helena', 'isadora']:
-                self.is_supported = True
+        if self.name == 'arch':
+            self.is_supported = True
         else:
             self.is_supported = False
 
--- a/ubuntutweak/system/__init__.py
+++ b/ubuntutweak/system/__init__.py
@@ -4,28 +4,12 @@
 from ubuntutweak.common.consts import APP, PKG_VERSION
 
 def get_distro():
-    '''It should be "Ubuntu 10.10 maverick"'''
-    return ' '.join(platform.dist())
+    '''platform.dist() and platform.linux_distribution() are blank in Arch Linux'''
+    '''Hackish removal of newline :)'''
+    return 'Arch Linux ' + os.popen("echo -n $(uname -m)").read()
 
 def get_codename():
-    try:
-        codename = os.popen('lsb_release -cs').read().strip()
-        if codename in ['karmic', 'helena', 'Helena']:
-            return 'karmic'
-        elif codename in ['lucid', 'isadora', 'Isadora']:
-            return 'lucid'
-        elif codename in ['maverick', 'julia']:
-            return 'maverick'
-        elif codename in ['natty', 'katya']:
-            return 'natty'
-        elif codename in ['oneiric', 'lisa']:
-            return 'oneiric'
-        elif codename in ['precise', 'maya', 'Maya']:
-            return 'precise'
-        return codename
-    except:
-        pass
-    return ''
+    return 'Arch Linux'
 
 def get_desktop():
     '''
@@ -66,14 +50,9 @@
 DESKTOP = get_desktop()
 DESKTOP_FULLNAME = get_desktop_fullname()
 APP = get_app()
-UBUNTU_CODENAMES = ('dapper', 'edgy', 'feisty',
-                    'gutsy', 'hardy', 'intrepid',
-                    'jaunty', 'karmic', 'lucid',
-                    'maverick', 'natty', 'oneiric',
-                    'precise', 'quantal', 'raring')
 
 def is_supported(codename=CODENAME):
-    return codename in ('oneiric', 'precise', 'quantal', 'raring')
+    return codename in ('Arch Linux')
 
 
 if __name__ == '__main__':
--- a/ubuntu_tweak.egg-info/SOURCES.txt
+++ b/ubuntu_tweak.egg-info/SOURCES.txt
@@ -17,8 +17,6 @@
 data/ubuntu-tweak.desktop.in
 data/ubuntu-tweak.png
 data/unity-lens-ubuntu-tweak.service
-data/uturl
-data/uturl.schemas.in
 data/icons/128x128/apps/ubuntu-tweak.png
 data/icons/16x16/apps/ubuntu-tweak.png
 data/icons/22x22/apps/ubuntu-tweak.png
@@ -66,23 +64,16 @@
 data/templates/pygtk-example.py
 data/templates/python-script.py
 data/templates/shell-script.sh
-data/ui/appcenter.ui
-data/ui/appspage.ui
 data/ui/brokenmodule.ui
 data/ui/clippage.ui
 data/ui/desktoprecovery.ui
 data/ui/filetypemanager.ui
 data/ui/janitorpage.ui
-data/ui/loginsettings.ui
 data/ui/mainwindow.ui
 data/ui/preferences.ui
 data/ui/quicklists.ui
-data/ui/sourcecenter.ui
-data/ui/sourceeditor.ui
 data/ui/templates.ui
 data/ui/traceback.ui
-data/ui/updatemanager.ui
-data/ui/uturl.ui
 data/ui/window.ui
 po/POTFILES.in
 po/ar.po
@@ -165,24 +156,19 @@
 ubuntutweak/preferences.py
 ubuntutweak/run_test.py
 ubuntutweak/admins/__init__.py
-ubuntutweak/admins/appcenter.py
 ubuntutweak/admins/desktoprecovery.py
 ubuntutweak/admins/filetypemanager.py
 ubuntutweak/admins/quicklists.py
 ubuntutweak/admins/scripts.py
 ubuntutweak/admins/shortcuts.py
-ubuntutweak/admins/sourcecenter.py
-ubuntutweak/admins/sourceeditor.py
 ubuntutweak/admins/templates.py
 ubuntutweak/admins/userdir.py
-ubuntutweak/apps/__init__.py
 ubuntutweak/backends/__init__.py
 ubuntutweak/backends/daemon.py
 ubuntutweak/clips/__init__.py
 ubuntutweak/clips/cleanerinfo.py
 ubuntutweak/clips/hardwareinfo.py
 ubuntutweak/clips/systeminfo.py
-ubuntutweak/clips/updateinfo.py
 ubuntutweak/clips/userinfo.py
 ubuntutweak/common/__init__.py
 ubuntutweak/common/config.py
@@ -190,7 +176,6 @@
 ubuntutweak/common/debug.py
 ubuntutweak/common/download.py
 ubuntutweak/common/inifile.py
-ubuntutweak/common/sourcedata.py
 ubuntutweak/gui/__init__.py
 ubuntutweak/gui/cellrenderers.py
 ubuntutweak/gui/containers.py
@@ -199,30 +184,20 @@
 ubuntutweak/gui/treeviews.py
 ubuntutweak/gui/widgets.py
 ubuntutweak/janitor/__init__.py
-ubuntutweak/janitor/aptcache_plugin.py
-ubuntutweak/janitor/autoremoval_plugin.py
 ubuntutweak/janitor/chrome_plugin.py
 ubuntutweak/janitor/empathy_plugin.py
 ubuntutweak/janitor/googleearth_plugin.py
 ubuntutweak/janitor/gwibber_plugin.py
 ubuntutweak/janitor/mozilla_plugin.py
-ubuntutweak/janitor/oldkernel_plugin.py
 ubuntutweak/janitor/opera_plugin.py
-ubuntutweak/janitor/packageconfigs_plugin.py
-ubuntutweak/janitor/softwarecenter_plugin.py
 ubuntutweak/janitor/thumbnailcache_plugin.py
 ubuntutweak/module/__init__.py
 ubuntutweak/module/autostart.py
-ubuntutweak/module/taskinstall.py
-ubuntutweak/module/updatemanager.py
 ubuntutweak/modules/__init__.py
 ubuntutweak/network/__init__.py
 ubuntutweak/network/downloadmanager.py
-ubuntutweak/network/utdata.py
-ubuntutweak/network/xmlrpc.py
 ubuntutweak/policykit/__init__.py
 ubuntutweak/policykit/dbusproxy.py
-ubuntutweak/policykit/widgets.py
 ubuntutweak/settings/__init__.py
 ubuntutweak/settings/common.py
 ubuntutweak/settings/compizsettings.py
@@ -238,7 +213,6 @@
 ubuntutweak/tweaks/__init__.py
 ubuntutweak/tweaks/fonts.py
 ubuntutweak/tweaks/icons.py
-ubuntutweak/tweaks/loginsettings.py
 ubuntutweak/tweaks/lovewallpaperhd.py
 ubuntutweak/tweaks/misc.py
 ubuntutweak/tweaks/nautilus.py
@@ -251,8 +225,6 @@
 ubuntutweak/tweaks/workspace.py
 ubuntutweak/utils/__init__.py
 ubuntutweak/utils/icon.py
-ubuntutweak/utils/package.py
 ubuntutweak/utils/parser.py
-ubuntutweak/utils/ppa.py
 ubuntutweak/utils/tar.py
-ubuntutweak/utils/theme.py
\ No newline at end of file
+ubuntutweak/utils/theme.py
