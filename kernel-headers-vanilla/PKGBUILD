# Maintainer: Tj <tj@archlinux.us>
# Original Creator and Maintainer: Robson Peixoto <robsonpeixoto@gmail.com>

pkgname=kernel-headers-vanilla
pkgver=2.6.32
_basever=2.6.32
#_patchname=patch-${pkgver}
pkgrel=1
pkgdesc="Kernel headers sanitized for use in userspace, uses latest git version"
arch=(i686)
license=("GPL")
url="http://www.kernel.org/"
groups=("base")
replaces=('kernel-headers')
provides=('kernel-headers')
conflicts=('kernel-headers')
#source=(ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-${_basever}.tar.bz2)
#	http://www.kernel.org/pub/linux/kernel/v2.6/patch-${pkgver}.bz2)
#md5sums=('d351e44709c9810b85e29b877f50968a')

_gitroot="git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git"
_gitname="linux-2.6.git"

build() {
        #################################
	# Get the latest kernel sources
	#################################
	msg "Fetching sources..."

	if [ -d "$_gitname" ]; then
		msg2 "Updating sources..."
		cd "$_gitname" && git fetch && cd "$OLDPWD" || return 1
	else
		msg2 "Cloning the project..."
		git clone --mirror "$_gitroot" "$_gitname" || return 1
	fi

	msg "Creating build branch..."
	rm -rf "$_build_dir/$_gitname-build"
	git clone "$_gitname" "$_build_dir/$_gitname-build" || return 1
	cd "$_build_dir/$_gitname-build"s

###updating kernver
	######################
	# Get kernel version
	######################
	_kernver="$(make kernelrelease)"
	_basekernel="${_kernver%%-*}"


	############################################################
	# Use kernel version instead of the current date as pkgver
	############################################################
	if [ -n "$_kernel_pkgver" ]; then
		msg "Updating pkgver..."
		# work around AUR parser bug, note this will make pkgver 2.6.30, not 2.6.30-Tj or similar.
		[ 1 ] && pkgver=${_kernver//-/_}

		# do not silently overwrite existing packages
		if [[ "$FORCE" != "1" && -e "$PKGDEST/$pkgname-$pkgver-$pkgrel-${CARCH}${PKGEXT}" ]]; then
			error "A package has already been built. (use -f to overwrite)"
			return 1
		fi
	fi



####making+installing

  make mrproper
  make headers_check || return 1
  make INSTALL_HDR_PATH=${pkgdir}/usr headers_install

  # remove conflicts with libdrm 'include/drm'
  rm -rf ${pkgdir}/usr/include/drm

  find ${pkgdir}/usr -name '..install.cmd' -exec rm -f {} \;
  find ${pkgdir}/usr -name '.install' -exec rm -f {} \;

}
