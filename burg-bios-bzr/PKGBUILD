# Maintainer: Keshav P R <(the.ridikulus.rat) (aatt) (gemmaeiil) (ddoott) (ccoomm)>
# Contributor: cruznick <cruznick@archlinux.us>
# Contributor: fsckd <fsckdaemon@gmail.com>

# Tunables: change y to n to disable
_rm_build_dirs="${_rm_build_dirs:-n}"        # remove build directories
_mk_burg_emu="${_mk_burg_emu:-y}"                # enable burg emu

pkgname="burg-bios-bzr"
pkgver=1844
pkgrel=3
pkgdesc="Brand-new Universal loadeR from GRUB2 - Built for i386 BIOS"
url="http://code.google.com/p/burg/"
license="GPL3"
arch=('i686' 'x86_64')

makedepends=('bzr' 'ruby' 'bdf-unifont' 'python2' 'ncurses')
depends=('gettext' 'freetype2')
optdepends=('os-prober' 'memtest86+')

conflicts=('burg-bios')
replaces=('burg' 'burg-bzr' 'burg-emu')
provides=('burg' 'burg-bios' 'burg-bzr')

if [[ "${_mk_burg_emu}" == 'y' ]]; then
    makedepends+=('sdl')
    conflicts+=('burg-emu')
    provides+=('burg-emu')
fi

#options=('!makeflags')
changelog='burg.changelog'
backup=('etc/default/burg' 'etc/burg.d/40_custom')

source=('burg.default' 'arch-burg.patch' '20_memtest86+' 'update-burg')

sha256sums=('e94ee55a1fa9cadb5d752c40df6060c0b5c6b42f6f69440d24642b483255b05a'
            '57fa4d1ab439a3e716cf60f5eda533969f8d4a46b6425e85f0529d1897897446'
            '31edd8578c337be2f02dae8a292b5c53d34b107ab255634698794f999a293506'
            '646d55a233706329ecc9b4b6d0eb0460e6d37b84ebbe3e15c3176cbd23bf075b')

install='burg.install'

_bzrmod="burg"
_bzrtrunk="lp:${_bzrmod}"

_builddir="${_bzrmod}-build"
_builddir_emu="${_bzrmod}-emu-build"

_common_configure_opts="--host="${CARCH}-pc-linux-gnu" --program-prefix="" \
                        --prefix=/usr --bindir=/bin \
                        --sbindir=/sbin --mandir=/usr/share/man \
                        --infodir=/usr/share/info --sysconfdir=/etc \
                        --disable-werror"

_update_bzr() {
    
    cd "${srcdir}/"
    
    msg "Connecting to the server...."
    
    if [[ ! -d "${srcdir}/${_bzrmod}" ]] ; then
        bzr branch "${_bzrtrunk}"
    else
        cd "${srcdir}/${_bzrmod}" && bzr pull "${_bzrtrunk}"
    fi
    
    msg "BZR checkout done or server timeout"
    
}

_build_dir() {
    
    local _rm_builddir='0'
    
    while (( "$#" ))
    do
        local _check="$1"
        
        if [[ "${_check}" == '-r' ]]; then
            _rm_builddir='1'
        elif [[ "${_check}" == 'emu' ]]; then
            _builddir="${_bzrmod}-build"
            _builddir_emu="${_bzrmod}-emu-build"
        else
            _builddir="${_bzrmod}-$1-build"
        fi
        
        shift
    done
    
    if [[ "${_check}" == 'emu' ]]; then
        rm -rf "${srcdir}/${_builddir_emu}" || true
    else
        rm -rf "${srcdir}/${_builddir}" || true
    fi
    
    if [[ "${_rm_builddir}" == '0' ]]; then
        if [[ "${_check}" == 'emu' ]]; then
            cp -rip "${srcdir}/${_bzrmod}" "${srcdir}/${_builddir_emu}"
            cd "${srcdir}/${_builddir_emu}"
        else
            cp -rip "${srcdir}/${_bzrmod}" "${srcdir}/${_builddir}"
            cd "${srcdir}/${_builddir}/"
        fi
    fi
    
}

_build_common() {
    
    local _check="$1"
    
    if [[ "${_check}" == 'emu' ]]; then
        cd "${srcdir}/${_builddir_emu}"
    else
        cd "${srcdir}/${_builddir}"
    fi
    
    # Archlinux changed default python to python3, need to use /usr/bin/python2 instead
    sed 's|python|python2|g' -i ./autogen.sh || true
    
    echo
    
    ./autogen.sh
    
    echo
    
}

_build_bios() {
    
    msg "Building burg bios...."
    
    _build_dir
    
    echo
    
    # some random patches to facilitate automatic creation of burg.cfg
    patch -Np1 -i    "${srcdir}/arch-burg.patch"
    
    echo
    
    _build_common
    
    echo
    
    cd "${srcdir}/${_builddir}/"
    
    ## fix unifont.bdf location so burg-mkfont can create *.pf2 files
    sed 's|/usr/share/fonts/unifont|/usr/share/fonts/misc|g' -i ./configure || true
    
    _bios_configure_opts="${_common_configure_opts} --with-platform=pc --disable-grub-emu-usb"
    ./configure ${_bios_configure_opts}
    
    echo
    
    CFLAGS="" make
    
    echo
    
}

_build_emu() {
    
    msg "Building burg-emu...."
    
    _build_dir emu
    
    echo
    
    _build_common emu
    
    echo
    
    cd "${srcdir}/${_builddir_emu}/"
    
    ## fix unifont.bdf location so burg-mkfont can create *.pf2 files
    sed 's|/usr/share/fonts/unifont|/usr/share/fonts/misc|g' -i ./configure || true
    
    _emu_configure_opts="${_common_configure_opts} --with-platform=emu --disable-grub-emu-usb"
    ./configure ${_emu_configure_opts}
    
    echo
    
    CFLAGS="" make
    
    echo
    
}

build() {
    
    _update_bzr
    
    echo
    
    _build_bios
    
    echo
    
    if [[ "${_mk_burg_emu}" == 'y' ]]; then
        _build_emu
    fi
    
    echo
    
}

package() {
    
    cd "${srcdir}/${_builddir}/"
    
    make DESTDIR="${pkgdir}/" install
    
    echo
    
    if [[ "${_mk_burg_emu}" == 'y' ]]; then
        install -D -m0755 "${srcdir}/${_builddir_emu}/grub-emu" "${pkgdir}/bin/burg-emu"
    fi
    
    # install /etc/default/burg(needed config file)
    install -D -m0644 "${srcdir}/burg.default" "${pkgdir}/etc/default/burg"
    
    # install update-burg script
    install -D -m0755 "${srcdir}/update-burg" "${pkgdir}/sbin/update-burg"
    
    # install memtest config detection
    install -D -m0755 "${srcdir}/20_memtest86+" "${pkgdir}/etc/burg.d/20_memtest86+"
    
    if [[ "${_rm_build_dirs}" == 'y' ]]; then
        _build_dir -r
        
        if [[ "${_mk_burg_emu}" == 'y' ]]; then
            _build_dir -r emu
        fi
    fi
    
    echo
    
}
