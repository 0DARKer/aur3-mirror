# PKGBUILD generated by pacpan
pkgname=perl-moosex-clone
_realname=MooseX-Clone
pkgver=0.04
pkgrel=1
pkgdesc="~"
arch=(i686 x86_64)
license=('unknown')
url="http://search.cpan.org/~nuffin/MooseX-Clone"
options=(!emptydirs)

depends=('perl' 'perl-namespace-clean' 'perl-test-use-ok' 'perl-hash-util-fieldhash-compat' 'perl-data-visitor' 'perl-moose')
makedepends=('perl')

#provides=('MooseX-Clone')
provides=('perl-moosex-clone=0.04' 'perl-moosex-clone-meta-attribute-trait-noclone' 'perl-moosex-clone-meta-attribute-trait-clone' 'perl-moosex-clone=0.04' 'perl-moosex-clone-meta-attribute-trait-clone-base' 'perl-moosex-clone-meta-attribute-trait-clone-std' 'perl-moosex-clone-meta-attribute-trait-copy')

source=(http://search.cpan.org/CPAN/authors/id/N/NU/NUFFIN/MooseX-Clone-0.04.tar.gz)
md5sums=('94661ad379bd97903dc8464528b4d36d')

build() {
  _expected_dir="${srcdir}/${_realname}-${pkgver}"
  if [ -d "$_expected_dir" ]; then
    cd "$_expected_dir"
  else
    _expected_dir="${srcdir}/$(bsdtar -t -f $(basename $source) | head -n1)"
    if [ -d "$_expected_dir" ]; then
      cd "$_expected_dir"
    else
      _makefile=$(find $srcdir -iname Makefile.PL)
      if [ ! -z "$_makefile" ]; then
        _expected_dir=$(dirname $_makefile)
        if [ -d "$_expected_dir" ]; then
          cd "$_expected_dir"
        else
          echo "[1;31mERROR[0m unable to detect source directory"
          echo "[1;34m-->[0m this is often due to CPAN's lack of standard naming conventions"
          echo "[1;34m-->[0m it may be possible to fix this by adjusting the build function in the PKGBUILD"
        fi
      fi
    fi
  fi
  # install module in vendor directories.
  PERL_MM_USE_DEFAULT=1 perl Makefile.PL INSTALLDIRS=vendor || return 1
  make  || return 1
  make install DESTDIR=${pkgdir} || return 1

  # remove perllocal.pod and .packlist
  find ${pkgdir} -name perllocal.pod -delete
  find ${pkgdir} -name .packlist -delete
}

# vim:set ts=2 sw=2 et:
# END OF PACPAN PKGBUILD

