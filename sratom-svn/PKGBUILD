# Maintainer: SpepS <dreamspepser at yahoo dot it>

_name=sratom
pkgname=$_name-svn
pkgver=4108
pkgrel=1
pkgdesc="An LV2 Atom RDF serialisation library"
arch=(i686 x86_64)
url="http://drobilla.net/software/$_name/"
license=('custom:ISC')
depends=('lv2' 'serd' 'sord')
makedepends=('subversion' 'python2')
#options=('!strip') # debug

_svntrunk=http://svn.drobilla.net/lad/trunk/$_name
_svnmod=$_name

build() {
  cd "$srcdir"

  if [ -d $_svnmod/.svn ]; then
    (cd $_svnmod && svn up -r $pkgver)
  else
    svn co $_svntrunk --config-dir ./ -r $pkgver $_svnmod
  fi

  msg "SVN checkout done or server timeout"
  msg "Starting make..."

  rm -rf "$srcdir/$_svnmod-build"
  cp -r "$srcdir/$_svnmod" "$srcdir/$_svnmod-build"
  cd "$srcdir/$_svnmod-build"

  #
  # BUILD
  #

  # remove ldconfig
  sed -i '/ldconfig/d' wscript

  python2 waf configure --prefix=/usr
#                        --debug # debug
  python2 waf
}

package() {
  cd "$srcdir/$_svnmod-build"
  DESTDIR="$pkgdir/" python2 waf install

  # license
  install -d "$pkgdir/usr/share/licenses/$pkgname"
  head -n15 src/$_name.c > \
    "$pkgdir/usr/share/licenses/$pkgname/COPYING"

  # provides and conflicts
  _sver=`grep "^${_name^^}_VERSION" wscript | cut -d"'" -f2`
  _vmin=${_sver%%.*} && _vmaj=$(($_vmin + 1))
  provides=("$_name=$_sver")
  conflicts=("$_name>$_vmin.0.0" "$_name<=$_vmaj.0.0")

  # adjust depends to add versions
  _deps=${depends[@]} && unset depends
  for _dep in $_deps; do
    _dver=`grep "^VERSION_$_dep" build/c4che/_cache.py | cut -d"'" -f2`
    depends+=("$_dep>=$_dver")
  done
}
