post_install() {
echo "Enabling default qubes services..."
for srv in qubes-dvm qubes-meminfo-writer qubes-qrexec-agent qubes-sysinit qubes-misc-post qubes-netwatcher qubes-network qubes-firewall qubes-yum-proxy; do
    systemctl enable $srv.service 2> /dev/null
done

echo "Enabling qubes-update-check..."
systemctl enable qubes-update-check.timer 2> /dev/null

# Install overriden services only when original exists
echo "Install overriden services only if original exists..."
for srv in cups NetworkManager ntpd; do
    if [ -f /lib/systemd/system/$srv.service ]; then
        cp /usr/lib/qubes/init/$srv.service /etc/systemd/system/$srv.service
    fi
done

# Set default "runlevel"
echo "Set default runlevel..."
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target

#chkconfig stuff is specific to redhad
#for f in /etc/init.d/*
#do
#        srv=`basename $f`
#        [ $srv = 'functions' ] && continue
#        [ $srv = 'killall' ] && continue
#        [ $srv = 'halt' ] && continue
#        [ $srv = 'single' ] && continue
#        [ $srv = 'reboot' ] && continue
#        [ $srv = 'qubes_gui' ] && continue
#        chkconfig $srv off 2> /dev/null
#done

echo "Disable unnessesary services (lot of them)..."

DISABLE_SERVICES="alsa-store alsa-restore auditd avahi backuppc cpuspeed crond"
DISABLE_SERVICES="$DISABLE_SERVICES fedora-autorelabel fedora-autorelabel-mark ipmi hwclock-load hwclock-save"
DISABLE_SERVICES="$DISABLE_SERVICES mdmonitor multipathd openct rpcbind mcelog fedora-storage-init fedora-storage-init-late"
DISABLE_SERVICES="$DISABLE_SERVICES plymouth-start plymouth-read-write plymouth-quit plymouth-quit-wait"
DISABLE_SERVICES="$DISABLE_SERVICES sshd tcsd sm-client sendmail mdmonitor-takeover"
for srv in $DISABLE_SERVICES; do
    if [ -f /lib/systemd/system/$srv.service ]; then
        if fgrep -q '[Install]' /lib/systemd/system/$srv.service; then
            systemctl disable $srv.service 2> /dev/null
        else
            # forcibly disable
            ln -sf /dev/null /etc/systemd/system/$srv.service
        fi
    fi
done

echo "Remove tty targets..."
echo "Will break your system if qubes is not installed correctly"
#rm -f /etc/systemd/system/getty.target.wants/getty@tty*.service

echo "Creating the qubes user..."
useradd -m -G users -g wheel -s /bin/zsh user

# Enable some services
echo "Enable/Disable core network services..."
systemctl enable iptables.service 2> /dev/null
systemctl enable ip6tables.service 2> /dev/null
systemctl enable rsyslog.service 2> /dev/null
#systemctl enable ntpd.service 2> /dev/null
# Disable original service to enable overriden one
#systemctl disable NetworkManager.service 2> /dev/null
# Disable D-BUS activation of NetworkManager - in AppVm it causes problems (eg PackageKit timeouts)
#systemctl mask dbus-org.freedesktop.NetworkManager.service 2> /dev/null
#systemctl enable NetworkManager.service 2> /dev/null
# Enable cups only when it is real SystemD service
#[ -e /lib/systemd/system/cups.service ] && systemctl enable cups.service 2> /dev/null

echo "Adding xen and qubes specific fstab entries..."
echo "xen		/proc/xen	xenfs	defaults	0 0" >> /etc/fstab
echo "/dev/xvdi		/mnt/removable	auto	noauto,user,rw	0 0" >> /etc/fstab


}

post_remove() {
echo "Disabling qubes services..."
for srv in qubes-dvm qubes-meminfo-writer qubes-qrexec-agent qubes-sysinit qubes-misc-post qubes-netwatcher qubes-network; do
    systemctl disable $srv.service
done

}

# vim:set ts=2 sw=2 et:
