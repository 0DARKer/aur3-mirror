#Maintainer: Alain Kalker <a {dot} c {dot} kalker "at" gmail {dot} com>

pkgname=vmware9-tools
pkgver=9.2.4.1410761
_wsver=9.0.3
pkgrel=1
pkgdesc="Tools for guest operating systems (VMware 9.x)"
arch=('i686' 'x86_64')
url="http://kb.vmware.com/kb/340"
license=('custom:vmware')

_PV=$(echo ${pkgver} | cut -d . -f 1-3)
_MINOR=$(echo ${pkgver} | cut -d . -f 3)
_BUILD=$(echo ${pkgver} | cut -d . -f 4)
_BASE_URI="http://softwareupdate.vmware.com/cds/vmw-desktop/ws/${_wsver}/${_BUILD}/linux/packages/"

depends=()
makedepends=('libxslt')

if [ "$CARCH" = "i686" ]; then
	sha256sums=('e95a76b86cba98fc2f11a59b3feb79d1440771388ab1318815715462bd01a9db'
            'bab38dbb12159c2262ba3af188ce47447e35a2e05d335ac014a349289d7a55a7'
            'c44efb7e54284632839e43562175450b2cb07a12cada8734f456b21b64104357'
            'dc005421ea5812db31db3a85069e062abf90cc0d61a1e270847782ab075cc6c9'
            '300767848faa8695d48650bfd6a73f38222c4f8d1fa7cc5066d6f0c480b65dd8'
            'a541a709ee588f3276116a2627fb3ed86e33493871ab8bea90cab38bd3d8d1ad'
            '6da856f4438c271d1082d1bd247ea587a6cb90d7e45130f97f55d948af69ed94'
            '4ee8796c9b4cdad00e9ed51f5a3e986f69b306f28675b7a0672522f5abcaa8f3')
elif [ "$CARCH" = "x86_64" ]; then
	sha256sums=('79ab873705ba8238e325dad129ceec89524454aa549c7592fe38d83db994b8f1'
            '0587962b39b496b3515a8a8856847e6f758d11828f79eb4767da594ffdae983e'
            'e1901933892b21d4d153a21e9623506643ce22612cdf43bc04e674c49f612a97'
            'e8d17a42b0ed509f4acd0acd2fa5eff1cf5d8ae9a57817ddabadbde8a3f1c65c'
            '4a10ce73294001d482418d175afcbfeab5aa497ac680f0227344fb24d9538afd'
            '2fd12a3103c1fd5f9aa774bbee0725cbba5b5607c95e1945db6ad3116ac851ba'
            '6da856f4438c271d1082d1bd247ea587a6cb90d7e45130f97f55d948af69ed94'
            '4ee8796c9b4cdad00e9ed51f5a3e986f69b306f28675b7a0672522f5abcaa8f3')
fi

_VMWARE_GUEST="freebsd linux netware solaris windows winPre2k"

_VM_INSTALL_DIR="/opt/vmware"

source=()
for guest in ${_VMWARE_GUEST} ; do
	if [ "$CARCH" = "i686" ]; then
		source+=("${_BASE_URI}vmware-tools-${guest}-${_PV}-${_BUILD}.i386.component.tar")
	elif [ "$CARCH" = "x86_64" ]; then
		source+=("${_BASE_URI}vmware-tools-${guest}-${_PV}-${_BUILD}.${CARCH}.component.tar")
	fi
done ; unset guest

source+=('list-bundle-components.xsl'
	'list-component-files.xsl')

vmware-bundle_extract-component() {
	local component=${1:?} dest=${2:-.}
	local -i offset=${3}
	local -i component_manifestOffset=$(od -An -j$((offset+9)) -N4 -tu4 "${component}")
	local -i component_manifestSize=$(od -An -j$((offset+13)) -N4 -tu4 "${component}")
	local -i component_dataOffset=$(od -An -j$((offset+17)) -N4 -tu4 "${component}")
	local -i component_dataSize=$(od -An -j$((offset+21)) -N8 -tu8 "${component}")
	tail -c+$((offset+component_manifestOffset+1)) "${component}" 2> /dev/null |
		head -c$((component_manifestSize)) | xsltproc "${srcdir}"/list-component-files.xsl - |
		while read -r file_offset file_compressedSize file_uncompressedSize file_path ; do
			if [[ ${file_path} ]] ; then
				echo -n '.'
				file_path="${dest}/${file_path}"
				mkdir -p "$(dirname "${file_path}")" || return 1
				tail -c+$((offset+component_dataOffset+file_offset+1)) "${component}" 2> /dev/null |
					head -c$((file_compressedSize)) | gzip -cd > "${file_path}" || return 1
			fi
		done
	echo
}

build() {
	cd "$srcdir"
	local arch
	if [ "$CARCH" = "i686" ] ; then arch='i386'
	elif [ "$CARCH" = "x86_64" ] ; then arch='x86_64'
	fi
	local guest ; for guest in ${_VMWARE_GUEST} ; do
		local component="vmware-tools-${guest}-${_PV}-${_BUILD}.${arch}.component"
		echo "Extracting '${component}'"
		vmware-bundle_extract-component "${component}"
	done
}

package() {
	cd "$srcdir"
	install -d "$pkgdir/${_VM_INSTALL_DIR}"/lib/vmware/isoimages
	local guest ; for guest in ${_VMWARE_GUEST} ; do
		cp -dr --no-preserve=ownership "${guest}".iso{,.sig} "$pkgdir/${_VM_INSTALL_DIR}"/lib/vmware/isoimages
	done
}
