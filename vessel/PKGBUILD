# Maintainer: afettouhi <A.Fettouhi@gmail.com>

pkgname=vessel
pkgver=20121219
_pkgver=12082012
pkgrel=1
pkgdesc="Vessel is a physics-based, steampunk puzzle-platform video game developed by Strange Loop Games."
url="http://www.strangeloopgames.com/"
license=('custom')
arch=('i686' 'x86_64')
groups=("humble-indie-bundle6" "games")
if [ "$CARCH" = "x86_64" ]; then
    depends=('lib32-sdl' 'lib32-openal' 'bash' 'lib32-gcc-libs')
    optdepends=('lib32-libtxc_dxtn: texture decoding for open source ATI and Intel drivers')
else
    depends=('sdl' 'openal' 'bash' 'gcc-libs')
    optdepends=('libtxc_dxtn: texture decoding for open source ATI and Intel drivers')
fi
source=("http://www.flibitijibibo.com/patch/vessel/linux-12192012.tar.gz"
        "${pkgname}.install"
        "${pkgname}.desktop"
        "${pkgname}.sh")
md5sums=("10fd5d8e6e30f3db9e7487c35e435126"
         "b25345577b44fbeeba96c6cc87f11c1e"
         "6057700248d5796056b1096962d53877"
         "174d23fe24b496e2cdda1d136327174e")
makedepends=('unzip')
options=('!strip')
PKGEXT=".pkg.tar"

package() {
  mkdir -p "${pkgdir}/opt/games/${pkgname}"
  _get_local_source "${pkgname}-${_pkgver}-bin" || error "Unable to find the game archive" exit 1;
  unzip -u "${srcdir}/${pkgname}-${_pkgver}-bin" -d "${pkgdir}/opt/games/${pkgname}" || true
  rm -rf "${pkgdir}/opt/games/${pkgname}/data/x86"
  rm "${pkgdir}/opt/games/${pkgname}/data/Linux.README"
  rm "${pkgdir}/opt/games/${pkgname}/data/Vessel"
  rm "${pkgdir}/opt/games/${pkgname}/data/Vessel.bmp"
  tar -zxvf linux-12192012.tar.gz -C "${pkgdir}/opt/games/${pkgname}/data/"
  find "${pkgdir}" -type f -exec chmod 644 "{}" +
  install -Dm644 "${pkgname}".desktop "${pkgdir}/usr/share/applications/${pkgname}.desktop"
  install -Dm755 "${pkgname}".sh "${pkgdir}/usr/bin/${pkgname}"
  chmod 755 "${pkgdir}/opt/games/${pkgname}/data/Vessel" \
    "${pkgdir}/opt/games/${pkgname}/data/x86/vessel.x86"
}

# Locate a file or folder provided by the user, and symlink it into ${srcdir}
_get_local_source() {
  msg "Looking for '$1'..."
  declare -A _search=(['build dir']="$startdir"
                      ['$LOCAL_PACKAGE_SOURCES']="$LOCAL_PACKAGE_SOURCES")
  for _key in "${!_search[@]}"; do local _dir="${_search["$_key"]}"
    if [ -z "$_dir" ]; then _dir="<undefined>"; fi
    echo -n "    - in $_key ['$_dir'] ... ";
    if [ -e "$_dir/$1" ]; then
      echo "FOUND"; ln -sfT "$(readlink -f "$_dir/$1")" "${srcdir}/$1"; break; fi
    echo "NOT FOUND"
  done
  if [ ! -e "${srcdir}/$1" ]; then return 1; fi
}