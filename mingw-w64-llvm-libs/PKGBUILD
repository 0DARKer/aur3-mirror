pkgname=mingw-w64-llvm-libs
pkgver=3.5.0
pkgrel=2
pkgdesc="Low Level Virtual Machine (mingw-w64)"
arch=(any)
url="http://llvm.org"
license=("custom:University of Illinois/NCSA Open Source License")
makedepends=(mingw-w64-cmake "llvm>=$pkgver" python)
depends=(mingw-w64-libffi mingw-w64-libxml2)
options=(staticlibs !strip !buildflags !emptydirs)
source=("http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.xz"{,.sig})
sha256sums=('28e199f368ef0a4666708f31c7991ad3bcc3a578342b0306526dd35f07595c03'
            'SKIP')

_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

build() {
	for _arch in ${_architectures}; do
		unset LDFLAGS
		ffiver=`${_arch}-pkg-config --modversion libffi`
		if [ ${_arch} = "x86_64-w64-mingw32" ]; then
			CPPFLAGS+="-D__USING_SJLJ_EXCEPTIONS__"
		fi
		export PYTHON_EXECUTABLE=/usr/bin/python
		mkdir -p "${srcdir}/${pkgname}-${pkgver}-build-${_arch}"
		cd "${srcdir}/${pkgname}-${pkgver}-build-${_arch}"
		${_arch}-cmake ../llvm-$pkgver.src \
			-DBUILD_SHARED_LIBS=OFF \
			-DCPACK_BINARY_NSIS=OFF \
			-DCPACK_SOURCE_ZIP=OFF \
			-DFFI_INCLUDE_DIR=/usr/${_arch}/lib/libffi-$ffiver/include \
			-DFFI_LIBRARY_DIR=/usr/${_arch}/lib \
			-DLLVM_BUILD_TOOLS=OFF \
			-DLLVM_ENABLE_FFI=ON \
			-DLLVM_INCLUDE_DOCS=OFF \
			-DLLVM_INCLUDE_EXAMPLES=OFF \
			-DLLVM_INCLUDE_TESTS=OFF \
			-DLLVM_INCLUDE_TOOLS=OFF \
			-DLLVM_TABLEGEN=/usr/bin/llvm-tblgen
		make REQUIRES_RTTI=1
	done
}

package() {
	mkdir -p "$pkgdir/usr/bin"
	for _arch in ${_architectures}; do
		cd "${srcdir}/${pkgname}-${pkgver}-build-${_arch}"
		make DESTDIR="$pkgdir" install
		find "$pkgdir/usr/${_arch}" -name '*.exe' -o -name '*gtest*' -o -name 'llvm-lit' | xargs -rtl1 rm
		find "$pkgdir/usr/${_arch}" -name '*.dll' | xargs -rtl1 ${_arch}-strip --strip-unneeded
		find "$pkgdir/usr/${_arch}" -name '*.a' -o -name '*.dll' | xargs -rtl1 ${_arch}-strip -g
		rm -r "$pkgdir/usr/${_arch}/share"
	done
}
