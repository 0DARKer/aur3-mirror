# Maintainer: Piotr Rogoża <rogoza dot piotr at gmail dot com>
# Contributor: Piotr Rogoża <rogoza dot piotr at gmail dot com>
# vim:set ts=2 sw=2 et ft=sh tw=100: expandtab

pkgname=nginx-devel
_pkgname=nginx
# development version of nginx
pkgver=1.3.13
pkgrel=2
pkgdesc='Lightweight HTTP server and IMAP/POP3 proxy server - development version'
url="http://nginx.org"
arch=('i686' 'x86_64')
#{{{ Third party modules and patches
# SPDY: reduce web page load latency and improve web security
# see http://nginx.org/patches/spdy/README.txt and http://en.wikipedia.org/wiki/SPDY
_spdy_patchlevel=65

# naxsi: Application firewall
# see http://code.google.com/p/naxsi/
_naxsiver=0.49

# systemd socket activation support
# see http://trac.nginx.org/nginx/ticket/237

# http push module: This module turns Nginx into an adept HTTP Push and Comet server.
# see http://pushmodule.slact.net/
_pushmodulever=0.692
#}}}
#{{{ nginx env
_cfgdir=/etc/nginx
_tmpdir=/var/lib/nginx
_logdir=/var/log/nginx
_piddir=/run
_lockdir=/var/lock

_user=http
_group=http
#}}}
#{{{depends
depends=(
pcre
openssl
geoip
gd
libxslt
gperftools
) #}}}
#{{{makedepends
makedepends=(
passenger
geoip
libatomic_ops
gperftools
) #}}}
optdepends=('customizepkg: to customize PKGBUILD, see latest comments')
license=('custom')
install='nginx.install'
#{{{backup
backup=(
etc/nginx/fastcgi.conf
etc/nginx/fastcgi_params
etc/nginx/koi-win
etc/nginx/koi-utf
etc/nginx/mime.types
etc/nginx/nginx.conf
etc/nginx/scgi_params
etc/nginx/uwsgi_params
etc/nginx/win-utf
etc/nginx/naxsi.rules
etc/nginx/naxsi_core.rules
etc/logrotate.d/nginx
) #}}}
changelog='CHANGES'
#{{{source
source=(
http://nginx.org/download/${_pkgname}-$pkgver.tar.gz
http://naxsi.googlecode.com/files/naxsi-core-${_naxsiver}.tgz
#rc.d
nginx.service
nginx.logrotate
naxsi.rules
naxsi_core.rules
nginx.conf.example
http://nginx.org/en/CHANGES
http://nginx.org/patches/spdy/patch.spdy-${_spdy_patchlevel}_${pkgver}.txt
"socket.patch::http://trac.nginx.org/nginx/raw-attachment/ticket/237/0001-Socket-activation-support-for-systemd.patch"
nginx.socket
) #}}}
#{{{conflicts
conflicts=(
nginx
nginx-unstable
nginx-svn
nginx-socket
nginx-development-extra
nginx-spdy
) #}}}
provides=('nginx')
#options=('!emptydirs')

# variables build
_configure_params=()
# Additional functions, from nginx-development-extra, thx
add_module() { #{{{
  local module=$1 && shift
  local src=$1 && shift

  plain "* $module"

  if [[ "$src" == "github" ]]; then
    src=$(_add_github_module $module $@)
  elif [[ "$src" =~ ^(https?|ftp):// ]]; then
    src=$(_add_external_module $module $src)
  fi

  if [ -d "$src" ]; then
    _configure_params+=(--add-module=$src)
  fi
} #}}}
_add_external_module() { #{{{
  local module=$1
  local src=$2

  [ -d "$module" ] || curl --silent $src | tar -xz

  echo "$(cd "$module" && pwd)"
} #}}}
_add_github_module() { #{{{
  local module=$1
  local github_user=$2
  local branch=$3

  [ -d "./$module/.git" ] || git clone -q git://github.com/$github_user/$module.git
  [ -n "$branch" ] && (cd $module && git checkout -q $branch)

  echo "$(cd "$module" && pwd)"
} #}}}
check_customizepkg (){ #{{{
#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  check_customizepkg
#   DESCRIPTION:  checks array depends or/and makedepends for additional options
#    PARAMETERS: options, where to check: [both|make|depends]
# e.g. 
# _customizepkg gperftools both OR _customizepkg gperftools make depends => checks both depends and makedepends
# _customizepkg openssl depends => checks only depends
# _customizepkg passenger make => checks only makedepends
#       RETURNS:  0 if enable in depends or/and makedepends,
# 1 if disable
# 2 incorrect parameters, e.g. _customizepkg gperftools provides
# 3 not enough parameters, e.g. _customizepkg gperftools
#-------------------------------------------------------------------------------
    if [ $# -ge 2 ]; then
        local custom=$1 && shift
        local checks=$*
        if [[ "$checks" =~ both || ( "$checks" =~ depends && "$checks" =~ make ) ]]; then
            # checks both array
            if [[ "${depends[*]}" =~ $custom && "${makedepends[*]}" =~ $custom ]]; then
                return 0
            else 
                return 1
            fi
        elif [ "$checks" == depends ]; then
            # checks depends array
            if [[ "${depends[*]}" =~ $custom ]]; then
                return 0
            else
                return 1
            fi
        elif [ "$checks" == make ]; then
            # checks makedepends array
            if [[ "${makedepends[*]}" =~ $custom ]]; then
                return 0
            else
                return 1
            fi
        else
            # wrong usage, incorrect parameters.
            return 2
        fi
    else
        # wrong usage, not enough parameters
        return 3
    fi
} # ----------  end of function check_customizepkg  ----------}}}
build() { #{{{
	cd "$srcdir"/${_pkgname}-$pkgver
  msg2 "Adding SPDY protocol. If you get error then remove $srcdir directory."
	patch -Np1 -i "$srcdir"/patch.spdy-${_spdy_patchlevel}_${pkgver}.txt
  msg2 "Adding optional systemd socket activation support"
  patch -Np1 -i "$srcdir/socket.patch"

  #{{{ build options
  _configure_params=(
    --prefix=$_cfgdir
    --sbin-path=/usr/sbin/nginx
    --conf-path=$_cfgdir/nginx.conf
    --error-log-path=$_logdir/error.log
    --pid-path=$_piddir/nginx.pid
    --lock-path=$_lockdir/nginx.lock

    --user=$_user
    --group=$_group

    --with-file-aio
    --with-ipv6
  
    --http-log-path=$_logdir/access.log
    --http-client-body-temp-path=$_tmpdir/client-body
    --http-proxy-temp-path=$_tmpdir/proxy
    --http-fastcgi-temp-path=$_tmpdir/fastcgi
    --http-uwsgi-temp-path=$_tmpdir/uwsgi
    --http-scgi-temp-path=$_tmpdir/scgi

    --with-debug
  )
  # libatomic_ops, customizepkg
  check_customizepkg libatomic_ops make \
    && _configure_params+=(--with-libatomic)
  # pcre, customizepkg
  check_customizepkg pcre depends\
    && _configure_params+=(
      --with-pcre
      --with-pcre-jit
    )
  #}}}
  #{{{ Core modules
  _configure_params+=(
    --with-rtsig_module
    --with-select_module
    --with-poll_module
  )
  #}}}
  #{{{ Optional HTTP modules
  _configure_params+=(
    --with-http_addition_module
    --with-http_degradation_module
    --with-http_perl_module
    --with-http_flv_module
    --with-http_gzip_static_module
    --with-http_image_filter_module
    --with-http_mp4_module
    --with-http_random_index_module
    --with-http_realip_module
    --with-http_secure_link_module
    --with-http_stub_status_module
    --with-http_sub_module
    --with-http_dav_module
    --with-http_gunzip_module

    --with-ld-opt="-lstdc++"
    --with-cpp_test_module
  )
  # xslt module, customizepkg
  check_customizepkg libxslt depends \
    && _configure_params+=(--with-http_xslt_module)
  # ssl module, customizepkg
  check_customizepkg openssl depends \
    && _configure_params+=(--with-http_ssl_module)
  # google perf tools, customizepkg
  check_customizepkg gperftools both \
    && _configure_params+=(--with-google_perftools_module)
  # geoip module, customizepkg
  check_customizepkg geoip both \
    && _configure_params+=(--with-http_geoip_module)
  #}}}
  #{{{ Mail modules
  _configure_params+=(
    --with-mail
    --with-imap
  )
  # mail_ssl and imap_ssl module, customizepkg
  check_customizepkg openssl depends \
    && _configure_params+=(
    --with-mail_ssl_module
    --with-imap_ssl_module
  )
  #}}}
  #{{{ Additional modules from various patch
  _configure_params+=(
    --with-http_spdy_module
  )
  #}}}
  
  _modulesdir="$srcdir/modules"

  msg2 "Configuring modules"

  mkdir -p $_modulesdir
  cd $_modulesdir

  # passenger module, customizepkg
  check_customizepkg passenger both \
    && add_module "passenger" "/usr/lib/passenger/ext/nginx"
  add_module "naxsi-${_naxsiver}" "$srcdir/naxsi-core-${_naxsiver}/naxsi_src"
  add_module "nginx_http_push_module-${_pushmodulever}" \
    "http://pushmodule.slact.net/downloads/nginx_http_push_module-${_pushmodulever}.tar.gz"

	cd "$srcdir"/${_pkgname}-$pkgver
  ./configure ${_configure_params[*]}
  make
} #}}}
package() { #{{{
  cd "$srcdir/${_pkgname}-${pkgver}"
  make DESTDIR="$pkgdir" install

  install -d "$pkgdir"/etc/logrotate.d/
  install -m644 "$srcdir"/nginx.logrotate "$pkgdir"/etc/logrotate.d/nginx

  sed -e 's|\<user\s\+\w\+;|user html;|g' \
    -e '44s|html|/usr/share/nginx/html|' \
    -e '54s|html|/usr/share/nginx/html|' \
    -i "$pkgdir"/etc/nginx/nginx.conf
  rm "$pkgdir"/etc/nginx/*.default

  install -d "$pkgdir"/$_tmpdir

  install -d "$pkgdir"/usr/share/nginx
  mv "$pkgdir"/etc/nginx/html/ "$pkgdir"/usr/share/nginx

  #install -Dm755 "$srcdir"/rc.d "$pkgdir"/etc/rc.d/nginx
  install -Dm644 "$srcdir"/nginx.service "$pkgdir"/usr/lib/systemd/system/nginx.service
  install -Dm644 "$srcdir"/nginx.socket "$pkgdir"/usr/lib/systemd/system/nginx.socket
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/nginx-devel/LICENSE
  rm -rf "$pkgdir"/var/run

  #man
  #install -d "$pkgdir"/usr/share/man/man8
  #gzip "$srcdir"/${_pkgname}-$pkgver/man/${_pkgname}.8 -c > "${pkgdir}"/usr/share/man/man8/${_pkgname}.8.gz
  install -Dm644 "$srcdir"/${_pkgname}-$pkgver/man/nginx.8 "$pkgdir"/usr/share/man/man8/nginx.8
  
  #naxsi
  install -Dm644 "$srcdir"/naxsi_core.rules "$pkgdir"/${_cfgdir}/naxsi_core.rules
  install -Dm644 "$srcdir"/naxsi.rules "$pkgdir"/${_cfgdir}/naxsi.rules
  
  install -Dm644 "$srcdir"/nginx.conf.example "$pkgdir"/${_cfgdir}/nginx.conf.example
} #}}}
md5sums=('cf5acd823deac63cddba3fe377a0de27'
         '7e463d3852b86881e9e880c86184e8ab'
         '62d494d23aef31d0b867161f9fffa6eb'
         'b38744739022876554a0444d92e6603b'
         '8510ce5ff8d3a7a710fa42e127651594'
         'cf67e931f4263830189196b2d8560502'
         '3a23f1f2478abb5847a8042a0c3b747b'
         'e33dfac00fdb527839080469926b7dd7'
         'e8751a0c06239b4cc93c58520f1e1b23'
         'a79a2e34f4197391356a7a92584481b0'
         '5981d95bb07ca3e1f3640118199c219d')
