#!/bin/bash

# cache-icons
#

_icon_count=13
_icon_size=32
_icon_size_small=16

images=/etc/splash/$SPLASH_THEME/images

work_dir=$spl_cachedir/arch-banner-icons # avoid using symlink name
mkdir -p "$work_dir" || return 1

case $PREVLEVEL:$RUNLEVEL
in                    : ) action=install
;; [^NS1]:[S1] | *:[06] ) action=stop
;;                    * ) action=start
esac

if [[ $action != install ]]; then
	ICON_THEME=/usr/share/icons/Tango
	. /etc/splash/$SPLASH_THEME/icons.conf
	[[ $ICON_THEME == /* ]] || ICON_THEME=/usr/share/icons/$ICON_THEME
fi

## Separator line painted on splash daemon [re]start
if [[ $action = stop &&
	  -f $spl_cachedir/stop_failed-fbsplash-dummy ]]; then
	ln -sfT $images/separator-red.png "${work_dir}"/fbsplash-dummy.init
else
	ln -sfT $images/separator.png "$work_dir"/fbsplash-dummy.init
fi

ln_svcicon() {                 # args: <icon-rel-path>|"" <symlink-name>
	local icon=$images/dummy.png
	if [[ ${1} && $action != install ]]; then
		if [[ -r $ICON_THEME/$ICON_SIZE/${1} ]]; then
			icon=$ICON_THEME/$ICON_SIZE/${1}
		else
			echo "${0}: $FUNCNAME: File not found: '$ICON_THEME/$ICON_SIZE/${1}'" >&2
		fi
	fi
	ln -sfT $icon "$work_dir/${2}"
}

## Status emblems
ICON_SIZE=${_icon_size_small}x${_icon_size_small}

#for state in start stop fail ; do
for state in stop fail ; do
	eval icon_path="\"\$ICON_${state}\""
	ln_svcicon "$icon_path" $state
done

## Service icons
ICON_SIZE=${_icon_size}x${_icon_size}

declare -i index
for (( i=0; i<_icon_count*2; i+=2 )) do
	index=i/2+1
	# Invisible dummy icons painted on services actions if no icon defined
	ln_svcicon "" svc_$index
	# Invisible dummy icons painted on splash daemon start for services not up
	ln_svcicon "" svc_$index.init
	ln_svcicon "" stat_$index.init
done

if [[ $action = install ]]; then
	exit
fi

# Get first existing icon for service from configuration
#
svcicon_get() {                # args: <svc>
	local icons icon i
	for (( i=0; i<${#SERVICE_ICONS[@]}; i+=2 )) do
		[[ ${SERVICE_ICONS[i]} = ${1} ]] || continue
		icon=${SERVICE_ICONS[i+1]}
		if [[ -r $ICON_THEME/$ICON_SIZE/$icon ]]; then
			echo $icon
			return
		fi
		icons+=" '$icon'"
	done
	if [[ $icons ]]; then
		echo "${0}: $FUNCNAME ${1}: Found none of: ($icons )" >&2
	fi
	return 1
}

# Save ordered list of service,icon pairs
# Create files for fast lookup of service icon position
if [[ $SPLASH_RESTART != 1 ]]; then
	svclist=( $( splash_svclist_get $action ) )
	if [[ $action = stop ]]; then
		svcs=""
		for (( i=${#svclist[@]}-1; i>=0; i-- )) do
			svcs+=" ${svclist[i]}"
		done
	else
		svcs=${svclist[*]}
	fi
	i=1
	for svc in $svcs; do
		icon=$( svcicon_get $svc ) || continue
		echo $((i++)) >|"$work_dir"/svcicon_num_$svc
		echo $svc,$icon
	done >|"$work_dir"/svciconlist
fi

declare -i index=1
for svcicon in $( <"$work_dir"/svciconlist ); do
	# Icon painted on service event
	icon=${svcicon##*,}
	ln_svcicon "$icon" svc_$index
	# Override icons painted on splash daemon [re]start for services currently up
	if [[ $action = stop ]]; then
		svc=${svcicon%,*}
		if [[ -f $spl_cachedir/stop_failed-$svc ]]; then
			ln -sfT fail "${work_dir}"/stat_$index.init
		elif [[ $SPLASH_RESTART = 1 && $svc != _init_* ]]; then
			icon=""
		fi
		ln_svcicon "$icon" svc_$index.init
	fi
	index+=1
done

# EOF #
