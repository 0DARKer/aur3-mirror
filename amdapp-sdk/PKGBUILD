# Maintainer: Vi0L0 <vi0l093@gmail.com>
# Previous Maintainer: Michael Krause <mk-arch@spline.de>
# Contributor: kralyk
# Contributor: pfdm
# Contributor: caust1c


# Note: amdapp-aparapi must be installed before amdapp-sdk, it's available on AUR
_aparapi=n     #type y here if you have installed aparapi and want to include AparapiUtil and samples


#PKGEXT=".tar.gz"  # time to pack this pkg into tar.xz is long, unfortunatelly yaourt got problems when ext is different than .pkg.tar.xz - V



pkgname=amdapp-sdk
pkgver=2.8
pkgrel=2

pkgdesc="AMD Accelerated Parallel Processing (APP) SDK, with OpenCL 1.2 support. Provides OPTIONAL  aparapi's Util and samples"
arch=('i686' 'x86_64')
url="http://developer.amd.com/sdks/AMDAPPSDK/Pages/default.aspx"
license=("custom")
groups=('amdapp')
install=install

provides=('opencl' 'amdstream')
depends=('libcl' 'libgl' 'llvm' 'gcc-libs' 'mesa' 'glut' 'glew')
conflicts=('amdstream')
optdepends=('opencl-headers: for development'
            'catalyst: for OpenCL on AMD GPU')
makedepends=('perl' 'llvm')

#Architecture resolution
_arch="${CARCH/i6/x}"
_bits=${_arch/x86/32}
_bits=${_bits/32_/}
[ "$CARCH" = 'x86_64' ] && _hash='d9c120367225bb1cd21abbcf77cb0a69cfb4bb6932d0572990104c566aab9681' \
                        || _hash='99610737f21b2f035e0eac4c9e776446cc4378a614c7667de03a82904ab2d356'

#Sources
source=("http://developer.amd.com/wordpress/media/2012/11/AMD-APP-SDK-v${pkgver}-lnx${_bits}.tgz" \
        '01-implicit-linking.patch'
        '02-readlink-include.patch'
	'03-remove-aparapi-samples.patch')

#sha256sums
sha256sums=($_hash
'25781556b6441c26449e5577ea068eda74fb2dc520004897c64482cedb6fac0e'
'8418553d624d2cfd04a573311133f9d20d3bcce426025abfe2f68bef8cec4bc7'
'6be9823780074b4167940a0de0fcb0e83eb118f6896e259e28a6235a0152159a')

if [ "${_aparapi}" = "y" ]; then
depends+=('amdapp-aparapi' 'apache-ant')
fi

_subdir="AMD-APP-SDK-v2.8-RC-lnx${_bits}"

#Install path
_ipath='opt/AMDAPP/SDK'

build()
{
  cd "${srcdir}"
  tar xf ${_subdir}.tgz
  cd "${_subdir}"
 patch -p0 < ../../01-implicit-linking.patch
 patch -p0 < ../../02-readlink-include.patch
if [ "${_aparapi}" = "y" ]; then
  . /etc/profile.d/aparapi.sh
  else patch -p0 < ../../03-remove-aparapi-samples.patch
fi
  # FIXME - dependency has to move into Makefile
# make -j1 -C samples/opencl/SDKUtil
  make -j1
}

package()
{
  cd "${srcdir}/${_subdir}"

  #Install SDK
  mkdir -p "${pkgdir}/${_ipath}"
  cp -r {glut_notice.txt,docs,include} "${pkgdir}/${_ipath}/"
  mkdir -p "${pkgdir}/${_ipath}/"{bin,lib,samples/opencl/bin}
  cp -r "./bin/${_arch}/clinfo" "${pkgdir}/${_ipath}/bin/clinfo"
  cp -r "./lib/${_arch}/"* "${pkgdir}/${_ipath}/lib/"
  find ./samples/opencl/ -mindepth 1 -maxdepth 1 -type d -not -name bin -exec cp -r {} "${pkgdir}/${_ipath}/samples/opencl" \;
  cp -r "./samples/opencl/bin/${_arch}/"* "${pkgdir}/${_ipath}/samples/opencl/bin"
if [ "${_aparapi}" = "y" ]; then
  mkdir -p "${pkgdir}/${_ipath}/samples/aparapi"
  cp -r "./samples/aparapi/"* "${pkgdir}/${_ipath}/samples/aparapi"
fi

  #Licenses
  mkdir -p "${pkgdir}/${_ipath}/licenses"
  mkdir -p "${pkgdir}/usr/share/licenses/amdstream"
  install -m644 "./docs/opencl/LICENSES" "${pkgdir}/${_ipath}/licenses/LICENSE"
  install -m644 "./docs/opencl/LICENSES" "${pkgdir}/usr/share/licenses/amdstream/LICENSE"

  #Register ICD
  mkdir -p "${pkgdir}/etc/OpenCL/vendors"
  echo "/${_ipath}/lib/libamdocl${_bits}.so" > "${pkgdir}/etc/OpenCL/vendors/amd.icd"
  # The OpenCL ICD specifications: http://www.khronos.org/registry/cl/extensions/khr/cl_khr_icd.txt

  #Install includes
  mkdir -p "${pkgdir}/usr/include/"{CAL,OpenVideo}
  install -m644 './include/OpenVideo/'{OVDecode.h,OVDecodeTypes.h} "${pkgdir}/usr/include/OpenVideo/"

  #Symlink binaries   -- doesn't needed? V
#  mkdir -p "${pkgdir}/usr/bin"
 # ln -s "/${_ipath}/bin/clinfo" "${pkgdir}/usr/bin/clinfo"

  #Env vars
  mkdir -p "${pkgdir}/etc/profile.d"
  cd "${pkgdir}/etc/profile.d"
  echo '#!/bin/sh' > amdstream.sh
  echo "export AMDAPPSDKROOT=/${_ipath}/" >> amdstream.sh
  echo "export AMDAPPSDKSAMPLESROOT=/${_ipath}/" >> amdstream.sh


  #Fix modes
  find "${pkgdir}/${_ipath}/" -type f -exec chmod 644 {} \;
  chmod 755 "${pkgdir}/${_ipath}/bin/"*
  chmod 755 "${pkgdir}/${_ipath}/lib/"*
  find "${pkgdir}/${_ipath}/samples/opencl/bin" -type f -not -name "*.*" -exec chmod 755 {} \;
if [ "${_aparapi}" = "y" ]; then
  find "${pkgdir}/${_ipath}/samples/aparapi" -name \*.sh -exec chmod 755 {} \;
fi
} 
