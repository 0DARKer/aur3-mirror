diff --git a/include/ClientCaches.py b/include/ClientCaches.py
index 5cb0d2e..feaffb5 100644
--- a/include/ClientCaches.py
+++ b/include/ClientCaches.py
@@ -389,7 +389,7 @@ class ThumbnailCache( object ):
             
             thumbnail = HydrusFileHandling.GenerateThumbnail( path, HC.options[ 'thumbnail_dimensions' ] )
             
-            resized_path = HC.STATIC_DIR + os.path.sep + name + '_resized.png'
+            resized_path = HC.TEMP_DIR + os.path.sep + name + '_resized.png'
             
             with open( resized_path, 'wb' ) as f: f.write( thumbnail )
             
@@ -471,4 +471,4 @@ class ThumbnailCache( object ):
                 
             
         
-    
\ No newline at end of file
+    
diff --git a/include/ClientGUI.py b/include/ClientGUI.py
index 3d66f0a..bf271d5 100755
--- a/include/ClientGUI.py
+++ b/include/ClientGUI.py
@@ -295,7 +295,7 @@ class FrameGUI( ClientGUICommon.FrameThatResizes ):
         aboutinfo.SetVersion( HC.u( HC.SOFTWARE_VERSION ) )
         aboutinfo.SetDescription( CC.CLIENT_DESCRIPTION )
         
-        with open( HC.BASE_DIR + os.path.sep + 'license.txt', 'rb' ) as f: license = f.read()
+        with open( '/usr/share/licenses/hydrus/license.txt', 'rb' ) as f: license = f.read()
         
         aboutinfo.SetLicense( license )
         
@@ -1819,7 +1819,7 @@ The password is cleartext here but obscured in the entry dialog. Enter a blank p
             elif command == 'fetch_ip': self._FetchIP( data )
             elif command == '8chan_board': webbrowser.open( 'http://8ch.net/hydrus/index.html' )
             elif command == 'file_integrity': self._CheckFileIntegrity()
-            elif command == 'help': webbrowser.open( 'file://' + HC.BASE_DIR + '/help/index.html' )
+            elif command == 'help': webbrowser.open( 'file:///opt/hydrus/help/index.html' )
             elif command == 'help_about': self._AboutWindow()
             elif command == 'help_shortcuts': wx.MessageBox( CC.SHORTCUT_HELP )
             elif command == 'import_files': self._ImportFiles()
@@ -3141,4 +3141,4 @@ class FrameSplash( ClientGUICommon.Frame ):
         
         dc.DrawText( text, x, 200 )
         
-    
\ No newline at end of file
+    
diff --git a/include/ClientGUIDialogs.py b/include/ClientGUIDialogs.py
index 500fb71..6e63ea2 100755
--- a/include/ClientGUIDialogs.py
+++ b/include/ClientGUIDialogs.py
@@ -616,7 +616,7 @@ class DialogFirstStart( Dialog ):
         def ArrangeControls():
             
             message1 = 'Hi, this looks like the first time you have started the hydrus client. Don\'t forget to check out the'
-            link = wx.HyperlinkCtrl( self, id = -1, label = 'help', url = 'file://' + HC.BASE_DIR + '/help/index.html' )
+            link = wx.HyperlinkCtrl( self, id = -1, label = 'help', url = 'file:///opt/hydrus/help/index.html' )
             message2 = 'if you haven\'t already.'
             message3 = 'When you close this dialog, the client will start its local http server. You will probably get a firewall warning.'
             message4 = 'You can block it if you like, or you can allow it. It doesn\'t phone home, or expose your files to your network; it just provides another way to locally export your files.'
@@ -5901,4 +5901,4 @@ class DialogYesNo( Dialog ):
         if event.KeyCode == wx.WXK_ESCAPE: self.EndModal( wx.ID_NO )
         else: event.Skip()
         
-    
\ No newline at end of file
+    
diff --git a/include/HydrusConstants.py b/include/HydrusConstants.py
index 940b17e..1f87058 100755
--- a/include/HydrusConstants.py
+++ b/include/HydrusConstants.py
@@ -3,9 +3,9 @@ import sys
 
 # dirs
 
-BASE_DIR = sys.path[0]
+BASE_DIR = os.path.expanduser("~/.local/share/hydrus")
 
-BIN_DIR = BASE_DIR + os.path.sep + 'bin'
+BIN_DIR = "/opt/hydrus/bin"
 DB_DIR = BASE_DIR + os.path.sep + 'db'
 CLIENT_ARCHIVES_DIR = DB_DIR + os.path.sep + 'client_archives'
 CLIENT_FILES_DIR = DB_DIR + os.path.sep + 'client_files'
@@ -16,9 +16,14 @@ SERVER_MESSAGES_DIR = DB_DIR + os.path.sep + 'server_messages'
 CLIENT_UPDATES_DIR = DB_DIR + os.path.sep + 'client_updates'
 SERVER_UPDATES_DIR = DB_DIR + os.path.sep + 'server_updates'
 LOGS_DIR = BASE_DIR + os.path.sep + 'logs'
-STATIC_DIR = BASE_DIR + os.path.sep + 'static'
+STATIC_DIR = "/opt/hydrus/static"
 TEMP_DIR = BASE_DIR + os.path.sep + 'temp'
 
+for dirs in [LOGS_DIR, TEMP_DIR, DB_DIR]:
+    try:
+        os.makedirs(dirs)
+    except os.error:
+        pass
 #
 
 PLATFORM_WINDOWS = False
@@ -2822,4 +2827,4 @@ sqlite3.register_adapter( ServerToClientUpdate, yaml.safe_dump )
 
 sqlite3.register_converter( 'BLOB_BYTES', str )
 sqlite3.register_converter( 'INTEGER_BOOLEAN', integer_boolean_to_bool )
-sqlite3.register_converter( 'TEXT_YAML', yaml.safe_load )
\ No newline at end of file
+sqlite3.register_converter( 'TEXT_YAML', yaml.safe_load )
diff --git a/include/HydrusServerResources.py b/include/HydrusServerResources.py
index 1dcd10f..3b361a8 100644
--- a/include/HydrusServerResources.py
+++ b/include/HydrusServerResources.py
@@ -775,11 +775,11 @@ class HydrusResourceCommandBooruThumbnail( HydrusResourceCommandBooru ):
         mime = media_result.GetMime()
         
         if mime in HC.MIMES_WITH_THUMBNAILS: path = ClientFiles.GetThumbnailPath( hash, full_size = False )
-        elif mime in HC.AUDIO: path = HC.STATIC_DIR + os.path.sep + 'audio_resized.png'
-        elif mime in HC.VIDEO: path = HC.STATIC_DIR + os.path.sep + 'video_resized.png'
-        elif mime == HC.APPLICATION_FLASH: path = HC.STATIC_DIR + os.path.sep + 'flash_resized.png'
-        elif mime == HC.APPLICATION_PDF: path = HC.STATIC_DIR + os.path.sep + 'pdf_resized.png'
-        else: path = HC.STATIC_DIR + os.path.sep + 'hydrus_resized.png'
+        elif mime in HC.AUDIO: path = HC.TEMP_DIR + os.path.sep + 'audio_resized.png'
+        elif mime in HC.VIDEO: path = HC.TEMP_DIR + os.path.sep + 'video_resized.png'
+        elif mime == HC.APPLICATION_FLASH: path = HC.TEMP_DIR + os.path.sep + 'flash_resized.png'
+        elif mime == HC.APPLICATION_PDF: path = HC.TEMP_DIR + os.path.sep + 'pdf_resized.png'
+        else: path = HC.TEMP_DIR + os.path.sep + 'hydrus_resized.png'
         
         response_context = HC.ResponseContext( 200, path = path )
         
@@ -1251,4 +1251,4 @@ class HydrusResourceCommandRestrictedUpdate( HydrusResourceCommandRestricted ):
         
         return response_context
         
-    
\ No newline at end of file
+    
