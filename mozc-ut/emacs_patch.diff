Index: unix/ibus/mozc_engine.cc
===================================================================
--- unix/ibus/mozc_engine.cc	(revision 108)
+++ unix/ibus/mozc_engine.cc	(working copy)
@@ -527,7 +527,7 @@
 
   RevertSession(engine);
 #ifdef ENABLE_GTK_RENDERER
-  HideNativeCandidateWindow();
+  HideNativeCandidateWindow(engine);
 #endif  // ENABLE_GTK_RENDERER
 }
 
@@ -560,8 +560,8 @@
 }
 
 #ifdef ENABLE_GTK_RENDERER
-void MozcEngine::HideNativeCandidateWindow() {
-  if (!FLAGS_use_mozc_candidate_window) {
+void MozcEngine::HideNativeCandidateWindow(IBusEngine *engine) {
+  if (!CanUseMozcCandidateWindow(engine)) {
     return;
   }
   commands::RendererCommand command;
@@ -582,7 +582,7 @@
 #endif  // !USE_IBUS_ENGINE_DELETE_SURROUNDING_TEXT
 
 #ifdef ENABLE_GTK_RENDERER
-  HideNativeCandidateWindow();
+  HideNativeCandidateWindow(engine);
 #endif  // ENABLE_GTK_RENDERER
 
   // Do not call SubmitSession or RevertSession. Preedit string will commit on
@@ -1265,7 +1265,7 @@
 bool MozcEngine::UpdateCandidates(IBusEngine *engine,
                                   const commands::Output &output) {
 #ifdef ENABLE_GTK_RENDERER
-  if (FLAGS_use_mozc_candidate_window) {
+  if (CanUseMozcCandidateWindow(engine)) {
     commands::RendererCommand command;
     command.mutable_output()->CopyFrom(output);
     command.set_type(commands::RendererCommand::UPDATE);
@@ -1389,7 +1389,7 @@
                                      const commands::Output &output) const {
 #ifdef ENABLE_GTK_RENDERER
   // Currently GTK Renderer does NOT support auxiliary text.
-  if (FLAGS_use_mozc_candidate_window) {
+  if (CanUseMozcCandidateWindow(engine)) {
     return true;
   }
 #endif  // ENABLE_GTK_RENDERER
@@ -1649,5 +1649,28 @@
   return true;
 }
 
+#ifdef ENABLE_GTK_RENDERER
+bool MozcEngine::CanUseMozcCandidateWindow(IBusEngine *engine) const {
+  if (!FLAGS_use_mozc_candidate_window) {
+    return false;
+  }
+
+  if (!(engine->client_capabilities & IBUS_CAP_PREEDIT_TEXT)) {
+    return false;
+  }
+
+  // TODO(nona): integrate with renderer/renderer_client.cc
+  const string renderer_path = mozc::Util::JoinPath(
+      mozc::Util::GetServerDirectory(), "mozc_renderer");
+  if (!Util::FileExists(renderer_path)) {
+    return false;
+  }
+
+  // TODO(nona): Check executable bit for renderer.
+  return true;
+}
+#endif  // ENABLE_GTK_RENDERER
+
+
 }  // namespace ibus
 }  // namespace mozc
Index: unix/ibus/mozc_engine.h
===================================================================
--- unix/ibus/mozc_engine.h	(revision 108)
+++ unix/ibus/mozc_engine.h	(working copy)
@@ -200,8 +200,11 @@
   void RevertSession(IBusEngine *engine);
 
 #ifdef ENABLE_GTK_RENDERER
+  // Returns whether mozc_candidate window is available.
+  bool CanUseMozcCandidateWindow(IBusEngine *engine) const;
+
   // Hides native candidate window.
-  void HideNativeCandidateWindow();
+  void HideNativeCandidateWindow(IBusEngine *engine);
 #endif  // ENABLE_GTK_RENDERER
 
   uint64 last_sync_time_;
