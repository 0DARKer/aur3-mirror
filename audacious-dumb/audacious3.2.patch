diff -urpN audacious-dumb-0.74/Makefile fixed/Makefile
--- audacious-dumb-0.74/Makefile	2011-12-12 06:02:29.000000000 +1100
+++ fixed/Makefile	2012-02-24 23:29:39.706043707 +1100
@@ -10,7 +10,8 @@ INSTALL_DIR_HOME := ~/.local/share/audac
 
 CFLAGS ?= -O2 -pipe
 
-CFLAGS += -Wall -fPIC -DPIC -I/usr/local/include
+CFLAGS += -Wall -fPIC -DPIC -I/usr/include
+CFLAGS += `pkg-config --cflags gtk+-3.0`
 AUDACIOUSCFLAGS := $(shell pkg-config 'audacious >= $(AUDMINVER)' --cflags || echo "old")
 
 ifeq ($(AUDACIOUSCFLAGS),old)
@@ -21,7 +22,7 @@ else
 CFLAGS += $(AUDACIOUSCFLAGS) -DPACKAGE=\"$(PACKAGE)\"
 endif
 
-DUMBLIBS := -ldumb -L/usr/local/lib
+DUMBLIBS := -ldumb -L/usr/lib
 AUDACIOUSLIBS := $(shell pkg-config audacious --libs) 
 
 SOURCES := audacious-dumb.c
diff -urpN audacious-dumb-0.74/audacious-dumb.c fixed/audacious-dumb.c
--- audacious-dumb-0.74/audacious-dumb.c	2011-09-22 03:15:58.000000000 +1000
+++ fixed/audacious-dumb.c	2012-02-24 23:45:30.763624851 +1100
@@ -252,9 +252,9 @@ static Tuple *get_tuple_info_from_duh(DU
 	Tuple *tuple = tuple_new_from_filename(filename);
 
 	if (dumb_config.use_custom_title)
-		tuple_associate_string(tuple, FIELD_FORMATTER, NULL, dumb_config.custom_title);
-	tuple_associate_string(tuple, FIELD_QUALITY, NULL, "sequenced");
-	tuple_associate_int(tuple, FIELD_LENGTH, NULL, (int)(duh_get_length(duh) * 1000LL >> 16) );
+		tuple_set_str(tuple, FIELD_TITLE, NULL, dumb_config.custom_title);
+	tuple_set_str(tuple, FIELD_QUALITY, NULL, "sequenced");
+	tuple_set_int(tuple, FIELD_LENGTH, NULL, (int)(duh_get_length(duh) * 1000LL >> 16) );
 	
 	mod_title_raw = duh_get_tag(duh, "TITLE");
 	if (mod_title_raw) {
@@ -266,7 +266,7 @@ static Tuple *get_tuple_info_from_duh(DU
 		g_strstrip(mod_title);
 
 		if (mod_title[0])
-			tuple_associate_string(tuple, FIELD_TITLE, NULL, mod_title);
+			tuple_set_str(tuple, FIELD_TITLE, NULL, mod_title);
 
 		g_free(mod_title); mod_title = NULL;
 	}
@@ -294,7 +294,7 @@ static Tuple *duh_probe_for_tuple(const
 		return NULL; /* Return empty Tuple if module was not loadable */
 	
 	input = get_tuple_info_from_duh(duh, filename);
-	tuple_associate_string(input, FIELD_CODEC, NULL, uniread[ext_index].description);	
+	tuple_set_str(input, FIELD_CODEC, NULL, uniread[ext_index].description);	
 		
 	return input;
 }
