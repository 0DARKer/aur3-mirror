# Contributor: Maciej Sitarz <macieks@freesco.pl>

pkgname=kadu-svn
pkgver=7071
pkgrel=1
pkgdesc="A Qt-based Gadu-Gadu client - SVN build"
url="http://www.kadu.net/"
license=(GPL)
depends=('qt>=4' 'libgadu-devel' 'dbus-core' 'hicolor-icon-theme')
makedepends=('subversion' 'cmake' 'kdelibs' 'inputproto')
optdepends=('libsndfile: module sound' \
	'aspell: module spellchecker' \
	'phonon: module phonon_sound' \
	'qca: module encryption' \
	'libxtst: module panelkadu' \
	'libxss: module idle' \
	'curl: module plus_pl_sms')
conflicts=('kadu')
provides=('kadu')
arch=('i686' 'x86_64')
source=('kadu-svn.install')
md5sums=('ecabc475a3f80759f95a90aadb753f25')
install=kadu-svn.install

_svntrunk=http://www.kadu.net/svn/kadu/branches/0.6.5/
#svntrunk=http://www.kadu.net/svn/kadu/trunk/
_svnmod=kadu

# List of modules static/dynamic/skipped, You can skip the change of module
# status by adding a ! infront of the name.

modules_static="
	!module_gadu_protocol
	module_docking
	module_qt4_docking
	icons_default
	icons_glass16
	icons_glass22
	sound_default
	
	emoticons_penguins
	emoticons_gg6_compatible
	emoticons_tango

	sound_bns
	sound_drums
	sound_florkus
	sound_michalsrodek
	sound_percussion
	sound_ultr
"

modules_dynamic="
	icons_kadu05
	icons_tango16
	icons_oxygen16

	module_desktop_docking                                                             
	module_notify
	module_qt4_docking_notify
	module_window_notify
	module_hints

	module_sound
	module_alsa_sound
	module_dsp_sound
	module_qt4_sound
	module_phonon_sound

	module_dcc
	module_sms
	module_default_sms
	module_plus_pl_sms
	
	module_account_management
	module_advanced_userlist
	module_history
	module_encryption
	module_autoaway
	module_config_wizard
	module_autoresponder
	module_screenshot
	
	module_auto_hide
	module_parser_extender
	!module_pcspeaker

	module_senthistory

	module_spellchecker
	module_filtering

	module_nextinfo
	module_echo
	module_panelkadu

	module_ext_sound
	module_voice

	module_gg_avatars
	module_profiles
	module_word_fix
	module_powerkadu
	module_agent

	module_filedesc
	module_osd_hints
	module_exec_notify
	module_led_notify
	module_autostatus
	module_idle
	module_antistring
	module_cenzor
	module_firewall

	module_mime_tex
	module_last_seen
	module_anonymous_check
	module_tabs
	module_split_messages
	module_water_notify
	module_weather

	module_speech

	module_mediaplayer
	module_amarok1_mediaplayer
	module_amarok2_mediaplayer
	module_bmpx_mediaplayer
	module_dragon_mediaplayer
	module_vlc_mediaplayer
"

modules_skip="
	module_encryption_old
	module_globalhotkeys
	module_dshow_sound
	module_win32_sound
	
	module_macosx_docking                                             
	
	module_ao_sound

	module_kde_notify
	module_growl_notify

	module_mail
	module_audacious_mediaplayer
	module_mx610_notify
	module_xmms_mediaplayer
	module_xmms2_mediaplayer
	module_falf_mediaplayer
	module_itunes_mediaplayer
	module_winamp_mediaplayer
"	

build() {
  cd $startdir/src

  if [ -d $_svnmod/.svn ]; then
    (cd $_svnmod && svn up -r $pkgver)
  else
    svn co $_svntrunk --config-dir ./ -r $pkgver $_svnmod
  fi

  msg "SVN checkout done or server timeout"
  msg "Starting make..."

  cd $startdir/src/kadu
  check_new_modules || return 1
  change_modules || return 1

  mkdir -p $startdir/src/build
  cd $startdir/src/build

  cmake -D CMAKE_INSTALL_PREFIX=/usr -D CMAKE_BUILD_TYPE="Release" ../kadu || return 1

  make || return 1
  make DESTDIR=$startdir/pkg install

  rm -rf $startdir/pkg/usr/share/kadu/{HISTORY,README}
}

change_modules() {
	for MOD in $modules_static; do
		echo $MOD | grep '!' &> /dev/null
		if [ "$?" == "1" ]; then
			msg "Static... $MOD"
			if [ ! -z "`grep -w $MOD .config`" ]; then
				sed -i "s/^$MOD=./$MOD=y/" .config
			else
				error "$MOD not found in .config"
				return 1
			fi
		fi
	done
	for MOD in $modules_dynamic; do
		echo $MOD | grep '!' &> /dev/null
		if [ "$?" == "1" ]; then
			msg "As module... $MOD"
			if [ ! -z "`grep -w $MOD .config`" ]; then
				sed -i "s/^$MOD=./$MOD=m/" .config
			else
				error "$MOD not found in .config"
				return 1
			fi
		fi
	done
	for MOD in $modules_skip; do
		echo $MOD | grep '!' &> /dev/null
		if [ "$?" == "1" ]; then
			msg "Disabling module... $MOD"
			if [ ! -z "`grep -w $MOD .config`" ]; then
				sed -i "s/^$MOD=./$MOD=n/" .config
			else
				error "$MOD not found in .config"
				return 1
			fi
		fi
	done
}

check_new_modules() {
    ALL_MODULES="`awk '/\=[ynm]/ && sub("=[ynm]","")' .config`"
    new_modules="0"
    
    for M in $ALL_MODULES; do
    	found="0"
	for m in $modules_static $modules_dynamic $modules_skip; do
	    if [ "$M" == "$m" -o "!$M" == "$m" ]; then
		    found="1"
	    fi
	done
	
	if [ "$found" == "0" ]; then
		warning "$M not found in PKGBUILD variables"
		let new_modules++
	fi
    done
    if [ "$new_modules" != "0" ]; then
    	sleep 10
	return 0
    fi
    return 0
}

