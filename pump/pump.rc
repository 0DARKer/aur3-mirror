#!/bin/bash

daemon_name="pump"

. /etc/rc.conf
. /etc/rc.d/functions
. /etc/conf.d/$daemon_name

get_pid() {
  _pid=$(pidof -o %PPID $daemon_name)
  if [[ -n $_pid ]]; then
    echo $_pid
    return 0
  else
    echo
    return 1
  fi
}

initvars() {
  if [[ -n $NOHOSTNAME ]]; then
    [[ -n $HOSTNAME ]] && unset HOSTNAME
  else
    if [[ -n $HOSTNAME ]]; then
      HOSTNAME="-h ${HOSTNAME}"
    else
      HOSTNAME="-h $(hostname)"
    fi
  fi
  
  if [[ -n $INTERFACE ]]; then
    INTERFACE="-i ${INTERFACE}"
  else
    INTERFACE="-i eth0"
  fi
  [[ -n $CONFIG  ]] && CONFIG="-c $CONFIG"
  [[ -n $NODNS   ]] && NODNS="-d"
  [[ -n $NOGW    ]] && NOGW="--no-gateway"
  [[ -n $NOBOOTP ]] && NOBOOTP="--no-bootp"
  [[ -n $WINCI   ]] && WINCI="--win-client-ident"

  if [[ -n $LEASEHOURS && -n $LEASESECS ]]; then
    stat_append "Error: LEASEHOURS and LEASESECS should not both be set in /etc/conf.d/$daemon_name.conf"
    stat_fail
  elif [[ -z $LEASEHOURS && -z $LEASESECS ]]; then
    # default to one hour
    LEASESECS="-L 3600"
  elif [[ -n $LEASEHOURS && -z $LEASESECS ]]; then
    LEASESECS="-L $((LEASEHOURS*3600))"
  elif [[ -z $LEASEHOURS && -n $LEASESECS ]]; then
    LEASESECS="-L $LEASESECS"
  fi
}

initvars
case "$1" in
  start)
    stat_busy "Starting $daemon_name daemon"

    PID=$(get_pid)
    if [[ -z $PID ]]; then
      [[ -f /var/run/$daemon_name.pid ]] &&
        rm -f /var/run/$daemon_name.pid

      $daemon_name ${CONFIG} ${HOSTNAME} ${INTERFACE} ${LEASESECS} ${NODNS} ${NOGW} ${NOBOOTP} ${WINCI}

      if [[ $? -gt 0 ]]; then
        stat_fail
        exit 1
      else
        echo $PID > /var/run/$daemon_name.pid
        add_daemon $daemon_name
        stat_done
      fi
    else
      stat_fail
      exit 1
    fi
    ;;

  stop)
    stat_busy "Stopping $daemon_name daemon"
    PID=$(get_pid)
    # KILL
    if [[ -n $PID ]]; then
      $daemon_name ${INTERFACE} -k &>/dev/null
      if [[ $? -gt 0 ]]; then
        stat_die
      else
        [[ -e /var/run/$daemon_name.pid ]] && rm -f /var/run/$daemon_name.pid &> /dev/null
        rm_daemon $daemon_name
        stat_done
      fi
    else
      stat_fail
    fi
    ;;

  restart)
    $0 stop
    sleep 3
    $0 start
    ;;

  renew|reload)
    if get_pid &>/dev/null; then
      stat_busy "Reloading $daemon_name"
      $daemon_name -R
      [[ $? == 0 ]] && stat_done || stat_fail
    else
      echo "pump does not seem to be running." >&2
    fi
    ;;

  status)
    # ck_status $daemon_name
    if get_pid &>/dev/null; then
      $daemon_name -s
    else
      echo "pump does not seem to be running." >&2
      exit 1
    fi
    #stat_done
    ;;

  *)
    echo "usage: $0 {start|stop|restart|renew|status}"
esac

exit 0

# vim:set ts=2 sw=2 et ft=sh:
