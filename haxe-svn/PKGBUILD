# Maintainer: Daichi Shinozaki <dsdseg@gmail.com>

pkgname=haxe-svn
pkgver=5409
pkgrel=1
pkgdesc="A multiplatform open source programming language"
arch=('i686' 'x86_64')
url="http://code.google.com/p/haxe/"
license=('GPL2')
groups=('devel')
depends=('neko>=1.8.2' 'bash')
makedepends=('subversion' 'ocaml>=4.0.0' 'sed' 'zlib' 'neko>=1.8.2')
provides=('haxe')
conflicts=('haxe')
options=('!strip' 'emptydirs' '!makeflags')
install=haxe.install
source=('haxeserver'
  'haxe.sh'
  'haxe.csh'
  'extlib.patch')
md5sums=('27d7af131da515355cca04b8b404feaa'
         '79cbf6ebdb3d56e980d1a17fa9cb3b2d'
         '5e0e656293e92a6437d76f2f406438b5'
         'ae26bfc2ba01b870ba6ad2b3183b37af')

_svntrunk=http://haxe.googlecode.com/svn/trunk/
_svnmod=haxe
_buildroot="$srcdir/$_svnmod"

build() {
  cd "$srcdir"
  msg "Connecting to SVN server...."

  if [[ -d "$_svnmod/.svn" ]]; then
    (cd "$_svnmod" && svn up -r "$pkgver")
    svn revert "$_svnmod"/main.ml
    svn revert "$_svnmod"/libs/extlib/extHashtbl.ml    
    svn revert "$_svnmod"/libs/extlib/extHashtbl.mli
  else
    svn co "$_svntrunk" --config-dir ./ -r "$pkgver" "$_svnmod"
  fi

  msg "SVN checkout done or server timeout"
  msg "Starting build..."
  cd $_buildroot
  
  #
  # BUILD HERE
  #
  
  msg "Cleaning up..."
  make clean > /dev/null
  for i in haxe{lib,doc}; do
   [ -f "$_buildroot/std/tools/$i/$i" ] && rm "$_buildroot/std/tools/$i/$i"
  done
  msg2 "done."
  
  msg "SVN HEAD revision is ${pkgver}. Starting build..."
#  patch -p1 < "$srcdir/extlib.patch"  
  sed --in-place=.orig \
      --expression="s/\\(Haxe Compiler %d.%.2d\\) -/\\1 [SVN r$pkgver] -/" main.ml 
  msg "Building libs..." && make libs || return 1
  msg2 "done."
  msg "Building haxe..." && make haxe || return 1
  msg2 "done."

  for i in haxe{doc,lib}; do
    msg "Building $i..."
    cd $_buildroot/std/tools/$i && env HAXE_LIBRARY_PATH=$_buildroot/std ../../../haxe $i.hxml || return 1
    msg2 "done."
  done

msg "(SKIP) Generating api docs..."  
# build error on SVN r5400, uncomment later when fixed
# msg "Generating api docs..."  
#  cd $_buildroot/doc && env HAXE_LIBRARY_PATH=$_buildroot/std $_buildroot/haxe all.hxml
#  if [ -f flash8.xml -a -f flash9.xml -a -f neko.xml -a -f js.xml -a \
#       -f php.xml -a -f cpp.xml -a -f cs.xml -a -f java.xml ]; then 
#    $_buildroot/std/tools/haxedoc/haxedoc -v "flash8.xml;flash8;flash" \
#      "neko.xml;neko" "js.xml;js" "flash9.xml;flash" \
#      "php.xml;php" "cpp.xml;cpp" "cs.xml;cs" "java.xml;java"
#    echo
#    if [ $? -eq 0 ]; then
#      msg2 "done."
#    else
#      msg2 "failed." 
#      return 1
#    fi
#  else
#    return 1
#  fi
}

package() {
  install --directory "$pkgdir"{/usr/{bin,lib/haxe/lib},/opt/haxe/doc,/etc/profile.d}
  install --mode=755 "$srcdir"/haxeserver "$pkgdir"/usr/bin/
  install --mode=755 "$srcdir"/haxe.{,c}sh "$pkgdir"/etc/profile.d/
  svn export --quiet $_buildroot/std "$pkgdir"/opt/haxe/std
  install --mode=644 -D --no-target-directory $_buildroot/doc/LICENSE.txt "$pkgdir"/usr/share/${pkgname%-svn}/LICENSE
  install --mode=644 $_buildroot/doc/CHANGES.txt "$pkgdir"/opt/haxe/
  install --mode=755 $_buildroot/haxe "$pkgdir"/usr/bin/
  install --mode=755 $_buildroot/std/tools/haxelib/haxelib "$pkgdir"/usr/bin/
  install --mode=755 $_buildroot/std/tools/haxedoc/haxedoc "$pkgdir"/usr/bin/  
#  cp --recursive $_buildroot/doc/content "$pkgdir"/opt/haxe/doc/
#  install --mode=644 $_buildroot/doc/index.html "$pkgdir"/opt/haxe/doc/
}

# vim:set ts=2 sw=2 et:
