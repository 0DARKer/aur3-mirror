Index: usplash/userui_usplash_core.c
===================================================================
--- usplash/userui_usplash_core.c	(revision 1073)
+++ usplash/userui_usplash_core.c	(working copy)
@@ -2,6 +2,7 @@
  * userui_usplash_core.c - usplash userspace user interface module.
  *
  * Copyright (C) 2005-2007, Bernard Blackham <bernard@blackham.com.au>
+ * Copyright (C) 2008-2009, Nigel Cunningham <nigel@tuxonice.net>
  * 
  * This file is subject to the terms and conditions of the GNU General Public
  * License v2.  See the file COPYING in the main directory of this archive for
@@ -32,6 +33,10 @@
 static int userui_usplash_yres = 0;
 static int userui_usplash_verbose = 1;
 
+#ifndef fade_logo
+void fade_logo(on, step) { }
+#endif
+
 static void read_usplash_conf() {
     char s[1024];
     FILE *f;
@@ -138,6 +143,7 @@
     clear_screen();
     clear_progressbar();
     clear_text();
+    fade_logo(1, 10);
 
     usplash_ready = 1;
 }
@@ -146,6 +152,7 @@
     if (!usplash_ready)
 	return;
 
+    fade_logo(1, 10);
     usplash_done();
     usplash_restore_console();
 }
Index: ChangeLog
===================================================================
--- ChangeLog	(revision 1073)
+++ ChangeLog	(working copy)
@@ -1,3 +1,12 @@
+unreleased
+  - Add support for newer versions of libusplash, which implement and require
+    the use of a new fade_logo function. Without this addition, Karmic users
+    don't see anything while we're hibernating.
+  - Make the backwards compatible fade_logo definition non-static, to avoid
+    the static declaration of 'fade'logo' follows non-static declaration
+    message Whoopie reported (thanks!).
+  - Update userui.h to match the kernel code.
+
 1.0 (1 April 2009)
   - Small changes in preparation for the 1.0 release, coinciding with
     TuxOnIce 3.0 and version 2.0 of the hibernate script.
Index: userui_skeleton.c
===================================================================
--- userui_skeleton.c	(revision 1073)
+++ userui_skeleton.c	(working copy)
@@ -2,6 +2,7 @@
  * userui_skeleton.c - Skeleton userspace user interface module.
  *
  * Copyright (C) 2005, Bernard Blackham <bernard@blackham.com.au>
+ * Copyright (C) 2006-2009, Nigel Cunningham <nigel@tuxonice.net>
  * 
  * This file is subject to the terms and conditions of the GNU General Public
  * License v2.  See the file COPYING in the main directory of this archive for
Index: userui_text.c
===================================================================
--- userui_text.c	(revision 1073)
+++ userui_text.c	(working copy)
@@ -2,6 +2,7 @@
  * userui_text.c - Text mode userspace user interface module.
  *
  * Copyright (C) 2005, Bernard Blackham <bernard@blackham.com.au>
+ * Copyright (C) 2006-2009, Nigel Cunningham <nigel@tuxonice.net>
  *
  * Based on the suspend_text module from Suspend2, written by
  * Nigel Cunningham <nigel@nigel.tuxonice.net>
@@ -27,7 +28,7 @@
 
 /* We essentially cut and paste the suspend_text plugin */
 
-static int barwidth = 0, barposn = -1, newbarposn = 0;
+static int barwidth = 0, barposn = -1;
 static int draw_progress_bar = 1;
 
 /* We remember the last header that was (or could have been) displayed for
@@ -85,7 +86,7 @@
 	else
 		snprintf(buf, 200, "%-22s    R: %s reboot after hibernating ",
 			(can_use_escape) ? "Esc: Abort hibernating" : "",
-			(suspend_action & (1 << SUSPEND_REBOOT)) ?  "Disable":"Enable");
+			(suspend_action & (1 << SUSPEND_REBOOT)) ?  "Disable":" Enable");
 	move_cursor_to(video_num_columns - strlen(buf), video_num_lines);
 	printf("%s", buf);
 }
@@ -102,7 +103,7 @@
 
 static void text_prepare_status_real(int printalways, int clearbar, int level, const char *msg)
 {
-	int y;
+	int y, i;
 
 	if (msg) {
 		strncpy(lastheader, msg, 512);
@@ -135,7 +136,7 @@
 	move_cursor_to(0, y);
 
 	/* Clear old message */
-	for (barposn = 0; barposn < video_num_columns; barposn++) 
+	for (i = 0; i < video_num_columns; i++) 
 		printf(" ");
 
 	move_cursor_to((video_num_columns - lastheader_message_len) / 2, y);
@@ -156,10 +157,12 @@
 			move_cursor_to(video_num_columns / 4 + 1, y);
 
 			/* Clear bar */
-			for (barposn = 0; barposn < barwidth; barposn++)
+			for (i = 0; i < barwidth; i++)
 				printf(" ");
 
 			move_cursor_to(video_num_columns / 4 + 1, y);
+
+			barposn = 0;
 		}
 	}
 
@@ -170,8 +173,6 @@
 	move_cursor_to(cur_x, cur_y);
 	
 	hide_cursor();
-
-	barposn = 0;
 }
 
 static void text_prepare_status(int printalways, int clearbar, int level, const char *fmt, ...)
@@ -195,8 +196,6 @@
 
 static void text_loglevel_change()
 {
-	barposn = 0;
-
 	/* Only reset the display if we're switching between nice display
 	 * and displaying debugging output */
 	
@@ -239,8 +238,11 @@
 void text_update_progress(__uint32_t value, __uint32_t maximum, char *msg)
 {
 	__uint32_t next_update = 0;
-	int bitshift = generic_fls(maximum) - 16;
-	int message_len = 0;
+	int bitshift = generic_fls(maximum) - 16, i;
+	int msg_len = msg ? strlen(msg) : 0;
+	int msg_start = (video_num_columns - msg_len - 2) / 2 -
+		(video_num_columns / 4 + 1);
+	char bar_char = '-';
 
 	if (!maximum)
 		return /* maximum */;
@@ -257,15 +259,12 @@
 	if (bitshift > 0) {
 		__uint32_t temp_maximum = maximum >> bitshift;
 		__uint32_t temp_value = value >> bitshift;
-		newbarposn = (__uint32_t) (temp_value * barwidth / temp_maximum);
+		barposn = (__uint32_t) (temp_value * barwidth / temp_maximum);
 	} else
-		newbarposn = (__uint32_t) (value * barwidth / maximum);
+		barposn = (__uint32_t) (value * barwidth / maximum);
 	
-	if (newbarposn < barposn)
-		barposn = 0;
+	next_update = ((barposn + 1) * maximum / barwidth) + 1;
 
-	next_update = ((newbarposn + 1) * maximum / barwidth) + 1;
-
 	if ((console_loglevel >= SUSPEND_ERROR) || (!draw_progress_bar))
 		return /* next_update */;
 
@@ -274,32 +273,28 @@
 		update_cursor_pos();
 
 	/* Update bar */
-	if (draw_progress_bar) {
-		/* Clear bar if at start */
-		if (!barposn) {
-			move_cursor_to(video_num_columns / 4 + 1, (video_num_lines / 3) + 1);
-			for (; barposn < barwidth; barposn++)
-				printf(" ");
-			barposn = 0;
-		}
-		move_cursor_to(video_num_columns / 4 + 1 + barposn, (video_num_lines / 3) + 1);
-
-		for (; barposn < newbarposn; barposn++)
-			printf("-");
-	}
-
-	/* Print string in progress bar on loglevel 1 */
-	if (msg && strlen(msg) && (console_loglevel)) {
-		message_len = strlen(msg);
-		move_cursor_to((video_num_columns - message_len) / 2,
+	if (msg_start < 0) {
+		move_cursor_to((video_num_columns - msg_len) / 2,
 				(video_num_lines / 3) + 1);
 		printf(" %s ", msg);
+	} else {
+		move_cursor_to(video_num_columns / 4 + 1, (video_num_lines / 3) + 1);
+		for (i = 0; i < barwidth; i++) {
+			if (i == barposn)
+				bar_char = ' ';
+			if (i == msg_start && msg_len && console_loglevel) {
+				printf(" %s ", msg);
+				i += msg_len + 2;
+				if (i >= barposn)
+					bar_char = ' ';
+			} else
+				printf("%c", bar_char);
+		}
 	}
 
 	if (cur_x != -1)
 		move_cursor_to(cur_x, cur_y);
 	
-	barposn = newbarposn;
 	hide_cursor();
 	
 	/* return next_update; */
Index: userui.h
===================================================================
--- userui.h	(revision 1073)
+++ userui.h	(working copy)
@@ -54,40 +54,35 @@
 enum {
 	SUSPEND_REBOOT,
 	SUSPEND_PAUSE,
-	SUSPEND_SLOW,
-	SUSPEND_NOPAGESET2,
 	SUSPEND_LOGALL,
 	SUSPEND_CAN_CANCEL,
 	SUSPEND_KEEP_IMAGE,
 	SUSPEND_FREEZER_TEST,
-	SUSPEND_FREEZER_TEST_SHOWALL,
 	SUSPEND_SINGLESTEP,
 	SUSPEND_PAUSE_NEAR_PAGESET_END,
-	SUSPEND_USE_ACPI_S4,
-	SUSPEND_KEEP_METADATA,
 	SUSPEND_TEST_FILTER_SPEED,
-	SUSPEND_FREEZE_TIMERS,
-	SUSPEND_DISABLE_SYSDEV_SUPPORT,
-	SUSPEND_VGA_POST
+	SUSPEND_TEST_BIO,
+	SUSPEND_NOPAGESET2,
+	SUSPEND_IGNORE_ROOTFS,
+	SUSPEND_REPLACE_SWSUSP,
+	SUSPEND_PAGESET2_FULL,
+	SUSPEND_ABORT_ON_RESAVE_NEEDED,
+	SUSPEND_NO_MULTITHREADED_IO,
+	SUSPEND_NO_DIRECT_LOAD,
+	SUSPEND_LATE_CPU_HUTPLUG,
+	SUSPEND_GET_MAX_MEM_ALLOCD,
+	SUSPEND_NO_FLUSHER_THREAD,
+	SUSPEND_NO_PS2_IF_NEEDED
 };
 
 /* Debug sections  - if debugging compiled in */
 enum {
 	SUSPEND_ANY_SECTION,
-	SUSPEND_FREEZER,
 	SUSPEND_EAT_MEMORY,
-	SUSPEND_PAGESETS,
 	SUSPEND_IO,
-	SUSPEND_BMAP,
 	SUSPEND_HEADER,
 	SUSPEND_WRITER,
 	SUSPEND_MEMORY,
-	SUSPEND_EXTENTS,
-	SUSPEND_SPINLOCKS,
-	SUSPEND_MEM_POOL,
-	SUSPEND_RANGE_PARANOIA,
-	SUSPEND_NOSAVE,
-	SUSPEND_INTEGRITY
 };
 
 /* excerpts from include/linux/bitops.h */
Index: userui_core.c
===================================================================
--- userui_core.c	(revision 1073)
+++ userui_core.c	(working copy)
@@ -2,6 +2,7 @@
  * userui_core.c - Core of all userspace user interfaces.
  *
  * Copyright (C) 2005, Bernard Blackham <bernard@blackham.com.au>
+ * Copyright (C) 2006-2009, Nigel Cunningham <nigel@tuxonice.net>
  * 
  * This file is subject to the terms and conditions of the GNU General Public
  * License v2.  See the file COPYING in the main directory of this archive for
